/usr/lib/system/libsystem_kernel.dylib:
(__TEXT,__text) section
___libkernel_init:
0000000000001010	pushq	%rbp
0000000000001011	movq	%rsp, %rbp
0000000000001014	pushq	%r15
0000000000001016	pushq	%r14
0000000000001018	pushq	%rbx
0000000000001019	pushq	%rax
000000000000101a	movq	%rsi, %rbx
000000000000101d	movq	%rdi, __libkernel_functions(%rip)
0000000000001024	movq	0x8(%rdi), %rax
0000000000001028	testq	%rax, %rax
000000000000102b	je	0x1034
000000000000102d	movq	%rax, __dlsym(%rip)
0000000000001034	callq	_mach_init
0000000000001039	movq	(%rbx), %r14
000000000000103c	testq	%r14, %r14
000000000000103f	je	0x106e
0000000000001041	addq	$0x8, %rbx
0000000000001045	leaq	0x1f594(%rip), %r15 ## literal pool for: "XBS_IS_CHROOTED="
000000000000104c	movq	%r14, %rdi
000000000000104f	movq	%r15, %rsi
0000000000001052	callq	_strcmp
0000000000001057	testl	%eax, %eax
0000000000001059	jne	0x1062
000000000000105b	cmpb	$0x0, 0x10(%r14)
0000000000001060	jne	0x1089
0000000000001062	movq	(%rbx), %r14
0000000000001065	addq	$0x8, %rbx
0000000000001069	testq	%r14, %r14
000000000000106c	jne	0x104c
000000000000106e	cmpb	$0x0, 0x2a57b(%rip)
0000000000001075	jne	0x1090
0000000000001077	leaq	0x1f573(%rip), %rdi ## literal pool for: "/AppleInternal/XBS/.isChrooted"
000000000000107e	xorl	%esi, %esi
0000000000001080	callq	_access
0000000000001085	testl	%eax, %eax
0000000000001087	jne	0x1090
0000000000001089	movb	$0x1, 0x2a560(%rip)
0000000000001090	addq	$0x8, %rsp
0000000000001094	popq	%rbx
0000000000001095	popq	%r14
0000000000001097	popq	%r15
0000000000001099	popq	%rbp
000000000000109a	retq
_mach_init:
000000000000109b	cmpb	$0x0, 0x2abfe(%rip)
00000000000010a2	jne	0x10b5
00000000000010a4	pushq	%rbp
00000000000010a5	movq	%rsp, %rbp
00000000000010a8	callq	_mach_init_doit
00000000000010ad	movb	$0x1, 0x2abec(%rip)
00000000000010b4	popq	%rbp
00000000000010b5	xorl	%eax, %eax
00000000000010b7	retq
_mach_init_doit:
00000000000010b8	pushq	%rbp
00000000000010b9	movq	%rsp, %rbp
00000000000010bc	callq	_task_self_trap
00000000000010c1	movl	%eax, _mach_task_self_(%rip)
00000000000010c7	callq	_mach_reply_port
00000000000010cc	leaq	__task_reply_port(%rip), %rcx
00000000000010d3	movl	%eax, (%rcx)
00000000000010d5	movl	_vm_kernel_page_shift(%rip), %ecx
00000000000010db	testl	%ecx, %ecx
00000000000010dd	jne	0x1104
00000000000010df	movq	$0x1000, _mach_task_self_(%rip)
00000000000010ea	movq	$0xfff, 0x2a523(%rip)
00000000000010f5	movl	$0xc, 0x2a521(%rip)
00000000000010ff	movl	$0xc, %ecx
0000000000001104	cmpl	$0x0, 0x2a52d(%rip)
000000000000110b	jne	0x112d
000000000000110d	movl	%ecx, _vm_page_shift(%rip)
0000000000001113	movl	$0x1, %eax
0000000000001118	shll	%cl, %eax
000000000000111a	cltq
000000000000111c	movq	%rax, _vm_page_size(%rip)
0000000000001123	decq	%rax
0000000000001126	movq	%rax, _vm_page_mask(%rip)
000000000000112d	callq	__init_cpu_capabilities
0000000000001132	xorl	%edi, %edi
0000000000001134	popq	%rbp
0000000000001135	jmp	__pthread_set_self
000000000000113a	nop
000000000000113b	nop
__kernelrpc_mach_vm_allocate_trap:
000000000000113c	movq	%rcx, %r10
000000000000113f	movl	$0x100000a, %eax
0000000000001144	syscall
0000000000001146	retq
0000000000001147	nop
__kernelrpc_mach_vm_purgable_control_trap:
0000000000001148	movq	%rcx, %r10
000000000000114b	movl	$0x100000b, %eax
0000000000001150	syscall
0000000000001152	retq
0000000000001153	nop
__kernelrpc_mach_vm_deallocate_trap:
0000000000001154	movq	%rcx, %r10
0000000000001157	movl	$0x100000c, %eax
000000000000115c	syscall
000000000000115e	retq
000000000000115f	nop
__kernelrpc_mach_vm_protect_trap:
0000000000001160	movq	%rcx, %r10
0000000000001163	movl	$0x100000e, %eax
0000000000001168	syscall
000000000000116a	retq
000000000000116b	nop
__kernelrpc_mach_vm_map_trap:
000000000000116c	movq	%rcx, %r10
000000000000116f	movl	$0x100000f, %eax
0000000000001174	syscall
0000000000001176	retq
0000000000001177	nop
__kernelrpc_mach_port_allocate_trap:
0000000000001178	movq	%rcx, %r10
000000000000117b	movl	$0x1000010, %eax
0000000000001180	syscall
0000000000001182	retq
0000000000001183	nop
__kernelrpc_mach_port_destroy_trap:
0000000000001184	movq	%rcx, %r10
0000000000001187	movl	$0x1000011, %eax
000000000000118c	syscall
000000000000118e	retq
000000000000118f	nop
__kernelrpc_mach_port_deallocate_trap:
0000000000001190	movq	%rcx, %r10
0000000000001193	movl	$0x1000012, %eax
0000000000001198	syscall
000000000000119a	retq
000000000000119b	nop
__kernelrpc_mach_port_mod_refs_trap:
000000000000119c	movq	%rcx, %r10
000000000000119f	movl	$0x1000013, %eax
00000000000011a4	syscall
00000000000011a6	retq
00000000000011a7	nop
__kernelrpc_mach_port_move_member_trap:
00000000000011a8	movq	%rcx, %r10
00000000000011ab	movl	$0x1000014, %eax
00000000000011b0	syscall
00000000000011b2	retq
00000000000011b3	nop
__kernelrpc_mach_port_insert_right_trap:
00000000000011b4	movq	%rcx, %r10
00000000000011b7	movl	$0x1000015, %eax
00000000000011bc	syscall
00000000000011be	retq
00000000000011bf	nop
__kernelrpc_mach_port_insert_member_trap:
00000000000011c0	movq	%rcx, %r10
00000000000011c3	movl	$0x1000016, %eax
00000000000011c8	syscall
00000000000011ca	retq
00000000000011cb	nop
__kernelrpc_mach_port_extract_member_trap:
00000000000011cc	movq	%rcx, %r10
00000000000011cf	movl	$0x1000017, %eax
00000000000011d4	syscall
00000000000011d6	retq
00000000000011d7	nop
__kernelrpc_mach_port_construct_trap:
00000000000011d8	movq	%rcx, %r10
00000000000011db	movl	$0x1000018, %eax
00000000000011e0	syscall
00000000000011e2	retq
00000000000011e3	nop
__kernelrpc_mach_port_destruct_trap:
00000000000011e4	movq	%rcx, %r10
00000000000011e7	movl	$0x1000019, %eax
00000000000011ec	syscall
00000000000011ee	retq
00000000000011ef	nop
_mach_reply_port:
00000000000011f0	movq	%rcx, %r10
00000000000011f3	movl	$0x100001a, %eax
00000000000011f8	syscall
00000000000011fa	retq
00000000000011fb	nop
_thread_self_trap:
00000000000011fc	movq	%rcx, %r10
00000000000011ff	movl	$0x100001b, %eax
0000000000001204	syscall
0000000000001206	retq
0000000000001207	nop
_task_self_trap:
0000000000001208	movq	%rcx, %r10
000000000000120b	movl	$0x100001c, %eax
0000000000001210	syscall
0000000000001212	retq
0000000000001213	nop
_host_self_trap:
0000000000001214	movq	%rcx, %r10
0000000000001217	movl	$0x100001d, %eax
000000000000121c	syscall
000000000000121e	retq
000000000000121f	nop
_mach_msg_trap:
0000000000001220	movq	%rcx, %r10
0000000000001223	movl	$0x100001f, %eax
0000000000001228	syscall
000000000000122a	retq
000000000000122b	nop
_mach_msg_overwrite_trap:
000000000000122c	movq	%rcx, %r10
000000000000122f	movl	$0x1000020, %eax
0000000000001234	syscall
0000000000001236	retq
0000000000001237	nop
_semaphore_signal_trap:
0000000000001238	movq	%rcx, %r10
000000000000123b	movl	$0x1000021, %eax
0000000000001240	syscall
0000000000001242	retq
0000000000001243	nop
_semaphore_signal_all_trap:
0000000000001244	movq	%rcx, %r10
0000000000001247	movl	$0x1000022, %eax
000000000000124c	syscall
000000000000124e	retq
000000000000124f	nop
_semaphore_signal_thread_trap:
0000000000001250	movq	%rcx, %r10
0000000000001253	movl	$0x1000023, %eax
0000000000001258	syscall
000000000000125a	retq
000000000000125b	nop
_semaphore_wait_trap:
000000000000125c	movq	%rcx, %r10
000000000000125f	movl	$0x1000024, %eax
0000000000001264	syscall
0000000000001266	retq
0000000000001267	nop
_semaphore_wait_signal_trap:
0000000000001268	movq	%rcx, %r10
000000000000126b	movl	$0x1000025, %eax
0000000000001270	syscall
0000000000001272	retq
0000000000001273	nop
_semaphore_timedwait_trap:
0000000000001274	movq	%rcx, %r10
0000000000001277	movl	$0x1000026, %eax
000000000000127c	syscall
000000000000127e	retq
000000000000127f	nop
_semaphore_timedwait_signal_trap:
0000000000001280	movq	%rcx, %r10
0000000000001283	movl	$0x1000027, %eax
0000000000001288	syscall
000000000000128a	retq
000000000000128b	nop
__kernelrpc_mach_port_get_attributes_trap:
000000000000128c	movq	%rcx, %r10
000000000000128f	movl	$0x1000028, %eax
0000000000001294	syscall
0000000000001296	retq
0000000000001297	nop
__kernelrpc_mach_port_guard_trap:
0000000000001298	movq	%rcx, %r10
000000000000129b	movl	$0x1000029, %eax
00000000000012a0	syscall
00000000000012a2	retq
00000000000012a3	nop
__kernelrpc_mach_port_unguard_trap:
00000000000012a4	movq	%rcx, %r10
00000000000012a7	movl	$0x100002a, %eax
00000000000012ac	syscall
00000000000012ae	retq
00000000000012af	nop
_mach_generate_activity_id:
00000000000012b0	movq	%rcx, %r10
00000000000012b3	movl	$0x100002b, %eax
00000000000012b8	syscall
00000000000012ba	retq
00000000000012bb	nop
_task_name_for_pid:
00000000000012bc	movq	%rcx, %r10
00000000000012bf	movl	$0x100002c, %eax
00000000000012c4	syscall
00000000000012c6	retq
00000000000012c7	nop
_task_for_pid:
00000000000012c8	movq	%rcx, %r10
00000000000012cb	movl	$0x100002d, %eax
00000000000012d0	syscall
00000000000012d2	retq
00000000000012d3	nop
_pid_for_task:
00000000000012d4	movq	%rcx, %r10
00000000000012d7	movl	$0x100002e, %eax
00000000000012dc	syscall
00000000000012de	retq
00000000000012df	nop
_macx_swapon:
00000000000012e0	movq	%rcx, %r10
00000000000012e3	movl	$0x1000030, %eax
00000000000012e8	syscall
00000000000012ea	retq
00000000000012eb	nop
_macx_swapoff:
00000000000012ec	movq	%rcx, %r10
00000000000012ef	movl	$0x1000031, %eax
00000000000012f4	syscall
00000000000012f6	retq
00000000000012f7	nop
_thread_get_special_reply_port:
00000000000012f8	movq	%rcx, %r10
00000000000012fb	movl	$0x1000032, %eax
0000000000001300	syscall
0000000000001302	retq
0000000000001303	nop
_macx_triggers:
0000000000001304	movq	%rcx, %r10
0000000000001307	movl	$0x1000033, %eax
000000000000130c	syscall
000000000000130e	retq
000000000000130f	nop
_macx_backing_store_suspend:
0000000000001310	movq	%rcx, %r10
0000000000001313	movl	$0x1000034, %eax
0000000000001318	syscall
000000000000131a	retq
000000000000131b	nop
_macx_backing_store_recovery:
000000000000131c	movq	%rcx, %r10
000000000000131f	movl	$0x1000035, %eax
0000000000001324	syscall
0000000000001326	retq
0000000000001327	nop
_swtch_pri:
0000000000001328	movq	%rcx, %r10
000000000000132b	movl	$0x100003b, %eax
0000000000001330	syscall
0000000000001332	retq
0000000000001333	nop
_swtch:
0000000000001334	movq	%rcx, %r10
0000000000001337	movl	$0x100003c, %eax
000000000000133c	syscall
000000000000133e	retq
000000000000133f	nop
_syscall_thread_switch:
0000000000001340	movq	%rcx, %r10
0000000000001343	movl	$0x100003d, %eax
0000000000001348	syscall
000000000000134a	retq
000000000000134b	nop
_clock_sleep_trap:
000000000000134c	movq	%rcx, %r10
000000000000134f	movl	$0x100003e, %eax
0000000000001354	syscall
0000000000001356	retq
0000000000001357	nop
_host_create_mach_voucher_trap:
0000000000001358	movq	%rcx, %r10
000000000000135b	movl	$0x1000046, %eax
0000000000001360	syscall
0000000000001362	retq
0000000000001363	nop
_mach_voucher_extract_attr_recipe_trap:
0000000000001364	movq	%rcx, %r10
0000000000001367	movl	$0x1000048, %eax
000000000000136c	syscall
000000000000136e	retq
000000000000136f	nop
_mach_timebase_info_trap:
0000000000001370	movq	%rcx, %r10
0000000000001373	movl	$0x1000059, %eax
0000000000001378	syscall
000000000000137a	retq
000000000000137b	nop
_mach_wait_until:
000000000000137c	movq	%rcx, %r10
000000000000137f	movl	$0x100005a, %eax
0000000000001384	syscall
0000000000001386	retq
0000000000001387	nop
_mk_timer_create:
0000000000001388	movq	%rcx, %r10
000000000000138b	movl	$0x100005b, %eax
0000000000001390	syscall
0000000000001392	retq
0000000000001393	nop
_mk_timer_destroy:
0000000000001394	movq	%rcx, %r10
0000000000001397	movl	$0x100005c, %eax
000000000000139c	syscall
000000000000139e	retq
000000000000139f	nop
_mk_timer_arm:
00000000000013a0	movq	%rcx, %r10
00000000000013a3	movl	$0x100005d, %eax
00000000000013a8	syscall
00000000000013aa	retq
00000000000013ab	nop
_mk_timer_cancel:
00000000000013ac	movq	%rcx, %r10
00000000000013af	movl	$0x100005e, %eax
00000000000013b4	syscall
00000000000013b6	retq
00000000000013b7	nop
_mk_timer_arm_leeway:
00000000000013b8	movq	%rcx, %r10
00000000000013bb	movl	$0x100005f, %eax
00000000000013c0	syscall
00000000000013c2	retq
__init_cpu_capabilities:
00000000000013c3	pushq	%rbp
00000000000013c4	movq	%rsp, %rbp
00000000000013c7	callq	__get_cpu_capabilities
00000000000013cc	movl	%eax, __cpu_capabilities(%rip)
00000000000013d2	popq	%rbp
00000000000013d3	retq
__get_cpu_capabilities:
00000000000013d4	movabsq	$0x7fffffe00010, %rax
00000000000013de	movq	(%rax), %rax
00000000000013e1	retq
__pthread_set_self:
00000000000013e2	retq
_strcmp:
00000000000013e3	movq	__libkernel_string_functions(%rip), %rax
00000000000013ea	movq	0x40(%rax), %rax
00000000000013ee	jmpq	*%rax
__libkernel_strcmp:
00000000000013f0	xorl	%ecx, %ecx
00000000000013f2	movzbl	(%rdi,%rcx), %eax
00000000000013f6	movzbl	(%rsi,%rcx), %edx
00000000000013fa	cmpb	%dl, %al
00000000000013fc	jne	0x1408
00000000000013fe	incq	%rcx
0000000000001401	testb	%al, %al
0000000000001403	jne	0x13f2
0000000000001405	xorl	%eax, %eax
0000000000001407	retq
0000000000001408	subl	%edx, %eax
000000000000140a	retq
000000000000140b	nop
_access:
000000000000140c	movl	$0x2000021, %eax
0000000000001411	movq	%rcx, %r10
0000000000001414	syscall
0000000000001416	jae	0x1420
0000000000001418	movq	%rax, %rdi
000000000000141b	jmp	_cerror
0000000000001420	retq
_cerror:
0000000000001421	pushq	%rbp
0000000000001422	movq	%rsp, %rbp
0000000000001425	pushq	%rbx
0000000000001426	pushq	%rax
0000000000001427	movl	%edi, %ebx
0000000000001429	callq	__pthread_exit_if_canceled
000000000000142e	movl	%ebx, %edi
0000000000001430	callq	_cerror_nocancel
0000000000001435	movq	$-0x1, %rax
000000000000143c	movq	$-0x1, %rdx
0000000000001443	addq	$0x8, %rsp
0000000000001447	popq	%rbx
0000000000001448	popq	%rbp
0000000000001449	retq
__pthread_exit_if_canceled:
000000000000144a	leaq	__libkernel_functions(%rip), %rax
0000000000001451	movq	(%rax), %rax
0000000000001454	jmpq	*0x28(%rax)
_cerror_nocancel:
0000000000001457	movl	%edi, _errno(%rip)
000000000000145d	movq	%gs:0x8, %rax
0000000000001466	testq	%rax, %rax
0000000000001469	je	0x146d
000000000000146b	movl	%edi, (%rax)
000000000000146d	movq	$-0x1, %rax
0000000000001474	movq	$-0x1, %rdx
000000000000147b	retq
_mach_vm_map:
000000000000147c	pushq	%rbp
000000000000147d	movq	%rsp, %rbp
0000000000001480	pushq	%r15
0000000000001482	pushq	%r14
0000000000001484	pushq	%r13
0000000000001486	pushq	%r12
0000000000001488	pushq	%rbx
0000000000001489	pushq	%rax
000000000000148a	movl	%r9d, %r13d
000000000000148d	movl	%r8d, %r12d
0000000000001490	movq	%rsi, %rbx
0000000000001493	movl	%edi, %r14d
0000000000001496	movl	0x28(%rbp), %r11d
000000000000149a	movl	0x20(%rbp), %r10d
000000000000149e	testl	%r9d, %r9d
00000000000014a1	jne	0x14e8
00000000000014a3	cmpl	$0x7, %r11d
00000000000014a7	jne	0x14e8
00000000000014a9	movl	0x30(%rbp), %eax
00000000000014ac	cmpl	$0x1, %eax
00000000000014af	jne	0x14e8
00000000000014b1	movl	%r14d, %edi
00000000000014b4	movq	%rbx, %rsi
00000000000014b7	movq	%rdx, %r15
00000000000014ba	movq	%rbx, -0x30(%rbp)
00000000000014be	movq	%rcx, %rbx
00000000000014c1	movl	%r12d, %r8d
00000000000014c4	movl	%r10d, %r9d
00000000000014c7	callq	__kernelrpc_mach_vm_map_trap
00000000000014cc	movq	%rbx, %rcx
00000000000014cf	movl	0x28(%rbp), %r11d
00000000000014d3	movl	0x20(%rbp), %r10d
00000000000014d7	movq	-0x30(%rbp), %rbx
00000000000014db	movq	%r15, %rdx
00000000000014de	movl	%eax, %r15d
00000000000014e1	cmpl	$0x10000003, %eax
00000000000014e6	jne	0x1519
00000000000014e8	subq	$0x8, %rsp
00000000000014ec	movl	%r14d, %edi
00000000000014ef	movq	%rbx, %rsi
00000000000014f2	movq	%rdx, %r15
00000000000014f5	movl	%r12d, %r8d
00000000000014f8	movl	%r13d, %r9d
00000000000014fb	movl	0x30(%rbp), %eax
00000000000014fe	pushq	%rax
00000000000014ff	pushq	%r11
0000000000001501	pushq	%r10
0000000000001503	movl	0x18(%rbp), %eax
0000000000001506	pushq	%rax
0000000000001507	pushq	0x10(%rbp)
000000000000150a	callq	__kernelrpc_mach_vm_map
000000000000150f	movq	%r15, %rdx
0000000000001512	addq	$0x30, %rsp
0000000000001516	movl	%eax, %r15d
0000000000001519	movq	___syscall_logger(%rip), %rax
0000000000001520	testq	%rax, %rax
0000000000001523	je	0x1543
0000000000001525	andl	$0xff000000, %r12d
000000000000152c	orl	$0x90, %r12d
0000000000001533	movl	%r14d, %esi
0000000000001536	movq	(%rbx), %r8
0000000000001539	xorl	%ecx, %ecx
000000000000153b	xorl	%r9d, %r9d
000000000000153e	movl	%r12d, %edi
0000000000001541	callq	*%rax
0000000000001543	movl	%r15d, %eax
0000000000001546	addq	$0x8, %rsp
000000000000154a	popq	%rbx
000000000000154b	popq	%r12
000000000000154d	popq	%r13
000000000000154f	popq	%r14
0000000000001551	popq	%r15
0000000000001553	popq	%rbp
0000000000001554	retq
___libkernel_platform_init:
0000000000001555	movq	%rdi, __libkernel_string_functions(%rip)
000000000000155c	xorl	%eax, %eax
000000000000155e	retq
_mach_host_self:
000000000000155f	jmp	_host_self_trap
_host_info:
0000000000001564	pushq	%rbp
0000000000001565	movq	%rsp, %rbp
0000000000001568	pushq	%r15
000000000000156a	pushq	%r14
000000000000156c	pushq	%r12
000000000000156e	pushq	%rbx
000000000000156f	subq	$0x150, %rsp
0000000000001576	movq	%rcx, %r15
0000000000001579	leaq	_NDR_record(%rip), %rax
0000000000001580	movq	(%rax), %rax
0000000000001583	leaq	-0x160(%rbp), %rbx
000000000000158a	movq	%rax, 0x18(%rbx)
000000000000158e	movl	%esi, 0x20(%rbx)
0000000000001591	movl	(%rcx), %eax
0000000000001593	movl	$0x44, %ecx
0000000000001598	cmpl	%ecx, %eax
000000000000159a	cmovbl	%eax, %ecx
000000000000159d	movq	%rdx, %r14
00000000000015a0	movl	%ecx, 0x24(%rbx)
00000000000015a3	movl	$0x1513, (%rbx)
00000000000015a9	movl	%edi, 0x8(%rbx)
00000000000015ac	callq	_mig_get_reply_port
00000000000015b1	movl	%eax, 0xc(%rbx)
00000000000015b4	movabsq	$0xc800000000, %rcx
00000000000015be	movq	%rcx, 0x10(%rbx)
00000000000015c2	movl	$0x0, (%rsp)
00000000000015c9	movl	$0x3, %esi
00000000000015ce	movl	$0x28, %edx
00000000000015d3	movl	$0x140, %ecx
00000000000015d8	xorl	%r9d, %r9d
00000000000015db	movq	%rbx, %rdi
00000000000015de	movl	%eax, %r8d
00000000000015e1	callq	_mach_msg
00000000000015e6	movl	%eax, %ebx
00000000000015e8	leal	-0x10000002(%rbx), %eax
00000000000015ee	cmpl	$0xe, %eax
00000000000015f1	ja	0x160d
00000000000015f3	movl	$0x4003, %ecx
00000000000015f8	btl	%eax, %ecx
00000000000015fb	jae	0x160d
00000000000015fd	movl	-0x154(%rbp), %edi
0000000000001603	callq	_mig_put_reply_port
0000000000001608	jmp	0x16e1
000000000000160d	testl	%ebx, %ebx
000000000000160f	jne	0x1661
0000000000001611	movl	-0x14c(%rbp), %eax
0000000000001617	cmpl	$0x47, %eax
000000000000161a	je	0x166e
000000000000161c	cmpl	$0x12c, %eax
0000000000001621	jne	0x1675
0000000000001623	cmpl	$0x0, -0x160(%rbp)
000000000000162a	js	0x16d0
0000000000001630	movl	-0x15c(%rbp), %eax
0000000000001636	leal	-0x28(%rax), %ecx
0000000000001639	cmpl	$0x111, %ecx
000000000000163f	jb	0x167c
0000000000001641	movl	$0xfffffed4, %ebx
0000000000001646	cmpl	$0x24, %eax
0000000000001649	jne	0x16d5
000000000000164f	movl	-0x140(%rbp), %eax
0000000000001655	testl	%eax, %eax
0000000000001657	movl	$0xfffffed4, %ebx
000000000000165c	cmovnel	%eax, %ebx
000000000000165f	jmp	0x16d5
0000000000001661	movl	-0x154(%rbp), %edi
0000000000001667	callq	_mig_dealloc_reply_port
000000000000166c	jmp	0x16e1
000000000000166e	movl	$0xfffffecc, %ebx
0000000000001673	jmp	0x16d5
0000000000001675	movl	$0xfffffed3, %ebx
000000000000167a	jmp	0x16d5
000000000000167c	movl	-0x140(%rbp), %ebx
0000000000001682	testl	%ebx, %ebx
0000000000001684	jne	0x16d5
0000000000001686	movl	-0x13c(%rbp), %r12d
000000000000168d	cmpl	$0x44, %r12d
0000000000001691	ja	0x16d0
0000000000001693	shrl	$0x2, %ecx
0000000000001696	cmpl	%r12d, %ecx
0000000000001699	jb	0x16d0
000000000000169b	leal	0x28(,%r12,4), %ecx
00000000000016a3	movl	$0xfffffed4, %ebx
00000000000016a8	cmpl	%ecx, %eax
00000000000016aa	jne	0x16d5
00000000000016ac	movl	(%r15), %edx
00000000000016af	leaq	-0x138(%rbp), %rsi
00000000000016b6	cmpl	%edx, %r12d
00000000000016b9	jbe	0x16f3
00000000000016bb	shll	$0x2, %edx
00000000000016be	movq	%r14, %rdi
00000000000016c1	callq	_memcpy
00000000000016c6	movl	%r12d, (%r15)
00000000000016c9	movl	$0xfffffecd, %ebx
00000000000016ce	jmp	0x16e1
00000000000016d0	movl	$0xfffffed4, %ebx
00000000000016d5	leaq	-0x160(%rbp), %rdi
00000000000016dc	callq	_mach_msg_destroy
00000000000016e1	movl	%ebx, %eax
00000000000016e3	addq	$0x150, %rsp
00000000000016ea	popq	%rbx
00000000000016eb	popq	%r12
00000000000016ed	popq	%r14
00000000000016ef	popq	%r15
00000000000016f1	popq	%rbp
00000000000016f2	retq
00000000000016f3	leal	(,%r12,4), %eax
00000000000016fb	movl	%eax, %edx
00000000000016fd	movq	%r14, %rdi
0000000000001700	callq	_memcpy
0000000000001705	movl	%r12d, (%r15)
0000000000001708	xorl	%ebx, %ebx
000000000000170a	jmp	0x16e1
_mig_get_reply_port:
000000000000170c	movl	%gs:0x10, %eax
0000000000001714	testl	%eax, %eax
0000000000001716	je	0x1719
0000000000001718	retq
0000000000001719	pushq	%rbp
000000000000171a	movq	%rsp, %rbp
000000000000171d	callq	_mach_reply_port
0000000000001722	movl	%eax, %ecx
0000000000001724	movq	%rcx, %gs:0x10
000000000000172d	popq	%rbp
000000000000172e	retq
000000000000172f	nop
_mach_msg:
0000000000001730	pushq	%rbp
0000000000001731	movq	%rsp, %rbp
0000000000001734	pushq	%r15
0000000000001736	pushq	%r14
0000000000001738	pushq	%r13
000000000000173a	pushq	%r12
000000000000173c	pushq	%rbx
000000000000173d	subq	$0x28, %rsp
0000000000001741	movl	%ecx, %r13d
0000000000001744	movl	%esi, %ebx
0000000000001746	movq	%rdi, %r14
0000000000001749	movl	0x10(%rbp), %eax
000000000000174c	movl	%esi, %r12d
000000000000174f	andl	$0xfffffbbf, %r12d
0000000000001756	movl	%eax, (%rsp)
0000000000001759	movl	%r12d, %esi
000000000000175c	movl	%edx, %r15d
000000000000175f	movl	%r8d, -0x2c(%rbp)
0000000000001763	movl	%r9d, -0x30(%rbp)
0000000000001767	callq	_mach_msg_trap
000000000000176c	testl	%eax, %eax
000000000000176e	je	0x1805
0000000000001774	movl	%ebx, -0x34(%rbp)
0000000000001777	testb	$0x40, %bl
000000000000177a	jne	0x17c0
000000000000177c	cmpl	$0x10000007, %eax
0000000000001781	jne	0x17c0
0000000000001783	movl	-0x30(%rbp), %ebx
0000000000001786	movq	%r14, -0x40(%rbp)
000000000000178a	movl	%r12d, %r14d
000000000000178d	movl	%r13d, %r12d
0000000000001790	movl	-0x2c(%rbp), %r13d
0000000000001794	movl	0x10(%rbp), %eax
0000000000001797	movl	%eax, (%rsp)
000000000000179a	movq	-0x40(%rbp), %rdi
000000000000179e	movl	%r14d, %esi
00000000000017a1	movl	%r15d, %edx
00000000000017a4	movl	%r12d, %ecx
00000000000017a7	movl	%r13d, %r8d
00000000000017aa	movl	%ebx, %r9d
00000000000017ad	callq	_mach_msg_trap
00000000000017b2	cmpl	$0x10000007, %eax
00000000000017b7	je	0x1794
00000000000017b9	movl	%r12d, %r13d
00000000000017bc	movq	-0x40(%rbp), %r14
00000000000017c0	movl	-0x34(%rbp), %r12d
00000000000017c4	btl	$0xa, %r12d
00000000000017c9	jb	0x1807
00000000000017cb	cmpl	$0x10004005, %eax
00000000000017d0	jne	0x1807
00000000000017d2	andl	$0xfffffbbe, %r12d
00000000000017d9	movl	-0x30(%rbp), %r15d
00000000000017dd	movl	-0x2c(%rbp), %ebx
00000000000017e0	movl	0x10(%rbp), %eax
00000000000017e3	movl	%eax, (%rsp)
00000000000017e6	xorl	%edx, %edx
00000000000017e8	movq	%r14, %rdi
00000000000017eb	movl	%r12d, %esi
00000000000017ee	movl	%r13d, %ecx
00000000000017f1	movl	%ebx, %r8d
00000000000017f4	movl	%r15d, %r9d
00000000000017f7	callq	_mach_msg_trap
00000000000017fc	cmpl	$0x10004005, %eax
0000000000001801	je	0x17e0
0000000000001803	jmp	0x1807
0000000000001805	xorl	%eax, %eax
0000000000001807	addq	$0x28, %rsp
000000000000180b	popq	%rbx
000000000000180c	popq	%r12
000000000000180e	popq	%r13
0000000000001810	popq	%r14
0000000000001812	popq	%r15
0000000000001814	popq	%rbp
0000000000001815	retq
_memcpy:
0000000000001816	movq	__libkernel_string_functions(%rip), %rax
000000000000181d	movq	0x20(%rax), %rax
0000000000001821	jmpq	*%rax
_mach_port_deallocate:
0000000000001823	pushq	%rbp
0000000000001824	movq	%rsp, %rbp
0000000000001827	pushq	%r14
0000000000001829	pushq	%rbx
000000000000182a	movl	%esi, %r14d
000000000000182d	movl	%edi, %ebx
000000000000182f	callq	__kernelrpc_mach_port_deallocate_trap
0000000000001834	cmpl	$0x10000003, %eax
0000000000001839	jne	0x1849
000000000000183b	movl	%ebx, %edi
000000000000183d	movl	%r14d, %esi
0000000000001840	popq	%rbx
0000000000001841	popq	%r14
0000000000001843	popq	%rbp
0000000000001844	jmp	__kernelrpc_mach_port_deallocate
0000000000001849	popq	%rbx
000000000000184a	popq	%r14
000000000000184c	popq	%rbp
000000000000184d	retq
_mach_thread_self:
000000000000184e	jmp	_thread_self_trap
0000000000001853	nop
___bsdthread_register:
0000000000001854	movl	$0x200016e, %eax
0000000000001859	movq	%rcx, %r10
000000000000185c	syscall
000000000000185e	jae	0x1868
0000000000001860	movq	%rax, %rdi
0000000000001863	jmp	_cerror_nocancel
0000000000001868	retq
_host_get_clock_service:
0000000000001869	pushq	%rbp
000000000000186a	movq	%rsp, %rbp
000000000000186d	pushq	%r14
000000000000186f	pushq	%rbx
0000000000001870	subq	$0x40, %rsp
0000000000001874	movq	%rdx, %r14
0000000000001877	leaq	_NDR_record(%rip), %rax
000000000000187e	movq	(%rax), %rax
0000000000001881	leaq	-0x40(%rbp), %rbx
0000000000001885	movq	%rax, 0x18(%rbx)
0000000000001889	movl	%esi, 0x20(%rbx)
000000000000188c	movl	$0x1513, (%rbx)
0000000000001892	movl	%edi, 0x8(%rbx)
0000000000001895	callq	_mig_get_reply_port
000000000000189a	movl	%eax, 0xc(%rbx)
000000000000189d	movabsq	$0xce00000000, %rcx
00000000000018a7	movq	%rcx, 0x10(%rbx)
00000000000018ab	movl	$0x0, (%rsp)
00000000000018b2	movl	$0x3, %esi
00000000000018b7	movl	$0x24, %edx
00000000000018bc	movl	$0x30, %ecx
00000000000018c1	xorl	%r9d, %r9d
00000000000018c4	movq	%rbx, %rdi
00000000000018c7	movl	%eax, %r8d
00000000000018ca	callq	_mach_msg
00000000000018cf	movl	%eax, %ebx
00000000000018d1	leal	-0x10000002(%rbx), %eax
00000000000018d7	cmpl	$0xe, %eax
00000000000018da	ja	0x18f0
00000000000018dc	movl	$0x4003, %ecx
00000000000018e1	btl	%eax, %ecx
00000000000018e4	jae	0x18f0
00000000000018e6	movl	-0x34(%rbp), %edi
00000000000018e9	callq	_mig_put_reply_port
00000000000018ee	jmp	0x1944
00000000000018f0	testl	%ebx, %ebx
00000000000018f2	jne	0x1925
00000000000018f4	movl	-0x2c(%rbp), %eax
00000000000018f7	cmpl	$0x47, %eax
00000000000018fa	je	0x192f
00000000000018fc	cmpl	$0x132, %eax
0000000000001901	jne	0x1936
0000000000001903	cmpl	$0x0, -0x40(%rbp)
0000000000001907	movl	-0x3c(%rbp), %eax
000000000000190a	movl	$0xfffffed4, %ebx
000000000000190f	js	0x194f
0000000000001911	cmpl	$0x24, %eax
0000000000001914	jne	0x193b
0000000000001916	movl	-0x20(%rbp), %eax
0000000000001919	testl	%eax, %eax
000000000000191b	movl	$0xfffffed4, %ebx
0000000000001920	cmovnel	%eax, %ebx
0000000000001923	jmp	0x193b
0000000000001925	movl	-0x34(%rbp), %edi
0000000000001928	callq	_mig_dealloc_reply_port
000000000000192d	jmp	0x1944
000000000000192f	movl	$0xfffffecc, %ebx
0000000000001934	jmp	0x193b
0000000000001936	movl	$0xfffffed3, %ebx
000000000000193b	leaq	-0x40(%rbp), %rdi
000000000000193f	callq	_mach_msg_destroy
0000000000001944	movl	%ebx, %eax
0000000000001946	addq	$0x40, %rsp
000000000000194a	popq	%rbx
000000000000194b	popq	%r14
000000000000194d	popq	%rbp
000000000000194e	retq
000000000000194f	cmpl	$0x28, %eax
0000000000001952	jne	0x193b
0000000000001954	cmpl	$0x1, -0x28(%rbp)
0000000000001958	jne	0x193b
000000000000195a	movl	$0xffff0000, %eax
000000000000195f	andl	-0x1c(%rbp), %eax
0000000000001962	cmpl	$0x110000, %eax
0000000000001967	jne	0x193b
0000000000001969	movl	-0x24(%rbp), %eax
000000000000196c	movl	%eax, (%r14)
000000000000196f	xorl	%ebx, %ebx
0000000000001971	jmp	0x1944
_semaphore_create:
0000000000001973	pushq	%rbp
0000000000001974	movq	%rsp, %rbp
0000000000001977	pushq	%r14
0000000000001979	pushq	%rbx
000000000000197a	subq	$0x40, %rsp
000000000000197e	movq	%rsi, %r14
0000000000001981	leaq	_NDR_record(%rip), %rax
0000000000001988	movq	(%rax), %rax
000000000000198b	leaq	-0x40(%rbp), %rbx
000000000000198f	movq	%rax, 0x18(%rbx)
0000000000001993	movl	%edx, 0x20(%rbx)
0000000000001996	movl	%ecx, 0x24(%rbx)
0000000000001999	movl	$0x1513, (%rbx)
000000000000199f	movl	%edi, 0x8(%rbx)
00000000000019a2	callq	_mig_get_reply_port
00000000000019a7	movl	%eax, 0xc(%rbx)
00000000000019aa	movabsq	$0xd5a00000000, %rcx
00000000000019b4	movq	%rcx, 0x10(%rbx)
00000000000019b8	movl	$0x0, (%rsp)
00000000000019bf	movl	$0x3, %esi
00000000000019c4	movl	$0x28, %edx
00000000000019c9	movl	$0x30, %ecx
00000000000019ce	xorl	%r9d, %r9d
00000000000019d1	movq	%rbx, %rdi
00000000000019d4	movl	%eax, %r8d
00000000000019d7	callq	_mach_msg
00000000000019dc	movl	%eax, %ebx
00000000000019de	leal	-0x10000002(%rbx), %eax
00000000000019e4	cmpl	$0xe, %eax
00000000000019e7	ja	0x19fd
00000000000019e9	movl	$0x4003, %ecx
00000000000019ee	btl	%eax, %ecx
00000000000019f1	jae	0x19fd
00000000000019f3	movl	-0x34(%rbp), %edi
00000000000019f6	callq	_mig_put_reply_port
00000000000019fb	jmp	0x1a51
00000000000019fd	testl	%ebx, %ebx
00000000000019ff	jne	0x1a32
0000000000001a01	movl	-0x2c(%rbp), %eax
0000000000001a04	cmpl	$0x47, %eax
0000000000001a07	je	0x1a3c
0000000000001a09	cmpl	$0xdbe, %eax
0000000000001a0e	jne	0x1a43
0000000000001a10	cmpl	$0x0, -0x40(%rbp)
0000000000001a14	movl	-0x3c(%rbp), %eax
0000000000001a17	movl	$0xfffffed4, %ebx
0000000000001a1c	js	0x1a5c
0000000000001a1e	cmpl	$0x24, %eax
0000000000001a21	jne	0x1a48
0000000000001a23	movl	-0x20(%rbp), %eax
0000000000001a26	testl	%eax, %eax
0000000000001a28	movl	$0xfffffed4, %ebx
0000000000001a2d	cmovnel	%eax, %ebx
0000000000001a30	jmp	0x1a48
0000000000001a32	movl	-0x34(%rbp), %edi
0000000000001a35	callq	_mig_dealloc_reply_port
0000000000001a3a	jmp	0x1a51
0000000000001a3c	movl	$0xfffffecc, %ebx
0000000000001a41	jmp	0x1a48
0000000000001a43	movl	$0xfffffed3, %ebx
0000000000001a48	leaq	-0x40(%rbp), %rdi
0000000000001a4c	callq	_mach_msg_destroy
0000000000001a51	movl	%ebx, %eax
0000000000001a53	addq	$0x40, %rsp
0000000000001a57	popq	%rbx
0000000000001a58	popq	%r14
0000000000001a5a	popq	%rbp
0000000000001a5b	retq
0000000000001a5c	cmpl	$0x28, %eax
0000000000001a5f	jne	0x1a48
0000000000001a61	cmpl	$0x1, -0x28(%rbp)
0000000000001a65	jne	0x1a48
0000000000001a67	movl	$0xffff0000, %eax
0000000000001a6c	andl	-0x1c(%rbp), %eax
0000000000001a6f	cmpl	$0x110000, %eax
0000000000001a74	jne	0x1a48
0000000000001a76	movl	-0x24(%rbp), %eax
0000000000001a79	movl	%eax, (%r14)
0000000000001a7c	xorl	%ebx, %ebx
0000000000001a7e	jmp	0x1a51
___sysctlbyname:
0000000000001a80	movl	$0x2000112, %eax
0000000000001a85	movq	%rcx, %r10
0000000000001a88	syscall
0000000000001a8a	jae	0x1a94
0000000000001a8c	movq	%rax, %rdi
0000000000001a8f	jmp	_cerror_nocancel
0000000000001a94	retq
0000000000001a95	nop
0000000000001a96	nop
0000000000001a97	nop
_issetugid:
0000000000001a98	movl	$0x2000147, %eax
0000000000001a9d	movq	%rcx, %r10
0000000000001aa0	syscall
0000000000001aa2	jae	0x1aac
0000000000001aa4	movq	%rax, %rdi
0000000000001aa7	jmp	_cerror_nocancel
0000000000001aac	retq
_ioctl:
0000000000001aad	pushq	%rbp
0000000000001aae	movq	%rsp, %rbp
0000000000001ab1	subq	$0xd0, %rsp
0000000000001ab8	testb	%al, %al
0000000000001aba	je	0x1ae2
0000000000001abc	movaps	%xmm0, -0xa0(%rbp)
0000000000001ac3	movaps	%xmm1, -0x90(%rbp)
0000000000001aca	movaps	%xmm2, -0x80(%rbp)
0000000000001ace	movaps	%xmm3, -0x70(%rbp)
0000000000001ad2	movaps	%xmm4, -0x60(%rbp)
0000000000001ad6	movaps	%xmm5, -0x50(%rbp)
0000000000001ada	movaps	%xmm6, -0x40(%rbp)
0000000000001ade	movaps	%xmm7, -0x30(%rbp)
0000000000001ae2	leaq	-0xd0(%rbp), %rax
0000000000001ae9	movq	%r9, 0x28(%rax)
0000000000001aed	movq	%r8, 0x20(%rax)
0000000000001af1	movq	%rcx, 0x18(%rax)
0000000000001af5	movq	%rdx, 0x10(%rax)
0000000000001af9	movabsq	$0x3000000010, %rcx
0000000000001b03	movq	%rcx, -0x20(%rbp)
0000000000001b07	movq	%rax, -0x10(%rbp)
0000000000001b0b	leaq	0x10(%rbp), %rax
0000000000001b0f	movq	%rax, -0x18(%rbp)
0000000000001b13	movslq	-0x20(%rbp), %rcx
0000000000001b17	movl	$0x28, %eax
0000000000001b1c	cmpq	%rax, %rcx
0000000000001b1f	ja	0x1b30
0000000000001b21	movq	%rcx, %rax
0000000000001b24	addq	-0x10(%rbp), %rax
0000000000001b28	leal	0x8(%rcx), %ecx
0000000000001b2b	movl	%ecx, -0x20(%rbp)
0000000000001b2e	jmp	0x1b3c
0000000000001b30	movq	-0x18(%rbp), %rax
0000000000001b34	leaq	0x8(%rax), %rcx
0000000000001b38	movq	%rcx, -0x18(%rbp)
0000000000001b3c	movq	(%rax), %rdx
0000000000001b3f	callq	___ioctl
0000000000001b44	addq	$0xd0, %rsp
0000000000001b4b	popq	%rbp
0000000000001b4c	retq
0000000000001b4d	nop
0000000000001b4e	nop
0000000000001b4f	nop
___ioctl:
0000000000001b50	movl	$0x2000036, %eax
0000000000001b55	movq	%rcx, %r10
0000000000001b58	syscall
0000000000001b5a	jae	0x1b64
0000000000001b5c	movq	%rax, %rdi
0000000000001b5f	jmp	_cerror
0000000000001b64	retq
___error:
0000000000001b65	movq	%gs:0x8, %rcx
0000000000001b6e	testq	%rcx, %rcx
0000000000001b71	leaq	_errno(%rip), %rax
0000000000001b78	cmovneq	%rcx, %rax
0000000000001b7c	retq
0000000000001b7d	nop
0000000000001b7e	nop
0000000000001b7f	nop
_mprotect:
___mprotect:
0000000000001b80	movl	$0x200004a, %eax
0000000000001b85	movq	%rcx, %r10
0000000000001b88	syscall
0000000000001b8a	jae	0x1b94
0000000000001b8c	movq	%rax, %rdi
0000000000001b8f	jmp	_cerror_nocancel
0000000000001b94	retq
_mach_vm_allocate:
0000000000001b95	pushq	%rbp
0000000000001b96	movq	%rsp, %rbp
0000000000001b99	pushq	%r15
0000000000001b9b	pushq	%r14
0000000000001b9d	pushq	%r13
0000000000001b9f	pushq	%r12
0000000000001ba1	pushq	%rbx
0000000000001ba2	pushq	%rax
0000000000001ba3	movl	%ecx, %ebx
0000000000001ba5	movq	%rdx, %r14
0000000000001ba8	movq	%rsi, %r15
0000000000001bab	movl	%edi, %r12d
0000000000001bae	callq	__kernelrpc_mach_vm_allocate_trap
0000000000001bb3	movl	%eax, %r13d
0000000000001bb6	cmpl	$0x10000003, %eax
0000000000001bbb	jne	0x1bd0
0000000000001bbd	movl	%r12d, %edi
0000000000001bc0	movq	%r15, %rsi
0000000000001bc3	movq	%r14, %rdx
0000000000001bc6	movl	%ebx, %ecx
0000000000001bc8	callq	__kernelrpc_mach_vm_allocate
0000000000001bcd	movl	%eax, %r13d
0000000000001bd0	movq	___syscall_logger(%rip), %rax
0000000000001bd7	testq	%rax, %rax
0000000000001bda	je	0x1bf7
0000000000001bdc	andl	$0xff000000, %ebx
0000000000001be2	orl	$0x10, %ebx
0000000000001be5	movl	%r12d, %esi
0000000000001be8	movq	(%r15), %r8
0000000000001beb	xorl	%ecx, %ecx
0000000000001bed	xorl	%r9d, %r9d
0000000000001bf0	movl	%ebx, %edi
0000000000001bf2	movq	%r14, %rdx
0000000000001bf5	callq	*%rax
0000000000001bf7	movl	%r13d, %eax
0000000000001bfa	addq	$0x8, %rsp
0000000000001bfe	popq	%rbx
0000000000001bff	popq	%r12
0000000000001c01	popq	%r13
0000000000001c03	popq	%r14
0000000000001c05	popq	%r15
0000000000001c07	popq	%rbp
0000000000001c08	retq
_mach_absolute_time:
0000000000001c09	pushq	%rbp
0000000000001c0a	movq	%rsp, %rbp
0000000000001c0d	movabsq	$0x7fffffe00050, %rsi
0000000000001c17	movl	0x18(%rsi), %r8d
0000000000001c1b	testl	%r8d, %r8d
0000000000001c1e	je	0x1c17
0000000000001c20	lfence
0000000000001c23	rdtsc
0000000000001c25	lfence
0000000000001c28	shlq	$0x20, %rdx
0000000000001c2c	orq	%rdx, %rax
0000000000001c2f	movl	0xc(%rsi), %ecx
0000000000001c32	andl	$0x1f, %ecx
0000000000001c35	subq	(%rsi), %rax
0000000000001c38	shlq	%cl, %rax
0000000000001c3b	movl	0x8(%rsi), %ecx
0000000000001c3e	mulq	%rcx
0000000000001c41	shrdq	$0x20, %rdx, %rax
0000000000001c46	addq	0x10(%rsi), %rax
0000000000001c4a	cmpl	0x18(%rsi), %r8d
0000000000001c4e	jne	0x1c17
0000000000001c50	popq	%rbp
0000000000001c51	retq
0000000000001c52	nop
0000000000001c53	nop
_getentropy:
0000000000001c54	movl	$0x20001f4, %eax
0000000000001c59	movq	%rcx, %r10
0000000000001c5c	syscall
0000000000001c5e	jae	0x1c68
0000000000001c60	movq	%rax, %rdi
0000000000001c63	jmp	_cerror_nocancel
0000000000001c68	retq
___libkernel_voucher_init:
0000000000001c69	movq	%rdi, __libkernel_voucher_functions(%rip)
0000000000001c70	xorl	%eax, %eax
0000000000001c72	retq
0000000000001c73	nop
___getpid:
_getpid:
0000000000001c74	movl	__current_pid(%rip), %eax
0000000000001c7a	testl	%eax, %eax
0000000000001c7c	jle	0x1c7f
0000000000001c7e	retq
0000000000001c7f	movl	$0x2000014, %eax
0000000000001c84	movq	%rcx, %r10
0000000000001c87	syscall
0000000000001c89	jae	0x1c93
0000000000001c8b	movq	%rax, %rdi
0000000000001c8e	jmp	_cerror_nocancel
0000000000001c93	movl	%eax, %edx
0000000000001c95	xorl	%eax, %eax
0000000000001c97	leaq	__current_pid(%rip), %rcx
0000000000001c9e	lock
0000000000001c9f	cmpxchgl	%edx, (%rcx)
0000000000001ca2	movl	%edx, %eax
0000000000001ca4	retq
_kdebug_trace:
0000000000001ca5	pushq	%rbp
0000000000001ca6	movq	%rsp, %rbp
0000000000001ca9	pushq	%r15
0000000000001cab	pushq	%r14
0000000000001cad	pushq	%r13
0000000000001caf	pushq	%r12
0000000000001cb1	pushq	%rbx
0000000000001cb2	pushq	%rax
0000000000001cb3	movq	%r8, %r14
0000000000001cb6	movq	%rcx, %r15
0000000000001cb9	movq	%rdx, %r12
0000000000001cbc	movq	%rsi, %r13
0000000000001cbf	movl	%edi, %ebx
0000000000001cc1	callq	_kdebug_is_enabled
0000000000001cc6	testb	%al, %al
0000000000001cc8	je	0x1ceb
0000000000001cca	movl	%ebx, %edi
0000000000001ccc	movq	%r13, %rsi
0000000000001ccf	movq	%r12, %rdx
0000000000001cd2	movq	%r15, %rcx
0000000000001cd5	movq	%r14, %r8
0000000000001cd8	addq	$0x8, %rsp
0000000000001cdc	popq	%rbx
0000000000001cdd	popq	%r12
0000000000001cdf	popq	%r13
0000000000001ce1	popq	%r14
0000000000001ce3	popq	%r15
0000000000001ce5	popq	%rbp
0000000000001ce6	jmp	___kdebug_trace64
0000000000001ceb	xorl	%eax, %eax
0000000000001ced	addq	$0x8, %rsp
0000000000001cf1	popq	%rbx
0000000000001cf2	popq	%r12
0000000000001cf4	popq	%r13
0000000000001cf6	popq	%r14
0000000000001cf8	popq	%r15
0000000000001cfa	popq	%rbp
0000000000001cfb	retq
_kdebug_is_enabled:
0000000000001cfc	pushq	%rbp
0000000000001cfd	movq	%rsp, %rbp
0000000000001d00	pushq	%r14
0000000000001d02	pushq	%rbx
0000000000001d03	movabsq	$0x7fffffe00044, %rax
0000000000001d0d	movl	(%rax), %eax
0000000000001d0f	testl	%eax, %eax
0000000000001d11	je	0x1d3e
0000000000001d13	movb	$0x1, %r14b
0000000000001d16	testb	$0x2, %al
0000000000001d18	je	0x1d41
0000000000001d1a	movl	%edi, %ebx
0000000000001d1c	callq	_kdebug_typefilter
0000000000001d21	testq	%rax, %rax
0000000000001d24	je	0x1d41
0000000000001d26	movl	%ebx, %ecx
0000000000001d28	shrl	$0x10, %ebx
0000000000001d2b	shrq	$0x13, %rcx
0000000000001d2f	movsbl	(%rax,%rcx), %eax
0000000000001d33	andb	$0x7, %bl
0000000000001d36	movzbl	%bl, %ecx
0000000000001d39	btl	%ecx, %eax
0000000000001d3c	jb	0x1d41
0000000000001d3e	xorl	%r14d, %r14d
0000000000001d41	movl	%r14d, %eax
0000000000001d44	popq	%rbx
0000000000001d45	popq	%r14
0000000000001d47	popq	%rbp
0000000000001d48	retq
_kdebug_typefilter:
0000000000001d49	movq	_kdebug_typefilter.typefilter(%rip), %rax
0000000000001d50	testq	%rax, %rax
0000000000001d53	je	0x1d56
0000000000001d55	retq
0000000000001d56	pushq	%rbp
0000000000001d57	movq	%rsp, %rbp
0000000000001d5a	subq	$0x10, %rsp
0000000000001d5e	xorl	%eax, %eax
0000000000001d60	leaq	-0x8(%rbp), %rdi
0000000000001d64	movq	%rax, (%rdi)
0000000000001d67	leaq	-0x10(%rbp), %rsi
0000000000001d6b	movq	%rax, (%rsi)
0000000000001d6e	callq	___kdebug_typefilter
0000000000001d73	testl	%eax, %eax
0000000000001d75	je	0x1d84
0000000000001d77	movq	_kdebug_typefilter.typefilter(%rip), %rax
0000000000001d7e	addq	$0x10, %rsp
0000000000001d82	popq	%rbp
0000000000001d83	retq
0000000000001d84	movq	-0x8(%rbp), %rcx
0000000000001d88	testq	%rcx, %rcx
0000000000001d8b	je	0x1d77
0000000000001d8d	xorl	%eax, %eax
0000000000001d8f	lock
0000000000001d90	cmpxchgq	%rcx, _kdebug_typefilter.typefilter(%rip)
0000000000001d98	je	0x1d77
0000000000001d9a	leaq	_mach_task_self_(%rip), %rax
0000000000001da1	movl	(%rax), %edi
0000000000001da3	movq	-0x8(%rbp), %rsi
0000000000001da7	movl	$_task_set_special_port, %edx
0000000000001dac	callq	_mach_vm_deallocate
0000000000001db1	jmp	0x1d77
0000000000001db3	nop
___kdebug_typefilter:
0000000000001db4	movl	$0x20000b1, %eax
0000000000001db9	movq	%rcx, %r10
0000000000001dbc	syscall
0000000000001dbe	jae	0x1dc8
0000000000001dc0	movq	%rax, %rdi
0000000000001dc3	jmp	_cerror_nocancel
0000000000001dc8	retq
_proc_track_dirty:
0000000000001dc9	pushq	%rbp
0000000000001dca	movq	%rsp, %rbp
0000000000001dcd	pushq	%rbx
0000000000001dce	pushq	%rax
0000000000001dcf	movl	%edi, %eax
0000000000001dd1	movl	%esi, %ecx
0000000000001dd3	xorl	%ebx, %ebx
0000000000001dd5	movl	$0x8, %edi
0000000000001dda	movl	$0x1, %edx
0000000000001ddf	xorl	%r8d, %r8d
0000000000001de2	xorl	%r9d, %r9d
0000000000001de5	movl	%eax, %esi
0000000000001de7	callq	___proc_info
0000000000001dec	cmpl	$-0x1, %eax
0000000000001def	jne	0x1df8
0000000000001df1	callq	___error
0000000000001df6	movl	(%rax), %ebx
0000000000001df8	movl	%ebx, %eax
0000000000001dfa	addq	$0x8, %rsp
0000000000001dfe	popq	%rbx
0000000000001dff	popq	%rbp
0000000000001e00	retq
0000000000001e01	nop
0000000000001e02	nop
0000000000001e03	nop
___proc_info:
0000000000001e04	movl	$0x2000150, %eax
0000000000001e09	movq	%rcx, %r10
0000000000001e0c	syscall
0000000000001e0e	jae	0x1e18
0000000000001e10	movq	%rax, %rdi
0000000000001e13	jmp	_cerror_nocancel
0000000000001e18	retq
0000000000001e19	nop
0000000000001e1a	nop
0000000000001e1b	nop
___sigaction:
0000000000001e1c	movl	$0x200002e, %eax
0000000000001e21	movq	%rcx, %r10
0000000000001e24	syscall
0000000000001e26	jae	0x1e30
0000000000001e28	movq	%rax, %rdi
0000000000001e2b	jmp	_cerror_nocancel
0000000000001e30	retq
_task_get_special_port:
0000000000001e31	pushq	%rbp
0000000000001e32	movq	%rsp, %rbp
0000000000001e35	pushq	%r14
0000000000001e37	pushq	%rbx
0000000000001e38	subq	$0x40, %rsp
0000000000001e3c	movq	%rdx, %r14
0000000000001e3f	leaq	_NDR_record(%rip), %rax
0000000000001e46	movq	(%rax), %rax
0000000000001e49	leaq	-0x40(%rbp), %rbx
0000000000001e4d	movq	%rax, 0x18(%rbx)
0000000000001e51	movl	%esi, 0x20(%rbx)
0000000000001e54	movl	$0x1513, (%rbx)
0000000000001e5a	movl	%edi, 0x8(%rbx)
0000000000001e5d	callq	_mig_get_reply_port
0000000000001e62	movl	%eax, 0xc(%rbx)
0000000000001e65	movabsq	$0xd5100000000, %rcx
0000000000001e6f	movq	%rcx, 0x10(%rbx)
0000000000001e73	movl	$0x0, (%rsp)
0000000000001e7a	movl	$0x3, %esi
0000000000001e7f	movl	$0x24, %edx
0000000000001e84	movl	$0x30, %ecx
0000000000001e89	xorl	%r9d, %r9d
0000000000001e8c	movq	%rbx, %rdi
0000000000001e8f	movl	%eax, %r8d
0000000000001e92	callq	_mach_msg
0000000000001e97	movl	%eax, %ebx
0000000000001e99	leal	-0x10000002(%rbx), %eax
0000000000001e9f	cmpl	$0xe, %eax
0000000000001ea2	ja	0x1eb8
0000000000001ea4	movl	$0x4003, %ecx
0000000000001ea9	btl	%eax, %ecx
0000000000001eac	jae	0x1eb8
0000000000001eae	movl	-0x34(%rbp), %edi
0000000000001eb1	callq	_mig_put_reply_port
0000000000001eb6	jmp	0x1f0c
0000000000001eb8	testl	%ebx, %ebx
0000000000001eba	jne	0x1eed
0000000000001ebc	movl	-0x2c(%rbp), %eax
0000000000001ebf	cmpl	$0x47, %eax
0000000000001ec2	je	0x1ef7
0000000000001ec4	cmpl	$0xdb5, %eax
0000000000001ec9	jne	0x1efe
0000000000001ecb	cmpl	$0x0, -0x40(%rbp)
0000000000001ecf	movl	-0x3c(%rbp), %eax
0000000000001ed2	movl	$0xfffffed4, %ebx
0000000000001ed7	js	0x1f17
0000000000001ed9	cmpl	$0x24, %eax
0000000000001edc	jne	0x1f03
0000000000001ede	movl	-0x20(%rbp), %eax
0000000000001ee1	testl	%eax, %eax
0000000000001ee3	movl	$0xfffffed4, %ebx
0000000000001ee8	cmovnel	%eax, %ebx
0000000000001eeb	jmp	0x1f03
0000000000001eed	movl	-0x34(%rbp), %edi
0000000000001ef0	callq	_mig_dealloc_reply_port
0000000000001ef5	jmp	0x1f0c
0000000000001ef7	movl	$0xfffffecc, %ebx
0000000000001efc	jmp	0x1f03
0000000000001efe	movl	$0xfffffed3, %ebx
0000000000001f03	leaq	-0x40(%rbp), %rdi
0000000000001f07	callq	_mach_msg_destroy
0000000000001f0c	movl	%ebx, %eax
0000000000001f0e	addq	$0x40, %rsp
0000000000001f12	popq	%rbx
0000000000001f13	popq	%r14
0000000000001f15	popq	%rbp
0000000000001f16	retq
0000000000001f17	cmpl	$0x28, %eax
0000000000001f1a	jne	0x1f03
0000000000001f1c	cmpl	$0x1, -0x28(%rbp)
0000000000001f20	jne	0x1f03
0000000000001f22	movl	$0xffff0000, %eax
0000000000001f27	andl	-0x1c(%rbp), %eax
0000000000001f2a	cmpl	$0x110000, %eax
0000000000001f2f	jne	0x1f03
0000000000001f31	movl	-0x24(%rbp), %eax
0000000000001f34	movl	%eax, (%r14)
0000000000001f37	xorl	%ebx, %ebx
0000000000001f39	jmp	0x1f0c
_mach_port_mod_refs:
0000000000001f3b	pushq	%rbp
0000000000001f3c	movq	%rsp, %rbp
0000000000001f3f	pushq	%r15
0000000000001f41	pushq	%r14
0000000000001f43	pushq	%r12
0000000000001f45	pushq	%rbx
0000000000001f46	movl	%ecx, %r14d
0000000000001f49	movl	%edx, %r15d
0000000000001f4c	movl	%esi, %r12d
0000000000001f4f	movl	%edi, %ebx
0000000000001f51	callq	__kernelrpc_mach_port_mod_refs_trap
0000000000001f56	cmpl	$0x10000003, %eax
0000000000001f5b	jne	0x1f75
0000000000001f5d	movl	%ebx, %edi
0000000000001f5f	movl	%r12d, %esi
0000000000001f62	movl	%r15d, %edx
0000000000001f65	movl	%r14d, %ecx
0000000000001f68	popq	%rbx
0000000000001f69	popq	%r12
0000000000001f6b	popq	%r14
0000000000001f6d	popq	%r15
0000000000001f6f	popq	%rbp
0000000000001f70	jmp	__kernelrpc_mach_port_mod_refs
0000000000001f75	popq	%rbx
0000000000001f76	popq	%r12
0000000000001f78	popq	%r14
0000000000001f7a	popq	%r15
0000000000001f7c	popq	%rbp
0000000000001f7d	retq
0000000000001f7e	nop
0000000000001f7f	nop
_csops:
0000000000001f80	movl	$0x20000a9, %eax
0000000000001f85	movq	%rcx, %r10
0000000000001f88	syscall
0000000000001f8a	jae	0x1f94
0000000000001f8c	movq	%rax, %rdi
0000000000001f8f	jmp	_cerror_nocancel
0000000000001f94	retq
_proc_pidinfo:
0000000000001f95	pushq	%rbp
0000000000001f96	movq	%rsp, %rbp
0000000000001f99	movl	%r8d, %r9d
0000000000001f9c	movq	%rcx, %rax
0000000000001f9f	movq	%rdx, %rcx
0000000000001fa2	movl	%esi, %edx
0000000000001fa4	movl	%edi, %esi
0000000000001fa6	movl	$0x2, %edi
0000000000001fab	movq	%rax, %r8
0000000000001fae	callq	___proc_info
0000000000001fb3	xorl	%ecx, %ecx
0000000000001fb5	cmpl	$-0x1, %eax
0000000000001fb8	cmovel	%ecx, %eax
0000000000001fbb	popq	%rbp
0000000000001fbc	retq
_mach_port_construct:
0000000000001fbd	pushq	%rbp
0000000000001fbe	movq	%rsp, %rbp
0000000000001fc1	pushq	%r15
0000000000001fc3	pushq	%r14
0000000000001fc5	pushq	%r12
0000000000001fc7	pushq	%rbx
0000000000001fc8	movq	%rcx, %r14
0000000000001fcb	movq	%rdx, %r15
0000000000001fce	movq	%rsi, %r12
0000000000001fd1	movl	%edi, %ebx
0000000000001fd3	callq	__kernelrpc_mach_port_construct_trap
0000000000001fd8	cmpl	$0x10000003, %eax
0000000000001fdd	jne	0x1ff7
0000000000001fdf	movl	%ebx, %edi
0000000000001fe1	movq	%r12, %rsi
0000000000001fe4	movq	%r15, %rdx
0000000000001fe7	movq	%r14, %rcx
0000000000001fea	popq	%rbx
0000000000001feb	popq	%r12
0000000000001fed	popq	%r14
0000000000001fef	popq	%r15
0000000000001ff1	popq	%rbp
0000000000001ff2	jmp	__kernelrpc_mach_port_construct
0000000000001ff7	popq	%rbx
0000000000001ff8	popq	%r12
0000000000001ffa	popq	%r14
0000000000001ffc	popq	%r15
0000000000001ffe	popq	%rbp
0000000000001fff	retq
_task_set_special_port:
0000000000002000	pushq	%rbp
0000000000002001	movq	%rsp, %rbp
0000000000002004	pushq	%rbx
0000000000002005	subq	$0x48, %rsp
0000000000002009	leaq	-0x40(%rbp), %rbx
000000000000200d	movl	$0x1, 0x18(%rbx)
0000000000002014	movl	%edx, 0x1c(%rbx)
0000000000002017	movl	$0x130000, 0x24(%rbx)
000000000000201e	leaq	_NDR_record(%rip), %rax
0000000000002025	movq	(%rax), %rax
0000000000002028	movq	%rax, 0x28(%rbx)
000000000000202c	movl	%esi, 0x30(%rbx)
000000000000202f	movl	$0x80001513, (%rbx)
0000000000002035	movl	%edi, 0x8(%rbx)
0000000000002038	callq	_mig_get_reply_port
000000000000203d	movl	%eax, 0xc(%rbx)
0000000000002040	movabsq	$0xd5200000000, %rcx
000000000000204a	movq	%rcx, 0x10(%rbx)
000000000000204e	movl	$0x0, (%rsp)
0000000000002055	movl	$0x3, %esi
000000000000205a	movl	$0x34, %edx
000000000000205f	movl	$0x2c, %ecx
0000000000002064	xorl	%r9d, %r9d
0000000000002067	movq	%rbx, %rdi
000000000000206a	movl	%eax, %r8d
000000000000206d	callq	_mach_msg
0000000000002072	movl	%eax, %ebx
0000000000002074	leal	-0x10000002(%rbx), %eax
000000000000207a	cmpl	$0xe, %eax
000000000000207d	ja	0x2093
000000000000207f	movl	$0x4003, %ecx
0000000000002084	btl	%eax, %ecx
0000000000002087	jae	0x2093
0000000000002089	movl	-0x34(%rbp), %edi
000000000000208c	callq	_mig_put_reply_port
0000000000002091	jmp	0x20e1
0000000000002093	testl	%ebx, %ebx
0000000000002095	jne	0x20c2
0000000000002097	movl	-0x2c(%rbp), %eax
000000000000209a	cmpl	$0x47, %eax
000000000000209d	je	0x20cc
000000000000209f	cmpl	$0xdb6, %eax
00000000000020a4	jne	0x20d3
00000000000020a6	movl	$0xfffffed4, %ebx
00000000000020ab	cmpl	$0x0, -0x40(%rbp)
00000000000020af	js	0x20d8
00000000000020b1	cmpl	$0x24, -0x3c(%rbp)
00000000000020b5	jne	0x20d8
00000000000020b7	movl	-0x20(%rbp), %ebx
00000000000020ba	testl	%ebx, %ebx
00000000000020bc	jne	0x20d8
00000000000020be	xorl	%ebx, %ebx
00000000000020c0	jmp	0x20e1
00000000000020c2	movl	-0x34(%rbp), %edi
00000000000020c5	callq	_mig_dealloc_reply_port
00000000000020ca	jmp	0x20e1
00000000000020cc	movl	$0xfffffecc, %ebx
00000000000020d1	jmp	0x20d8
00000000000020d3	movl	$0xfffffed3, %ebx
00000000000020d8	leaq	-0x40(%rbp), %rdi
00000000000020dc	callq	_mach_msg_destroy
00000000000020e1	movl	%ebx, %eax
00000000000020e3	addq	$0x48, %rsp
00000000000020e7	popq	%rbx
00000000000020e8	popq	%rbp
00000000000020e9	retq
00000000000020ea	nop
00000000000020eb	nop
_geteuid:
00000000000020ec	movl	$0x2000019, %eax
00000000000020f1	movq	%rcx, %r10
00000000000020f4	syscall
00000000000020f6	jae	0x2100
00000000000020f8	movq	%rax, %rdi
00000000000020fb	jmp	_cerror_nocancel
0000000000002100	retq
0000000000002101	nop
0000000000002102	nop
0000000000002103	nop
_getuid:
0000000000002104	movl	$0x2000018, %eax
0000000000002109	movq	%rcx, %r10
000000000000210c	syscall
000000000000210e	jae	0x2118
0000000000002110	movq	%rax, %rdi
0000000000002113	jmp	_cerror_nocancel
0000000000002118	retq
0000000000002119	nop
000000000000211a	nop
000000000000211b	nop
___sysctl:
000000000000211c	movl	$0x20000ca, %eax
0000000000002121	movq	%rcx, %r10
0000000000002124	syscall
0000000000002126	jae	0x2130
0000000000002128	movq	%rax, %rdi
000000000000212b	jmp	_cerror_nocancel
0000000000002130	retq
0000000000002131	nop
0000000000002132	nop
0000000000002133	nop
_pthread_getugid_np:
___gettid:
0000000000002134	movl	$0x200011e, %eax
0000000000002139	movq	%rcx, %r10
000000000000213c	syscall
000000000000213e	jae	0x2148
0000000000002140	movq	%rax, %rdi
0000000000002143	jmp	_cerror_nocancel
0000000000002148	retq
0000000000002149	nop
000000000000214a	nop
000000000000214b	nop
_getegid:
000000000000214c	movl	$0x200002b, %eax
0000000000002151	movq	%rcx, %r10
0000000000002154	syscall
0000000000002156	jae	0x2160
0000000000002158	movq	%rax, %rdi
000000000000215b	jmp	_cerror_nocancel
0000000000002160	retq
_getrlimit:
0000000000002161	orl	$0x1000, %edi
0000000000002167	jmp	___getrlimit
___getrlimit:
000000000000216c	movl	$0x20000c2, %eax
0000000000002171	movq	%rcx, %r10
0000000000002174	syscall
0000000000002176	jae	0x2180
0000000000002178	movq	%rax, %rdi
000000000000217b	jmp	_cerror_nocancel
0000000000002180	retq
0000000000002181	nop
0000000000002182	nop
0000000000002183	nop
___open_nocancel:
_open$NOCANCEL:
0000000000002184	movl	$0x200018e, %eax
0000000000002189	movq	%rcx, %r10
000000000000218c	syscall
000000000000218e	jae	0x2198
0000000000002190	movq	%rax, %rdi
0000000000002193	jmp	_cerror_nocancel
0000000000002198	retq
0000000000002199	nop
000000000000219a	nop
000000000000219b	nop
_fstat$INODE64:
_fstat64:
000000000000219c	movl	$0x2000153, %eax
00000000000021a1	movq	%rcx, %r10
00000000000021a4	syscall
00000000000021a6	jae	0x21b0
00000000000021a8	movq	%rax, %rdi
00000000000021ab	jmp	_cerror_nocancel
00000000000021b0	retq
00000000000021b1	nop
00000000000021b2	nop
00000000000021b3	nop
___read_nocancel:
_read$NOCANCEL:
00000000000021b4	movl	$0x200018c, %eax
00000000000021b9	movq	%rcx, %r10
00000000000021bc	syscall
00000000000021be	jae	0x21c8
00000000000021c0	movq	%rax, %rdi
00000000000021c3	jmp	_cerror_nocancel
00000000000021c8	retq
00000000000021c9	nop
00000000000021ca	nop
00000000000021cb	nop
___close_nocancel:
_close$NOCANCEL:
00000000000021cc	movl	$0x200018f, %eax
00000000000021d1	movq	%rcx, %r10
00000000000021d4	syscall
00000000000021d6	jae	0x21e0
00000000000021d8	movq	%rax, %rdi
00000000000021db	jmp	_cerror_nocancel
00000000000021e0	retq
00000000000021e1	nop
00000000000021e2	nop
00000000000021e3	nop
_open:
___open:
00000000000021e4	movl	$0x2000005, %eax
00000000000021e9	movq	%rcx, %r10
00000000000021ec	syscall
00000000000021ee	jae	0x21f8
00000000000021f0	movq	%rax, %rdi
00000000000021f3	jmp	_cerror
00000000000021f8	retq
00000000000021f9	nop
00000000000021fa	nop
00000000000021fb	nop
_close:
00000000000021fc	movl	$0x2000006, %eax
0000000000002201	movq	%rcx, %r10
0000000000002204	syscall
0000000000002206	jae	0x2210
0000000000002208	movq	%rax, %rdi
000000000000220b	jmp	_cerror
0000000000002210	retq
___commpage_gettimeofday:
0000000000002211	xorl	%esi, %esi
0000000000002213	jmp	___commpage_gettimeofday_internal
___commpage_gettimeofday_internal:
0000000000002218	pushq	%rbp
0000000000002219	movq	%rsp, %rbp
000000000000221c	pushq	%r15
000000000000221e	pushq	%r14
0000000000002220	pushq	%r12
0000000000002222	pushq	%rbx
0000000000002223	movq	%rsi, %r14
0000000000002226	movq	%rdi, %r15
0000000000002229	movabsq	$0x7fffffe000d0, %r12
0000000000002233	movq	(%r12), %rbx
0000000000002237	callq	_mach_absolute_time
000000000000223c	movq	0x8(%r12), %rdi
0000000000002241	movq	0x10(%r12), %rcx
0000000000002246	movq	0x18(%r12), %rsi
000000000000224b	movq	0x20(%r12), %rdx
0000000000002250	cmpq	(%r12), %rbx
0000000000002254	jne	0x2233
0000000000002256	movq	%rax, %r8
0000000000002259	movl	$0x1, %eax
000000000000225e	testq	%rbx, %rbx
0000000000002261	je	0x22a3
0000000000002263	testq	%rdi, %rdi
0000000000002266	js	0x22a3
0000000000002268	movq	%r8, %r9
000000000000226b	subq	%rbx, %r9
000000000000226e	cmpq	%rdx, %r9
0000000000002271	jae	0x22a3
0000000000002273	movq	%rsi, %rax
0000000000002276	mulq	%r9
0000000000002279	imulq	%r9, %rsi
000000000000227d	addq	%rcx, %rsi
0000000000002280	adcq	%rdx, %rdi
0000000000002283	movq	%rdi, (%r15)
0000000000002286	shrq	$0x20, %rsi
000000000000228a	imulq	$0xf4240, %rsi, %rax
0000000000002291	shrq	$0x20, %rax
0000000000002295	movl	%eax, 0x8(%r15)
0000000000002299	xorl	%eax, %eax
000000000000229b	testq	%r14, %r14
000000000000229e	je	0x22a3
00000000000022a0	movq	%r8, (%r14)
00000000000022a3	popq	%rbx
00000000000022a4	popq	%r12
00000000000022a6	popq	%r14
00000000000022a8	popq	%r15
00000000000022aa	popq	%rbp
00000000000022ab	retq
_voucher_mach_msg_set:
00000000000022ac	movq	__libkernel_voucher_functions(%rip), %rax
00000000000022b3	movq	0x8(%rax), %rax
00000000000022b7	testq	%rax, %rax
00000000000022ba	je	0x22be
00000000000022bc	jmpq	*%rax
00000000000022be	xorl	%eax, %eax
00000000000022c0	retq
_host_get_special_port:
00000000000022c1	pushq	%rbp
00000000000022c2	movq	%rsp, %rbp
00000000000022c5	pushq	%r14
00000000000022c7	pushq	%rbx
00000000000022c8	subq	$0x40, %rsp
00000000000022cc	movq	%rcx, %r14
00000000000022cf	leaq	_NDR_record(%rip), %rax
00000000000022d6	movq	(%rax), %rax
00000000000022d9	leaq	-0x40(%rbp), %rbx
00000000000022dd	movq	%rax, 0x18(%rbx)
00000000000022e1	movl	%esi, 0x20(%rbx)
00000000000022e4	movl	%edx, 0x24(%rbx)
00000000000022e7	movl	$0x1513, (%rbx)
00000000000022ed	movl	%edi, 0x8(%rbx)
00000000000022f0	callq	_mig_get_reply_port
00000000000022f5	movl	%eax, 0xc(%rbx)
00000000000022f8	movabsq	$0x19c00000000, %rcx
0000000000002302	movq	%rcx, 0x10(%rbx)
0000000000002306	movl	$0x0, (%rsp)
000000000000230d	movl	$0x3, %esi
0000000000002312	movl	$0x28, %edx
0000000000002317	movl	$0x30, %ecx
000000000000231c	xorl	%r9d, %r9d
000000000000231f	movq	%rbx, %rdi
0000000000002322	movl	%eax, %r8d
0000000000002325	callq	_mach_msg
000000000000232a	movl	%eax, %ebx
000000000000232c	leal	-0x10000002(%rbx), %eax
0000000000002332	cmpl	$0xe, %eax
0000000000002335	ja	0x234b
0000000000002337	movl	$0x4003, %ecx
000000000000233c	btl	%eax, %ecx
000000000000233f	jae	0x234b
0000000000002341	movl	-0x34(%rbp), %edi
0000000000002344	callq	_mig_put_reply_port
0000000000002349	jmp	0x239f
000000000000234b	testl	%ebx, %ebx
000000000000234d	jne	0x2380
000000000000234f	movl	-0x2c(%rbp), %eax
0000000000002352	cmpl	$0x47, %eax
0000000000002355	je	0x238a
0000000000002357	cmpl	$0x200, %eax
000000000000235c	jne	0x2391
000000000000235e	cmpl	$0x0, -0x40(%rbp)
0000000000002362	movl	-0x3c(%rbp), %eax
0000000000002365	movl	$0xfffffed4, %ebx
000000000000236a	js	0x23aa
000000000000236c	cmpl	$0x24, %eax
000000000000236f	jne	0x2396
0000000000002371	movl	-0x20(%rbp), %eax
0000000000002374	testl	%eax, %eax
0000000000002376	movl	$0xfffffed4, %ebx
000000000000237b	cmovnel	%eax, %ebx
000000000000237e	jmp	0x2396
0000000000002380	movl	-0x34(%rbp), %edi
0000000000002383	callq	_mig_dealloc_reply_port
0000000000002388	jmp	0x239f
000000000000238a	movl	$0xfffffecc, %ebx
000000000000238f	jmp	0x2396
0000000000002391	movl	$0xfffffed3, %ebx
0000000000002396	leaq	-0x40(%rbp), %rdi
000000000000239a	callq	_mach_msg_destroy
000000000000239f	movl	%ebx, %eax
00000000000023a1	addq	$0x40, %rsp
00000000000023a5	popq	%rbx
00000000000023a6	popq	%r14
00000000000023a8	popq	%rbp
00000000000023a9	retq
00000000000023aa	cmpl	$0x28, %eax
00000000000023ad	jne	0x2396
00000000000023af	cmpl	$0x1, -0x28(%rbp)
00000000000023b3	jne	0x2396
00000000000023b5	movl	$0xffff0000, %eax
00000000000023ba	andl	-0x1c(%rbp), %eax
00000000000023bd	cmpl	$0x110000, %eax
00000000000023c2	jne	0x2396
00000000000023c4	movl	-0x24(%rbp), %eax
00000000000023c7	movl	%eax, (%r14)
00000000000023ca	xorl	%ebx, %ebx
00000000000023cc	jmp	0x239f
_host_create_mach_voucher:
00000000000023ce	pushq	%rbp
00000000000023cf	movq	%rsp, %rbp
00000000000023d2	pushq	%r15
00000000000023d4	pushq	%r14
00000000000023d6	pushq	%r12
00000000000023d8	pushq	%rbx
00000000000023d9	movq	%rcx, %r14
00000000000023dc	movl	%edx, %r15d
00000000000023df	movq	%rsi, %r12
00000000000023e2	movl	%edi, %ebx
00000000000023e4	callq	_host_create_mach_voucher_trap
00000000000023e9	movl	%eax, %ecx
00000000000023eb	cmpl	$0x1000046, %eax
00000000000023f0	movl	$0x10000003, %eax
00000000000023f5	cmovnel	%ecx, %eax
00000000000023f8	cmpl	$0x10000003, %eax
00000000000023fd	jne	0x2417
00000000000023ff	movl	%ebx, %edi
0000000000002401	movq	%r12, %rsi
0000000000002404	movl	%r15d, %edx
0000000000002407	movq	%r14, %rcx
000000000000240a	popq	%rbx
000000000000240b	popq	%r12
000000000000240d	popq	%r14
000000000000240f	popq	%r15
0000000000002411	popq	%rbp
0000000000002412	jmp	__kernelrpc_host_create_mach_voucher
0000000000002417	popq	%rbx
0000000000002418	popq	%r12
000000000000241a	popq	%r14
000000000000241c	popq	%r15
000000000000241e	popq	%rbp
000000000000241f	retq
_voucher_mach_msg_clear:
0000000000002420	movq	__libkernel_voucher_functions(%rip), %rax
0000000000002427	movq	0x10(%rax), %rax
000000000000242b	testq	%rax, %rax
000000000000242e	je	0x2432
0000000000002430	jmpq	*%rax
0000000000002432	retq
_task_info:
0000000000002433	pushq	%rbp
0000000000002434	movq	%rsp, %rbp
0000000000002437	pushq	%r15
0000000000002439	pushq	%r14
000000000000243b	pushq	%r12
000000000000243d	pushq	%rbx
000000000000243e	subq	$0x110, %rsp
0000000000002445	movq	%rcx, %r15
0000000000002448	leaq	_NDR_record(%rip), %rax
000000000000244f	movq	(%rax), %rax
0000000000002452	leaq	-0x120(%rbp), %rbx
0000000000002459	movq	%rax, 0x18(%rbx)
000000000000245d	movl	%esi, 0x20(%rbx)
0000000000002460	movl	(%rcx), %eax
0000000000002462	movl	$0x34, %ecx
0000000000002467	cmpl	%ecx, %eax
0000000000002469	cmovbl	%eax, %ecx
000000000000246c	movq	%rdx, %r14
000000000000246f	movl	%ecx, 0x24(%rbx)
0000000000002472	movl	$0x1513, (%rbx)
0000000000002478	movl	%edi, 0x8(%rbx)
000000000000247b	callq	_mig_get_reply_port
0000000000002480	movl	%eax, 0xc(%rbx)
0000000000002483	movabsq	$0xd4d00000000, %rcx
000000000000248d	movq	%rcx, 0x10(%rbx)
0000000000002491	movl	$0x0, (%rsp)
0000000000002498	movl	$0x3, %esi
000000000000249d	movl	$0x28, %edx
00000000000024a2	movl	$0x100, %ecx
00000000000024a7	xorl	%r9d, %r9d
00000000000024aa	movq	%rbx, %rdi
00000000000024ad	movl	%eax, %r8d
00000000000024b0	callq	_mach_msg
00000000000024b5	movl	%eax, %ebx
00000000000024b7	leal	-0x10000002(%rbx), %eax
00000000000024bd	cmpl	$0xe, %eax
00000000000024c0	ja	0x24dc
00000000000024c2	movl	$0x4003, %ecx
00000000000024c7	btl	%eax, %ecx
00000000000024ca	jae	0x24dc
00000000000024cc	movl	-0x114(%rbp), %edi
00000000000024d2	callq	_mig_put_reply_port
00000000000024d7	jmp	0x25b0
00000000000024dc	testl	%ebx, %ebx
00000000000024de	jne	0x2530
00000000000024e0	movl	-0x10c(%rbp), %eax
00000000000024e6	cmpl	$0x47, %eax
00000000000024e9	je	0x253d
00000000000024eb	cmpl	$0xdb1, %eax
00000000000024f0	jne	0x2544
00000000000024f2	cmpl	$0x0, -0x120(%rbp)
00000000000024f9	js	0x259f
00000000000024ff	movl	-0x11c(%rbp), %eax
0000000000002505	leal	-0x28(%rax), %ecx
0000000000002508	cmpl	$0xd1, %ecx
000000000000250e	jb	0x254b
0000000000002510	movl	$0xfffffed4, %ebx
0000000000002515	cmpl	$0x24, %eax
0000000000002518	jne	0x25a4
000000000000251e	movl	-0x100(%rbp), %eax
0000000000002524	testl	%eax, %eax
0000000000002526	movl	$0xfffffed4, %ebx
000000000000252b	cmovnel	%eax, %ebx
000000000000252e	jmp	0x25a4
0000000000002530	movl	-0x114(%rbp), %edi
0000000000002536	callq	_mig_dealloc_reply_port
000000000000253b	jmp	0x25b0
000000000000253d	movl	$0xfffffecc, %ebx
0000000000002542	jmp	0x25a4
0000000000002544	movl	$0xfffffed3, %ebx
0000000000002549	jmp	0x25a4
000000000000254b	movl	-0x100(%rbp), %ebx
0000000000002551	testl	%ebx, %ebx
0000000000002553	jne	0x25a4
0000000000002555	movl	-0xfc(%rbp), %r12d
000000000000255c	cmpl	$0x34, %r12d
0000000000002560	ja	0x259f
0000000000002562	shrl	$0x2, %ecx
0000000000002565	cmpl	%r12d, %ecx
0000000000002568	jb	0x259f
000000000000256a	leal	0x28(,%r12,4), %ecx
0000000000002572	movl	$0xfffffed4, %ebx
0000000000002577	cmpl	%ecx, %eax
0000000000002579	jne	0x25a4
000000000000257b	movl	(%r15), %edx
000000000000257e	leaq	-0xf8(%rbp), %rsi
0000000000002585	cmpl	%edx, %r12d
0000000000002588	jbe	0x25c2
000000000000258a	shll	$0x2, %edx
000000000000258d	movq	%r14, %rdi
0000000000002590	callq	_memcpy
0000000000002595	movl	%r12d, (%r15)
0000000000002598	movl	$0xfffffecd, %ebx
000000000000259d	jmp	0x25b0
000000000000259f	movl	$0xfffffed4, %ebx
00000000000025a4	leaq	-0x120(%rbp), %rdi
00000000000025ab	callq	_mach_msg_destroy
00000000000025b0	movl	%ebx, %eax
00000000000025b2	addq	$0x110, %rsp
00000000000025b9	popq	%rbx
00000000000025ba	popq	%r12
00000000000025bc	popq	%r14
00000000000025be	popq	%r15
00000000000025c0	popq	%rbp
00000000000025c1	retq
00000000000025c2	leal	(,%r12,4), %eax
00000000000025ca	movl	%eax, %edx
00000000000025cc	movq	%r14, %rdi
00000000000025cf	callq	_memcpy
00000000000025d4	movl	%r12d, (%r15)
00000000000025d7	xorl	%ebx, %ebx
00000000000025d9	jmp	0x25b0
__kernelrpc_mach_vm_map:
00000000000025db	pushq	%rbp
00000000000025dc	movq	%rsp, %rbp
00000000000025df	pushq	%r15
00000000000025e1	pushq	%r14
00000000000025e3	pushq	%r12
00000000000025e5	pushq	%rbx
00000000000025e6	subq	$0x70, %rsp
00000000000025ea	movq	%rsi, %r14
00000000000025ed	movl	0x30(%rbp), %r10d
00000000000025f1	movl	0x28(%rbp), %r11d
00000000000025f5	movl	0x20(%rbp), %r15d
00000000000025f9	movl	0x18(%rbp), %r12d
00000000000025fd	movq	0x10(%rbp), %rax
0000000000002601	leaq	-0x88(%rbp), %rbx
0000000000002608	movl	$0x1, 0x18(%rbx)
000000000000260f	movl	%r9d, 0x1c(%rbx)
0000000000002613	movl	$0x130000, 0x24(%rbx)
000000000000261a	leaq	_NDR_record(%rip), %rsi
0000000000002621	movq	(%rsi), %rsi
0000000000002624	movq	%rsi, 0x28(%rbx)
0000000000002628	movq	(%r14), %rsi
000000000000262b	movq	%rsi, 0x30(%rbx)
000000000000262f	movq	%rdx, 0x38(%rbx)
0000000000002633	movq	%rcx, 0x40(%rbx)
0000000000002637	movl	%r8d, 0x48(%rbx)
000000000000263b	movq	%rax, 0x4c(%rbx)
000000000000263f	movl	%r12d, 0x54(%rbx)
0000000000002643	movl	%r15d, 0x58(%rbx)
0000000000002647	movl	%r11d, 0x5c(%rbx)
000000000000264b	movl	%r10d, 0x60(%rbx)
000000000000264f	movl	$0x80001513, (%rbx)
0000000000002655	movl	%edi, 0x8(%rbx)
0000000000002658	callq	_mig_get_reply_port
000000000000265d	movl	%eax, 0xc(%rbx)
0000000000002660	movabsq	$0x12cb00000000, %rcx
000000000000266a	movq	%rcx, 0x10(%rbx)
000000000000266e	movl	$0x0, (%rsp)
0000000000002675	movl	$0x3, %esi
000000000000267a	movl	$0x64, %edx
000000000000267f	movl	$0x34, %ecx
0000000000002684	xorl	%r9d, %r9d
0000000000002687	movq	%rbx, %rdi
000000000000268a	movl	%eax, %r8d
000000000000268d	callq	_mach_msg
0000000000002692	movl	%eax, %ebx
0000000000002694	leal	-0x10000002(%rbx), %eax
000000000000269a	cmpl	$0xe, %eax
000000000000269d	ja	0x26b3
000000000000269f	movl	$0x4003, %ecx
00000000000026a4	btl	%eax, %ecx
00000000000026a7	jae	0x26b3
00000000000026a9	movl	-0x7c(%rbp), %edi
00000000000026ac	callq	_mig_put_reply_port
00000000000026b1	jmp	0x2711
00000000000026b3	testl	%ebx, %ebx
00000000000026b5	jne	0x26ed
00000000000026b7	movl	-0x74(%rbp), %eax
00000000000026ba	cmpl	$0x47, %eax
00000000000026bd	je	0x26f7
00000000000026bf	cmpl	$0x132f, %eax
00000000000026c4	jne	0x26fe
00000000000026c6	movl	$0xfffffed4, %eax
00000000000026cb	cmpl	$0x0, -0x88(%rbp)
00000000000026d2	js	0x2703
00000000000026d4	movl	-0x84(%rbp), %ecx
00000000000026da	cmpl	$0x2c, %ecx
00000000000026dd	je	0x2720
00000000000026df	cmpl	$0x24, %ecx
00000000000026e2	jne	0x2703
00000000000026e4	movl	-0x68(%rbp), %ebx
00000000000026e7	testl	%ebx, %ebx
00000000000026e9	jne	0x2705
00000000000026eb	jmp	0x2703
00000000000026ed	movl	-0x7c(%rbp), %edi
00000000000026f0	callq	_mig_dealloc_reply_port
00000000000026f5	jmp	0x2711
00000000000026f7	movl	$0xfffffecc, %eax
00000000000026fc	jmp	0x2703
00000000000026fe	movl	$0xfffffed3, %eax
0000000000002703	movl	%eax, %ebx
0000000000002705	leaq	-0x88(%rbp), %rdi
000000000000270c	callq	_mach_msg_destroy
0000000000002711	movl	%ebx, %eax
0000000000002713	addq	$0x70, %rsp
0000000000002717	popq	%rbx
0000000000002718	popq	%r12
000000000000271a	popq	%r14
000000000000271c	popq	%r15
000000000000271e	popq	%rbp
000000000000271f	retq
0000000000002720	movl	-0x68(%rbp), %ebx
0000000000002723	testl	%ebx, %ebx
0000000000002725	jne	0x2705
0000000000002727	movq	-0x64(%rbp), %rax
000000000000272b	movq	%rax, (%r14)
000000000000272e	xorl	%ebx, %ebx
0000000000002730	jmp	0x2711
_mach_make_memory_entry_64:
0000000000002732	pushq	%rbp
0000000000002733	movq	%rsp, %rbp
0000000000002736	pushq	%r15
0000000000002738	pushq	%r14
000000000000273a	pushq	%rbx
000000000000273b	subq	$0x58, %rsp
000000000000273f	movq	%r8, %r14
0000000000002742	movq	%rsi, %r15
0000000000002745	leaq	-0x60(%rbp), %rbx
0000000000002749	movl	$0x1, 0x18(%rbx)
0000000000002750	movl	%r9d, 0x1c(%rbx)
0000000000002754	movl	$0x130000, 0x24(%rbx)
000000000000275b	leaq	_NDR_record(%rip), %rax
0000000000002762	movq	(%rax), %rax
0000000000002765	movq	%rax, 0x28(%rbx)
0000000000002769	movq	(%rsi), %rax
000000000000276c	movq	%rax, 0x30(%rbx)
0000000000002770	movq	%rdx, 0x38(%rbx)
0000000000002774	movl	%ecx, 0x40(%rbx)
0000000000002777	movl	$0x80001513, (%rbx)
000000000000277d	movl	%edi, 0x8(%rbx)
0000000000002780	callq	_mig_get_reply_port
0000000000002785	movl	%eax, 0xc(%rbx)
0000000000002788	movabsq	$0x12d100000000, %rcx
0000000000002792	movq	%rcx, 0x10(%rbx)
0000000000002796	movl	$0x0, (%rsp)
000000000000279d	movl	$0x3, %esi
00000000000027a2	movl	$0x44, %edx
00000000000027a7	movl	$0x40, %ecx
00000000000027ac	xorl	%r9d, %r9d
00000000000027af	movq	%rbx, %rdi
00000000000027b2	movl	%eax, %r8d
00000000000027b5	callq	_mach_msg
00000000000027ba	movl	%eax, %ebx
00000000000027bc	leal	-0x10000002(%rbx), %eax
00000000000027c2	cmpl	$0xe, %eax
00000000000027c5	ja	0x27db
00000000000027c7	movl	$0x4003, %ecx
00000000000027cc	btl	%eax, %ecx
00000000000027cf	jae	0x27db
00000000000027d1	movl	-0x54(%rbp), %edi
00000000000027d4	callq	_mig_put_reply_port
00000000000027d9	jmp	0x282f
00000000000027db	testl	%ebx, %ebx
00000000000027dd	jne	0x2810
00000000000027df	movl	-0x4c(%rbp), %eax
00000000000027e2	cmpl	$0x47, %eax
00000000000027e5	je	0x281a
00000000000027e7	cmpl	$0x1335, %eax
00000000000027ec	jne	0x2821
00000000000027ee	cmpl	$0x0, -0x60(%rbp)
00000000000027f2	movl	-0x5c(%rbp), %eax
00000000000027f5	movl	$0xfffffed4, %ebx
00000000000027fa	js	0x283c
00000000000027fc	cmpl	$0x24, %eax
00000000000027ff	jne	0x2826
0000000000002801	movl	-0x40(%rbp), %eax
0000000000002804	testl	%eax, %eax
0000000000002806	movl	$0xfffffed4, %ebx
000000000000280b	cmovnel	%eax, %ebx
000000000000280e	jmp	0x2826
0000000000002810	movl	-0x54(%rbp), %edi
0000000000002813	callq	_mig_dealloc_reply_port
0000000000002818	jmp	0x282f
000000000000281a	movl	$0xfffffecc, %ebx
000000000000281f	jmp	0x2826
0000000000002821	movl	$0xfffffed3, %ebx
0000000000002826	leaq	-0x60(%rbp), %rdi
000000000000282a	callq	_mach_msg_destroy
000000000000282f	movl	%ebx, %eax
0000000000002831	addq	$0x58, %rsp
0000000000002835	popq	%rbx
0000000000002836	popq	%r14
0000000000002838	popq	%r15
000000000000283a	popq	%rbp
000000000000283b	retq
000000000000283c	cmpl	$0x38, %eax
000000000000283f	jne	0x2826
0000000000002841	cmpl	$0x1, -0x48(%rbp)
0000000000002845	jne	0x2826
0000000000002847	movl	$0xffff0000, %eax
000000000000284c	andl	-0x3c(%rbp), %eax
000000000000284f	cmpl	$0x110000, %eax
0000000000002854	jne	0x2826
0000000000002856	movq	-0x30(%rbp), %rax
000000000000285a	movq	%rax, (%r15)
000000000000285d	movl	-0x44(%rbp), %eax
0000000000002860	movl	%eax, (%r14)
0000000000002863	xorl	%ebx, %ebx
0000000000002865	jmp	0x282f
_mach_timebase_info:
0000000000002867	pushq	%rbp
0000000000002868	movq	%rsp, %rbp
000000000000286b	pushq	%rbx
000000000000286c	pushq	%rax
000000000000286d	movq	%rdi, %rbx
0000000000002870	movl	_mach_timebase_info.cached_info(%rip), %eax
0000000000002876	testl	%eax, %eax
0000000000002878	je	0x2884
000000000000287a	movl	0x2943c(%rip), %ecx
0000000000002880	testl	%ecx, %ecx
0000000000002882	jne	0x28a0
0000000000002884	leaq	_mach_timebase_info.cached_info(%rip), %rdi
000000000000288b	callq	_mach_timebase_info_trap
0000000000002890	testl	%eax, %eax
0000000000002892	jne	0x28a7
0000000000002894	movl	_mach_timebase_info.cached_info(%rip), %eax
000000000000289a	movl	0x2941c(%rip), %ecx
00000000000028a0	movl	%eax, (%rbx)
00000000000028a2	movl	%ecx, 0x4(%rbx)
00000000000028a5	xorl	%eax, %eax
00000000000028a7	addq	$0x8, %rsp
00000000000028ab	popq	%rbx
00000000000028ac	popq	%rbp
00000000000028ad	retq
_mach_approximate_time:
00000000000028ae	movabsq	$0x7fffffe00080, %rax
00000000000028b8	cmpb	$0x0, 0x8(%rax)
00000000000028bc	je	_mach_absolute_time
00000000000028c2	movq	(%rax), %rax
00000000000028c5	retq
_mig_get_special_reply_port:
00000000000028c6	movl	%gs:0x40, %eax
00000000000028ce	leal	0x1(%rax), %ecx
00000000000028d1	movl	$0x1, %edx
00000000000028d6	cmpl	%edx, %ecx
00000000000028d8	ja	0x28ef
00000000000028da	pushq	%rbp
00000000000028db	movq	%rsp, %rbp
00000000000028de	callq	_thread_get_special_reply_port
00000000000028e3	movl	%eax, %ecx
00000000000028e5	movq	%rcx, %gs:0x40
00000000000028ee	popq	%rbp
00000000000028ef	retq
_mig_strncpy_zerofill:
00000000000028f0	xorl	%eax, %eax
00000000000028f2	testq	%rdi, %rdi
00000000000028f5	je	0x2955
00000000000028f7	testl	%edx, %edx
00000000000028f9	jle	0x2955
00000000000028fb	xorl	%r10d, %r10d
00000000000028fe	testq	%rsi, %rsi
0000000000002901	sete	%r10b
0000000000002905	xorl	%eax, %eax
0000000000002907	cmpl	$0x2, %edx
000000000000290a	jl	0x294c
000000000000290c	pushq	%rbx
000000000000290d	leal	-0x2(%rdx), %r8d
0000000000002911	incq	%r8
0000000000002914	leal	-0x1(%rdx), %r9d
0000000000002918	xorl	%ecx, %ecx
000000000000291a	xorl	%eax, %eax
000000000000291c	leaq	0x1(%rcx), %r11
0000000000002920	testl	%r10d, %r10d
0000000000002923	je	0x292b
0000000000002925	movb	$0x0, (%rdi,%rcx)
0000000000002929	jmp	0x2940
000000000000292b	movb	(%rsi), %bl
000000000000292d	incq	%rsi
0000000000002930	movb	%bl, (%rdi,%rcx)
0000000000002933	xorl	%r10d, %r10d
0000000000002936	testb	%bl, %bl
0000000000002938	sete	%r10b
000000000000293c	cmovel	%r11d, %eax
0000000000002940	movq	%r11, %rcx
0000000000002943	cmpl	%r11d, %r9d
0000000000002946	jne	0x291c
0000000000002948	addq	%r8, %rdi
000000000000294b	popq	%rbx
000000000000294c	movb	$0x0, (%rdi)
000000000000294f	testl	%r10d, %r10d
0000000000002952	cmovel	%edx, %eax
0000000000002955	retq
0000000000002956	nop
0000000000002957	nop
___shm_open:
_shm_open:
0000000000002958	movl	$0x200010a, %eax
000000000000295d	movq	%rcx, %r10
0000000000002960	syscall
0000000000002962	jae	0x296c
0000000000002964	movq	%rax, %rdi
0000000000002967	jmp	_cerror_nocancel
000000000000296c	retq
_mmap:
000000000000296d	pushq	%rbp
000000000000296e	movq	%rsp, %rbp
0000000000002971	pushq	%r15
0000000000002973	pushq	%r14
0000000000002975	pushq	%r12
0000000000002977	pushq	%rbx
0000000000002978	testl	$0xfff, %r9d
000000000000297f	je	0x299e
0000000000002981	movl	$0x16, %edi
0000000000002986	callq	_cerror_nocancel
000000000000298b	movq	$-0x1, %rbx
0000000000002992	movq	%rbx, %rax
0000000000002995	popq	%rbx
0000000000002996	popq	%r12
0000000000002998	popq	%r14
000000000000299a	popq	%r15
000000000000299c	popq	%rbp
000000000000299d	retq
000000000000299e	movl	%r8d, %r15d
00000000000029a1	movl	%ecx, %r12d
00000000000029a4	movq	%rsi, %r14
00000000000029a7	testb	$0x2, %r12b
00000000000029ab	jne	0x29bc
00000000000029ad	testq	%r14, %r14
00000000000029b0	je	0x2981
00000000000029b2	movl	%r12d, %eax
00000000000029b5	andl	$0x1, %eax
00000000000029b8	jne	0x29c1
00000000000029ba	jmp	0x2981
00000000000029bc	testq	%r14, %r14
00000000000029bf	je	0x2981
00000000000029c1	movq	%r14, %rsi
00000000000029c4	movl	%r12d, %ecx
00000000000029c7	movl	%r15d, %r8d
00000000000029ca	callq	___mmap
00000000000029cf	movq	%rax, %rbx
00000000000029d2	leaq	___syscall_logger(%rip), %rax
00000000000029d9	movq	(%rax), %rax
00000000000029dc	testq	%rax, %rax
00000000000029df	je	0x2992
00000000000029e1	andl	$0xff000000, %r15d
00000000000029e8	orl	$0x10, %r15d
00000000000029ec	btl	$0xc, %r12d
00000000000029f1	movl	$0x90, %edi
00000000000029f6	cmovbl	%r15d, %edi
00000000000029fa	leaq	_mach_task_self_(%rip), %rcx
0000000000002a01	movl	(%rcx), %esi
0000000000002a03	xorl	%ecx, %ecx
0000000000002a05	xorl	%r9d, %r9d
0000000000002a08	movq	%r14, %rdx
0000000000002a0b	movq	%rbx, %r8
0000000000002a0e	callq	*%rax
0000000000002a10	jmp	0x2992
0000000000002a12	nop
0000000000002a13	nop
___mmap:
0000000000002a14	movl	$0x20000c5, %eax
0000000000002a19	movq	%rcx, %r10
0000000000002a1c	syscall
0000000000002a1e	jae	0x2a28
0000000000002a20	movq	%rax, %rdi
0000000000002a23	jmp	_cerror_nocancel
0000000000002a28	retq
0000000000002a29	nop
0000000000002a2a	nop
0000000000002a2b	nop
___openat:
_openat:
0000000000002a2c	movl	$0x20001cf, %eax
0000000000002a31	movq	%rcx, %r10
0000000000002a34	syscall
0000000000002a36	jae	0x2a40
0000000000002a38	movq	%rax, %rdi
0000000000002a3b	jmp	_cerror
0000000000002a40	retq
_fcntl:
0000000000002a41	pushq	%rbp
0000000000002a42	movq	%rsp, %rbp
0000000000002a45	subq	$0xd0, %rsp
0000000000002a4c	testb	%al, %al
0000000000002a4e	je	0x2a76
0000000000002a50	movaps	%xmm0, -0xa0(%rbp)
0000000000002a57	movaps	%xmm1, -0x90(%rbp)
0000000000002a5e	movaps	%xmm2, -0x80(%rbp)
0000000000002a62	movaps	%xmm3, -0x70(%rbp)
0000000000002a66	movaps	%xmm4, -0x60(%rbp)
0000000000002a6a	movaps	%xmm5, -0x50(%rbp)
0000000000002a6e	movaps	%xmm6, -0x40(%rbp)
0000000000002a72	movaps	%xmm7, -0x30(%rbp)
0000000000002a76	leaq	-0xd0(%rbp), %rax
0000000000002a7d	movq	%r9, 0x28(%rax)
0000000000002a81	movq	%r8, 0x20(%rax)
0000000000002a85	movq	%rcx, 0x18(%rax)
0000000000002a89	movq	%rdx, 0x10(%rax)
0000000000002a8d	movq	%rax, -0x10(%rbp)
0000000000002a91	leaq	0x10(%rbp), %rax
0000000000002a95	movq	%rax, -0x18(%rbp)
0000000000002a99	movabsq	$0x3000000010, %rax
0000000000002aa3	movq	%rax, -0x20(%rbp)
0000000000002aa7	leal	-0x2a(%rsi), %eax
0000000000002aaa	cmpl	$0x3a, %eax
0000000000002aad	ja	0x2af5
0000000000002aaf	movabsq	$0x79f0212618ac587, %rcx
0000000000002ab9	btq	%rax, %rcx
0000000000002abd	jae	0x2af5
0000000000002abf	movslq	-0x20(%rbp), %rcx
0000000000002ac3	cmpq	$0x28, %rcx
0000000000002ac7	ja	0x2ad8
0000000000002ac9	movq	%rcx, %rax
0000000000002acc	addq	-0x10(%rbp), %rax
0000000000002ad0	leal	0x8(%rcx), %ecx
0000000000002ad3	movl	%ecx, -0x20(%rbp)
0000000000002ad6	jmp	0x2ae4
0000000000002ad8	movq	-0x18(%rbp), %rax
0000000000002adc	leaq	0x8(%rax), %rcx
0000000000002ae0	movq	%rcx, -0x18(%rbp)
0000000000002ae4	movq	(%rax), %rdx
0000000000002ae7	callq	___fcntl
0000000000002aec	addq	$0xd0, %rsp
0000000000002af3	popq	%rbp
0000000000002af4	retq
0000000000002af5	leal	-0x7(%rsi), %eax
0000000000002af8	cmpl	$0x4, %eax
0000000000002afb	jb	0x2abf
0000000000002afd	movslq	-0x20(%rbp), %rcx
0000000000002b01	cmpq	$0x28, %rcx
0000000000002b05	ja	0x2b16
0000000000002b07	movq	%rcx, %rax
0000000000002b0a	addq	-0x10(%rbp), %rax
0000000000002b0e	leal	0x8(%rcx), %ecx
0000000000002b11	movl	%ecx, -0x20(%rbp)
0000000000002b14	jmp	0x2b22
0000000000002b16	movq	-0x18(%rbp), %rax
0000000000002b1a	leaq	0x8(%rax), %rcx
0000000000002b1e	movq	%rcx, -0x18(%rbp)
0000000000002b22	movslq	(%rax), %rdx
0000000000002b25	jmp	0x2ae7
0000000000002b27	nop
___fcntl:
0000000000002b28	movl	$0x200005c, %eax
0000000000002b2d	movq	%rcx, %r10
0000000000002b30	syscall
0000000000002b32	jae	0x2b3c
0000000000002b34	movq	%rax, %rdi
0000000000002b37	jmp	_cerror
0000000000002b3c	retq
_csr_check:
0000000000002b3d	pushq	%rbp
0000000000002b3e	movq	%rsp, %rbp
0000000000002b41	subq	$0x10, %rsp
0000000000002b45	leaq	-0x4(%rbp), %rsi
0000000000002b49	movl	%edi, (%rsi)
0000000000002b4b	xorl	%edi, %edi
0000000000002b4d	movl	$0x4, %edx
0000000000002b52	callq	___csrctl
0000000000002b57	addq	$0x10, %rsp
0000000000002b5b	popq	%rbp
0000000000002b5c	retq
0000000000002b5d	nop
0000000000002b5e	nop
0000000000002b5f	nop
___csrctl:
0000000000002b60	movl	$0x20001e3, %eax
0000000000002b65	movq	%rcx, %r10
0000000000002b68	syscall
0000000000002b6a	jae	0x2b74
0000000000002b6c	movq	%rax, %rdi
0000000000002b6f	jmp	_cerror_nocancel
0000000000002b74	retq
_mach_continuous_time:
0000000000002b75	pushq	%rbp
0000000000002b76	movq	%rsp, %rbp
0000000000002b79	pushq	%rbx
0000000000002b7a	pushq	%rax
0000000000002b7b	leaq	-0x10(%rbp), %rbx
0000000000002b7f	xorl	%edi, %edi
0000000000002b81	movq	%rbx, %rsi
0000000000002b84	callq	__mach_continuous_time
0000000000002b89	movq	(%rbx), %rax
0000000000002b8c	addq	$0x8, %rsp
0000000000002b90	popq	%rbx
0000000000002b91	popq	%rbp
0000000000002b92	retq
_munmap:
0000000000002b93	pushq	%rbp
0000000000002b94	movq	%rsp, %rbp
0000000000002b97	pushq	%r14
0000000000002b99	pushq	%rbx
0000000000002b9a	movq	%rsi, %r14
0000000000002b9d	movq	%rdi, %rbx
0000000000002ba0	leaq	___syscall_logger(%rip), %rax
0000000000002ba7	movq	(%rax), %rax
0000000000002baa	testq	%rax, %rax
0000000000002bad	je	0x2bcb
0000000000002baf	leaq	_mach_task_self_(%rip), %rcx
0000000000002bb6	movl	(%rcx), %esi
0000000000002bb8	movl	$0x20, %edi
0000000000002bbd	xorl	%r8d, %r8d
0000000000002bc0	xorl	%r9d, %r9d
0000000000002bc3	movq	%rbx, %rdx
0000000000002bc6	movq	%r14, %rcx
0000000000002bc9	callq	*%rax
0000000000002bcb	movq	%rbx, %rdi
0000000000002bce	movq	%r14, %rsi
0000000000002bd1	popq	%rbx
0000000000002bd2	popq	%r14
0000000000002bd4	popq	%rbp
0000000000002bd5	jmp	___munmap
0000000000002bda	nop
0000000000002bdb	nop
___munmap:
0000000000002bdc	movl	$0x2000049, %eax
0000000000002be1	movq	%rcx, %r10
0000000000002be4	syscall
0000000000002be6	jae	0x2bf0
0000000000002be8	movq	%rax, %rdi
0000000000002beb	jmp	_cerror_nocancel
0000000000002bf0	retq
0000000000002bf1	nop
0000000000002bf2	nop
0000000000002bf3	nop
___workq_kernreturn:
0000000000002bf4	movl	$0x2000170, %eax
0000000000002bf9	movq	%rcx, %r10
0000000000002bfc	syscall
0000000000002bfe	jae	0x2c08
0000000000002c00	movq	%rax, %rdi
0000000000002c03	jmp	_cerror_nocancel
0000000000002c08	retq
0000000000002c09	nop
0000000000002c0a	nop
0000000000002c0b	nop
___workq_open:
0000000000002c0c	movl	$0x200016f, %eax
0000000000002c11	movq	%rcx, %r10
0000000000002c14	syscall
0000000000002c16	jae	0x2c20
0000000000002c18	movq	%rax, %rdi
0000000000002c1b	jmp	_cerror_nocancel
0000000000002c20	retq
0000000000002c21	nop
0000000000002c22	nop
0000000000002c23	nop
_kevent_qos:
0000000000002c24	movl	$0x2000176, %eax
0000000000002c29	movq	%rcx, %r10
0000000000002c2c	syscall
0000000000002c2e	jae	0x2c38
0000000000002c30	movq	%rax, %rdi
0000000000002c33	jmp	_cerror_nocancel
0000000000002c38	retq
_mach_port_allocate:
0000000000002c39	pushq	%rbp
0000000000002c3a	movq	%rsp, %rbp
0000000000002c3d	pushq	%r15
0000000000002c3f	pushq	%r14
0000000000002c41	pushq	%rbx
0000000000002c42	pushq	%rax
0000000000002c43	movq	%rdx, %r14
0000000000002c46	movl	%esi, %r15d
0000000000002c49	movl	%edi, %ebx
0000000000002c4b	callq	__kernelrpc_mach_port_allocate_trap
0000000000002c50	cmpl	$0x10000003, %eax
0000000000002c55	jne	0x2c6e
0000000000002c57	movl	%ebx, %edi
0000000000002c59	movl	%r15d, %esi
0000000000002c5c	movq	%r14, %rdx
0000000000002c5f	addq	$0x8, %rsp
0000000000002c63	popq	%rbx
0000000000002c64	popq	%r14
0000000000002c66	popq	%r15
0000000000002c68	popq	%rbp
0000000000002c69	jmp	__kernelrpc_mach_port_allocate
0000000000002c6e	addq	$0x8, %rsp
0000000000002c72	popq	%rbx
0000000000002c73	popq	%r14
0000000000002c75	popq	%r15
0000000000002c77	popq	%rbp
0000000000002c78	retq
0000000000002c79	nop
0000000000002c7a	nop
0000000000002c7b	nop
_kevent_id:
0000000000002c7c	movl	$0x2000177, %eax
0000000000002c81	movq	%rcx, %r10
0000000000002c84	syscall
0000000000002c86	jae	0x2c90
0000000000002c88	movq	%rax, %rdi
0000000000002c8b	jmp	_cerror_nocancel
0000000000002c90	retq
_mach_port_insert_right:
0000000000002c91	pushq	%rbp
0000000000002c92	movq	%rsp, %rbp
0000000000002c95	pushq	%r15
0000000000002c97	pushq	%r14
0000000000002c99	pushq	%r12
0000000000002c9b	pushq	%rbx
0000000000002c9c	movl	%ecx, %r14d
0000000000002c9f	movl	%edx, %r15d
0000000000002ca2	movl	%esi, %r12d
0000000000002ca5	movl	%edi, %ebx
0000000000002ca7	callq	__kernelrpc_mach_port_insert_right_trap
0000000000002cac	cmpl	$0x10000003, %eax
0000000000002cb1	jne	0x2ccb
0000000000002cb3	movl	%ebx, %edi
0000000000002cb5	movl	%r12d, %esi
0000000000002cb8	movl	%r15d, %edx
0000000000002cbb	movl	%r14d, %ecx
0000000000002cbe	popq	%rbx
0000000000002cbf	popq	%r12
0000000000002cc1	popq	%r14
0000000000002cc3	popq	%r15
0000000000002cc5	popq	%rbp
0000000000002cc6	jmp	__kernelrpc_mach_port_insert_right
0000000000002ccb	popq	%rbx
0000000000002ccc	popq	%r12
0000000000002cce	popq	%r14
0000000000002cd0	popq	%r15
0000000000002cd2	popq	%rbp
0000000000002cd3	retq
___thread_selfid:
0000000000002cd4	movl	$0x2000174, %eax
0000000000002cd9	movq	%rcx, %r10
0000000000002cdc	syscall
0000000000002cde	jae	0x2ce8
0000000000002ce0	movq	%rax, %rdi
0000000000002ce3	jmp	_cerror
0000000000002ce8	retq
0000000000002ce9	nop
0000000000002cea	nop
0000000000002ceb	nop
___bsdthread_ctl:
0000000000002cec	movl	$0x20001de, %eax
0000000000002cf1	movq	%rcx, %r10
0000000000002cf4	syscall
0000000000002cf6	jae	0x2d00
0000000000002cf8	movq	%rax, %rdi
0000000000002cfb	jmp	_cerror_nocancel
0000000000002d00	retq
_mach_get_times:
0000000000002d01	pushq	%rbp
0000000000002d02	movq	%rsp, %rbp
0000000000002d05	pushq	%r15
0000000000002d07	pushq	%r14
0000000000002d09	pushq	%r12
0000000000002d0b	pushq	%rbx
0000000000002d0c	subq	$0x30, %rsp
0000000000002d10	testq	%rdx, %rdx
0000000000002d13	je	0x2dc0
0000000000002d19	movq	%rdx, %r15
0000000000002d1c	movq	%rdi, -0x40(%rbp)
0000000000002d20	movq	%rsi, -0x48(%rbp)
0000000000002d24	leaq	-0x38(%rbp), %rbx
0000000000002d28	leaq	-0x28(%rbp), %r14
0000000000002d2c	callq	__mach_continuous_time_base
0000000000002d31	movq	%rax, %r12
0000000000002d34	movq	%rbx, %rdi
0000000000002d37	movq	%r14, %rsi
0000000000002d3a	callq	___commpage_gettimeofday_internal
0000000000002d3f	testl	%eax, %eax
0000000000002d41	je	0x2d6d
0000000000002d43	movq	$0x0, -0x28(%rbp)
0000000000002d4b	xorl	%esi, %esi
0000000000002d4d	leaq	-0x38(%rbp), %rdi
0000000000002d51	movq	%r14, %rdx
0000000000002d54	callq	___gettimeofday_with_mach
0000000000002d59	testl	%eax, %eax
0000000000002d5b	js	0x2dd1
0000000000002d5d	cmpq	$0x0, -0x28(%rbp)
0000000000002d62	jne	0x2d6d
0000000000002d64	callq	_mach_absolute_time
0000000000002d69	movq	%rax, -0x28(%rbp)
0000000000002d6d	callq	__mach_continuous_time_base
0000000000002d72	cmpq	%rax, %r12
0000000000002d75	leaq	-0x38(%rbp), %rbx
0000000000002d79	jne	0x2d2c
0000000000002d7b	movq	-0x40(%rbp), %rdx
0000000000002d7f	testq	%rdx, %rdx
0000000000002d82	movq	-0x48(%rbp), %rcx
0000000000002d86	je	0x2d8f
0000000000002d88	movq	-0x28(%rbp), %rax
0000000000002d8c	movq	%rax, (%rdx)
0000000000002d8f	testq	%rcx, %rcx
0000000000002d92	je	0x2d9b
0000000000002d94	addq	-0x28(%rbp), %r12
0000000000002d98	movq	%r12, (%rcx)
0000000000002d9b	movq	-0x38(%rbp), %rax
0000000000002d9f	movq	%rax, (%r15)
0000000000002da2	movslq	-0x30(%rbp), %rax
0000000000002da6	imulq	$0x3e8, %rax, %rax
0000000000002dad	movq	%rax, 0x8(%r15)
0000000000002db1	xorl	%eax, %eax
0000000000002db3	addq	$0x30, %rsp
0000000000002db7	popq	%rbx
0000000000002db8	popq	%r12
0000000000002dba	popq	%r14
0000000000002dbc	popq	%r15
0000000000002dbe	popq	%rbp
0000000000002dbf	retq
0000000000002dc0	addq	$0x30, %rsp
0000000000002dc4	popq	%rbx
0000000000002dc5	popq	%r12
0000000000002dc7	popq	%r14
0000000000002dc9	popq	%r15
0000000000002dcb	popq	%rbp
0000000000002dcc	jmp	__mach_continuous_time
0000000000002dd1	movl	$0x5, %eax
0000000000002dd6	jmp	0x2db3
__mach_continuous_time_base:
0000000000002dd8	movabsq	$0x7fffffe000c0, %rax
0000000000002de2	movq	(%rax), %rax
0000000000002de5	retq
_host_request_notification:
0000000000002de6	pushq	%rbp
0000000000002de7	movq	%rsp, %rbp
0000000000002dea	pushq	%rbx
0000000000002deb	subq	$0x48, %rsp
0000000000002def	leaq	-0x40(%rbp), %rbx
0000000000002df3	movl	$0x1, 0x18(%rbx)
0000000000002dfa	movl	%edx, 0x1c(%rbx)
0000000000002dfd	movl	$0x150000, 0x24(%rbx)
0000000000002e04	leaq	_NDR_record(%rip), %rax
0000000000002e0b	movq	(%rax), %rax
0000000000002e0e	movq	%rax, 0x28(%rbx)
0000000000002e12	movl	%esi, 0x30(%rbx)
0000000000002e15	movl	$0x80001513, (%rbx)
0000000000002e1b	movl	%edi, 0x8(%rbx)
0000000000002e1e	callq	_mig_get_reply_port
0000000000002e23	movl	%eax, 0xc(%rbx)
0000000000002e26	movabsq	$0xd900000000, %rcx
0000000000002e30	movq	%rcx, 0x10(%rbx)
0000000000002e34	movl	$0x0, (%rsp)
0000000000002e3b	movl	$0x3, %esi
0000000000002e40	movl	$0x34, %edx
0000000000002e45	movl	$0x2c, %ecx
0000000000002e4a	xorl	%r9d, %r9d
0000000000002e4d	movq	%rbx, %rdi
0000000000002e50	movl	%eax, %r8d
0000000000002e53	callq	_mach_msg
0000000000002e58	movl	%eax, %ebx
0000000000002e5a	leal	-0x10000002(%rbx), %eax
0000000000002e60	cmpl	$0xe, %eax
0000000000002e63	ja	0x2e79
0000000000002e65	movl	$0x4003, %ecx
0000000000002e6a	btl	%eax, %ecx
0000000000002e6d	jae	0x2e79
0000000000002e6f	movl	-0x34(%rbp), %edi
0000000000002e72	callq	_mig_put_reply_port
0000000000002e77	jmp	0x2ec7
0000000000002e79	testl	%ebx, %ebx
0000000000002e7b	jne	0x2ea8
0000000000002e7d	movl	-0x2c(%rbp), %eax
0000000000002e80	cmpl	$0x47, %eax
0000000000002e83	je	0x2eb2
0000000000002e85	cmpl	$0x13d, %eax
0000000000002e8a	jne	0x2eb9
0000000000002e8c	movl	$0xfffffed4, %ebx
0000000000002e91	cmpl	$0x0, -0x40(%rbp)
0000000000002e95	js	0x2ebe
0000000000002e97	cmpl	$0x24, -0x3c(%rbp)
0000000000002e9b	jne	0x2ebe
0000000000002e9d	movl	-0x20(%rbp), %ebx
0000000000002ea0	testl	%ebx, %ebx
0000000000002ea2	jne	0x2ebe
0000000000002ea4	xorl	%ebx, %ebx
0000000000002ea6	jmp	0x2ec7
0000000000002ea8	movl	-0x34(%rbp), %edi
0000000000002eab	callq	_mig_dealloc_reply_port
0000000000002eb0	jmp	0x2ec7
0000000000002eb2	movl	$0xfffffecc, %ebx
0000000000002eb7	jmp	0x2ebe
0000000000002eb9	movl	$0xfffffed3, %ebx
0000000000002ebe	leaq	-0x40(%rbp), %rdi
0000000000002ec2	callq	_mach_msg_destroy
0000000000002ec7	movl	%ebx, %eax
0000000000002ec9	addq	$0x48, %rsp
0000000000002ecd	popq	%rbx
0000000000002ece	popq	%rbp
0000000000002ecf	retq
_stat64:
_stat$INODE64:
0000000000002ed0	movl	$0x2000152, %eax
0000000000002ed5	movq	%rcx, %r10
0000000000002ed8	syscall
0000000000002eda	jae	0x2ee4
0000000000002edc	movq	%rax, %rdi
0000000000002edf	jmp	_cerror_nocancel
0000000000002ee4	retq
0000000000002ee5	nop
0000000000002ee6	nop
0000000000002ee7	nop
_read:
0000000000002ee8	movl	$0x2000003, %eax
0000000000002eed	movq	%rcx, %r10
0000000000002ef0	syscall
0000000000002ef2	jae	0x2efc
0000000000002ef4	movq	%rax, %rdi
0000000000002ef7	jmp	_cerror
0000000000002efc	retq
0000000000002efd	nop
0000000000002efe	nop
0000000000002eff	nop
_fstatfs$INODE64:
_fstatfs64:
0000000000002f00	movl	$0x200015a, %eax
0000000000002f05	movq	%rcx, %r10
0000000000002f08	syscall
0000000000002f0a	jae	0x2f14
0000000000002f0c	movq	%rax, %rdi
0000000000002f0f	jmp	_cerror_nocancel
0000000000002f14	retq
0000000000002f15	nop
0000000000002f16	nop
0000000000002f17	nop
___getdirentries64:
0000000000002f18	movl	$0x2000158, %eax
0000000000002f1d	movq	%rcx, %r10
0000000000002f20	syscall
0000000000002f22	jae	0x2f2c
0000000000002f24	movq	%rax, %rdi
0000000000002f27	jmp	_cerror_nocancel
0000000000002f2c	retq
0000000000002f2d	nop
0000000000002f2e	nop
0000000000002f2f	nop
___sandbox_ms:
___mac_syscall:
0000000000002f30	movl	$0x200017d, %eax
0000000000002f35	movq	%rcx, %r10
0000000000002f38	syscall
0000000000002f3a	jae	0x2f44
0000000000002f3c	movq	%rax, %rdi
0000000000002f3f	jmp	_cerror_nocancel
0000000000002f44	retq
_mach_port_request_notification:
0000000000002f45	jmp	__kernelrpc_mach_port_request_notification
__kernelrpc_mach_port_request_notification:
0000000000002f4a	pushq	%rbp
0000000000002f4b	movq	%rsp, %rbp
0000000000002f4e	pushq	%rbx
0000000000002f4f	subq	$0x48, %rsp
0000000000002f53	leaq	-0x48(%rbp), %rbx
0000000000002f57	movl	$0x1, 0x18(%rbx)
0000000000002f5e	movl	%r8d, 0x1c(%rbx)
0000000000002f62	shll	$0x10, %r9d
0000000000002f66	andl	$0xff0000, %r9d
0000000000002f6d	movl	%r9d, 0x24(%rbx)
0000000000002f71	leaq	_NDR_record(%rip), %rax
0000000000002f78	movq	(%rax), %rax
0000000000002f7b	movq	%rax, 0x28(%rbx)
0000000000002f7f	movl	%esi, 0x30(%rbx)
0000000000002f82	movl	%edx, 0x34(%rbx)
0000000000002f85	movl	%ecx, 0x38(%rbx)
0000000000002f88	movl	$0x80001513, (%rbx)
0000000000002f8e	movl	%edi, 0x8(%rbx)
0000000000002f91	callq	_mig_get_reply_port
0000000000002f96	movl	%eax, 0xc(%rbx)
0000000000002f99	movabsq	$0xc8d00000000, %rcx
0000000000002fa3	movq	%rcx, 0x10(%rbx)
0000000000002fa7	movl	$0x0, (%rsp)
0000000000002fae	movl	$0x3, %esi
0000000000002fb3	movl	$0x3c, %edx
0000000000002fb8	movl	$0x30, %ecx
0000000000002fbd	xorl	%r9d, %r9d
0000000000002fc0	movq	%rbx, %rdi
0000000000002fc3	movl	%eax, %r8d
0000000000002fc6	callq	_mach_msg
0000000000002fcb	movl	%eax, %ebx
0000000000002fcd	leal	-0x10000002(%rbx), %eax
0000000000002fd3	cmpl	$0xe, %eax
0000000000002fd6	ja	0x2fec
0000000000002fd8	movl	$0x4003, %ecx
0000000000002fdd	btl	%eax, %ecx
0000000000002fe0	jae	0x2fec
0000000000002fe2	movl	-0x3c(%rbp), %edi
0000000000002fe5	callq	_mig_put_reply_port
0000000000002fea	jmp	0x3040
0000000000002fec	testl	%ebx, %ebx
0000000000002fee	jne	0x3021
0000000000002ff0	movl	-0x34(%rbp), %eax
0000000000002ff3	cmpl	$0x47, %eax
0000000000002ff6	je	0x302b
0000000000002ff8	cmpl	$0xcf1, %eax
0000000000002ffd	jne	0x3032
0000000000002fff	cmpl	$0x0, -0x48(%rbp)
0000000000003003	movl	-0x44(%rbp), %eax
0000000000003006	movl	$0xfffffed4, %ebx
000000000000300b	js	0x3049
000000000000300d	cmpl	$0x24, %eax
0000000000003010	jne	0x3037
0000000000003012	movl	-0x28(%rbp), %eax
0000000000003015	testl	%eax, %eax
0000000000003017	movl	$0xfffffed4, %ebx
000000000000301c	cmovnel	%eax, %ebx
000000000000301f	jmp	0x3037
0000000000003021	movl	-0x3c(%rbp), %edi
0000000000003024	callq	_mig_dealloc_reply_port
0000000000003029	jmp	0x3040
000000000000302b	movl	$0xfffffecc, %ebx
0000000000003030	jmp	0x3037
0000000000003032	movl	$0xfffffed3, %ebx
0000000000003037	leaq	-0x48(%rbp), %rdi
000000000000303b	callq	_mach_msg_destroy
0000000000003040	movl	%ebx, %eax
0000000000003042	addq	$0x48, %rsp
0000000000003046	popq	%rbx
0000000000003047	popq	%rbp
0000000000003048	retq
0000000000003049	cmpl	$0x28, %eax
000000000000304c	jne	0x3037
000000000000304e	cmpl	$0x1, -0x30(%rbp)
0000000000003052	jne	0x3037
0000000000003054	movl	$0xffff0000, %eax
0000000000003059	andl	-0x24(%rbp), %eax
000000000000305c	cmpl	$0x120000, %eax
0000000000003061	jne	0x3037
0000000000003063	movq	0x10(%rbp), %rax
0000000000003067	movl	-0x2c(%rbp), %ecx
000000000000306a	movl	%ecx, (%rax)
000000000000306c	xorl	%ebx, %ebx
000000000000306e	jmp	0x3040
_mach_voucher_extract_attr_recipe:
0000000000003070	pushq	%rbp
0000000000003071	movq	%rsp, %rbp
0000000000003074	pushq	%r15
0000000000003076	pushq	%r14
0000000000003078	pushq	%r12
000000000000307a	pushq	%rbx
000000000000307b	movq	%rcx, %r14
000000000000307e	movq	%rdx, %r15
0000000000003081	movl	%esi, %r12d
0000000000003084	movl	%edi, %ebx
0000000000003086	callq	_mach_voucher_extract_attr_recipe_trap
000000000000308b	cmpl	$0x10000003, %eax
0000000000003090	jne	0x30aa
0000000000003092	movl	%ebx, %edi
0000000000003094	movl	%r12d, %esi
0000000000003097	movq	%r15, %rdx
000000000000309a	movq	%r14, %rcx
000000000000309d	popq	%rbx
000000000000309e	popq	%r12
00000000000030a0	popq	%r14
00000000000030a2	popq	%r15
00000000000030a4	popq	%rbp
00000000000030a5	jmp	__kernelrpc_mach_voucher_extract_attr_recipe
00000000000030aa	popq	%rbx
00000000000030ab	popq	%r12
00000000000030ad	popq	%r14
00000000000030af	popq	%r15
00000000000030b1	popq	%rbp
00000000000030b2	retq
_mach_voucher_deallocate:
00000000000030b3	movl	%edi, %eax
00000000000030b5	leaq	_mach_task_self_(%rip), %rcx
00000000000030bc	movl	(%rcx), %edi
00000000000030be	movl	%eax, %esi
00000000000030c0	jmp	_mach_port_deallocate
00000000000030c5	nop
00000000000030c6	nop
00000000000030c7	nop
_mkdir:
00000000000030c8	movl	$0x2000088, %eax
00000000000030cd	movq	%rcx, %r10
00000000000030d0	syscall
00000000000030d2	jae	0x30dc
00000000000030d4	movq	%rax, %rdi
00000000000030d7	jmp	_cerror_nocancel
00000000000030dc	retq
00000000000030dd	nop
00000000000030de	nop
00000000000030df	nop
_getattrlist:
___getattrlist:
00000000000030e0	movl	$0x20000dc, %eax
00000000000030e5	movq	%rcx, %r10
00000000000030e8	syscall
00000000000030ea	jae	0x30f4
00000000000030ec	movq	%rax, %rdi
00000000000030ef	jmp	_cerror_nocancel
00000000000030f4	retq
00000000000030f5	nop
00000000000030f6	nop
00000000000030f7	nop
_readlink:
00000000000030f8	movl	$0x200003a, %eax
00000000000030fd	movq	%rcx, %r10
0000000000003100	syscall
0000000000003102	jae	0x310c
0000000000003104	movq	%rax, %rdi
0000000000003107	jmp	_cerror_nocancel
000000000000310c	retq
000000000000310d	nop
000000000000310e	nop
000000000000310f	nop
___lseek:
_lseek:
0000000000003110	movl	$0x20000c7, %eax
0000000000003115	movq	%rcx, %r10
0000000000003118	syscall
000000000000311a	jae	0x3124
000000000000311c	movq	%rax, %rdi
000000000000311f	jmp	_cerror
0000000000003124	retq
0000000000003125	nop
0000000000003126	nop
0000000000003127	nop
_posix_madvise:
_madvise:
0000000000003128	movl	$0x200004b, %eax
000000000000312d	movq	%rcx, %r10
0000000000003130	syscall
0000000000003132	jae	0x313c
0000000000003134	movq	%rax, %rdi
0000000000003137	jmp	_cerror_nocancel
000000000000313c	retq
_vm_deallocate:
000000000000313d	jmp	_mach_vm_deallocate
_mach_vm_deallocate:
0000000000003142	pushq	%rbp
0000000000003143	movq	%rsp, %rbp
0000000000003146	pushq	%r15
0000000000003148	pushq	%r14
000000000000314a	pushq	%rbx
000000000000314b	pushq	%rax
000000000000314c	movq	%rdx, %r14
000000000000314f	movq	%rsi, %r15
0000000000003152	movl	%edi, %ebx
0000000000003154	movq	___syscall_logger(%rip), %rax
000000000000315b	testq	%rax, %rax
000000000000315e	je	0x3175
0000000000003160	movl	%ebx, %esi
0000000000003162	movl	$0x20, %edi
0000000000003167	xorl	%r8d, %r8d
000000000000316a	xorl	%r9d, %r9d
000000000000316d	movq	%r15, %rdx
0000000000003170	movq	%r14, %rcx
0000000000003173	callq	*%rax
0000000000003175	movl	%ebx, %edi
0000000000003177	movq	%r15, %rsi
000000000000317a	movq	%r14, %rdx
000000000000317d	callq	__kernelrpc_mach_vm_deallocate_trap
0000000000003182	cmpl	$0x10000003, %eax
0000000000003187	jne	0x31a0
0000000000003189	movl	%ebx, %edi
000000000000318b	movq	%r15, %rsi
000000000000318e	movq	%r14, %rdx
0000000000003191	addq	$0x8, %rsp
0000000000003195	popq	%rbx
0000000000003196	popq	%r14
0000000000003198	popq	%r15
000000000000319a	popq	%rbp
000000000000319b	jmp	__kernelrpc_mach_vm_deallocate
00000000000031a0	addq	$0x8, %rsp
00000000000031a4	popq	%rbx
00000000000031a5	popq	%r14
00000000000031a7	popq	%r15
00000000000031a9	popq	%rbp
00000000000031aa	retq
_mach_vm_protect:
00000000000031ab	pushq	%rbp
00000000000031ac	movq	%rsp, %rbp
00000000000031af	pushq	%r15
00000000000031b1	pushq	%r14
00000000000031b3	pushq	%r13
00000000000031b5	pushq	%r12
00000000000031b7	pushq	%rbx
00000000000031b8	pushq	%rax
00000000000031b9	movl	%r8d, %r14d
00000000000031bc	movl	%ecx, %r15d
00000000000031bf	movq	%rdx, %r12
00000000000031c2	movq	%rsi, %r13
00000000000031c5	movl	%edi, %ebx
00000000000031c7	callq	__kernelrpc_mach_vm_protect_trap
00000000000031cc	cmpl	$0x10000003, %eax
00000000000031d1	jne	0x31f4
00000000000031d3	movl	%ebx, %edi
00000000000031d5	movq	%r13, %rsi
00000000000031d8	movq	%r12, %rdx
00000000000031db	movl	%r15d, %ecx
00000000000031de	movl	%r14d, %r8d
00000000000031e1	addq	$0x8, %rsp
00000000000031e5	popq	%rbx
00000000000031e6	popq	%r12
00000000000031e8	popq	%r13
00000000000031ea	popq	%r14
00000000000031ec	popq	%r15
00000000000031ee	popq	%rbp
00000000000031ef	jmp	__kernelrpc_mach_vm_protect
00000000000031f4	addq	$0x8, %rsp
00000000000031f8	popq	%rbx
00000000000031f9	popq	%r12
00000000000031fb	popq	%r13
00000000000031fd	popq	%r14
00000000000031ff	popq	%r15
0000000000003201	popq	%rbp
0000000000003202	retq
0000000000003203	nop
___bsdthread_create:
0000000000003204	movl	$0x2000168, %eax
0000000000003209	movq	%rcx, %r10
000000000000320c	syscall
000000000000320e	jae	0x3218
0000000000003210	movq	%rax, %rdi
0000000000003213	jmp	_cerror_nocancel
0000000000003218	retq
_proc_setpcontrol:
0000000000003219	pushq	%rbp
000000000000321a	movq	%rsp, %rbp
000000000000321d	pushq	%r14
000000000000321f	pushq	%rbx
0000000000003220	movl	$0x16, %r14d
0000000000003226	cmpl	$0x3, %edi
0000000000003229	ja	0x325c
000000000000322b	movl	%edi, %ebx
000000000000322d	callq	_getpid
0000000000003232	movslq	%ebx, %rcx
0000000000003235	xorl	%r14d, %r14d
0000000000003238	movl	$0x5, %edi
000000000000323d	movl	$0x1, %edx
0000000000003242	xorl	%r8d, %r8d
0000000000003245	xorl	%r9d, %r9d
0000000000003248	movl	%eax, %esi
000000000000324a	callq	___proc_info
000000000000324f	cmpl	$-0x1, %eax
0000000000003252	jne	0x325c
0000000000003254	callq	___error
0000000000003259	movl	(%rax), %r14d
000000000000325c	movl	%r14d, %eax
000000000000325f	popq	%rbx
0000000000003260	popq	%r14
0000000000003262	popq	%rbp
0000000000003263	retq
_setpriority:
0000000000003264	pushq	%rbp
0000000000003265	movq	%rsp, %rbp
0000000000003268	pushq	%r14
000000000000326a	pushq	%rbx
000000000000326b	movl	%edi, %ebx
000000000000326d	callq	___setpriority
0000000000003272	movl	%eax, %r14d
0000000000003275	cmpl	$0x3, %ebx
0000000000003278	jne	0x328a
000000000000327a	cmpl	$-0x2, %r14d
000000000000327e	jne	0x328a
0000000000003280	xorl	%r14d, %r14d
0000000000003283	xorl	%edi, %edi
0000000000003285	callq	__pthread_clear_qos_tsd
000000000000328a	movl	%r14d, %eax
000000000000328d	popq	%rbx
000000000000328e	popq	%r14
0000000000003290	popq	%rbp
0000000000003291	retq
0000000000003292	nop
0000000000003293	nop
___setpriority:
0000000000003294	movl	$0x2000060, %eax
0000000000003299	movq	%rcx, %r10
000000000000329c	syscall
000000000000329e	jae	0x32a8
00000000000032a0	movq	%rax, %rdi
00000000000032a3	jmp	_cerror_nocancel
00000000000032a8	retq
_vm_region_64:
00000000000032a9	pushq	%rbp
00000000000032aa	movq	%rsp, %rbp
00000000000032ad	pushq	%r15
00000000000032af	pushq	%r14
00000000000032b1	pushq	%r13
00000000000032b3	pushq	%r12
00000000000032b5	pushq	%rbx
00000000000032b6	subq	$0x88, %rsp
00000000000032bd	movq	%r9, %r15
00000000000032c0	movq	%rsi, %r12
00000000000032c3	leaq	_NDR_record(%rip), %rax
00000000000032ca	movq	(%rax), %rax
00000000000032cd	leaq	-0xa0(%rbp), %rbx
00000000000032d4	movq	%rax, 0x18(%rbx)
00000000000032d8	movq	(%rsi), %rax
00000000000032db	movq	%rax, 0x20(%rbx)
00000000000032df	movl	%ecx, 0x28(%rbx)
00000000000032e2	movl	(%r9), %eax
00000000000032e5	movl	$0xa, %ecx
00000000000032ea	cmpl	%ecx, %eax
00000000000032ec	cmovbl	%eax, %ecx
00000000000032ef	movq	%r8, %r14
00000000000032f2	movq	%rdx, %r13
00000000000032f5	movl	%ecx, 0x2c(%rbx)
00000000000032f8	movl	$0x1513, (%rbx)
00000000000032fe	movl	%edi, 0x8(%rbx)
0000000000003301	callq	_mig_get_reply_port
0000000000003306	movl	%eax, 0xc(%rbx)
0000000000003309	movabsq	$0x12d000000000, %rcx
0000000000003313	movq	%rcx, 0x10(%rbx)
0000000000003317	movl	$0x0, (%rsp)
000000000000331e	movl	$0x3, %esi
0000000000003323	movl	$0x30, %edx
0000000000003328	movl	$0x74, %ecx
000000000000332d	xorl	%r9d, %r9d
0000000000003330	movq	%rbx, %rdi
0000000000003333	movl	%eax, %r8d
0000000000003336	callq	_mach_msg
000000000000333b	movl	%eax, %ebx
000000000000333d	leal	-0x10000002(%rbx), %eax
0000000000003343	cmpl	$0xe, %eax
0000000000003346	ja	0x335f
0000000000003348	movl	$0x4003, %ecx
000000000000334d	btl	%eax, %ecx
0000000000003350	jae	0x335f
0000000000003352	movl	-0x94(%rbp), %edi
0000000000003358	callq	_mig_put_reply_port
000000000000335d	jmp	0x33c2
000000000000335f	testl	%ebx, %ebx
0000000000003361	jne	0x339d
0000000000003363	movl	-0x8c(%rbp), %eax
0000000000003369	cmpl	$0x47, %eax
000000000000336c	je	0x33aa
000000000000336e	cmpl	$_swtch, %eax
0000000000003373	jne	0x33b1
0000000000003375	cmpl	$0x0, -0xa0(%rbp)
000000000000337c	movl	-0x9c(%rbp), %eax
0000000000003382	js	0x33d6
0000000000003384	movl	$0xfffffed4, %ebx
0000000000003389	cmpl	$0x24, %eax
000000000000338c	jne	0x33b6
000000000000338e	movl	-0x80(%rbp), %eax
0000000000003391	testl	%eax, %eax
0000000000003393	movl	$0xfffffed4, %ebx
0000000000003398	cmovnel	%eax, %ebx
000000000000339b	jmp	0x33b6
000000000000339d	movl	-0x94(%rbp), %edi
00000000000033a3	callq	_mig_dealloc_reply_port
00000000000033a8	jmp	0x33c2
00000000000033aa	movl	$0xfffffecc, %ebx
00000000000033af	jmp	0x33b6
00000000000033b1	movl	$0xfffffed3, %ebx
00000000000033b6	leaq	-0xa0(%rbp), %rdi
00000000000033bd	callq	_mach_msg_destroy
00000000000033c2	movl	%ebx, %eax
00000000000033c4	addq	$0x88, %rsp
00000000000033cb	popq	%rbx
00000000000033cc	popq	%r12
00000000000033ce	popq	%r13
00000000000033d0	popq	%r14
00000000000033d2	popq	%r15
00000000000033d4	popq	%rbp
00000000000033d5	retq
00000000000033d6	leal	-0x44(%rax), %ecx
00000000000033d9	movl	$0xfffffed4, %ebx
00000000000033de	cmpl	$0x28, %ecx
00000000000033e1	ja	0x33b6
00000000000033e3	cmpl	$0x1, -0x88(%rbp)
00000000000033ea	jne	0x33b6
00000000000033ec	movl	$0xffff0000, %edx
00000000000033f1	andl	-0x7c(%rbp), %edx
00000000000033f4	cmpl	$0x110000, %edx
00000000000033fa	jne	0x33b6
00000000000033fc	movl	-0x60(%rbp), %edi
00000000000033ff	cmpl	$0xa, %edi
0000000000003402	ja	0x33b6
0000000000003404	shrl	$0x2, %ecx
0000000000003407	cmpl	%edi, %ecx
0000000000003409	jb	0x33b6
000000000000340b	leal	0x44(,%rdi,4), %ecx
0000000000003412	cmpl	%ecx, %eax
0000000000003414	jne	0x33b6
0000000000003416	leaq	-0x5c(%rbp), %rsi
000000000000341a	movq	-0x14(%rsi), %rax
000000000000341e	movq	%rax, (%r12)
0000000000003422	movq	-0xc(%rsi), %rax
0000000000003426	movq	%rax, (%r13)
000000000000342a	movl	(%r15), %edx
000000000000342d	cmpl	%edx, %edi
000000000000342f	jbe	0x344c
0000000000003431	shll	$0x2, %edx
0000000000003434	movq	%rdi, %rbx
0000000000003437	movq	%r14, %rdi
000000000000343a	callq	_memcpy
000000000000343f	movl	%ebx, (%r15)
0000000000003442	movl	$0xfffffecd, %ebx
0000000000003447	jmp	0x33c2
000000000000344c	movq	0x10(%rbp), %r12
0000000000003450	leal	(,%rdi,4), %eax
0000000000003457	movl	%eax, %edx
0000000000003459	movq	%rdi, %rbx
000000000000345c	movq	%r14, %rdi
000000000000345f	callq	_memcpy
0000000000003464	movl	%ebx, (%r15)
0000000000003467	movl	-0x84(%rbp), %eax
000000000000346d	movl	%eax, (%r12)
0000000000003471	xorl	%ebx, %ebx
0000000000003473	jmp	0x33c2
_vm_region_recurse_64:
0000000000003478	pushq	%rbp
0000000000003479	movq	%rsp, %rbp
000000000000347c	pushq	%r15
000000000000347e	pushq	%r14
0000000000003480	pushq	%r13
0000000000003482	pushq	%r12
0000000000003484	pushq	%rbx
0000000000003485	subq	$0xa8, %rsp
000000000000348c	movq	%r9, %r14
000000000000348f	movq	%rcx, %r12
0000000000003492	movq	%rsi, %r13
0000000000003495	leaq	_NDR_record(%rip), %rax
000000000000349c	movq	(%rax), %rax
000000000000349f	leaq	-0xc8(%rbp), %rbx
00000000000034a6	movq	%rax, 0x18(%rbx)
00000000000034aa	movq	(%rsi), %rax
00000000000034ad	movq	%rax, 0x20(%rbx)
00000000000034b1	movl	(%rcx), %eax
00000000000034b3	movl	%eax, 0x28(%rbx)
00000000000034b6	movl	(%r9), %eax
00000000000034b9	movl	$0x13, %ecx
00000000000034be	cmpl	%ecx, %eax
00000000000034c0	cmovbl	%eax, %ecx
00000000000034c3	movq	%r8, -0x30(%rbp)
00000000000034c7	movq	%rdx, -0x38(%rbp)
00000000000034cb	movl	%ecx, 0x2c(%rbx)
00000000000034ce	movl	$0x1513, (%rbx)
00000000000034d4	movl	%edi, 0x8(%rbx)
00000000000034d7	callq	_mig_get_reply_port
00000000000034dc	movl	%eax, 0xc(%rbx)
00000000000034df	movabsq	$0x12cf00000000, %rcx
00000000000034e9	movq	%rcx, 0x10(%rbx)
00000000000034ed	movl	$0x0, (%rsp)
00000000000034f4	movl	$0x3, %esi
00000000000034f9	movl	$0x30, %edx
00000000000034fe	movl	$0x90, %ecx
0000000000003503	xorl	%r9d, %r9d
0000000000003506	movq	%rbx, %rdi
0000000000003509	movl	%eax, %r8d
000000000000350c	callq	_mach_msg
0000000000003511	movl	%eax, %r15d
0000000000003514	leal	-0x10000002(%r15), %eax
000000000000351b	cmpl	$0xe, %eax
000000000000351e	ja	0x353a
0000000000003520	movl	$0x4003, %ecx
0000000000003525	btl	%eax, %ecx
0000000000003528	jae	0x353a
000000000000352a	movl	-0xbc(%rbp), %edi
0000000000003530	callq	_mig_put_reply_port
0000000000003535	jmp	0x3632
000000000000353a	testl	%r15d, %r15d
000000000000353d	jne	0x3592
000000000000353f	movl	-0xb4(%rbp), %eax
0000000000003545	cmpl	$0x47, %eax
0000000000003548	je	0x35a2
000000000000354a	cmpl	$0x1333, %eax
000000000000354f	jne	0x35aa
0000000000003551	cmpl	$0x0, -0xc8(%rbp)
0000000000003558	js	0x3620
000000000000355e	movl	-0xc4(%rbp), %eax
0000000000003564	leal	-0x3c(%rax), %ecx
0000000000003567	cmpl	$0x4d, %ecx
000000000000356a	jb	0x35b2
000000000000356c	movl	$0xfffffed4, %r15d
0000000000003572	cmpl	$0x24, %eax
0000000000003575	jne	0x3626
000000000000357b	movl	-0xa8(%rbp), %eax
0000000000003581	testl	%eax, %eax
0000000000003583	movl	$0xfffffed4, %r15d
0000000000003589	cmovnel	%eax, %r15d
000000000000358d	jmp	0x3626
0000000000003592	movl	-0xbc(%rbp), %edi
0000000000003598	callq	_mig_dealloc_reply_port
000000000000359d	jmp	0x3632
00000000000035a2	movl	$0xfffffecc, %r15d
00000000000035a8	jmp	0x3626
00000000000035aa	movl	$0xfffffed3, %r15d
00000000000035b0	jmp	0x3626
00000000000035b2	movl	-0xa8(%rbp), %r15d
00000000000035b9	testl	%r15d, %r15d
00000000000035bc	jne	0x3626
00000000000035be	movl	-0x90(%rbp), %ebx
00000000000035c4	cmpl	$0x13, %ebx
00000000000035c7	ja	0x3620
00000000000035c9	shrl	$0x2, %ecx
00000000000035cc	cmpl	%ebx, %ecx
00000000000035ce	jb	0x3620
00000000000035d0	leal	0x3c(,%rbx,4), %ecx
00000000000035d7	movl	$0xfffffed4, %r15d
00000000000035dd	cmpl	%ecx, %eax
00000000000035df	jne	0x3626
00000000000035e1	leaq	-0x8c(%rbp), %rsi
00000000000035e8	movq	-0x18(%rsi), %rax
00000000000035ec	movq	%rax, (%r13)
00000000000035f0	movq	-0x10(%rsi), %rax
00000000000035f4	movq	-0x38(%rbp), %rcx
00000000000035f8	movq	%rax, (%rcx)
00000000000035fb	movl	-0x8(%rsi), %eax
00000000000035fe	movl	%eax, (%r12)
0000000000003602	movl	(%r14), %edx
0000000000003605	cmpl	%edx, %ebx
0000000000003607	jbe	0x3647
0000000000003609	shll	$0x2, %edx
000000000000360c	movq	-0x30(%rbp), %rdi
0000000000003610	callq	_memcpy
0000000000003615	movl	%ebx, (%r14)
0000000000003618	movl	$0xfffffecd, %r15d
000000000000361e	jmp	0x3632
0000000000003620	movl	$0xfffffed4, %r15d
0000000000003626	leaq	-0xc8(%rbp), %rdi
000000000000362d	callq	_mach_msg_destroy
0000000000003632	movl	%r15d, %eax
0000000000003635	addq	$0xa8, %rsp
000000000000363c	popq	%rbx
000000000000363d	popq	%r12
000000000000363f	popq	%r13
0000000000003641	popq	%r14
0000000000003643	popq	%r15
0000000000003645	popq	%rbp
0000000000003646	retq
0000000000003647	leal	(,%rbx,4), %eax
000000000000364e	movl	%eax, %edx
0000000000003650	movq	-0x30(%rbp), %rdi
0000000000003654	callq	_memcpy
0000000000003659	movl	%ebx, (%r14)
000000000000365c	xorl	%r15d, %r15d
000000000000365f	jmp	0x3632
_mach_port_set_attributes:
0000000000003661	jmp	__kernelrpc_mach_port_set_attributes
__kernelrpc_mach_port_set_attributes:
0000000000003666	pushq	%rbp
0000000000003667	movq	%rsp, %rbp
000000000000366a	pushq	%r15
000000000000366c	pushq	%r14
000000000000366e	pushq	%rbx
000000000000366f	subq	$0x78, %rsp
0000000000003673	leaq	_NDR_record(%rip), %rax
000000000000367a	movq	(%rax), %rax
000000000000367d	movq	%rax, -0x70(%rbp)
0000000000003681	movl	%esi, -0x68(%rbp)
0000000000003684	movl	%edx, -0x64(%rbp)
0000000000003687	movl	$0xfffffecd, %r14d
000000000000368d	cmpl	$0x11, %r8d
0000000000003691	ja	0x3787
0000000000003697	movl	%r8d, %ebx
000000000000369a	movl	%edi, %r15d
000000000000369d	leaq	-0x5c(%rbp), %r14
00000000000036a1	leal	(,%rbx,4), %edx
00000000000036a8	movq	%r14, %rdi
00000000000036ab	movq	%rcx, %rsi
00000000000036ae	callq	_memcpy
00000000000036b3	movl	%ebx, -0x4(%r14)
00000000000036b7	leal	0x2c(,%rbx,4), %ebx
00000000000036be	movl	$0x1513, -0x2c(%r14)
00000000000036c6	movl	%r15d, -0x24(%r14)
00000000000036ca	callq	_mig_get_reply_port
00000000000036cf	movl	%eax, -0x20(%r14)
00000000000036d3	movabsq	$0xc9200000000, %rcx
00000000000036dd	movq	%rcx, -0x1c(%r14)
00000000000036e1	movl	$0x0, (%rsp)
00000000000036e8	leaq	-0x88(%rbp), %rdi
00000000000036ef	movl	$0x3, %esi
00000000000036f4	movl	$0x2c, %ecx
00000000000036f9	xorl	%r9d, %r9d
00000000000036fc	movl	%eax, %r8d
00000000000036ff	movl	%ebx, %edx
0000000000003701	callq	_mach_msg
0000000000003706	movl	%eax, %r14d
0000000000003709	leal	-0x10000002(%r14), %eax
0000000000003710	cmpl	$0xe, %eax
0000000000003713	ja	0x3729
0000000000003715	movl	$0x4003, %ecx
000000000000371a	btl	%eax, %ecx
000000000000371d	jae	0x3729
000000000000371f	movl	-0x7c(%rbp), %edi
0000000000003722	callq	_mig_put_reply_port
0000000000003727	jmp	0x3787
0000000000003729	testl	%r14d, %r14d
000000000000372c	jne	0x3763
000000000000372e	movl	-0x74(%rbp), %eax
0000000000003731	cmpl	$0x47, %eax
0000000000003734	je	0x376d
0000000000003736	cmpl	$0xcf6, %eax
000000000000373b	jne	0x3775
000000000000373d	movl	$0xfffffed4, %r14d
0000000000003743	cmpl	$0x0, -0x88(%rbp)
000000000000374a	js	0x377b
000000000000374c	cmpl	$0x24, -0x84(%rbp)
0000000000003753	jne	0x377b
0000000000003755	movl	-0x68(%rbp), %r14d
0000000000003759	testl	%r14d, %r14d
000000000000375c	jne	0x377b
000000000000375e	xorl	%r14d, %r14d
0000000000003761	jmp	0x3787
0000000000003763	movl	-0x7c(%rbp), %edi
0000000000003766	callq	_mig_dealloc_reply_port
000000000000376b	jmp	0x3787
000000000000376d	movl	$0xfffffecc, %r14d
0000000000003773	jmp	0x377b
0000000000003775	movl	$0xfffffed3, %r14d
000000000000377b	leaq	-0x88(%rbp), %rdi
0000000000003782	callq	_mach_msg_destroy
0000000000003787	movl	%r14d, %eax
000000000000378a	addq	$0x78, %rsp
000000000000378e	popq	%rbx
000000000000378f	popq	%r14
0000000000003791	popq	%r15
0000000000003793	popq	%rbp
0000000000003794	retq
_mach_port_insert_member:
0000000000003795	pushq	%rbp
0000000000003796	movq	%rsp, %rbp
0000000000003799	pushq	%r15
000000000000379b	pushq	%r14
000000000000379d	pushq	%rbx
000000000000379e	pushq	%rax
000000000000379f	movl	%edx, %r14d
00000000000037a2	movl	%esi, %r15d
00000000000037a5	movl	%edi, %ebx
00000000000037a7	callq	__kernelrpc_mach_port_insert_member_trap
00000000000037ac	cmpl	$0x10000003, %eax
00000000000037b1	jne	0x37ca
00000000000037b3	movl	%ebx, %edi
00000000000037b5	movl	%r15d, %esi
00000000000037b8	movl	%r14d, %edx
00000000000037bb	addq	$0x8, %rsp
00000000000037bf	popq	%rbx
00000000000037c0	popq	%r14
00000000000037c2	popq	%r15
00000000000037c4	popq	%rbp
00000000000037c5	jmp	__kernelrpc_mach_port_insert_member
00000000000037ca	addq	$0x8, %rsp
00000000000037ce	popq	%rbx
00000000000037cf	popq	%r14
00000000000037d1	popq	%r15
00000000000037d3	popq	%rbp
00000000000037d4	retq
_voucher_mach_msg_revert:
00000000000037d5	movq	__libkernel_voucher_functions(%rip), %rax
00000000000037dc	movq	0x20(%rax), %rax
00000000000037e0	testq	%rax, %rax
00000000000037e3	je	0x37e7
00000000000037e5	jmpq	*%rax
00000000000037e7	retq
_voucher_mach_msg_adopt:
00000000000037e8	movq	__libkernel_voucher_functions(%rip), %rax
00000000000037ef	movq	0x18(%rax), %rax
00000000000037f3	testq	%rax, %rax
00000000000037f6	je	0x37fa
00000000000037f8	jmpq	*%rax
00000000000037fa	movq	$-0x1, %rax
0000000000003801	retq
_mach_port_extract_member:
0000000000003802	pushq	%rbp
0000000000003803	movq	%rsp, %rbp
0000000000003806	pushq	%r15
0000000000003808	pushq	%r14
000000000000380a	pushq	%rbx
000000000000380b	pushq	%rax
000000000000380c	movl	%edx, %r14d
000000000000380f	movl	%esi, %r15d
0000000000003812	movl	%edi, %ebx
0000000000003814	callq	__kernelrpc_mach_port_extract_member_trap
0000000000003819	cmpl	$0x10000003, %eax
000000000000381e	jne	0x3837
0000000000003820	movl	%ebx, %edi
0000000000003822	movl	%r15d, %esi
0000000000003825	movl	%r14d, %edx
0000000000003828	addq	$0x8, %rsp
000000000000382c	popq	%rbx
000000000000382d	popq	%r14
000000000000382f	popq	%r15
0000000000003831	popq	%rbp
0000000000003832	jmp	__kernelrpc_mach_port_extract_member
0000000000003837	addq	$0x8, %rsp
000000000000383b	popq	%rbx
000000000000383c	popq	%r14
000000000000383e	popq	%r15
0000000000003840	popq	%rbp
0000000000003841	retq
_proc_set_dirty:
0000000000003842	pushq	%rbp
0000000000003843	movq	%rsp, %rbp
0000000000003846	pushq	%rbx
0000000000003847	pushq	%rax
0000000000003848	movl	%edi, %eax
000000000000384a	movl	%esi, %ecx
000000000000384c	xorl	%ebx, %ebx
000000000000384e	movl	$0x8, %edi
0000000000003853	movl	$0x2, %edx
0000000000003858	xorl	%r8d, %r8d
000000000000385b	xorl	%r9d, %r9d
000000000000385e	movl	%eax, %esi
0000000000003860	callq	___proc_info
0000000000003865	cmpl	$-0x1, %eax
0000000000003868	jne	0x3871
000000000000386a	callq	___error
000000000000386f	movl	(%rax), %ebx
0000000000003871	movl	%ebx, %eax
0000000000003873	addq	$0x8, %rsp
0000000000003877	popq	%rbx
0000000000003878	popq	%rbp
0000000000003879	retq
000000000000387a	nop
000000000000387b	nop
_getpriority:
000000000000387c	movl	$0x2000064, %eax
0000000000003881	movq	%rcx, %r10
0000000000003884	syscall
0000000000003886	jae	0x3890
0000000000003888	movq	%rax, %rdi
000000000000388b	jmp	_cerror_nocancel
0000000000003890	retq
_getiopolicy_np:
0000000000003891	pushq	%rbp
0000000000003892	movq	%rsp, %rbp
0000000000003895	pushq	%rbx
0000000000003896	subq	$0x18, %rsp
000000000000389a	movl	%edi, %eax
000000000000389c	orl	$0x2, %eax
000000000000389f	movl	$0x2, %ecx
00000000000038a4	cmpl	%ecx, %eax
00000000000038a6	jne	0x38d2
00000000000038a8	cmpl	$0x2, %esi
00000000000038ab	jae	0x38d2
00000000000038ad	leaq	-0x18(%rbp), %rax
00000000000038b1	movl	%esi, (%rax)
00000000000038b3	movl	%edi, 0x4(%rax)
00000000000038b6	movl	$0x1, %edi
00000000000038bb	movq	%rax, %rsi
00000000000038be	callq	___iopolicysys
00000000000038c3	testl	%eax, %eax
00000000000038c5	je	0x38e9
00000000000038c7	movl	%eax, %ebx
00000000000038c9	callq	___error
00000000000038ce	movl	%ebx, (%rax)
00000000000038d0	jmp	0x38dd
00000000000038d2	callq	___error
00000000000038d7	movl	$0x16, (%rax)
00000000000038dd	movl	$0xffffffff, %eax
00000000000038e2	addq	$0x18, %rsp
00000000000038e6	popq	%rbx
00000000000038e7	popq	%rbp
00000000000038e8	retq
00000000000038e9	movl	-0x10(%rbp), %eax
00000000000038ec	jmp	0x38e2
00000000000038ee	nop
00000000000038ef	nop
___iopolicysys:
00000000000038f0	movl	$0x2000142, %eax
00000000000038f5	movq	%rcx, %r10
00000000000038f8	syscall
00000000000038fa	jae	0x3904
00000000000038fc	movq	%rax, %rdi
00000000000038ff	jmp	_cerror_nocancel
0000000000003904	retq
_setiopolicy_np:
0000000000003905	pushq	%rbp
0000000000003906	movq	%rsp, %rbp
0000000000003909	pushq	%rbx
000000000000390a	subq	$0x18, %rsp
000000000000390e	leaq	-0x18(%rbp), %rax
0000000000003912	movl	%esi, (%rax)
0000000000003914	movl	%edi, 0x4(%rax)
0000000000003917	movl	%edx, 0x8(%rax)
000000000000391a	movl	$0x2, %edi
000000000000391f	movq	%rax, %rsi
0000000000003922	callq	___iopolicysys
0000000000003927	movl	%eax, %ebx
0000000000003929	cmpl	$-0x2, %eax
000000000000392c	jne	0x3937
000000000000392e	xorl	%ebx, %ebx
0000000000003930	xorl	%edi, %edi
0000000000003932	callq	__pthread_clear_qos_tsd
0000000000003937	movl	%ebx, %eax
0000000000003939	addq	$0x18, %rsp
000000000000393d	popq	%rbx
000000000000393e	popq	%rbp
000000000000393f	retq
_proc_rlimit_control:
0000000000003940	movl	$0x20001be, %eax
0000000000003945	movq	%rcx, %r10
0000000000003948	syscall
000000000000394a	jae	0x3954
000000000000394c	movq	%rax, %rdi
000000000000394f	jmp	_cerror_nocancel
0000000000003954	retq
_proc_set_cpumon_params:
0000000000003955	pushq	%rbp
0000000000003956	movq	%rsp, %rbp
0000000000003959	subq	$0x20, %rsp
000000000000395d	movl	%edi, %eax
000000000000395f	leaq	-0x18(%rbp), %r8
0000000000003963	movl	$0x5, (%r8)
000000000000396a	movl	%esi, 0x4(%r8)
000000000000396e	movslq	%edx, %rcx
0000000000003971	movq	%rcx, 0x8(%r8)
0000000000003975	xorl	%ecx, %ecx
0000000000003977	movq	%rcx, 0x10(%r8)
000000000000397b	movq	%rcx, (%rsp)
000000000000397f	movl	$0x1, %edi
0000000000003984	movl	$0xa, %esi
0000000000003989	movl	$0x4, %edx
000000000000398e	movl	$0x3, %ecx
0000000000003993	movl	%eax, %r9d
0000000000003996	callq	___process_policy
000000000000399b	addq	$0x20, %rsp
000000000000399f	popq	%rbp
00000000000039a0	retq
00000000000039a1	nop
00000000000039a2	nop
00000000000039a3	nop
___process_policy:
00000000000039a4	movl	$0x2000143, %eax
00000000000039a9	movq	%rcx, %r10
00000000000039ac	syscall
00000000000039ae	jae	0x39b8
00000000000039b0	movq	%rax, %rdi
00000000000039b3	jmp	_cerror_nocancel
00000000000039b8	retq
00000000000039b9	nop
00000000000039ba	nop
00000000000039bb	nop
_getrusage:
00000000000039bc	movl	$0x2000075, %eax
00000000000039c1	movq	%rcx, %r10
00000000000039c4	syscall
00000000000039c6	jae	0x39d0
00000000000039c8	movq	%rax, %rdi
00000000000039cb	jmp	_cerror_nocancel
00000000000039d0	retq
00000000000039d1	nop
00000000000039d2	nop
00000000000039d3	nop
___ulock_wait:
00000000000039d4	movl	$0x2000203, %eax
00000000000039d9	movq	%rcx, %r10
00000000000039dc	syscall
00000000000039de	jae	0x39e8
00000000000039e0	movq	%rax, %rdi
00000000000039e3	jmp	_cerror_nocancel
00000000000039e8	retq
00000000000039e9	nop
00000000000039ea	nop
00000000000039eb	nop
___ulock_wake:
00000000000039ec	movl	$0x2000204, %eax
00000000000039f1	movq	%rcx, %r10
00000000000039f4	syscall
00000000000039f6	jae	0x3a00
00000000000039f8	movq	%rax, %rdi
00000000000039fb	jmp	_cerror_nocancel
0000000000003a00	retq
0000000000003a01	nop
0000000000003a02	nop
0000000000003a03	nop
_lstat64:
_lstat$INODE64:
0000000000003a04	movl	$0x2000154, %eax
0000000000003a09	movq	%rcx, %r10
0000000000003a0c	syscall
0000000000003a0e	jae	0x3a18
0000000000003a10	movq	%rax, %rdi
0000000000003a13	jmp	_cerror_nocancel
0000000000003a18	retq
0000000000003a19	nop
0000000000003a1a	nop
0000000000003a1b	nop
___disable_threadsignal:
0000000000003a1c	movl	$0x200014b, %eax
0000000000003a21	movq	%rcx, %r10
0000000000003a24	syscall
0000000000003a26	jae	0x3a30
0000000000003a28	movq	%rax, %rdi
0000000000003a2b	jmp	_cerror_nocancel
0000000000003a30	retq
_mig_dealloc_reply_port:
0000000000003a31	pushq	%rbp
0000000000003a32	movq	%rsp, %rbp
0000000000003a35	pushq	%r15
0000000000003a37	pushq	%r14
0000000000003a39	pushq	%rbx
0000000000003a3a	pushq	%rax
0000000000003a3b	movl	%gs:0x10, %ebx
0000000000003a43	testl	%ebx, %ebx
0000000000003a45	je	0x3a95
0000000000003a47	movl	__task_reply_port(%rip), %eax
0000000000003a4d	cmpl	%ebx, %eax
0000000000003a4f	je	0x3a95
0000000000003a51	movl	%edi, %r14d
0000000000003a54	movq	%rax, %gs:0x10
0000000000003a5d	leaq	_mach_task_self_(%rip), %r15
0000000000003a64	movl	(%r15), %edi
0000000000003a67	movl	$0x1, %edx
0000000000003a6c	movl	$0xffffffff, %ecx
0000000000003a71	movl	%ebx, %esi
0000000000003a73	callq	_mach_port_mod_refs
0000000000003a78	cmpl	%r14d, %ebx
0000000000003a7b	je	0x3a88
0000000000003a7d	movl	(%r15), %edi
0000000000003a80	movl	%r14d, %esi
0000000000003a83	callq	_mach_port_deallocate
0000000000003a88	movq	$0x0, %gs:0x10
0000000000003a95	addq	$0x8, %rsp
0000000000003a99	popq	%rbx
0000000000003a9a	popq	%r14
0000000000003a9c	popq	%r15
0000000000003a9e	popq	%rbp
0000000000003a9f	retq
___bsdthread_terminate:
0000000000003aa0	movl	$0x2000169, %eax
0000000000003aa5	movq	%rcx, %r10
0000000000003aa8	syscall
0000000000003aaa	jae	0x3ab4
0000000000003aac	movq	%rax, %rdi
0000000000003aaf	jmp	_cerror_nocancel
0000000000003ab4	retq
0000000000003ab5	nop
0000000000003ab6	nop
0000000000003ab7	nop
_statfs64:
_statfs$INODE64:
0000000000003ab8	movl	$0x2000159, %eax
0000000000003abd	movq	%rcx, %r10
0000000000003ac0	syscall
0000000000003ac2	jae	0x3acc
0000000000003ac4	movq	%rax, %rdi
0000000000003ac7	jmp	_cerror_nocancel
0000000000003acc	retq
_vm_allocate:
0000000000003acd	pushq	%rbp
0000000000003ace	movq	%rsp, %rbp
0000000000003ad1	pushq	%r14
0000000000003ad3	pushq	%rbx
0000000000003ad4	subq	$0x10, %rsp
0000000000003ad8	movq	%rsi, %rbx
0000000000003adb	movq	(%rsi), %rax
0000000000003ade	leaq	-0x18(%rbp), %r14
0000000000003ae2	movq	%rax, (%r14)
0000000000003ae5	movq	%r14, %rsi
0000000000003ae8	callq	_mach_vm_allocate
0000000000003aed	movq	(%r14), %rcx
0000000000003af0	movq	%rcx, (%rbx)
0000000000003af3	addq	$0x10, %rsp
0000000000003af7	popq	%rbx
0000000000003af8	popq	%r14
0000000000003afa	popq	%rbp
0000000000003afb	retq
_vm_copy:
0000000000003afc	pushq	%rbp
0000000000003afd	movq	%rsp, %rbp
0000000000003b00	pushq	%rbx
0000000000003b01	subq	$0x48, %rsp
0000000000003b05	leaq	_NDR_record(%rip), %rax
0000000000003b0c	movq	(%rax), %rax
0000000000003b0f	leaq	-0x40(%rbp), %rbx
0000000000003b13	movq	%rax, 0x18(%rbx)
0000000000003b17	movq	%rsi, 0x20(%rbx)
0000000000003b1b	movq	%rdx, 0x28(%rbx)
0000000000003b1f	movq	%rcx, 0x30(%rbx)
0000000000003b23	movl	$0x1513, (%rbx)
0000000000003b29	movl	%edi, 0x8(%rbx)
0000000000003b2c	callq	_mig_get_reply_port
0000000000003b31	movl	%eax, 0xc(%rbx)
0000000000003b34	movabsq	$0x12c700000000, %rcx
0000000000003b3e	movq	%rcx, 0x10(%rbx)
0000000000003b42	movl	$0x0, (%rsp)
0000000000003b49	movl	$0x3, %esi
0000000000003b4e	movl	$0x38, %edx
0000000000003b53	movl	$0x2c, %ecx
0000000000003b58	xorl	%r9d, %r9d
0000000000003b5b	movq	%rbx, %rdi
0000000000003b5e	movl	%eax, %r8d
0000000000003b61	callq	_mach_msg
0000000000003b66	movl	%eax, %ebx
0000000000003b68	leal	-0x10000002(%rbx), %eax
0000000000003b6e	cmpl	$0xe, %eax
0000000000003b71	ja	0x3b87
0000000000003b73	movl	$0x4003, %ecx
0000000000003b78	btl	%eax, %ecx
0000000000003b7b	jae	0x3b87
0000000000003b7d	movl	-0x34(%rbp), %edi
0000000000003b80	callq	_mig_put_reply_port
0000000000003b85	jmp	0x3bd5
0000000000003b87	testl	%ebx, %ebx
0000000000003b89	jne	0x3bb6
0000000000003b8b	movl	-0x2c(%rbp), %eax
0000000000003b8e	cmpl	$0x47, %eax
0000000000003b91	je	0x3bc0
0000000000003b93	cmpl	$0x132b, %eax
0000000000003b98	jne	0x3bc7
0000000000003b9a	movl	$0xfffffed4, %ebx
0000000000003b9f	cmpl	$0x0, -0x40(%rbp)
0000000000003ba3	js	0x3bcc
0000000000003ba5	cmpl	$0x24, -0x3c(%rbp)
0000000000003ba9	jne	0x3bcc
0000000000003bab	movl	-0x20(%rbp), %ebx
0000000000003bae	testl	%ebx, %ebx
0000000000003bb0	jne	0x3bcc
0000000000003bb2	xorl	%ebx, %ebx
0000000000003bb4	jmp	0x3bd5
0000000000003bb6	movl	-0x34(%rbp), %edi
0000000000003bb9	callq	_mig_dealloc_reply_port
0000000000003bbe	jmp	0x3bd5
0000000000003bc0	movl	$0xfffffecc, %ebx
0000000000003bc5	jmp	0x3bcc
0000000000003bc7	movl	$0xfffffed3, %ebx
0000000000003bcc	leaq	-0x40(%rbp), %rdi
0000000000003bd0	callq	_mach_msg_destroy
0000000000003bd5	movl	%ebx, %eax
0000000000003bd7	addq	$0x48, %rsp
0000000000003bdb	popq	%rbx
0000000000003bdc	popq	%rbp
0000000000003bdd	retq
0000000000003bde	nop
0000000000003bdf	nop
_fsgetpath:
0000000000003be0	movl	$0x20001ab, %eax
0000000000003be5	movq	%rcx, %r10
0000000000003be8	syscall
0000000000003bea	jae	0x3bf4
0000000000003bec	movq	%rax, %rdi
0000000000003bef	jmp	_cerror_nocancel
0000000000003bf4	retq
_thread_destruct_special_reply_port:
0000000000003bf5	movl	%edi, %eax
0000000000003bf7	cmpl	$0x2, %esi
0000000000003bfa	je	0x3c15
0000000000003bfc	cmpl	$0x1, %esi
0000000000003bff	je	0x3c25
0000000000003c01	testl	%esi, %esi
0000000000003c03	jne	0x3c39
0000000000003c05	leaq	_mach_task_self_(%rip), %rcx
0000000000003c0c	movl	(%rcx), %edi
0000000000003c0e	movl	$0xffffffff, %edx
0000000000003c13	jmp	0x3c30
0000000000003c15	leaq	_mach_task_self_(%rip), %rcx
0000000000003c1c	movl	(%rcx), %edi
0000000000003c1e	movl	%eax, %esi
0000000000003c20	jmp	_mach_port_deallocate
0000000000003c25	leaq	_mach_task_self_(%rip), %rcx
0000000000003c2c	movl	(%rcx), %edi
0000000000003c2e	xorl	%edx, %edx
0000000000003c30	xorl	%ecx, %ecx
0000000000003c32	movl	%eax, %esi
0000000000003c34	jmp	_mach_port_destruct
0000000000003c39	movl	$0x4, %eax
0000000000003c3e	retq
_mach_port_destruct:
0000000000003c3f	pushq	%rbp
0000000000003c40	movq	%rsp, %rbp
0000000000003c43	pushq	%r15
0000000000003c45	pushq	%r14
0000000000003c47	pushq	%r12
0000000000003c49	pushq	%rbx
0000000000003c4a	movq	%rcx, %r14
0000000000003c4d	movl	%edx, %r15d
0000000000003c50	movl	%esi, %r12d
0000000000003c53	movl	%edi, %ebx
0000000000003c55	callq	__kernelrpc_mach_port_destruct_trap
0000000000003c5a	cmpl	$0x10000003, %eax
0000000000003c5f	jne	0x3c79
0000000000003c61	movl	%ebx, %edi
0000000000003c63	movl	%r12d, %esi
0000000000003c66	movl	%r15d, %edx
0000000000003c69	movq	%r14, %rcx
0000000000003c6c	popq	%rbx
0000000000003c6d	popq	%r12
0000000000003c6f	popq	%r14
0000000000003c71	popq	%r15
0000000000003c73	popq	%rbp
0000000000003c74	jmp	__kernelrpc_mach_port_destruct
0000000000003c79	popq	%rbx
0000000000003c7a	popq	%r12
0000000000003c7c	popq	%r14
0000000000003c7e	popq	%r15
0000000000003c80	popq	%rbp
0000000000003c81	retq
0000000000003c82	nop
0000000000003c83	nop
___exit:
__exit:
0000000000003c84	movl	$0x2000001, %eax
0000000000003c89	movq	%rcx, %r10
0000000000003c8c	syscall
0000000000003c8e	jae	0x3c98
0000000000003c90	movq	%rax, %rdi
0000000000003c93	jmp	_cerror_nocancel
0000000000003c98	retq
0000000000003c99	nop
0000000000003c9a	nop
0000000000003c9b	nop
_getppid:
0000000000003c9c	movl	$0x2000027, %eax
0000000000003ca1	movq	%rcx, %r10
0000000000003ca4	syscall
0000000000003ca6	jae	0x3cb0
0000000000003ca8	movq	%rax, %rdi
0000000000003cab	jmp	_cerror_nocancel
0000000000003cb0	retq
_mach_port_type:
0000000000003cb1	jmp	__kernelrpc_mach_port_type
__kernelrpc_mach_port_type:
0000000000003cb6	pushq	%rbp
0000000000003cb7	movq	%rsp, %rbp
0000000000003cba	pushq	%r14
0000000000003cbc	pushq	%rbx
0000000000003cbd	subq	$0x40, %rsp
0000000000003cc1	movq	%rdx, %r14
0000000000003cc4	leaq	_NDR_record(%rip), %rax
0000000000003ccb	movq	(%rax), %rax
0000000000003cce	leaq	-0x40(%rbp), %rbx
0000000000003cd2	movq	%rax, 0x18(%rbx)
0000000000003cd6	movl	%esi, 0x20(%rbx)
0000000000003cd9	movl	$0x1513, (%rbx)
0000000000003cdf	movl	%edi, 0x8(%rbx)
0000000000003ce2	callq	_mig_get_reply_port
0000000000003ce7	movl	%eax, 0xc(%rbx)
0000000000003cea	movabsq	$0xc8100000000, %rcx
0000000000003cf4	movq	%rcx, 0x10(%rbx)
0000000000003cf8	movl	$0x0, (%rsp)
0000000000003cff	movl	$0x3, %esi
0000000000003d04	movl	$0x24, %edx
0000000000003d09	movl	$0x30, %ecx
0000000000003d0e	xorl	%r9d, %r9d
0000000000003d11	movq	%rbx, %rdi
0000000000003d14	movl	%eax, %r8d
0000000000003d17	callq	_mach_msg
0000000000003d1c	movl	%eax, %ebx
0000000000003d1e	leal	-0x10000002(%rbx), %eax
0000000000003d24	cmpl	$0xe, %eax
0000000000003d27	ja	0x3d3d
0000000000003d29	movl	$0x4003, %ecx
0000000000003d2e	btl	%eax, %ecx
0000000000003d31	jae	0x3d3d
0000000000003d33	movl	-0x34(%rbp), %edi
0000000000003d36	callq	_mig_put_reply_port
0000000000003d3b	jmp	0x3d92
0000000000003d3d	testl	%ebx, %ebx
0000000000003d3f	jne	0x3d71
0000000000003d41	movl	-0x2c(%rbp), %eax
0000000000003d44	cmpl	$0x47, %eax
0000000000003d47	je	0x3d7b
0000000000003d49	cmpl	$0xce5, %eax
0000000000003d4e	jne	0x3d82
0000000000003d50	movl	$0xfffffed4, %eax
0000000000003d55	cmpl	$0x0, -0x40(%rbp)
0000000000003d59	js	0x3d87
0000000000003d5b	movl	-0x3c(%rbp), %ecx
0000000000003d5e	cmpl	$0x28, %ecx
0000000000003d61	je	0x3d9d
0000000000003d63	cmpl	$0x24, %ecx
0000000000003d66	jne	0x3d87
0000000000003d68	movl	-0x20(%rbp), %ebx
0000000000003d6b	testl	%ebx, %ebx
0000000000003d6d	jne	0x3d89
0000000000003d6f	jmp	0x3d87
0000000000003d71	movl	-0x34(%rbp), %edi
0000000000003d74	callq	_mig_dealloc_reply_port
0000000000003d79	jmp	0x3d92
0000000000003d7b	movl	$0xfffffecc, %eax
0000000000003d80	jmp	0x3d87
0000000000003d82	movl	$0xfffffed3, %eax
0000000000003d87	movl	%eax, %ebx
0000000000003d89	leaq	-0x40(%rbp), %rdi
0000000000003d8d	callq	_mach_msg_destroy
0000000000003d92	movl	%ebx, %eax
0000000000003d94	addq	$0x40, %rsp
0000000000003d98	popq	%rbx
0000000000003d99	popq	%r14
0000000000003d9b	popq	%rbp
0000000000003d9c	retq
0000000000003d9d	movl	-0x20(%rbp), %ebx
0000000000003da0	testl	%ebx, %ebx
0000000000003da2	jne	0x3d89
0000000000003da4	movl	-0x1c(%rbp), %eax
0000000000003da7	movl	%eax, (%r14)
0000000000003daa	xorl	%ebx, %ebx
0000000000003dac	jmp	0x3d92
_mig_reply_setup:
0000000000003dae	movl	(%rdi), %eax
0000000000003db0	shrl	$0x8, %eax
0000000000003db3	andl	$0x1f, %eax
0000000000003db6	movl	%eax, (%rsi)
0000000000003db8	movl	$0x24, 0x4(%rsi)
0000000000003dbf	movl	0xc(%rdi), %eax
0000000000003dc2	movl	%eax, 0x8(%rsi)
0000000000003dc5	movl	$0x0, 0xc(%rsi)
0000000000003dcc	movl	0x14(%rdi), %eax
0000000000003dcf	addl	$0x64, %eax
0000000000003dd2	movl	%eax, 0x14(%rsi)
0000000000003dd5	leaq	_NDR_record(%rip), %rax
0000000000003ddc	movq	(%rax), %rax
0000000000003ddf	movq	%rax, 0x18(%rsi)
0000000000003de3	retq
_mach_port_get_refs:
0000000000003de4	jmp	__kernelrpc_mach_port_get_refs
__kernelrpc_mach_port_get_refs:
0000000000003de9	pushq	%rbp
0000000000003dea	movq	%rsp, %rbp
0000000000003ded	pushq	%r14
0000000000003def	pushq	%rbx
0000000000003df0	subq	$0x40, %rsp
0000000000003df4	movq	%rcx, %r14
0000000000003df7	leaq	_NDR_record(%rip), %rax
0000000000003dfe	movq	(%rax), %rax
0000000000003e01	leaq	-0x40(%rbp), %rbx
0000000000003e05	movq	%rax, 0x18(%rbx)
0000000000003e09	movl	%esi, 0x20(%rbx)
0000000000003e0c	movl	%edx, 0x24(%rbx)
0000000000003e0f	movl	$0x1513, (%rbx)
0000000000003e15	movl	%edi, 0x8(%rbx)
0000000000003e18	callq	_mig_get_reply_port
0000000000003e1d	movl	%eax, 0xc(%rbx)
0000000000003e20	movabsq	$0xc8700000000, %rcx
0000000000003e2a	movq	%rcx, 0x10(%rbx)
0000000000003e2e	movl	$0x0, (%rsp)
0000000000003e35	movl	$0x3, %esi
0000000000003e3a	movl	$0x28, %edx
0000000000003e3f	movl	$0x30, %ecx
0000000000003e44	xorl	%r9d, %r9d
0000000000003e47	movq	%rbx, %rdi
0000000000003e4a	movl	%eax, %r8d
0000000000003e4d	callq	_mach_msg
0000000000003e52	movl	%eax, %ebx
0000000000003e54	leal	-0x10000002(%rbx), %eax
0000000000003e5a	cmpl	$0xe, %eax
0000000000003e5d	ja	0x3e73
0000000000003e5f	movl	$0x4003, %ecx
0000000000003e64	btl	%eax, %ecx
0000000000003e67	jae	0x3e73
0000000000003e69	movl	-0x34(%rbp), %edi
0000000000003e6c	callq	_mig_put_reply_port
0000000000003e71	jmp	0x3ec8
0000000000003e73	testl	%ebx, %ebx
0000000000003e75	jne	0x3ea7
0000000000003e77	movl	-0x2c(%rbp), %eax
0000000000003e7a	cmpl	$0x47, %eax
0000000000003e7d	je	0x3eb1
0000000000003e7f	cmpl	$0xceb, %eax
0000000000003e84	jne	0x3eb8
0000000000003e86	movl	$0xfffffed4, %eax
0000000000003e8b	cmpl	$0x0, -0x40(%rbp)
0000000000003e8f	js	0x3ebd
0000000000003e91	movl	-0x3c(%rbp), %ecx
0000000000003e94	cmpl	$0x28, %ecx
0000000000003e97	je	0x3ed3
0000000000003e99	cmpl	$0x24, %ecx
0000000000003e9c	jne	0x3ebd
0000000000003e9e	movl	-0x20(%rbp), %ebx
0000000000003ea1	testl	%ebx, %ebx
0000000000003ea3	jne	0x3ebf
0000000000003ea5	jmp	0x3ebd
0000000000003ea7	movl	-0x34(%rbp), %edi
0000000000003eaa	callq	_mig_dealloc_reply_port
0000000000003eaf	jmp	0x3ec8
0000000000003eb1	movl	$0xfffffecc, %eax
0000000000003eb6	jmp	0x3ebd
0000000000003eb8	movl	$0xfffffed3, %eax
0000000000003ebd	movl	%eax, %ebx
0000000000003ebf	leaq	-0x40(%rbp), %rdi
0000000000003ec3	callq	_mach_msg_destroy
0000000000003ec8	movl	%ebx, %eax
0000000000003eca	addq	$0x40, %rsp
0000000000003ece	popq	%rbx
0000000000003ecf	popq	%r14
0000000000003ed1	popq	%rbp
0000000000003ed2	retq
0000000000003ed3	movl	-0x20(%rbp), %ebx
0000000000003ed6	testl	%ebx, %ebx
0000000000003ed8	jne	0x3ebf
0000000000003eda	movl	-0x1c(%rbp), %eax
0000000000003edd	movl	%eax, (%r14)
0000000000003ee0	xorl	%ebx, %ebx
0000000000003ee2	jmp	0x3ec8
_csops_audittoken:
0000000000003ee4	movl	$0x20000aa, %eax
0000000000003ee9	movq	%rcx, %r10
0000000000003eec	syscall
0000000000003eee	jae	0x3ef8
0000000000003ef0	movq	%rax, %rdi
0000000000003ef3	jmp	_cerror_nocancel
0000000000003ef8	retq
0000000000003ef9	nop
0000000000003efa	nop
0000000000003efb	nop
___psynch_mutexwait:
0000000000003efc	movl	$0x200012d, %eax
0000000000003f01	movq	%rcx, %r10
0000000000003f04	syscall
0000000000003f06	jae	0x3f10
0000000000003f08	movq	%rax, %rdi
0000000000003f0b	jmp	_cerror_nocancel
0000000000003f10	retq
0000000000003f11	nop
0000000000003f12	nop
0000000000003f13	nop
___psynch_mutexdrop:
0000000000003f14	movl	$0x200012e, %eax
0000000000003f19	movq	%rcx, %r10
0000000000003f1c	syscall
0000000000003f1e	jae	0x3f28
0000000000003f20	movq	%rax, %rdi
0000000000003f23	jmp	_cerror_nocancel
0000000000003f28	retq
0000000000003f29	nop
0000000000003f2a	nop
0000000000003f2b	nop
_mach_msg_send:
0000000000003f2c	pushq	%rbp
0000000000003f2d	movq	%rsp, %rbp
0000000000003f30	subq	$0x10, %rsp
0000000000003f34	movl	0x4(%rdi), %edx
0000000000003f37	movl	$0x0, (%rsp)
0000000000003f3e	movl	$0x1, %esi
0000000000003f43	xorl	%ecx, %ecx
0000000000003f45	xorl	%r8d, %r8d
0000000000003f48	xorl	%r9d, %r9d
0000000000003f4b	callq	_mach_msg
0000000000003f50	addq	$0x10, %rsp
0000000000003f54	popq	%rbp
0000000000003f55	retq
_mach_port_destroy:
0000000000003f56	pushq	%rbp
0000000000003f57	movq	%rsp, %rbp
0000000000003f5a	pushq	%r14
0000000000003f5c	pushq	%rbx
0000000000003f5d	movl	%esi, %r14d
0000000000003f60	movl	%edi, %ebx
0000000000003f62	callq	__kernelrpc_mach_port_destroy_trap
0000000000003f67	cmpl	$0x10000003, %eax
0000000000003f6c	jne	0x3f7c
0000000000003f6e	movl	%ebx, %edi
0000000000003f70	movl	%r14d, %esi
0000000000003f73	popq	%rbx
0000000000003f74	popq	%r14
0000000000003f76	popq	%rbp
0000000000003f77	jmp	__kernelrpc_mach_port_destroy
0000000000003f7c	popq	%rbx
0000000000003f7d	popq	%r14
0000000000003f7f	popq	%rbp
0000000000003f80	retq
_mach_port_get_attributes:
0000000000003f81	pushq	%rbp
0000000000003f82	movq	%rsp, %rbp
0000000000003f85	pushq	%r15
0000000000003f87	pushq	%r14
0000000000003f89	pushq	%r13
0000000000003f8b	pushq	%r12
0000000000003f8d	pushq	%rbx
0000000000003f8e	pushq	%rax
0000000000003f8f	movq	%r8, %r14
0000000000003f92	movq	%rcx, %r15
0000000000003f95	movl	%edx, %r12d
0000000000003f98	movl	%esi, %r13d
0000000000003f9b	movl	%edi, %ebx
0000000000003f9d	callq	__kernelrpc_mach_port_get_attributes_trap
0000000000003fa2	movl	%eax, %ecx
0000000000003fa4	cmpl	$0x1000028, %eax
0000000000003fa9	movl	$0x10000003, %eax
0000000000003fae	cmovnel	%ecx, %eax
0000000000003fb1	cmpl	$0x10000003, %eax
0000000000003fb6	jne	0x3fd9
0000000000003fb8	movl	%ebx, %edi
0000000000003fba	movl	%r13d, %esi
0000000000003fbd	movl	%r12d, %edx
0000000000003fc0	movq	%r15, %rcx
0000000000003fc3	movq	%r14, %r8
0000000000003fc6	addq	$0x8, %rsp
0000000000003fca	popq	%rbx
0000000000003fcb	popq	%r12
0000000000003fcd	popq	%r13
0000000000003fcf	popq	%r14
0000000000003fd1	popq	%r15
0000000000003fd3	popq	%rbp
0000000000003fd4	jmp	__kernelrpc_mach_port_get_attributes
0000000000003fd9	addq	$0x8, %rsp
0000000000003fdd	popq	%rbx
0000000000003fde	popq	%r12
0000000000003fe0	popq	%r13
0000000000003fe2	popq	%r14
0000000000003fe4	popq	%r15
0000000000003fe6	popq	%rbp
0000000000003fe7	retq
___kdebug_trace64:
0000000000003fe8	movl	$0x20000b3, %eax
0000000000003fed	movq	%rcx, %r10
0000000000003ff0	syscall
0000000000003ff2	jae	0x3ffc
0000000000003ff4	movq	%rax, %rdi
0000000000003ff7	jmp	_cerror_nocancel
0000000000003ffc	retq
0000000000003ffd	nop
0000000000003ffe	nop
0000000000003fff	nop
_getaudit_addr:
0000000000004000	movl	$0x2000165, %eax
0000000000004005	movq	%rcx, %r10
0000000000004008	syscall
000000000000400a	jae	0x4014
000000000000400c	movq	%rax, %rdi
000000000000400f	jmp	_cerror_nocancel
0000000000004014	retq
_vm_remap:
0000000000004015	pushq	%rbp
0000000000004016	movq	%rsp, %rbp
0000000000004019	pushq	%r15
000000000000401b	pushq	%r14
000000000000401d	pushq	%r13
000000000000401f	pushq	%r12
0000000000004021	pushq	%rbx
0000000000004022	pushq	%rax
0000000000004023	movl	%r8d, %ebx
0000000000004026	movq	%rdx, %r14
0000000000004029	movq	%rsi, %r15
000000000000402c	movl	%edi, %r12d
000000000000402f	movl	0x18(%rbp), %r10d
0000000000004033	movl	0x30(%rbp), %eax
0000000000004036	subq	$0x8, %rsp
000000000000403a	pushq	%rax
000000000000403b	pushq	0x28(%rbp)
000000000000403e	pushq	0x20(%rbp)
0000000000004041	pushq	%r10
0000000000004043	pushq	0x10(%rbp)
0000000000004046	callq	__kernelrpc_vm_remap
000000000000404b	addq	$0x30, %rsp
000000000000404f	movl	%eax, %r13d
0000000000004052	movq	___syscall_logger(%rip), %rax
0000000000004059	testq	%rax, %rax
000000000000405c	je	0x407c
000000000000405e	andl	$0xff000000, %ebx
0000000000004064	orl	$0x90, %ebx
000000000000406a	movl	%r12d, %esi
000000000000406d	movq	(%r15), %r8
0000000000004070	xorl	%ecx, %ecx
0000000000004072	xorl	%r9d, %r9d
0000000000004075	movl	%ebx, %edi
0000000000004077	movq	%r14, %rdx
000000000000407a	callq	*%rax
000000000000407c	movl	%r13d, %eax
000000000000407f	addq	$0x8, %rsp
0000000000004083	popq	%rbx
0000000000004084	popq	%r12
0000000000004086	popq	%r13
0000000000004088	popq	%r14
000000000000408a	popq	%r15
000000000000408c	popq	%rbp
000000000000408d	retq
__kernelrpc_vm_remap:
000000000000408e	pushq	%rbp
000000000000408f	movq	%rsp, %rbp
0000000000004092	pushq	%r14
0000000000004094	pushq	%rbx
0000000000004095	subq	$0x70, %rsp
0000000000004099	movq	%rsi, %r14
000000000000409c	movl	0x30(%rbp), %r10d
00000000000040a0	movl	0x18(%rbp), %r11d
00000000000040a4	movq	0x10(%rbp), %rax
00000000000040a8	leaq	-0x70(%rbp), %rbx
00000000000040ac	movl	$0x1, 0x18(%rbx)
00000000000040b3	movl	%r9d, 0x1c(%rbx)
00000000000040b7	movl	$0x130000, 0x24(%rbx)
00000000000040be	leaq	_NDR_record(%rip), %rsi
00000000000040c5	movq	(%rsi), %rsi
00000000000040c8	movq	%rsi, 0x28(%rbx)
00000000000040cc	movq	(%r14), %rsi
00000000000040cf	movq	%rsi, 0x30(%rbx)
00000000000040d3	movq	%rdx, 0x38(%rbx)
00000000000040d7	movq	%rcx, 0x40(%rbx)
00000000000040db	movl	%r8d, 0x48(%rbx)
00000000000040df	movq	%rax, 0x4c(%rbx)
00000000000040e3	movl	%r11d, 0x54(%rbx)
00000000000040e7	movl	%r10d, 0x58(%rbx)
00000000000040eb	movl	$0x80001513, (%rbx)
00000000000040f1	movl	%edi, 0x8(%rbx)
00000000000040f4	callq	_mig_get_reply_port
00000000000040f9	movl	%eax, 0xc(%rbx)
00000000000040fc	movabsq	$0x12cd00000000, %rcx
0000000000004106	movq	%rcx, 0x10(%rbx)
000000000000410a	movl	$0x0, (%rsp)
0000000000004111	movl	$0x3, %esi
0000000000004116	movl	$0x5c, %edx
000000000000411b	movl	$0x3c, %ecx
0000000000004120	xorl	%r9d, %r9d
0000000000004123	movq	%rbx, %rdi
0000000000004126	movl	%eax, %r8d
0000000000004129	callq	_mach_msg
000000000000412e	movl	%eax, %ebx
0000000000004130	leal	-0x10000002(%rbx), %eax
0000000000004136	cmpl	$0xe, %eax
0000000000004139	ja	0x414f
000000000000413b	movl	$0x4003, %ecx
0000000000004140	btl	%eax, %ecx
0000000000004143	jae	0x414f
0000000000004145	movl	-0x64(%rbp), %edi
0000000000004148	callq	_mig_put_reply_port
000000000000414d	jmp	0x41a4
000000000000414f	testl	%ebx, %ebx
0000000000004151	jne	0x4183
0000000000004153	movl	-0x5c(%rbp), %eax
0000000000004156	cmpl	$0x47, %eax
0000000000004159	je	0x418d
000000000000415b	cmpl	$0x1331, %eax
0000000000004160	jne	0x4194
0000000000004162	movl	$0xfffffed4, %eax
0000000000004167	cmpl	$0x0, -0x70(%rbp)
000000000000416b	js	0x4199
000000000000416d	movl	-0x6c(%rbp), %ecx
0000000000004170	cmpl	$0x34, %ecx
0000000000004173	je	0x41af
0000000000004175	cmpl	$0x24, %ecx
0000000000004178	jne	0x4199
000000000000417a	movl	-0x50(%rbp), %ebx
000000000000417d	testl	%ebx, %ebx
000000000000417f	jne	0x419b
0000000000004181	jmp	0x4199
0000000000004183	movl	-0x64(%rbp), %edi
0000000000004186	callq	_mig_dealloc_reply_port
000000000000418b	jmp	0x41a4
000000000000418d	movl	$0xfffffecc, %eax
0000000000004192	jmp	0x4199
0000000000004194	movl	$0xfffffed3, %eax
0000000000004199	movl	%eax, %ebx
000000000000419b	leaq	-0x70(%rbp), %rdi
000000000000419f	callq	_mach_msg_destroy
00000000000041a4	movl	%ebx, %eax
00000000000041a6	addq	$0x70, %rsp
00000000000041aa	popq	%rbx
00000000000041ab	popq	%r14
00000000000041ad	popq	%rbp
00000000000041ae	retq
00000000000041af	movl	-0x50(%rbp), %ebx
00000000000041b2	testl	%ebx, %ebx
00000000000041b4	jne	0x419b
00000000000041b6	movq	0x28(%rbp), %rax
00000000000041ba	movq	0x20(%rbp), %rcx
00000000000041be	movq	-0x4c(%rbp), %rdx
00000000000041c2	movq	%rdx, (%r14)
00000000000041c5	movl	-0x44(%rbp), %edx
00000000000041c8	movl	%edx, (%rcx)
00000000000041ca	movl	-0x40(%rbp), %ecx
00000000000041cd	movl	%ecx, (%rax)
00000000000041cf	xorl	%ebx, %ebx
00000000000041d1	jmp	0x41a4
_vm_protect:
00000000000041d3	jmp	_mach_vm_protect
_getxattr:
00000000000041d8	movl	$0x20000ea, %eax
00000000000041dd	movq	%rcx, %r10
00000000000041e0	syscall
00000000000041e2	jae	0x41ec
00000000000041e4	movq	%rax, %rdi
00000000000041e7	jmp	_cerror_nocancel
00000000000041ec	retq
00000000000041ed	nop
00000000000041ee	nop
00000000000041ef	nop
_fstatat64:
_fstatat$INODE64:
00000000000041f0	movl	$0x20001d6, %eax
00000000000041f5	movq	%rcx, %r10
00000000000041f8	syscall
00000000000041fa	jae	0x4204
00000000000041fc	movq	%rax, %rdi
00000000000041ff	jmp	_cerror_nocancel
0000000000004204	retq
0000000000004205	nop
0000000000004206	nop
0000000000004207	nop
_getattrlistbulk:
0000000000004208	movl	$0x20001cd, %eax
000000000000420d	movq	%rcx, %r10
0000000000004210	syscall
0000000000004212	jae	0x421c
0000000000004214	movq	%rax, %rdi
0000000000004217	jmp	_cerror_nocancel
000000000000421c	retq
000000000000421d	nop
000000000000421e	nop
000000000000421f	nop
_pread:
0000000000004220	movl	$0x2000099, %eax
0000000000004225	movq	%rcx, %r10
0000000000004228	syscall
000000000000422a	jae	0x4234
000000000000422c	movq	%rax, %rdi
000000000000422f	jmp	_cerror
0000000000004234	retq
0000000000004235	nop
0000000000004236	nop
0000000000004237	nop
_fgetxattr:
0000000000004238	movl	$0x20000eb, %eax
000000000000423d	movq	%rcx, %r10
0000000000004240	syscall
0000000000004242	jae	0x424c
0000000000004244	movq	%rax, %rdi
0000000000004247	jmp	_cerror_nocancel
000000000000424c	retq
000000000000424d	nop
000000000000424e	nop
000000000000424f	nop
_ftruncate:
0000000000004250	movl	$0x20000c9, %eax
0000000000004255	movq	%rcx, %r10
0000000000004258	syscall
000000000000425a	jae	0x4264
000000000000425c	movq	%rax, %rdi
000000000000425f	jmp	_cerror_nocancel
0000000000004264	retq
0000000000004265	nop
0000000000004266	nop
0000000000004267	nop
_flock:
0000000000004268	movl	$0x2000083, %eax
000000000000426d	movq	%rcx, %r10
0000000000004270	syscall
0000000000004272	jae	0x427c
0000000000004274	movq	%rax, %rdi
0000000000004277	jmp	_cerror_nocancel
000000000000427c	retq
_mig_deallocate:
000000000000427d	movq	%rsi, %rax
0000000000004280	movq	%rdi, %rcx
0000000000004283	leaq	_mach_task_self_(%rip), %rdx
000000000000428a	movl	(%rdx), %edi
000000000000428c	movq	%rcx, %rsi
000000000000428f	movq	%rax, %rdx
0000000000004292	jmp	_vm_deallocate
0000000000004297	nop
_getgid:
0000000000004298	movl	$0x200002f, %eax
000000000000429d	movq	%rcx, %r10
00000000000042a0	syscall
00000000000042a2	jae	0x42ac
00000000000042a4	movq	%rax, %rdi
00000000000042a7	jmp	_cerror_nocancel
00000000000042ac	retq
_host_get_io_master:
00000000000042ad	pushq	%rbp
00000000000042ae	movq	%rsp, %rbp
00000000000042b1	pushq	%r14
00000000000042b3	pushq	%rbx
00000000000042b4	subq	$0x40, %rsp
00000000000042b8	movq	%rsi, %r14
00000000000042bb	leaq	-0x40(%rbp), %rbx
00000000000042bf	movl	$0x1513, (%rbx)
00000000000042c5	movl	%edi, 0x8(%rbx)
00000000000042c8	callq	_mig_get_reply_port
00000000000042cd	movl	%eax, 0xc(%rbx)
00000000000042d0	movabsq	$0xcd00000000, %rcx
00000000000042da	movq	%rcx, 0x10(%rbx)
00000000000042de	movl	$0x0, (%rsp)
00000000000042e5	movl	$0x3, %esi
00000000000042ea	movl	$0x18, %edx
00000000000042ef	movl	$0x30, %ecx
00000000000042f4	xorl	%r9d, %r9d
00000000000042f7	movq	%rbx, %rdi
00000000000042fa	movl	%eax, %r8d
00000000000042fd	callq	_mach_msg
0000000000004302	movl	%eax, %ebx
0000000000004304	leal	-0x10000002(%rbx), %eax
000000000000430a	cmpl	$0xe, %eax
000000000000430d	ja	0x4323
000000000000430f	movl	$0x4003, %ecx
0000000000004314	btl	%eax, %ecx
0000000000004317	jae	0x4323
0000000000004319	movl	-0x34(%rbp), %edi
000000000000431c	callq	_mig_put_reply_port
0000000000004321	jmp	0x4377
0000000000004323	testl	%ebx, %ebx
0000000000004325	jne	0x4358
0000000000004327	movl	-0x2c(%rbp), %eax
000000000000432a	cmpl	$0x47, %eax
000000000000432d	je	0x4362
000000000000432f	cmpl	$0x131, %eax
0000000000004334	jne	0x4369
0000000000004336	cmpl	$0x0, -0x40(%rbp)
000000000000433a	movl	-0x3c(%rbp), %eax
000000000000433d	movl	$0xfffffed4, %ebx
0000000000004342	js	0x4382
0000000000004344	cmpl	$0x24, %eax
0000000000004347	jne	0x436e
0000000000004349	movl	-0x20(%rbp), %eax
000000000000434c	testl	%eax, %eax
000000000000434e	movl	$0xfffffed4, %ebx
0000000000004353	cmovnel	%eax, %ebx
0000000000004356	jmp	0x436e
0000000000004358	movl	-0x34(%rbp), %edi
000000000000435b	callq	_mig_dealloc_reply_port
0000000000004360	jmp	0x4377
0000000000004362	movl	$0xfffffecc, %ebx
0000000000004367	jmp	0x436e
0000000000004369	movl	$0xfffffed3, %ebx
000000000000436e	leaq	-0x40(%rbp), %rdi
0000000000004372	callq	_mach_msg_destroy
0000000000004377	movl	%ebx, %eax
0000000000004379	addq	$0x40, %rsp
000000000000437d	popq	%rbx
000000000000437e	popq	%r14
0000000000004380	popq	%rbp
0000000000004381	retq
0000000000004382	cmpl	$0x28, %eax
0000000000004385	jne	0x436e
0000000000004387	cmpl	$0x1, -0x28(%rbp)
000000000000438b	jne	0x436e
000000000000438d	movl	$0xffff0000, %eax
0000000000004392	andl	-0x1c(%rbp), %eax
0000000000004395	cmpl	$0x110000, %eax
000000000000439a	jne	0x436e
000000000000439c	movl	-0x24(%rbp), %eax
000000000000439f	movl	%eax, (%r14)
00000000000043a2	xorl	%ebx, %ebx
00000000000043a4	jmp	0x4377
_mig_put_reply_port:
00000000000043a6	retq
00000000000043a7	nop
_socket:
00000000000043a8	movl	$0x2000061, %eax
00000000000043ad	movq	%rcx, %r10
00000000000043b0	syscall
00000000000043b2	jae	0x43bc
00000000000043b4	movq	%rax, %rdi
00000000000043b7	jmp	_cerror_nocancel
00000000000043bc	retq
00000000000043bd	nop
00000000000043be	nop
00000000000043bf	nop
_socketpair:
___socketpair:
00000000000043c0	movl	$0x2000087, %eax
00000000000043c5	movq	%rcx, %r10
00000000000043c8	syscall
00000000000043ca	jae	0x43d4
00000000000043cc	movq	%rax, %rdi
00000000000043cf	jmp	_cerror_nocancel
00000000000043d4	retq
_setrlimit:
00000000000043d5	orl	$0x1000, %edi
00000000000043db	jmp	___setrlimit
___setrlimit:
00000000000043e0	movl	$0x20000c3, %eax
00000000000043e5	movq	%rcx, %r10
00000000000043e8	syscall
00000000000043ea	jae	0x43f4
00000000000043ec	movq	%rax, %rdi
00000000000043ef	jmp	_cerror_nocancel
00000000000043f4	retq
00000000000043f5	nop
00000000000043f6	nop
00000000000043f7	nop
_getsockopt:
00000000000043f8	movl	$0x2000076, %eax
00000000000043fd	movq	%rcx, %r10
0000000000004400	syscall
0000000000004402	jae	0x440c
0000000000004404	movq	%rax, %rdi
0000000000004407	jmp	_cerror_nocancel
000000000000440c	retq
_select:
000000000000440d	pushq	%rbp
000000000000440e	movq	%rsp, %rbp
0000000000004411	subq	$0x10, %rsp
0000000000004415	testq	%r8, %r8
0000000000004418	je	0x4442
000000000000441a	cmpq	$0x0, (%r8)
000000000000441e	jne	0x4445
0000000000004420	movl	0x8(%r8), %eax
0000000000004424	decl	%eax
0000000000004426	cmpl	$0x270e, %eax
000000000000442b	ja	0x4445
000000000000442d	leaq	-0x10(%rbp), %r8
0000000000004431	movq	$0x0, (%r8)
0000000000004438	movl	$0x2710, 0x8(%r8)
0000000000004440	jmp	0x4445
0000000000004442	xorl	%r8d, %r8d
0000000000004445	callq	_select$DARWIN_EXTSN
000000000000444a	addq	$0x10, %rsp
000000000000444e	popq	%rbp
000000000000444f	retq
_sendto:
___sendto:
0000000000004450	movl	$0x2000085, %eax
0000000000004455	movq	%rcx, %r10
0000000000004458	syscall
000000000000445a	jae	0x4464
000000000000445c	movq	%rax, %rdi
000000000000445f	jmp	_cerror
0000000000004464	retq
0000000000004465	nop
0000000000004466	nop
0000000000004467	nop
_recvfrom:
___recvfrom:
0000000000004468	movl	$0x200001d, %eax
000000000000446d	movq	%rcx, %r10
0000000000004470	syscall
0000000000004472	jae	0x447c
0000000000004474	movq	%rax, %rdi
0000000000004477	jmp	_cerror
000000000000447c	retq
_task_threads:
000000000000447d	pushq	%rbp
000000000000447e	movq	%rsp, %rbp
0000000000004481	pushq	%r15
0000000000004483	pushq	%r14
0000000000004485	pushq	%rbx
0000000000004486	subq	$0x48, %rsp
000000000000448a	movq	%rdx, %r14
000000000000448d	movq	%rsi, %r15
0000000000004490	leaq	-0x58(%rbp), %rbx
0000000000004494	movl	$0x1513, (%rbx)
000000000000449a	movl	%edi, 0x8(%rbx)
000000000000449d	callq	_mig_get_reply_port
00000000000044a2	movl	%eax, 0xc(%rbx)
00000000000044a5	movabsq	$0xd4a00000000, %rcx
00000000000044af	movq	%rcx, 0x10(%rbx)
00000000000044b3	movl	$0x0, (%rsp)
00000000000044ba	movl	$0x3, %esi
00000000000044bf	movl	$0x18, %edx
00000000000044c4	movl	$0x40, %ecx
00000000000044c9	xorl	%r9d, %r9d
00000000000044cc	movq	%rbx, %rdi
00000000000044cf	movl	%eax, %r8d
00000000000044d2	callq	_mach_msg
00000000000044d7	movl	%eax, %ebx
00000000000044d9	leal	-0x10000002(%rbx), %eax
00000000000044df	cmpl	$0xe, %eax
00000000000044e2	ja	0x44f8
00000000000044e4	movl	$0x4003, %ecx
00000000000044e9	btl	%eax, %ecx
00000000000044ec	jae	0x44f8
00000000000044ee	movl	-0x4c(%rbp), %edi
00000000000044f1	callq	_mig_put_reply_port
00000000000044f6	jmp	0x454c
00000000000044f8	testl	%ebx, %ebx
00000000000044fa	jne	0x452d
00000000000044fc	movl	-0x44(%rbp), %eax
00000000000044ff	cmpl	$0x47, %eax
0000000000004502	je	0x4537
0000000000004504	cmpl	$0xdae, %eax
0000000000004509	jne	0x453e
000000000000450b	cmpl	$0x0, -0x58(%rbp)
000000000000450f	movl	-0x54(%rbp), %eax
0000000000004512	movl	$0xfffffed4, %ebx
0000000000004517	js	0x4559
0000000000004519	cmpl	$0x24, %eax
000000000000451c	jne	0x4543
000000000000451e	movl	-0x38(%rbp), %eax
0000000000004521	testl	%eax, %eax
0000000000004523	movl	$0xfffffed4, %ebx
0000000000004528	cmovnel	%eax, %ebx
000000000000452b	jmp	0x4543
000000000000452d	movl	-0x4c(%rbp), %edi
0000000000004530	callq	_mig_dealloc_reply_port
0000000000004535	jmp	0x454c
0000000000004537	movl	$0xfffffecc, %ebx
000000000000453c	jmp	0x4543
000000000000453e	movl	$0xfffffed3, %ebx
0000000000004543	leaq	-0x58(%rbp), %rdi
0000000000004547	callq	_mach_msg_destroy
000000000000454c	movl	%ebx, %eax
000000000000454e	addq	$0x48, %rsp
0000000000004552	popq	%rbx
0000000000004553	popq	%r14
0000000000004555	popq	%r15
0000000000004557	popq	%rbp
0000000000004558	retq
0000000000004559	cmpl	$0x38, %eax
000000000000455c	jne	0x4543
000000000000455e	cmpl	$0x1, -0x40(%rbp)
0000000000004562	jne	0x4543
0000000000004564	movl	$0xffff0000, %eax
0000000000004569	andl	-0x34(%rbp), %eax
000000000000456c	cmpl	$0x2110000, %eax
0000000000004571	jne	0x4543
0000000000004573	movl	-0x30(%rbp), %eax
0000000000004576	cmpl	-0x24(%rbp), %eax
0000000000004579	jne	0x4543
000000000000457b	movq	-0x3c(%rbp), %rcx
000000000000457f	movq	%rcx, (%r15)
0000000000004582	movl	%eax, (%r14)
0000000000004585	xorl	%ebx, %ebx
0000000000004587	jmp	0x454c
_thread_get_state:
0000000000004589	pushq	%rbp
000000000000458a	movq	%rsp, %rbp
000000000000458d	pushq	%r15
000000000000458f	pushq	%r14
0000000000004591	pushq	%r12
0000000000004593	pushq	%rbx
0000000000004594	subq	$0x9d0, %rsp
000000000000459b	movq	%rcx, %r15
000000000000459e	leaq	_NDR_record(%rip), %rax
00000000000045a5	movq	(%rax), %rax
00000000000045a8	leaq	-0x9e8(%rbp), %rbx
00000000000045af	movq	%rax, 0x18(%rbx)
00000000000045b3	movl	%esi, 0x20(%rbx)
00000000000045b6	movl	(%rcx), %eax
00000000000045b8	movl	$0x266, %ecx
00000000000045bd	cmpl	%ecx, %eax
00000000000045bf	cmovbl	%eax, %ecx
00000000000045c2	movq	%rdx, %r14
00000000000045c5	movl	%ecx, 0x24(%rbx)
00000000000045c8	movl	$0x1513, (%rbx)
00000000000045ce	movl	%edi, 0x8(%rbx)
00000000000045d1	callq	_mig_get_reply_port
00000000000045d6	movl	%eax, 0xc(%rbx)
00000000000045d9	movabsq	$0xe1300000000, %rcx
00000000000045e3	movq	%rcx, 0x10(%rbx)
00000000000045e7	movl	$0x0, (%rsp)
00000000000045ee	movl	$0x3, %esi
00000000000045f3	movl	$0x28, %edx
00000000000045f8	movl	$0x9c8, %ecx
00000000000045fd	xorl	%r9d, %r9d
0000000000004600	movq	%rbx, %rdi
0000000000004603	movl	%eax, %r8d
0000000000004606	callq	_mach_msg
000000000000460b	movl	%eax, %ebx
000000000000460d	leal	-0x10000002(%rbx), %eax
0000000000004613	cmpl	$0xe, %eax
0000000000004616	ja	0x4632
0000000000004618	movl	$0x4003, %ecx
000000000000461d	btl	%eax, %ecx
0000000000004620	jae	0x4632
0000000000004622	movl	-0x9dc(%rbp), %edi
0000000000004628	callq	_mig_put_reply_port
000000000000462d	jmp	0x4709
0000000000004632	testl	%ebx, %ebx
0000000000004634	jne	0x4686
0000000000004636	movl	-0x9d4(%rbp), %eax
000000000000463c	cmpl	$0x47, %eax
000000000000463f	je	0x4693
0000000000004641	cmpl	$0xe77, %eax
0000000000004646	jne	0x469a
0000000000004648	cmpl	$0x0, -0x9e8(%rbp)
000000000000464f	js	0x46f8
0000000000004655	movl	-0x9e4(%rbp), %eax
000000000000465b	leal	-0x28(%rax), %ecx
000000000000465e	cmpl	$0x999, %ecx
0000000000004664	jb	0x46a1
0000000000004666	movl	$0xfffffed4, %ebx
000000000000466b	cmpl	$0x24, %eax
000000000000466e	jne	0x46fd
0000000000004674	movl	-0x9c8(%rbp), %eax
000000000000467a	testl	%eax, %eax
000000000000467c	movl	$0xfffffed4, %ebx
0000000000004681	cmovnel	%eax, %ebx
0000000000004684	jmp	0x46fd
0000000000004686	movl	-0x9dc(%rbp), %edi
000000000000468c	callq	_mig_dealloc_reply_port
0000000000004691	jmp	0x4709
0000000000004693	movl	$0xfffffecc, %ebx
0000000000004698	jmp	0x46fd
000000000000469a	movl	$0xfffffed3, %ebx
000000000000469f	jmp	0x46fd
00000000000046a1	movl	-0x9c8(%rbp), %ebx
00000000000046a7	testl	%ebx, %ebx
00000000000046a9	jne	0x46fd
00000000000046ab	movl	-0x9c4(%rbp), %r12d
00000000000046b2	cmpl	$0x266, %r12d
00000000000046b9	ja	0x46f8
00000000000046bb	shrl	$0x2, %ecx
00000000000046be	cmpl	%r12d, %ecx
00000000000046c1	jb	0x46f8
00000000000046c3	leal	0x28(,%r12,4), %ecx
00000000000046cb	movl	$0xfffffed4, %ebx
00000000000046d0	cmpl	%ecx, %eax
00000000000046d2	jne	0x46fd
00000000000046d4	movl	(%r15), %edx
00000000000046d7	leaq	-0x9c0(%rbp), %rsi
00000000000046de	cmpl	%edx, %r12d
00000000000046e1	jbe	0x471b
00000000000046e3	shll	$0x2, %edx
00000000000046e6	movq	%r14, %rdi
00000000000046e9	callq	_memcpy
00000000000046ee	movl	%r12d, (%r15)
00000000000046f1	movl	$0xfffffecd, %ebx
00000000000046f6	jmp	0x4709
00000000000046f8	movl	$0xfffffed4, %ebx
00000000000046fd	leaq	-0x9e8(%rbp), %rdi
0000000000004704	callq	_mach_msg_destroy
0000000000004709	movl	%ebx, %eax
000000000000470b	addq	$0x9d0, %rsp
0000000000004712	popq	%rbx
0000000000004713	popq	%r12
0000000000004715	popq	%r14
0000000000004717	popq	%r15
0000000000004719	popq	%rbp
000000000000471a	retq
000000000000471b	leal	(,%r12,4), %eax
0000000000004723	movl	%eax, %edx
0000000000004725	movq	%r14, %rdi
0000000000004728	callq	_memcpy
000000000000472d	movl	%r12d, (%r15)
0000000000004730	xorl	%ebx, %ebx
0000000000004732	jmp	0x4709
_proc_name:
0000000000004734	pushq	%rbp
0000000000004735	movq	%rsp, %rbp
0000000000004738	pushq	%r14
000000000000473a	pushq	%rbx
000000000000473b	subq	$0x90, %rsp
0000000000004742	cmpl	$0x1f, %edx
0000000000004745	ja	0x4756
0000000000004747	callq	___error
000000000000474c	movl	$0xc, (%rax)
0000000000004752	xorl	%ebx, %ebx
0000000000004754	jmp	0x47b1
0000000000004756	movq	%rsi, %r14
0000000000004759	movl	%edi, %eax
000000000000475b	xorl	%ebx, %ebx
000000000000475d	leaq	-0x98(%rbp), %r8
0000000000004764	movl	$0x2, %edi
0000000000004769	movl	$0x3, %edx
000000000000476e	xorl	%ecx, %ecx
0000000000004770	movl	$0x88, %r9d
0000000000004776	movl	%eax, %esi
0000000000004778	callq	___proc_info
000000000000477d	incl	%eax
000000000000477f	cmpl	$0x2, %eax
0000000000004782	jb	0x47b1
0000000000004784	cmpb	$0x0, -0x58(%rbp)
0000000000004788	je	0x4795
000000000000478a	leaq	-0x58(%rbp), %rdi
000000000000478e	movl	$0x20, %edx
0000000000004793	jmp	0x479e
0000000000004795	leaq	-0x68(%rbp), %rdi
0000000000004799	movl	$0x10, %edx
000000000000479e	movq	%r14, %rsi
00000000000047a1	callq	_bcopy
00000000000047a6	movq	%r14, %rdi
00000000000047a9	callq	_strlen
00000000000047ae	movq	%rax, %rbx
00000000000047b1	movl	%ebx, %eax
00000000000047b3	addq	$0x90, %rsp
00000000000047ba	popq	%rbx
00000000000047bb	popq	%r14
00000000000047bd	popq	%rbp
00000000000047be	retq
_bcopy:
00000000000047bf	movq	%rdi, %rax
00000000000047c2	movq	%rsi, %rdi
00000000000047c5	movq	%rax, %rsi
00000000000047c8	jmp	_memcpy
_strlen:
00000000000047cd	movq	__libkernel_string_functions(%rip), %rax
00000000000047d4	jmpq	*0x60(%rax)
00000000000047d7	nop
_necp_open:
00000000000047d8	movl	$0x20001f5, %eax
00000000000047dd	movq	%rcx, %r10
00000000000047e0	syscall
00000000000047e2	jae	0x47ec
00000000000047e4	movq	%rax, %rdi
00000000000047e7	jmp	_cerror_nocancel
00000000000047ec	retq
00000000000047ed	nop
00000000000047ee	nop
00000000000047ef	nop
_change_fdguard_np:
00000000000047f0	movl	$0x20001bc, %eax
00000000000047f5	movq	%rcx, %r10
00000000000047f8	syscall
00000000000047fa	jae	0x4804
00000000000047fc	movq	%rax, %rdi
00000000000047ff	jmp	_cerror_nocancel
0000000000004804	retq
0000000000004805	nop
0000000000004806	nop
0000000000004807	nop
_necp_client_action:
0000000000004808	movl	$0x20001f6, %eax
000000000000480d	movq	%rcx, %r10
0000000000004810	syscall
0000000000004812	jae	0x481c
0000000000004814	movq	%rax, %rdi
0000000000004817	jmp	_cerror_nocancel
000000000000481c	retq
_mach_port_guard:
000000000000481d	pushq	%rbp
000000000000481e	movq	%rsp, %rbp
0000000000004821	pushq	%r15
0000000000004823	pushq	%r14
0000000000004825	pushq	%r12
0000000000004827	pushq	%rbx
0000000000004828	movl	%ecx, %r14d
000000000000482b	movq	%rdx, %r15
000000000000482e	movl	%esi, %r12d
0000000000004831	movl	%edi, %ebx
0000000000004833	callq	__kernelrpc_mach_port_guard_trap
0000000000004838	cmpl	$0x10000003, %eax
000000000000483d	jne	0x4857
000000000000483f	movl	%ebx, %edi
0000000000004841	movl	%r12d, %esi
0000000000004844	movq	%r15, %rdx
0000000000004847	movl	%r14d, %ecx
000000000000484a	popq	%rbx
000000000000484b	popq	%r12
000000000000484d	popq	%r14
000000000000484f	popq	%r15
0000000000004851	popq	%rbp
0000000000004852	jmp	__kernelrpc_mach_port_guard
0000000000004857	popq	%rbx
0000000000004858	popq	%r12
000000000000485a	popq	%r14
000000000000485c	popq	%r15
000000000000485e	popq	%rbp
000000000000485f	retq
___psynch_cvwait:
0000000000004860	movl	$0x2000131, %eax
0000000000004865	movq	%rcx, %r10
0000000000004868	syscall
000000000000486a	jae	0x4874
000000000000486c	movq	%rax, %rdi
000000000000486f	jmp	_cerror_nocancel
0000000000004874	retq
0000000000004875	nop
0000000000004876	nop
0000000000004877	nop
___psynch_cvbroad:
0000000000004878	movl	$0x200012f, %eax
000000000000487d	movq	%rcx, %r10
0000000000004880	syscall
0000000000004882	jae	0x488c
0000000000004884	movq	%rax, %rdi
0000000000004887	jmp	_cerror_nocancel
000000000000488c	retq
_mach_msg_destroy:
000000000000488d	pushq	%rbp
000000000000488e	movq	%rsp, %rbp
0000000000004891	pushq	%r15
0000000000004893	pushq	%r14
0000000000004895	pushq	%r13
0000000000004897	pushq	%r12
0000000000004899	pushq	%rbx
000000000000489a	pushq	%rax
000000000000489b	movq	%rdi, %rbx
000000000000489e	movl	(%rdi), %r14d
00000000000048a1	movl	0x8(%rdi), %edi
00000000000048a4	movl	%r14d, %esi
00000000000048a7	andl	$0x1f, %esi
00000000000048aa	callq	_mach_msg_destroy_port
00000000000048af	movl	0x10(%rbx), %edi
00000000000048b2	movl	%r14d, %esi
00000000000048b5	shrl	$0x10, %esi
00000000000048b8	andl	$0x1f, %esi
00000000000048bb	callq	_mach_msg_destroy_port
00000000000048c0	testl	%r14d, %r14d
00000000000048c3	jns	0x4998
00000000000048c9	movl	0x18(%rbx), %r14d
00000000000048cd	testl	%r14d, %r14d
00000000000048d0	je	0x4998
00000000000048d6	addq	$0x1c, %rbx
00000000000048da	xorl	%r15d, %r15d
00000000000048dd	leaq	0xc4(%rip), %r12
00000000000048e4	movl	0x8(%rbx), %eax
00000000000048e7	movl	%eax, %ecx
00000000000048e9	shrl	$0x18, %ecx
00000000000048ec	cmpb	$0x3, %cl
00000000000048ef	ja	0x498c
00000000000048f5	movslq	(%r12,%rcx,4), %rcx
00000000000048f9	addq	%r12, %rcx
00000000000048fc	jmpq	*%rcx
00000000000048fe	movl	(%rbx), %edi
0000000000004900	shrl	$0x10, %eax
0000000000004903	movzbl	%al, %esi
0000000000004906	callq	_mach_msg_destroy_port
000000000000490b	addq	$0xc, %rbx
000000000000490f	jmp	0x498c
0000000000004911	testb	%al, %al
0000000000004913	je	0x4988
0000000000004915	movl	0xc(%rbx), %edx
0000000000004918	testq	%rdx, %rdx
000000000000491b	jne	0x4977
000000000000491d	jmp	0x4988
000000000000491f	cmpl	$0x0, 0xc(%rbx)
0000000000004923	je	0x4988
0000000000004925	movq	(%rbx), %r13
0000000000004928	movl	(%r13), %edi
000000000000492c	shrl	$0x10, %eax
000000000000492f	movzbl	%al, %esi
0000000000004932	callq	_mach_msg_destroy_port
0000000000004937	movl	0xc(%rbx), %eax
000000000000493a	cmpl	$0x2, %eax
000000000000493d	jb	0x495e
000000000000493f	movl	$0x1, %r12d
0000000000004945	movzbl	0xa(%rbx), %esi
0000000000004949	movl	(%r13,%r12,4), %edi
000000000000494e	callq	_mach_msg_destroy_port
0000000000004953	movl	0xc(%rbx), %eax
0000000000004956	incq	%r12
0000000000004959	cmpl	%eax, %r12d
000000000000495c	jb	0x4945
000000000000495e	testl	%eax, %eax
0000000000004960	leaq	0x41(%rip), %r12
0000000000004967	je	0x4988
0000000000004969	movzbl	0x8(%rbx), %ecx
000000000000496d	testl	%ecx, %ecx
000000000000496f	je	0x4988
0000000000004971	movl	%eax, %edx
0000000000004973	shlq	$0x2, %rdx
0000000000004977	movq	(%rbx), %rsi
000000000000497a	leaq	_mach_task_self_(%rip), %rax
0000000000004981	movl	(%rax), %edi
0000000000004983	callq	_vm_deallocate
0000000000004988	addq	$0x10, %rbx
000000000000498c	incl	%r15d
000000000000498f	cmpl	%r14d, %r15d
0000000000004992	jne	0x48e4
0000000000004998	addq	$0x8, %rsp
000000000000499c	popq	%rbx
000000000000499d	popq	%r12
000000000000499f	popq	%r13
00000000000049a1	popq	%r14
00000000000049a3	popq	%r15
00000000000049a5	popq	%rbp
00000000000049a6	retq
00000000000049a7	nop
00000000000049a8	pushq	%rsi
00000000000049a9	.byte 0xff #bad opcode
00000000000049aa	.byte 0xff #bad opcode
00000000000049ab	ljmpl	*-0x1(%rcx)
00000000000049ae	.byte 0xff #bad opcode
00000000000049af	pushq	-0x1(%rdi)
00000000000049b2	.byte 0xff #bad opcode
00000000000049b3	jmpq	*%rax
00000000000049b5	.byte 0xff #bad opcode
00000000000049b6	.byte 0xff #bad opcode
00000000000049b7	callq	*0x48(%rbp)
_mach_msg_destroy_port:
00000000000049b8	pushq	%rbp
00000000000049b9	movq	%rsp, %rbp
00000000000049bc	pushq	%r15
00000000000049be	pushq	%r14
00000000000049c0	pushq	%rbx
00000000000049c1	pushq	%rax
00000000000049c2	movl	%edi, %ebx
00000000000049c4	movl	%edi, -0x20(%rbp)
00000000000049c7	movl	%esi, -0x1c(%rbp)
00000000000049ca	leal	0x1(%rbx), %eax
00000000000049cd	cmpl	$0x2, %eax
00000000000049d0	jb	0x4a79
00000000000049d6	addl	$-0x10, %esi
00000000000049d9	cmpl	$0x5, %esi
00000000000049dc	ja	0x4a79
00000000000049e2	leaq	0x9b(%rip), %rax
00000000000049e9	movslq	(%rax,%rsi,4), %rcx
00000000000049ed	addq	%rax, %rcx
00000000000049f0	jmpq	*%rcx
00000000000049f2	leaq	_mach_task_self_(%rip), %rax
00000000000049f9	movl	(%rax), %edi
00000000000049fb	jmp	0x4a3c
00000000000049fd	leaq	_mach_task_self_(%rip), %rax
0000000000004a04	movl	(%rax), %edi
0000000000004a06	movl	$0x1, %edx
0000000000004a0b	movl	$0xffffffff, %ecx
0000000000004a10	movl	%ebx, %esi
0000000000004a12	addq	$0x8, %rsp
0000000000004a16	popq	%rbx
0000000000004a17	popq	%r14
0000000000004a19	popq	%r15
0000000000004a1b	popq	%rbp
0000000000004a1c	jmp	_mach_port_mod_refs
0000000000004a21	leaq	_mach_task_self_(%rip), %r14
0000000000004a28	movl	(%r14), %edi
0000000000004a2b	movl	$0x14, %ecx
0000000000004a30	movl	%ebx, %esi
0000000000004a32	movl	%ebx, %edx
0000000000004a34	callq	_mach_port_insert_right
0000000000004a39	movl	(%r14), %edi
0000000000004a3c	movl	%ebx, %esi
0000000000004a3e	addq	$0x8, %rsp
0000000000004a42	popq	%rbx
0000000000004a43	popq	%r14
0000000000004a45	popq	%r15
0000000000004a47	popq	%rbp
0000000000004a48	jmp	_mach_port_deallocate
0000000000004a4d	leaq	_mach_task_self_(%rip), %r15
0000000000004a54	movl	(%r15), %edi
0000000000004a57	leaq	-0x20(%rbp), %r14
0000000000004a5b	leaq	-0x1c(%rbp), %r8
0000000000004a5f	movl	$0x15, %edx
0000000000004a64	movl	%ebx, %esi
0000000000004a66	movq	%r14, %rcx
0000000000004a69	callq	_mach_port_extract_right
0000000000004a6e	movl	(%r15), %edi
0000000000004a71	movl	(%r14), %esi
0000000000004a74	callq	_mach_port_deallocate
0000000000004a79	addq	$0x8, %rsp
0000000000004a7d	popq	%rbx
0000000000004a7e	popq	%r14
0000000000004a80	popq	%r15
0000000000004a82	popq	%rbp
0000000000004a83	retq
0000000000004a84	jns	0x4a85
0000000000004a86	.byte 0xff #bad opcode
0000000000004a87	ljmpl	*-0x1(%rsi)
0000000000004a8a	.byte 0xff #bad opcode
0000000000004a8b	ljmpl	*-0x1(%rsi)
0000000000004a8e	.byte 0xff #bad opcode
0000000000004a8f	pushq	%rbp
0000000000004a91	.byte 0xff #bad opcode
0000000000004a92	.byte 0xff #bad opcode
0000000000004a93	lcalll	*-0x36000001(%rbp)
0000000000004a99	.byte 0xff #bad opcode
0000000000004a9a	.byte 0xff #bad opcode
0000000000004a9b	.byte 0xff #bad opcode
_listxattr:
0000000000004a9c	movl	$0x20000f0, %eax
0000000000004aa1	movq	%rcx, %r10
0000000000004aa4	syscall
0000000000004aa6	jae	0x4ab0
0000000000004aa8	movq	%rax, %rdi
0000000000004aab	jmp	_cerror_nocancel
0000000000004ab0	retq
0000000000004ab1	nop
0000000000004ab2	nop
0000000000004ab3	nop
_mkdirat:
0000000000004ab4	movl	$0x20001db, %eax
0000000000004ab9	movq	%rcx, %r10
0000000000004abc	syscall
0000000000004abe	jae	0x4ac8
0000000000004ac0	movq	%rax, %rdi
0000000000004ac3	jmp	_cerror_nocancel
0000000000004ac8	retq
_chmod:
0000000000004ac9	pushq	%rbp
0000000000004aca	movq	%rsp, %rbp
0000000000004acd	pushq	%r15
0000000000004acf	pushq	%r14
0000000000004ad1	pushq	%r13
0000000000004ad3	pushq	%r12
0000000000004ad5	pushq	%rbx
0000000000004ad6	pushq	%rax
0000000000004ad7	movl	%esi, %r15d
0000000000004ada	movq	%rdi, %r14
0000000000004add	callq	___chmod
0000000000004ae2	movl	%eax, %ebx
0000000000004ae4	testl	%eax, %eax
0000000000004ae6	jns	0x4b8e
0000000000004aec	callq	___error
0000000000004af1	cmpl	$0x1, (%rax)
0000000000004af4	jne	0x4b8e
0000000000004afa	movzwl	%r15w, %r13d
0000000000004afe	movl	%r13d, %r12d
0000000000004b01	andl	$0xc00, %r12d
0000000000004b08	je	0x4b8e
0000000000004b0e	btl	$0xa, %r13d
0000000000004b13	jb	0x4b46
0000000000004b15	btl	$0xb, %r13d
0000000000004b1a	jb	0x4b6b
0000000000004b1c	cmpl	$0xc00, %r12d
0000000000004b23	jne	0x4b8e
0000000000004b25	xorl	$0xc00, %r15d
0000000000004b2c	movzwl	%r15w, %esi
0000000000004b30	movq	%r14, %rdi
0000000000004b33	addq	$0x8, %rsp
0000000000004b37	popq	%rbx
0000000000004b38	popq	%r12
0000000000004b3a	popq	%r13
0000000000004b3c	popq	%r14
0000000000004b3e	popq	%r15
0000000000004b40	popq	%rbp
0000000000004b41	jmp	___chmod
0000000000004b46	movl	%r15d, %eax
0000000000004b49	xorl	$0x400, %eax
0000000000004b4e	movzwl	%ax, %esi
0000000000004b51	movq	%r14, %rdi
0000000000004b54	callq	___chmod
0000000000004b59	movl	%eax, %ebx
0000000000004b5b	testl	%eax, %eax
0000000000004b5d	jns	0x4b8e
0000000000004b5f	callq	___error
0000000000004b64	cmpl	$0x1, (%rax)
0000000000004b67	je	0x4b15
0000000000004b69	jmp	0x4b8e
0000000000004b6b	movl	%r15d, %eax
0000000000004b6e	xorl	$0x800, %eax
0000000000004b73	movzwl	%ax, %esi
0000000000004b76	movq	%r14, %rdi
0000000000004b79	callq	___chmod
0000000000004b7e	movl	%eax, %ebx
0000000000004b80	testl	%eax, %eax
0000000000004b82	jns	0x4b8e
0000000000004b84	callq	___error
0000000000004b89	cmpl	$0x1, (%rax)
0000000000004b8c	je	0x4b1c
0000000000004b8e	movl	%ebx, %eax
0000000000004b90	addq	$0x8, %rsp
0000000000004b94	popq	%rbx
0000000000004b95	popq	%r12
0000000000004b97	popq	%r13
0000000000004b99	popq	%r14
0000000000004b9b	popq	%r15
0000000000004b9d	popq	%rbp
0000000000004b9e	retq
0000000000004b9f	nop
___chmod:
0000000000004ba0	movl	$0x200000f, %eax
0000000000004ba5	movq	%rcx, %r10
0000000000004ba8	syscall
0000000000004baa	jae	0x4bb4
0000000000004bac	movq	%rax, %rdi
0000000000004baf	jmp	_cerror_nocancel
0000000000004bb4	retq
0000000000004bb5	nop
0000000000004bb6	nop
0000000000004bb7	nop
_umask:
0000000000004bb8	movl	$0x200003c, %eax
0000000000004bbd	movq	%rcx, %r10
0000000000004bc0	syscall
0000000000004bc2	jae	0x4bcc
0000000000004bc4	movq	%rax, %rdi
0000000000004bc7	jmp	_cerror_nocancel
0000000000004bcc	retq
_guarded_open_np:
0000000000004bcd	pushq	%rbp
0000000000004bce	movq	%rsp, %rbp
0000000000004bd1	subq	$0xd0, %rsp
0000000000004bd8	testb	%al, %al
0000000000004bda	je	0x4c02
0000000000004bdc	movaps	%xmm0, -0xa0(%rbp)
0000000000004be3	movaps	%xmm1, -0x90(%rbp)
0000000000004bea	movaps	%xmm2, -0x80(%rbp)
0000000000004bee	movaps	%xmm3, -0x70(%rbp)
0000000000004bf2	movaps	%xmm4, -0x60(%rbp)
0000000000004bf6	movaps	%xmm5, -0x50(%rbp)
0000000000004bfa	movaps	%xmm6, -0x40(%rbp)
0000000000004bfe	movaps	%xmm7, -0x30(%rbp)
0000000000004c02	movq	%r9, -0xa8(%rbp)
0000000000004c09	movq	%r8, -0xb0(%rbp)
0000000000004c10	xorl	%r8d, %r8d
0000000000004c13	btl	$0x9, %ecx
0000000000004c17	jae	0x4c63
0000000000004c19	movabsq	$0x3000000020, %rax
0000000000004c23	movq	%rax, -0x20(%rbp)
0000000000004c27	leaq	-0xd0(%rbp), %rax
0000000000004c2e	movq	%rax, -0x10(%rbp)
0000000000004c32	leaq	0x10(%rbp), %rax
0000000000004c36	movq	%rax, -0x18(%rbp)
0000000000004c3a	movslq	-0x20(%rbp), %r8
0000000000004c3e	cmpq	$0x28, %r8
0000000000004c42	ja	0x4c54
0000000000004c44	movq	%r8, %r9
0000000000004c47	addq	-0x10(%rbp), %r9
0000000000004c4b	leal	0x8(%r8), %eax
0000000000004c4f	movl	%eax, -0x20(%rbp)
0000000000004c52	jmp	0x4c60
0000000000004c54	movq	-0x18(%rbp), %r9
0000000000004c58	leaq	0x8(%r9), %rax
0000000000004c5c	movq	%rax, -0x18(%rbp)
0000000000004c60	movl	(%r9), %r8d
0000000000004c63	callq	___guarded_open_np
0000000000004c68	addq	$0xd0, %rsp
0000000000004c6f	popq	%rbp
0000000000004c70	retq
0000000000004c71	nop
0000000000004c72	nop
0000000000004c73	nop
___guarded_open_np:
0000000000004c74	movl	$0x20001b9, %eax
0000000000004c79	movq	%rcx, %r10
0000000000004c7c	syscall
0000000000004c7e	jae	0x4c88
0000000000004c80	movq	%rax, %rdi
0000000000004c83	jmp	_cerror_nocancel
0000000000004c88	retq
_fcntl$NOCANCEL:
0000000000004c89	pushq	%rbp
0000000000004c8a	movq	%rsp, %rbp
0000000000004c8d	subq	$0xd0, %rsp
0000000000004c94	testb	%al, %al
0000000000004c96	je	0x4cbe
0000000000004c98	movaps	%xmm0, -0xa0(%rbp)
0000000000004c9f	movaps	%xmm1, -0x90(%rbp)
0000000000004ca6	movaps	%xmm2, -0x80(%rbp)
0000000000004caa	movaps	%xmm3, -0x70(%rbp)
0000000000004cae	movaps	%xmm4, -0x60(%rbp)
0000000000004cb2	movaps	%xmm5, -0x50(%rbp)
0000000000004cb6	movaps	%xmm6, -0x40(%rbp)
0000000000004cba	movaps	%xmm7, -0x30(%rbp)
0000000000004cbe	leaq	-0xd0(%rbp), %rax
0000000000004cc5	movq	%r9, 0x28(%rax)
0000000000004cc9	movq	%r8, 0x20(%rax)
0000000000004ccd	movq	%rcx, 0x18(%rax)
0000000000004cd1	movq	%rdx, 0x10(%rax)
0000000000004cd5	movq	%rax, -0x10(%rbp)
0000000000004cd9	leaq	0x10(%rbp), %rax
0000000000004cdd	movq	%rax, -0x18(%rbp)
0000000000004ce1	movabsq	$0x3000000010, %rax
0000000000004ceb	movq	%rax, -0x20(%rbp)
0000000000004cef	leal	-0x2a(%rsi), %eax
0000000000004cf2	cmpl	$0x3a, %eax
0000000000004cf5	ja	0x4d3d
0000000000004cf7	movabsq	$0x79f0212618ac587, %rcx
0000000000004d01	btq	%rax, %rcx
0000000000004d05	jae	0x4d3d
0000000000004d07	movslq	-0x20(%rbp), %rcx
0000000000004d0b	cmpq	$0x28, %rcx
0000000000004d0f	ja	0x4d20
0000000000004d11	movq	%rcx, %rax
0000000000004d14	addq	-0x10(%rbp), %rax
0000000000004d18	leal	0x8(%rcx), %ecx
0000000000004d1b	movl	%ecx, -0x20(%rbp)
0000000000004d1e	jmp	0x4d2c
0000000000004d20	movq	-0x18(%rbp), %rax
0000000000004d24	leaq	0x8(%rax), %rcx
0000000000004d28	movq	%rcx, -0x18(%rbp)
0000000000004d2c	movq	(%rax), %rdx
0000000000004d2f	callq	___fcntl_nocancel
0000000000004d34	addq	$0xd0, %rsp
0000000000004d3b	popq	%rbp
0000000000004d3c	retq
0000000000004d3d	leal	-0x7(%rsi), %eax
0000000000004d40	cmpl	$0x4, %eax
0000000000004d43	jb	0x4d07
0000000000004d45	movslq	-0x20(%rbp), %rcx
0000000000004d49	cmpq	$0x28, %rcx
0000000000004d4d	ja	0x4d5e
0000000000004d4f	movq	%rcx, %rax
0000000000004d52	addq	-0x10(%rbp), %rax
0000000000004d56	leal	0x8(%rcx), %ecx
0000000000004d59	movl	%ecx, -0x20(%rbp)
0000000000004d5c	jmp	0x4d6a
0000000000004d5e	movq	-0x18(%rbp), %rax
0000000000004d62	leaq	0x8(%rax), %rcx
0000000000004d66	movq	%rcx, -0x18(%rbp)
0000000000004d6a	movslq	(%rax), %rdx
0000000000004d6d	jmp	0x4d2f
0000000000004d6f	nop
___fcntl_nocancel:
0000000000004d70	movl	$0x2000196, %eax
0000000000004d75	movq	%rcx, %r10
0000000000004d78	syscall
0000000000004d7a	jae	0x4d84
0000000000004d7c	movq	%rax, %rdi
0000000000004d7f	jmp	_cerror_nocancel
0000000000004d84	retq
0000000000004d85	nop
0000000000004d86	nop
0000000000004d87	nop
_fchown:
0000000000004d88	movl	$0x200007b, %eax
0000000000004d8d	movq	%rcx, %r10
0000000000004d90	syscall
0000000000004d92	jae	0x4d9c
0000000000004d94	movq	%rax, %rdi
0000000000004d97	jmp	_cerror_nocancel
0000000000004d9c	retq
0000000000004d9d	nop
0000000000004d9e	nop
0000000000004d9f	nop
_guarded_pwrite_np:
0000000000004da0	movl	$0x20001e6, %eax
0000000000004da5	movq	%rcx, %r10
0000000000004da8	syscall
0000000000004daa	jae	0x4db4
0000000000004dac	movq	%rax, %rdi
0000000000004daf	jmp	_cerror_nocancel
0000000000004db4	retq
_vm_purgable_control:
0000000000004db5	jmp	_mach_vm_purgable_control
_mach_vm_purgable_control:
0000000000004dba	pushq	%rbp
0000000000004dbb	movq	%rsp, %rbp
0000000000004dbe	pushq	%r15
0000000000004dc0	pushq	%r14
0000000000004dc2	pushq	%r12
0000000000004dc4	pushq	%rbx
0000000000004dc5	movq	%rcx, %r14
0000000000004dc8	movl	%edx, %r15d
0000000000004dcb	movq	%rsi, %r12
0000000000004dce	movl	%edi, %ebx
0000000000004dd0	callq	__kernelrpc_mach_vm_purgable_control_trap
0000000000004dd5	cmpl	$0x10000003, %eax
0000000000004dda	jne	0x4df4
0000000000004ddc	movl	%ebx, %edi
0000000000004dde	movq	%r12, %rsi
0000000000004de1	movl	%r15d, %edx
0000000000004de4	movq	%r14, %rcx
0000000000004de7	popq	%rbx
0000000000004de8	popq	%r12
0000000000004dea	popq	%r14
0000000000004dec	popq	%r15
0000000000004dee	popq	%rbp
0000000000004def	jmp	__kernelrpc_mach_vm_purgable_control
0000000000004df4	popq	%rbx
0000000000004df5	popq	%r12
0000000000004df7	popq	%r14
0000000000004df9	popq	%r15
0000000000004dfb	popq	%rbp
0000000000004dfc	retq
_semaphore_timedwait:
0000000000004dfd	movq	%rsi, %rdx
0000000000004e00	shrq	$0x20, %rdx
0000000000004e04	jmp	_semaphore_timedwait_trap
_semaphore_signal:
0000000000004e09	jmp	_semaphore_signal_trap
0000000000004e0e	nop
0000000000004e0f	nop
___gettimeofday_with_mach:
0000000000004e10	movl	$0x2000074, %eax
0000000000004e15	movq	%rcx, %r10
0000000000004e18	syscall
0000000000004e1a	jae	0x4e24
0000000000004e1c	movq	%rax, %rdi
0000000000004e1f	jmp	_cerror
0000000000004e24	retq
___gettimeofday:
0000000000004e25	movq	$0x0, %rdx
0000000000004e2c	movl	$0x2000074, %eax
0000000000004e31	movq	%rcx, %r10
0000000000004e34	syscall
0000000000004e36	jae	0x4e40
0000000000004e38	movq	%rax, %rdi
0000000000004e3b	jmp	_cerror_nocancel
0000000000004e40	cmpq	$0x0, %rax
0000000000004e44	je	0x4e4e
0000000000004e46	movq	%rax, (%rdi)
0000000000004e49	movl	%edx, 0x8(%rdi)
0000000000004e4c	xorl	%eax, %eax
0000000000004e4e	retq
_semaphore_destroy:
0000000000004e4f	pushq	%rbp
0000000000004e50	movq	%rsp, %rbp
0000000000004e53	pushq	%rbx
0000000000004e54	subq	$0x38, %rsp
0000000000004e58	leaq	-0x38(%rbp), %rbx
0000000000004e5c	movl	$0x1, 0x18(%rbx)
0000000000004e63	movl	%esi, 0x1c(%rbx)
0000000000004e66	movl	$0x110000, 0x24(%rbx)
0000000000004e6d	movl	$0x80001513, (%rbx)
0000000000004e73	movl	%edi, 0x8(%rbx)
0000000000004e76	callq	_mig_get_reply_port
0000000000004e7b	movl	%eax, 0xc(%rbx)
0000000000004e7e	movabsq	$0xd5b00000000, %rcx
0000000000004e88	movq	%rcx, 0x10(%rbx)
0000000000004e8c	movl	$0x0, (%rsp)
0000000000004e93	movl	$0x3, %esi
0000000000004e98	movl	$0x28, %edx
0000000000004e9d	movl	$0x2c, %ecx
0000000000004ea2	xorl	%r9d, %r9d
0000000000004ea5	movq	%rbx, %rdi
0000000000004ea8	movl	%eax, %r8d
0000000000004eab	callq	_mach_msg
0000000000004eb0	movl	%eax, %ebx
0000000000004eb2	leal	-0x10000002(%rbx), %eax
0000000000004eb8	cmpl	$0xe, %eax
0000000000004ebb	ja	0x4ed1
0000000000004ebd	movl	$0x4003, %ecx
0000000000004ec2	btl	%eax, %ecx
0000000000004ec5	jae	0x4ed1
0000000000004ec7	movl	-0x2c(%rbp), %edi
0000000000004eca	callq	_mig_put_reply_port
0000000000004ecf	jmp	0x4f1f
0000000000004ed1	testl	%ebx, %ebx
0000000000004ed3	jne	0x4f00
0000000000004ed5	movl	-0x24(%rbp), %eax
0000000000004ed8	cmpl	$0x47, %eax
0000000000004edb	je	0x4f0a
0000000000004edd	cmpl	$0xdbf, %eax
0000000000004ee2	jne	0x4f11
0000000000004ee4	movl	$0xfffffed4, %ebx
0000000000004ee9	cmpl	$0x0, -0x38(%rbp)
0000000000004eed	js	0x4f16
0000000000004eef	cmpl	$0x24, -0x34(%rbp)
0000000000004ef3	jne	0x4f16
0000000000004ef5	movl	-0x18(%rbp), %ebx
0000000000004ef8	testl	%ebx, %ebx
0000000000004efa	jne	0x4f16
0000000000004efc	xorl	%ebx, %ebx
0000000000004efe	jmp	0x4f1f
0000000000004f00	movl	-0x2c(%rbp), %edi
0000000000004f03	callq	_mig_dealloc_reply_port
0000000000004f08	jmp	0x4f1f
0000000000004f0a	movl	$0xfffffecc, %ebx
0000000000004f0f	jmp	0x4f16
0000000000004f11	movl	$0xfffffed3, %ebx
0000000000004f16	leaq	-0x38(%rbp), %rdi
0000000000004f1a	callq	_mach_msg_destroy
0000000000004f1f	movl	%ebx, %eax
0000000000004f21	addq	$0x38, %rsp
0000000000004f25	popq	%rbx
0000000000004f26	popq	%rbp
0000000000004f27	retq
___semwait_signal:
0000000000004f28	movl	$0x200014e, %eax
0000000000004f2d	movq	%rcx, %r10
0000000000004f30	syscall
0000000000004f32	jae	0x4f3c
0000000000004f34	movq	%rax, %rdi
0000000000004f37	jmp	_cerror
0000000000004f3c	retq
0000000000004f3d	nop
0000000000004f3e	nop
0000000000004f3f	nop
_write:
0000000000004f40	movl	$0x2000004, %eax
0000000000004f45	movq	%rcx, %r10
0000000000004f48	syscall
0000000000004f4a	jae	0x4f54
0000000000004f4c	movq	%rax, %rdi
0000000000004f4f	jmp	_cerror
0000000000004f54	retq
0000000000004f55	nop
0000000000004f56	nop
0000000000004f57	nop
_fsync:
0000000000004f58	movl	$0x200005f, %eax
0000000000004f5d	movq	%rcx, %r10
0000000000004f60	syscall
0000000000004f62	jae	0x4f6c
0000000000004f64	movq	%rax, %rdi
0000000000004f67	jmp	_cerror
0000000000004f6c	retq
0000000000004f6d	nop
0000000000004f6e	nop
0000000000004f6f	nop
_fsetxattr:
0000000000004f70	movl	$0x20000ed, %eax
0000000000004f75	movq	%rcx, %r10
0000000000004f78	syscall
0000000000004f7a	jae	0x4f84
0000000000004f7c	movq	%rax, %rdi
0000000000004f7f	jmp	_cerror_nocancel
0000000000004f84	retq
0000000000004f85	nop
0000000000004f86	nop
0000000000004f87	nop
_chown:
0000000000004f88	movl	$0x2000010, %eax
0000000000004f8d	movq	%rcx, %r10
0000000000004f90	syscall
0000000000004f92	jae	0x4f9c
0000000000004f94	movq	%rax, %rdi
0000000000004f97	jmp	_cerror_nocancel
0000000000004f9c	retq
0000000000004f9d	nop
0000000000004f9e	nop
0000000000004f9f	nop
_removexattr:
0000000000004fa0	movl	$0x20000ee, %eax
0000000000004fa5	movq	%rcx, %r10
0000000000004fa8	syscall
0000000000004faa	jae	0x4fb4
0000000000004fac	movq	%rax, %rdi
0000000000004faf	jmp	_cerror_nocancel
0000000000004fb4	retq
_rename:
0000000000004fb5	pushq	%rbp
0000000000004fb6	movq	%rsp, %rbp
0000000000004fb9	pushq	%rbx
0000000000004fba	pushq	%rax
0000000000004fbb	callq	___rename
0000000000004fc0	movl	%eax, %ebx
0000000000004fc2	testl	%eax, %eax
0000000000004fc4	jne	0x4fcb
0000000000004fc6	callq	___inc_remove_counter
0000000000004fcb	movl	%ebx, %eax
0000000000004fcd	addq	$0x8, %rsp
0000000000004fd1	popq	%rbx
0000000000004fd2	popq	%rbp
0000000000004fd3	retq
___rename:
0000000000004fd4	movl	$0x2000080, %eax
0000000000004fd9	movq	%rcx, %r10
0000000000004fdc	syscall
0000000000004fde	jae	0x4fe8
0000000000004fe0	movq	%rax, %rdi
0000000000004fe3	jmp	_cerror
0000000000004fe8	retq
___inc_remove_counter:
0000000000004fe9	lock
0000000000004fea	incq	___remove_counter(%rip)
0000000000004ff1	retq
0000000000004ff2	nop
0000000000004ff3	nop
_setxattr:
0000000000004ff4	movl	$0x20000ec, %eax
0000000000004ff9	movq	%rcx, %r10
0000000000004ffc	syscall
0000000000004ffe	jae	0x5008
0000000000005000	movq	%rax, %rdi
0000000000005003	jmp	_cerror_nocancel
0000000000005008	retq
_clock_get_time:
0000000000005009	pushq	%rbp
000000000000500a	movq	%rsp, %rbp
000000000000500d	pushq	%r14
000000000000500f	pushq	%rbx
0000000000005010	subq	$0x40, %rsp
0000000000005014	movq	%rsi, %r14
0000000000005017	leaq	-0x48(%rbp), %rbx
000000000000501b	movl	$0x1513, (%rbx)
0000000000005021	movl	%edi, 0x8(%rbx)
0000000000005024	callq	_mig_get_reply_port
0000000000005029	movl	%eax, 0xc(%rbx)
000000000000502c	movabsq	$0x3e800000000, %rcx
0000000000005036	movq	%rcx, 0x10(%rbx)
000000000000503a	movl	$0x0, (%rsp)
0000000000005041	movl	$0x3, %esi
0000000000005046	movl	$0x18, %edx
000000000000504b	movl	$0x34, %ecx
0000000000005050	xorl	%r9d, %r9d
0000000000005053	movq	%rbx, %rdi
0000000000005056	movl	%eax, %r8d
0000000000005059	callq	_mach_msg
000000000000505e	movl	%eax, %ebx
0000000000005060	leal	-0x10000002(%rbx), %eax
0000000000005066	cmpl	$0xe, %eax
0000000000005069	ja	0x507f
000000000000506b	movl	$0x4003, %ecx
0000000000005070	btl	%eax, %ecx
0000000000005073	jae	0x507f
0000000000005075	movl	-0x3c(%rbp), %edi
0000000000005078	callq	_mig_put_reply_port
000000000000507d	jmp	0x50d4
000000000000507f	testl	%ebx, %ebx
0000000000005081	jne	0x50b3
0000000000005083	movl	-0x34(%rbp), %eax
0000000000005086	cmpl	$0x47, %eax
0000000000005089	je	0x50bd
000000000000508b	cmpl	$0x44c, %eax
0000000000005090	jne	0x50c4
0000000000005092	movl	$0xfffffed4, %eax
0000000000005097	cmpl	$0x0, -0x48(%rbp)
000000000000509b	js	0x50c9
000000000000509d	movl	-0x44(%rbp), %ecx
00000000000050a0	cmpl	$0x2c, %ecx
00000000000050a3	je	0x50df
00000000000050a5	cmpl	$0x24, %ecx
00000000000050a8	jne	0x50c9
00000000000050aa	movl	-0x28(%rbp), %ebx
00000000000050ad	testl	%ebx, %ebx
00000000000050af	jne	0x50cb
00000000000050b1	jmp	0x50c9
00000000000050b3	movl	-0x3c(%rbp), %edi
00000000000050b6	callq	_mig_dealloc_reply_port
00000000000050bb	jmp	0x50d4
00000000000050bd	movl	$0xfffffecc, %eax
00000000000050c2	jmp	0x50c9
00000000000050c4	movl	$0xfffffed3, %eax
00000000000050c9	movl	%eax, %ebx
00000000000050cb	leaq	-0x48(%rbp), %rdi
00000000000050cf	callq	_mach_msg_destroy
00000000000050d4	movl	%ebx, %eax
00000000000050d6	addq	$0x40, %rsp
00000000000050da	popq	%rbx
00000000000050db	popq	%r14
00000000000050dd	popq	%rbp
00000000000050de	retq
00000000000050df	movl	-0x28(%rbp), %ebx
00000000000050e2	testl	%ebx, %ebx
00000000000050e4	jne	0x50cb
00000000000050e6	movq	-0x24(%rbp), %rax
00000000000050ea	movq	%rax, (%r14)
00000000000050ed	xorl	%ebx, %ebx
00000000000050ef	jmp	0x50d4
00000000000050f1	nop
00000000000050f2	nop
00000000000050f3	nop
___semwait_signal_nocancel:
00000000000050f4	movl	$0x20001a7, %eax
00000000000050f9	movq	%rcx, %r10
00000000000050fc	syscall
00000000000050fe	jae	0x5108
0000000000005100	movq	%rax, %rdi
0000000000005103	jmp	_cerror_nocancel
0000000000005108	retq
_sigsuspend$NOCANCEL:
0000000000005109	testq	%rdi, %rdi
000000000000510c	je	0x5115
000000000000510e	movl	(%rdi), %edi
0000000000005110	jmp	___sigsuspend_nocancel
0000000000005115	xorl	%edi, %edi
0000000000005117	jmp	___sigsuspend_nocancel
___sigsuspend_nocancel:
000000000000511c	movl	$0x200019a, %eax
0000000000005121	movq	%rcx, %r10
0000000000005124	syscall
0000000000005126	jae	0x5130
0000000000005128	movq	%rax, %rdi
000000000000512b	jmp	_cerror_nocancel
0000000000005130	retq
0000000000005131	nop
0000000000005132	nop
0000000000005133	nop
_setgid:
0000000000005134	movl	$0x20000b5, %eax
0000000000005139	movq	%rcx, %r10
000000000000513c	syscall
000000000000513e	jae	0x5148
0000000000005140	movq	%rax, %rdi
0000000000005143	jmp	_cerror_nocancel
0000000000005148	retq
0000000000005149	nop
000000000000514a	nop
000000000000514b	nop
_setuid:
000000000000514c	movl	$0x2000017, %eax
0000000000005151	movq	%rcx, %r10
0000000000005154	syscall
0000000000005156	jae	0x5160
0000000000005158	movq	%rax, %rdi
000000000000515b	jmp	_cerror_nocancel
0000000000005160	retq
0000000000005161	nop
0000000000005162	nop
0000000000005163	nop
_write$NOCANCEL:
___write_nocancel:
0000000000005164	movl	$0x200018d, %eax
0000000000005169	movq	%rcx, %r10
000000000000516c	syscall
000000000000516e	jae	0x5178
0000000000005170	movq	%rax, %rdi
0000000000005173	jmp	_cerror_nocancel
0000000000005178	retq
_unlink:
0000000000005179	pushq	%rbp
000000000000517a	movq	%rsp, %rbp
000000000000517d	pushq	%rbx
000000000000517e	pushq	%rax
000000000000517f	callq	___unlink
0000000000005184	movl	%eax, %ebx
0000000000005186	testl	%eax, %eax
0000000000005188	jne	0x518f
000000000000518a	callq	___inc_remove_counter
000000000000518f	movl	%ebx, %eax
0000000000005191	addq	$0x8, %rsp
0000000000005195	popq	%rbx
0000000000005196	popq	%rbp
0000000000005197	retq
___unlink:
0000000000005198	movl	$0x200000a, %eax
000000000000519d	movq	%rcx, %r10
00000000000051a0	syscall
00000000000051a2	jae	0x51ac
00000000000051a4	movq	%rax, %rdi
00000000000051a7	jmp	_cerror
00000000000051ac	retq
00000000000051ad	nop
00000000000051ae	nop
00000000000051af	nop
___bind:
_bind:
00000000000051b0	movl	$0x2000068, %eax
00000000000051b5	movq	%rcx, %r10
00000000000051b8	syscall
00000000000051ba	jae	0x51c4
00000000000051bc	movq	%rax, %rdi
00000000000051bf	jmp	_cerror_nocancel
00000000000051c4	retq
00000000000051c5	nop
00000000000051c6	nop
00000000000051c7	nop
_listen:
___listen:
00000000000051c8	movl	$0x200006a, %eax
00000000000051cd	movq	%rcx, %r10
00000000000051d0	syscall
00000000000051d2	jae	0x51dc
00000000000051d4	movq	%rax, %rdi
00000000000051d7	jmp	_cerror_nocancel
00000000000051dc	retq
00000000000051dd	nop
00000000000051de	nop
00000000000051df	nop
___accept:
_accept:
00000000000051e0	movl	$0x200001e, %eax
00000000000051e5	movq	%rcx, %r10
00000000000051e8	syscall
00000000000051ea	jae	0x51f4
00000000000051ec	movq	%rax, %rdi
00000000000051ef	jmp	_cerror
00000000000051f4	retq
_mig_strncpy:
00000000000051f5	testl	%edx, %edx
00000000000051f7	jle	0x5223
00000000000051f9	movl	$0x1, %eax
00000000000051fe	cmpl	$0x1, %edx
0000000000005201	je	0x521f
0000000000005203	xorl	%ecx, %ecx
0000000000005205	movb	(%rsi,%rcx), %al
0000000000005208	movb	%al, (%rdi,%rcx)
000000000000520b	testb	%al, %al
000000000000520d	je	0x5226
000000000000520f	incq	%rcx
0000000000005212	leal	0x1(%rcx), %eax
0000000000005215	cmpl	%edx, %eax
0000000000005217	jl	0x5205
0000000000005219	leal	0x1(%rcx), %eax
000000000000521c	addq	%rcx, %rdi
000000000000521f	movb	$0x0, (%rdi)
0000000000005222	retq
0000000000005223	xorl	%eax, %eax
0000000000005225	retq
0000000000005226	incl	%ecx
0000000000005228	movl	%ecx, %eax
000000000000522a	retq
_thread_policy_get:
000000000000522b	pushq	%rbp
000000000000522c	movq	%rsp, %rbp
000000000000522f	pushq	%r15
0000000000005231	pushq	%r14
0000000000005233	pushq	%r13
0000000000005235	pushq	%r12
0000000000005237	pushq	%rbx
0000000000005238	subq	$0x88, %rsp
000000000000523f	movq	%r8, %r12
0000000000005242	movq	%rcx, %r14
0000000000005245	movq	%rdx, %r15
0000000000005248	leaq	_NDR_record(%rip), %rax
000000000000524f	movq	(%rax), %rax
0000000000005252	leaq	-0xa0(%rbp), %rbx
0000000000005259	movq	%rax, 0x18(%rbx)
000000000000525d	movl	%esi, 0x20(%rbx)
0000000000005260	movl	(%rcx), %eax
0000000000005262	movl	$0x10, %ecx
0000000000005267	cmpl	%ecx, %eax
0000000000005269	cmovbl	%eax, %ecx
000000000000526c	movl	%ecx, 0x24(%rbx)
000000000000526f	movl	(%r8), %eax
0000000000005272	movl	%eax, 0x28(%rbx)
0000000000005275	movl	$0x1513, (%rbx)
000000000000527b	movl	%edi, 0x8(%rbx)
000000000000527e	callq	_mig_get_reply_port
0000000000005283	movl	%eax, 0xc(%rbx)
0000000000005286	movabsq	$0xe2200000000, %rcx
0000000000005290	movq	%rcx, 0x10(%rbx)
0000000000005294	movl	$0x0, (%rsp)
000000000000529b	movl	$0x3, %esi
00000000000052a0	movl	$0x2c, %edx
00000000000052a5	movl	$0x74, %ecx
00000000000052aa	xorl	%r9d, %r9d
00000000000052ad	movq	%rbx, %rdi
00000000000052b0	movl	%eax, %r8d
00000000000052b3	callq	_mach_msg
00000000000052b8	movl	%eax, %ebx
00000000000052ba	leal	-0x10000002(%rbx), %eax
00000000000052c0	cmpl	$0xe, %eax
00000000000052c3	ja	0x52df
00000000000052c5	movl	$0x4003, %ecx
00000000000052ca	btl	%eax, %ecx
00000000000052cd	jae	0x52df
00000000000052cf	movl	-0x94(%rbp), %edi
00000000000052d5	callq	_mig_put_reply_port
00000000000052da	jmp	0x53a3
00000000000052df	testl	%ebx, %ebx
00000000000052e1	jne	0x5329
00000000000052e3	movl	-0x8c(%rbp), %eax
00000000000052e9	cmpl	$0x47, %eax
00000000000052ec	je	0x5336
00000000000052ee	cmpl	$0xe86, %eax
00000000000052f3	jne	0x533d
00000000000052f5	cmpl	$0x0, -0xa0(%rbp)
00000000000052fc	js	0x5392
0000000000005302	movl	-0x9c(%rbp), %eax
0000000000005308	leal	-0x2c(%rax), %ecx
000000000000530b	cmpl	$0x41, %ecx
000000000000530e	jb	0x5344
0000000000005310	movl	$0xfffffed4, %ebx
0000000000005315	cmpl	$0x24, %eax
0000000000005318	jne	0x5397
000000000000531a	movl	-0x80(%rbp), %eax
000000000000531d	testl	%eax, %eax
000000000000531f	movl	$0xfffffed4, %ebx
0000000000005324	cmovnel	%eax, %ebx
0000000000005327	jmp	0x5397
0000000000005329	movl	-0x94(%rbp), %edi
000000000000532f	callq	_mig_dealloc_reply_port
0000000000005334	jmp	0x53a3
0000000000005336	movl	$0xfffffecc, %ebx
000000000000533b	jmp	0x5397
000000000000533d	movl	$0xfffffed3, %ebx
0000000000005342	jmp	0x5397
0000000000005344	movl	-0x80(%rbp), %ebx
0000000000005347	testl	%ebx, %ebx
0000000000005349	jne	0x5397
000000000000534b	movl	-0x7c(%rbp), %r13d
000000000000534f	cmpl	$0x10, %r13d
0000000000005353	ja	0x5392
0000000000005355	shrl	$0x2, %ecx
0000000000005358	cmpl	%r13d, %ecx
000000000000535b	jb	0x5392
000000000000535d	leal	(,%r13,4), %ecx
0000000000005365	leal	0x2c(%rcx), %edx
0000000000005368	movl	$0xfffffed4, %ebx
000000000000536d	cmpl	%edx, %eax
000000000000536f	jne	0x5397
0000000000005371	leaq	-0x78(%rbp), %rsi
0000000000005375	movl	(%r14), %edx
0000000000005378	cmpl	%edx, %r13d
000000000000537b	jbe	0x53b7
000000000000537d	shll	$0x2, %edx
0000000000005380	movq	%r15, %rdi
0000000000005383	callq	_memcpy
0000000000005388	movl	%r13d, (%r14)
000000000000538b	movl	$0xfffffecd, %ebx
0000000000005390	jmp	0x53a3
0000000000005392	movl	$0xfffffed4, %ebx
0000000000005397	leaq	-0xa0(%rbp), %rdi
000000000000539e	callq	_mach_msg_destroy
00000000000053a3	movl	%ebx, %eax
00000000000053a5	addq	$0x88, %rsp
00000000000053ac	popq	%rbx
00000000000053ad	popq	%r12
00000000000053af	popq	%r13
00000000000053b1	popq	%r14
00000000000053b3	popq	%r15
00000000000053b5	popq	%rbp
00000000000053b6	retq
00000000000053b7	movl	%ecx, %ebx
00000000000053b9	movq	%r15, %rdi
00000000000053bc	movq	%rbx, %rdx
00000000000053bf	callq	_memcpy
00000000000053c4	movl	%r13d, (%r14)
00000000000053c7	movl	-0x78(%rbp,%rbx), %eax
00000000000053cb	movl	%eax, (%r12)
00000000000053cf	xorl	%ebx, %ebx
00000000000053d1	jmp	0x53a3
_thread_policy_set:
00000000000053d3	pushq	%rbp
00000000000053d4	movq	%rsp, %rbp
00000000000053d7	pushq	%rbx
00000000000053d8	pushq	%rax
00000000000053d9	movl	%edi, %ebx
00000000000053db	callq	__kernelrpc_thread_policy_set
00000000000053e0	cmpl	$0x33, %eax
00000000000053e3	je	0x53f0
00000000000053e5	testl	%eax, %eax
00000000000053e7	jne	0x53f2
00000000000053e9	movl	%ebx, %edi
00000000000053eb	callq	__pthread_clear_qos_tsd
00000000000053f0	xorl	%eax, %eax
00000000000053f2	addq	$0x8, %rsp
00000000000053f6	popq	%rbx
00000000000053f7	popq	%rbp
00000000000053f8	retq
__kernelrpc_thread_policy_set:
00000000000053f9	pushq	%rbp
00000000000053fa	movq	%rsp, %rbp
00000000000053fd	pushq	%r15
00000000000053ff	pushq	%r14
0000000000005401	pushq	%rbx
0000000000005402	subq	$0x78, %rsp
0000000000005406	leaq	_NDR_record(%rip), %rax
000000000000540d	movq	(%rax), %rax
0000000000005410	movq	%rax, -0x68(%rbp)
0000000000005414	movl	%esi, -0x60(%rbp)
0000000000005417	movl	$0xfffffecd, %r14d
000000000000541d	cmpl	$0x10, %ecx
0000000000005420	ja	0x550c
0000000000005426	movl	%ecx, %ebx
0000000000005428	movl	%edi, %r15d
000000000000542b	leaq	-0x58(%rbp), %r14
000000000000542f	leal	(,%rbx,4), %eax
0000000000005436	movq	%r14, %rdi
0000000000005439	movq	%rdx, %rsi
000000000000543c	movq	%rax, %rdx
000000000000543f	callq	_memcpy
0000000000005444	movl	%ebx, -0x4(%r14)
0000000000005448	leal	0x28(,%rbx,4), %ebx
000000000000544f	movl	$0x1513, -0x28(%r14)
0000000000005457	movl	%r15d, -0x20(%r14)
000000000000545b	callq	_mig_get_reply_port
0000000000005460	movl	%eax, -0x1c(%r14)
0000000000005464	movabsq	$0xe2100000000, %rcx
000000000000546e	movq	%rcx, -0x18(%r14)
0000000000005472	movl	$0x0, (%rsp)
0000000000005479	leaq	-0x80(%rbp), %rdi
000000000000547d	movl	$0x3, %esi
0000000000005482	movl	$0x2c, %ecx
0000000000005487	xorl	%r9d, %r9d
000000000000548a	movl	%eax, %r8d
000000000000548d	movl	%ebx, %edx
000000000000548f	callq	_mach_msg
0000000000005494	movl	%eax, %r14d
0000000000005497	leal	-0x10000002(%r14), %eax
000000000000549e	cmpl	$0xe, %eax
00000000000054a1	ja	0x54b7
00000000000054a3	movl	$0x4003, %ecx
00000000000054a8	btl	%eax, %ecx
00000000000054ab	jae	0x54b7
00000000000054ad	movl	-0x74(%rbp), %edi
00000000000054b0	callq	_mig_put_reply_port
00000000000054b5	jmp	0x550c
00000000000054b7	testl	%r14d, %r14d
00000000000054ba	jne	0x54eb
00000000000054bc	movl	-0x6c(%rbp), %eax
00000000000054bf	cmpl	$0x47, %eax
00000000000054c2	je	0x54f5
00000000000054c4	cmpl	$0xe85, %eax
00000000000054c9	jne	0x54fd
00000000000054cb	movl	$0xfffffed4, %r14d
00000000000054d1	cmpl	$0x0, -0x80(%rbp)
00000000000054d5	js	0x5503
00000000000054d7	cmpl	$0x24, -0x7c(%rbp)
00000000000054db	jne	0x5503
00000000000054dd	movl	-0x60(%rbp), %r14d
00000000000054e1	testl	%r14d, %r14d
00000000000054e4	jne	0x5503
00000000000054e6	xorl	%r14d, %r14d
00000000000054e9	jmp	0x550c
00000000000054eb	movl	-0x74(%rbp), %edi
00000000000054ee	callq	_mig_dealloc_reply_port
00000000000054f3	jmp	0x550c
00000000000054f5	movl	$0xfffffecc, %r14d
00000000000054fb	jmp	0x5503
00000000000054fd	movl	$0xfffffed3, %r14d
0000000000005503	leaq	-0x80(%rbp), %rdi
0000000000005507	callq	_mach_msg_destroy
000000000000550c	movl	%r14d, %eax
000000000000550f	addq	$0x78, %rsp
0000000000005513	popq	%rbx
0000000000005514	popq	%r14
0000000000005516	popq	%r15
0000000000005518	popq	%rbp
0000000000005519	retq
__pthread_clear_qos_tsd:
000000000000551a	leaq	__libkernel_functions(%rip), %rax
0000000000005521	movq	(%rax), %rax
0000000000005524	cmpq	$0x3, (%rax)
0000000000005528	jb	0x5535
000000000000552a	movq	0x58(%rax), %rax
000000000000552e	testq	%rax, %rax
0000000000005531	je	0x5535
0000000000005533	jmpq	*%rax
0000000000005535	retq
0000000000005536	nop
0000000000005537	nop
_connect:
___connect:
0000000000005538	movl	$0x2000062, %eax
000000000000553d	movq	%rcx, %r10
0000000000005540	syscall
0000000000005542	jae	0x554c
0000000000005544	movq	%rax, %rdi
0000000000005547	jmp	_cerror
000000000000554c	retq
___get_remove_counter:
000000000000554d	mfence
0000000000005550	movq	___remove_counter(%rip), %rax
0000000000005557	retq
_quotactl:
0000000000005558	movl	$0x20000a5, %eax
000000000000555d	movq	%rcx, %r10
0000000000005560	syscall
0000000000005562	jae	0x556c
0000000000005564	movq	%rax, %rdi
0000000000005567	jmp	_cerror_nocancel
000000000000556c	retq
000000000000556d	nop
000000000000556e	nop
000000000000556f	nop
___settid:
_pthread_setugid_np:
0000000000005570	movl	$0x200011d, %eax
0000000000005575	movq	%rcx, %r10
0000000000005578	syscall
000000000000557a	jae	0x5584
000000000000557c	movq	%rax, %rdi
000000000000557f	jmp	_cerror_nocancel
0000000000005584	retq
0000000000005585	nop
0000000000005586	nop
0000000000005587	nop
_syscall:
___syscall:
0000000000005588	movl	$0x2000000, %eax
000000000000558d	movq	%rcx, %r10
0000000000005590	syscall
0000000000005592	jae	0x559c
0000000000005594	movq	%rax, %rdi
0000000000005597	jmp	_cerror
000000000000559c	retq
000000000000559d	nop
000000000000559e	nop
000000000000559f	nop
_getfsstat$INODE64:
_getfsstat64:
00000000000055a0	movl	$0x200015b, %eax
00000000000055a5	movq	%rcx, %r10
00000000000055a8	syscall
00000000000055aa	jae	0x55b4
00000000000055ac	movq	%rax, %rdi
00000000000055af	jmp	_cerror_nocancel
00000000000055b4	retq
00000000000055b5	nop
00000000000055b6	nop
00000000000055b7	nop
___psynch_cvsignal:
00000000000055b8	movl	$0x2000130, %eax
00000000000055bd	movq	%rcx, %r10
00000000000055c0	syscall
00000000000055c2	jae	0x55cc
00000000000055c4	movq	%rax, %rdi
00000000000055c7	jmp	_cerror_nocancel
00000000000055cc	retq
00000000000055cd	nop
00000000000055ce	nop
00000000000055cf	nop
_setsid:
00000000000055d0	movl	$0x2000093, %eax
00000000000055d5	movq	%rcx, %r10
00000000000055d8	syscall
00000000000055da	jae	0x55e4
00000000000055dc	movq	%rax, %rdi
00000000000055df	jmp	_cerror_nocancel
00000000000055e4	retq
00000000000055e5	nop
00000000000055e6	nop
00000000000055e7	nop
_dup2:
00000000000055e8	movl	$0x200005a, %eax
00000000000055ed	movq	%rcx, %r10
00000000000055f0	syscall
00000000000055f2	jae	0x55fc
00000000000055f4	movq	%rax, %rdi
00000000000055f7	jmp	_cerror_nocancel
00000000000055fc	retq
_mach_port_move_member:
00000000000055fd	pushq	%rbp
00000000000055fe	movq	%rsp, %rbp
0000000000005601	pushq	%r15
0000000000005603	pushq	%r14
0000000000005605	pushq	%rbx
0000000000005606	pushq	%rax
0000000000005607	movl	%edx, %r14d
000000000000560a	movl	%esi, %r15d
000000000000560d	movl	%edi, %ebx
000000000000560f	callq	__kernelrpc_mach_port_move_member_trap
0000000000005614	cmpl	$0x10000003, %eax
0000000000005619	jne	0x5632
000000000000561b	movl	%ebx, %edi
000000000000561d	movl	%r15d, %esi
0000000000005620	movl	%r14d, %edx
0000000000005623	addq	$0x8, %rsp
0000000000005627	popq	%rbx
0000000000005628	popq	%r14
000000000000562a	popq	%r15
000000000000562c	popq	%rbp
000000000000562d	jmp	__kernelrpc_mach_port_move_member
0000000000005632	addq	$0x8, %rsp
0000000000005636	popq	%rbx
0000000000005637	popq	%r14
0000000000005639	popq	%r15
000000000000563b	popq	%rbp
000000000000563c	retq
000000000000563d	nop
_mach_msg_overwrite:
000000000000563e	pushq	%rbp
000000000000563f	movq	%rsp, %rbp
0000000000005642	pushq	%r15
0000000000005644	pushq	%r14
0000000000005646	pushq	%r13
0000000000005648	pushq	%r12
000000000000564a	pushq	%rbx
000000000000564b	subq	$0x18, %rsp
000000000000564f	movl	%ecx, %r13d
0000000000005652	movl	%esi, %ebx
0000000000005654	movq	%rdi, %r14
0000000000005657	movl	0x20(%rbp), %eax
000000000000565a	movl	0x10(%rbp), %r10d
000000000000565e	movl	%esi, %r12d
0000000000005661	andl	$0xfffffbbf, %r12d
0000000000005668	subq	$0x8, %rsp
000000000000566c	movl	%r12d, %esi
000000000000566f	movl	%edx, %r15d
0000000000005672	movl	%r8d, -0x2c(%rbp)
0000000000005676	movl	%r9d, -0x30(%rbp)
000000000000567a	pushq	%rax
000000000000567b	pushq	0x18(%rbp)
000000000000567e	pushq	%r10
0000000000005680	callq	_mach_msg_overwrite_trap
0000000000005685	addq	$0x20, %rsp
0000000000005689	testl	%eax, %eax
000000000000568b	je	0x5737
0000000000005691	movl	%ebx, -0x34(%rbp)
0000000000005694	testb	$0x40, %bl
0000000000005697	jne	0x56e5
0000000000005699	cmpl	$0x10000007, %eax
000000000000569e	jne	0x56e5
00000000000056a0	movq	%r14, %rbx
00000000000056a3	movl	%r12d, %r14d
00000000000056a6	movl	%r13d, %r12d
00000000000056a9	movl	-0x2c(%rbp), %r13d
00000000000056ad	subq	$0x8, %rsp
00000000000056b1	movq	%rbx, %rdi
00000000000056b4	movl	%r14d, %esi
00000000000056b7	movl	%r15d, %edx
00000000000056ba	movl	%r12d, %ecx
00000000000056bd	movl	%r13d, %r8d
00000000000056c0	movl	-0x30(%rbp), %r9d
00000000000056c4	movl	0x20(%rbp), %eax
00000000000056c7	pushq	%rax
00000000000056c8	pushq	0x18(%rbp)
00000000000056cb	movl	0x10(%rbp), %eax
00000000000056ce	pushq	%rax
00000000000056cf	callq	_mach_msg_overwrite_trap
00000000000056d4	addq	$0x20, %rsp
00000000000056d8	cmpl	$0x10000007, %eax
00000000000056dd	je	0x56ad
00000000000056df	movl	%r12d, %r13d
00000000000056e2	movq	%rbx, %r14
00000000000056e5	movl	-0x34(%rbp), %r12d
00000000000056e9	btl	$0xa, %r12d
00000000000056ee	jb	0x5739
00000000000056f0	cmpl	$0x10004005, %eax
00000000000056f5	jne	0x5739
00000000000056f7	andl	$0xfffffbbe, %r12d
00000000000056fe	movl	-0x30(%rbp), %r15d
0000000000005702	movl	-0x2c(%rbp), %ebx
0000000000005705	subq	$0x8, %rsp
0000000000005709	xorl	%edx, %edx
000000000000570b	movq	%r14, %rdi
000000000000570e	movl	%r12d, %esi
0000000000005711	movl	%r13d, %ecx
0000000000005714	movl	%ebx, %r8d
0000000000005717	movl	%r15d, %r9d
000000000000571a	movl	0x20(%rbp), %eax
000000000000571d	pushq	%rax
000000000000571e	pushq	0x18(%rbp)
0000000000005721	movl	0x10(%rbp), %eax
0000000000005724	pushq	%rax
0000000000005725	callq	_mach_msg_overwrite_trap
000000000000572a	addq	$0x20, %rsp
000000000000572e	cmpl	$0x10004005, %eax
0000000000005733	je	0x5705
0000000000005735	jmp	0x5739
0000000000005737	xorl	%eax, %eax
0000000000005739	addq	$0x18, %rsp
000000000000573d	popq	%rbx
000000000000573e	popq	%r12
0000000000005740	popq	%r13
0000000000005742	popq	%r14
0000000000005744	popq	%r15
0000000000005746	popq	%rbp
0000000000005747	retq
_proc_pidpath:
0000000000005748	pushq	%rbp
0000000000005749	movq	%rsp, %rbp
000000000000574c	pushq	%r14
000000000000574e	pushq	%rbx
000000000000574f	cmpl	$0x3ff, %edx
0000000000005755	ja	0x5764
0000000000005757	callq	___error
000000000000575c	movl	$0xc, (%rax)
0000000000005762	jmp	0x5779
0000000000005764	movl	%edx, %eax
0000000000005766	cmpl	$0x1001, %edx
000000000000576c	jb	0x5782
000000000000576e	callq	___error
0000000000005773	movl	$0x54, (%rax)
0000000000005779	xorl	%ebx, %ebx
000000000000577b	movl	%ebx, %eax
000000000000577d	popq	%rbx
000000000000577e	popq	%r14
0000000000005780	popq	%rbp
0000000000005781	retq
0000000000005782	movq	%rsi, %r14
0000000000005785	movl	%edi, %esi
0000000000005787	xorl	%ebx, %ebx
0000000000005789	movl	$0x2, %edi
000000000000578e	movl	$0xb, %edx
0000000000005793	xorl	%ecx, %ecx
0000000000005795	movq	%r14, %r8
0000000000005798	movl	%eax, %r9d
000000000000579b	callq	___proc_info
00000000000057a0	cmpl	$-0x1, %eax
00000000000057a3	je	0x577b
00000000000057a5	movq	%r14, %rdi
00000000000057a8	callq	_strlen
00000000000057ad	movq	%rax, %rbx
00000000000057b0	jmp	0x577b
00000000000057b2	nop
00000000000057b3	nop
_writev:
00000000000057b4	movl	$0x2000079, %eax
00000000000057b9	movq	%rcx, %r10
00000000000057bc	syscall
00000000000057be	jae	0x57c8
00000000000057c0	movq	%rax, %rdi
00000000000057c3	jmp	_cerror
00000000000057c8	retq
_task_policy_set:
00000000000057c9	pushq	%rbp
00000000000057ca	movq	%rsp, %rbp
00000000000057cd	pushq	%r15
00000000000057cf	pushq	%r14
00000000000057d1	pushq	%rbx
00000000000057d2	subq	$0x78, %rsp
00000000000057d6	leaq	_NDR_record(%rip), %rax
00000000000057dd	movq	(%rax), %rax
00000000000057e0	movq	%rax, -0x68(%rbp)
00000000000057e4	movl	%esi, -0x60(%rbp)
00000000000057e7	movl	$0xfffffecd, %r14d
00000000000057ed	cmpl	$0x10, %ecx
00000000000057f0	ja	0x58dc
00000000000057f6	movl	%ecx, %ebx
00000000000057f8	movl	%edi, %r15d
00000000000057fb	leaq	-0x58(%rbp), %r14
00000000000057ff	leal	(,%rbx,4), %eax
0000000000005806	movq	%r14, %rdi
0000000000005809	movq	%rdx, %rsi
000000000000580c	movq	%rax, %rdx
000000000000580f	callq	_memcpy
0000000000005814	movl	%ebx, -0x4(%r14)
0000000000005818	leal	0x28(,%rbx,4), %ebx
000000000000581f	movl	$0x1513, -0x28(%r14)
0000000000005827	movl	%r15d, -0x20(%r14)
000000000000582b	callq	_mig_get_reply_port
0000000000005830	movl	%eax, -0x1c(%r14)
0000000000005834	movabsq	$0xd5c00000000, %rcx
000000000000583e	movq	%rcx, -0x18(%r14)
0000000000005842	movl	$0x0, (%rsp)
0000000000005849	leaq	-0x80(%rbp), %rdi
000000000000584d	movl	$0x3, %esi
0000000000005852	movl	$0x2c, %ecx
0000000000005857	xorl	%r9d, %r9d
000000000000585a	movl	%eax, %r8d
000000000000585d	movl	%ebx, %edx
000000000000585f	callq	_mach_msg
0000000000005864	movl	%eax, %r14d
0000000000005867	leal	-0x10000002(%r14), %eax
000000000000586e	cmpl	$0xe, %eax
0000000000005871	ja	0x5887
0000000000005873	movl	$0x4003, %ecx
0000000000005878	btl	%eax, %ecx
000000000000587b	jae	0x5887
000000000000587d	movl	-0x74(%rbp), %edi
0000000000005880	callq	_mig_put_reply_port
0000000000005885	jmp	0x58dc
0000000000005887	testl	%r14d, %r14d
000000000000588a	jne	0x58bb
000000000000588c	movl	-0x6c(%rbp), %eax
000000000000588f	cmpl	$0x47, %eax
0000000000005892	je	0x58c5
0000000000005894	cmpl	$0xdc0, %eax
0000000000005899	jne	0x58cd
000000000000589b	movl	$0xfffffed4, %r14d
00000000000058a1	cmpl	$0x0, -0x80(%rbp)
00000000000058a5	js	0x58d3
00000000000058a7	cmpl	$0x24, -0x7c(%rbp)
00000000000058ab	jne	0x58d3
00000000000058ad	movl	-0x60(%rbp), %r14d
00000000000058b1	testl	%r14d, %r14d
00000000000058b4	jne	0x58d3
00000000000058b6	xorl	%r14d, %r14d
00000000000058b9	jmp	0x58dc
00000000000058bb	movl	-0x74(%rbp), %edi
00000000000058be	callq	_mig_dealloc_reply_port
00000000000058c3	jmp	0x58dc
00000000000058c5	movl	$0xfffffecc, %r14d
00000000000058cb	jmp	0x58d3
00000000000058cd	movl	$0xfffffed3, %r14d
00000000000058d3	leaq	-0x80(%rbp), %rdi
00000000000058d7	callq	_mach_msg_destroy
00000000000058dc	movl	%r14d, %eax
00000000000058df	addq	$0x78, %rsp
00000000000058e3	popq	%rbx
00000000000058e4	popq	%r14
00000000000058e6	popq	%r15
00000000000058e8	popq	%rbp
00000000000058e9	retq
_mach_voucher_attr_command:
00000000000058ea	pushq	%rbp
00000000000058eb	movq	%rsp, %rbp
00000000000058ee	pushq	%r15
00000000000058f0	pushq	%r14
00000000000058f2	pushq	%r13
00000000000058f4	pushq	%r12
00000000000058f6	pushq	%rbx
00000000000058f7	subq	$0x1048, %rsp
00000000000058fe	leaq	_NDR_record(%rip), %rax
0000000000005905	movq	(%rax), %rax
0000000000005908	movq	%rax, -0x1048(%rbp)
000000000000590f	movl	%esi, -0x1040(%rbp)
0000000000005915	movl	%edx, -0x103c(%rbp)
000000000000591b	movl	$0xfffffecd, %r15d
0000000000005921	cmpl	$0x1000, %r8d
0000000000005928	ja	0x5ac2
000000000000592e	movl	%r8d, %ebx
0000000000005931	movl	%edi, %r12d
0000000000005934	movq	%r9, -0x30(%rbp)
0000000000005938	movq	0x10(%rbp), %r14
000000000000593c	leaq	-0x1034(%rbp), %r15
0000000000005943	movl	%r8d, %edx
0000000000005946	movq	%r15, %rdi
0000000000005949	movq	%rcx, %rsi
000000000000594c	callq	_memcpy
0000000000005951	movl	%ebx, -0x4(%r15)
0000000000005955	addl	$0x3, %ebx
0000000000005958	andl	$-0x4, %ebx
000000000000595b	leal	0x30(%rbx), %r13d
000000000000595f	movl	(%r14), %eax
0000000000005962	movl	$0x1000, %ecx
0000000000005967	cmpl	%ecx, %eax
0000000000005969	cmovbl	%eax, %ecx
000000000000596c	leaq	-0x1060(%rbp), %r14
0000000000005973	movl	%ecx, 0x2c(%rbx,%r14)
0000000000005978	movl	$0x1513, -0x2c(%r15)
0000000000005980	movl	%r12d, -0x24(%r15)
0000000000005984	callq	_mig_get_reply_port
0000000000005989	movl	%eax, -0x20(%r15)
000000000000598d	movabsq	$0x151b00000000, %rcx
0000000000005997	movq	%rcx, -0x1c(%r15)
000000000000599b	movl	$0x0, (%rsp)
00000000000059a2	movl	$0x3, %esi
00000000000059a7	movl	$0x1030, %ecx
00000000000059ac	xorl	%r9d, %r9d
00000000000059af	movq	%r14, %rdi
00000000000059b2	movl	%r13d, %edx
00000000000059b5	movl	%eax, %r8d
00000000000059b8	callq	_mach_msg
00000000000059bd	movl	%eax, %r15d
00000000000059c0	leal	-0x10000002(%r15), %eax
00000000000059c7	cmpl	$0xe, %eax
00000000000059ca	ja	0x59e6
00000000000059cc	movl	$0x4003, %ecx
00000000000059d1	btl	%eax, %ecx
00000000000059d4	jae	0x59e6
00000000000059d6	movl	-0x1054(%rbp), %edi
00000000000059dc	callq	_mig_put_reply_port
00000000000059e1	jmp	0x5ac2
00000000000059e6	testl	%r15d, %r15d
00000000000059e9	jne	0x5a3e
00000000000059eb	movl	-0x104c(%rbp), %eax
00000000000059f1	cmpl	$0x47, %eax
00000000000059f4	je	0x5a4b
00000000000059f6	cmpl	$0x157f, %eax
00000000000059fb	jne	0x5a53
00000000000059fd	cmpl	$0x0, -0x1060(%rbp)
0000000000005a04	js	0x5ab0
0000000000005a0a	movl	-0x105c(%rbp), %eax
0000000000005a10	leal	-0x28(%rax), %ecx
0000000000005a13	cmpl	$0x1001, %ecx
0000000000005a19	jb	0x5a5b
0000000000005a1b	movl	$0xfffffed4, %r15d
0000000000005a21	cmpl	$0x24, %eax
0000000000005a24	jne	0x5ab6
0000000000005a2a	movl	-0x1040(%rbp), %eax
0000000000005a30	testl	%eax, %eax
0000000000005a32	movl	$0xfffffed4, %r15d
0000000000005a38	cmovnel	%eax, %r15d
0000000000005a3c	jmp	0x5ab6
0000000000005a3e	movl	-0x1054(%rbp), %edi
0000000000005a44	callq	_mig_dealloc_reply_port
0000000000005a49	jmp	0x5ac2
0000000000005a4b	movl	$0xfffffecc, %r15d
0000000000005a51	jmp	0x5ab6
0000000000005a53	movl	$0xfffffed3, %r15d
0000000000005a59	jmp	0x5ab6
0000000000005a5b	movl	-0x1040(%rbp), %r15d
0000000000005a62	testl	%r15d, %r15d
0000000000005a65	jne	0x5ab6
0000000000005a67	movl	-0x103c(%rbp), %ebx
0000000000005a6d	cmpq	$0x1000, %rbx
0000000000005a74	ja	0x5ab0
0000000000005a76	cmpl	%ebx, %ecx
0000000000005a78	jb	0x5ab0
0000000000005a7a	leal	0x2b(%rbx), %ecx
0000000000005a7d	andl	$-0x4, %ecx
0000000000005a80	movl	$0xfffffed4, %r15d
0000000000005a86	cmpl	%ecx, %eax
0000000000005a88	jne	0x5ab6
0000000000005a8a	leaq	-0x1038(%rbp), %rsi
0000000000005a91	movq	0x10(%rbp), %r14
0000000000005a95	movl	(%r14), %edx
0000000000005a98	cmpl	%edx, %ebx
0000000000005a9a	jbe	0x5ad7
0000000000005a9c	movq	-0x30(%rbp), %rdi
0000000000005aa0	callq	_memcpy
0000000000005aa5	movl	%ebx, (%r14)
0000000000005aa8	movl	$0xfffffecd, %r15d
0000000000005aae	jmp	0x5ac2
0000000000005ab0	movl	$0xfffffed4, %r15d
0000000000005ab6	leaq	-0x1060(%rbp), %rdi
0000000000005abd	callq	_mach_msg_destroy
0000000000005ac2	movl	%r15d, %eax
0000000000005ac5	addq	$0x1048, %rsp
0000000000005acc	popq	%rbx
0000000000005acd	popq	%r12
0000000000005acf	popq	%r13
0000000000005ad1	popq	%r14
0000000000005ad3	popq	%r15
0000000000005ad5	popq	%rbp
0000000000005ad6	retq
0000000000005ad7	movq	-0x30(%rbp), %rdi
0000000000005adb	movq	%rbx, %rdx
0000000000005ade	callq	_memcpy
0000000000005ae3	movl	%ebx, (%r14)
0000000000005ae6	xorl	%r15d, %r15d
0000000000005ae9	jmp	0x5ac2
0000000000005aeb	nop
___psynch_rw_rdlock:
0000000000005aec	movl	$0x2000132, %eax
0000000000005af1	movq	%rcx, %r10
0000000000005af4	syscall
0000000000005af6	jae	0x5b00
0000000000005af8	movq	%rax, %rdi
0000000000005afb	jmp	_cerror_nocancel
0000000000005b00	retq
0000000000005b01	nop
0000000000005b02	nop
0000000000005b03	nop
___psynch_rw_wrlock:
0000000000005b04	movl	$0x2000133, %eax
0000000000005b09	movq	%rcx, %r10
0000000000005b0c	syscall
0000000000005b0e	jae	0x5b18
0000000000005b10	movq	%rax, %rdi
0000000000005b13	jmp	_cerror_nocancel
0000000000005b18	retq
0000000000005b19	nop
0000000000005b1a	nop
0000000000005b1b	nop
___psynch_rw_unlock:
0000000000005b1c	movl	$0x2000134, %eax
0000000000005b21	movq	%rcx, %r10
0000000000005b24	syscall
0000000000005b26	jae	0x5b30
0000000000005b28	movq	%rax, %rdi
0000000000005b2b	jmp	_cerror_nocancel
0000000000005b30	retq
_semaphore_wait:
0000000000005b31	jmp	_semaphore_wait_trap
0000000000005b36	nop
0000000000005b37	nop
_chdir:
0000000000005b38	movl	$0x200000c, %eax
0000000000005b3d	movq	%rcx, %r10
0000000000005b40	syscall
0000000000005b42	jae	0x5b4c
0000000000005b44	movq	%rax, %rdi
0000000000005b47	jmp	_cerror_nocancel
0000000000005b4c	retq
0000000000005b4d	nop
0000000000005b4e	nop
0000000000005b4f	nop
_seteuid:
0000000000005b50	movl	$0x20000b7, %eax
0000000000005b55	movq	%rcx, %r10
0000000000005b58	syscall
0000000000005b5a	jae	0x5b64
0000000000005b5c	movq	%rax, %rdi
0000000000005b5f	jmp	_cerror_nocancel
0000000000005b64	retq
0000000000005b65	nop
0000000000005b66	nop
0000000000005b67	nop
_setegid:
0000000000005b68	movl	$0x20000b6, %eax
0000000000005b6d	movq	%rcx, %r10
0000000000005b70	syscall
0000000000005b72	jae	0x5b7c
0000000000005b74	movq	%rax, %rdi
0000000000005b77	jmp	_cerror_nocancel
0000000000005b7c	retq
0000000000005b7d	nop
0000000000005b7e	nop
0000000000005b7f	nop
_fileport_makeport:
0000000000005b80	movl	$0x20001ae, %eax
0000000000005b85	movq	%rcx, %r10
0000000000005b88	syscall
0000000000005b8a	jae	0x5b94
0000000000005b8c	movq	%rax, %rdi
0000000000005b8f	jmp	_cerror_nocancel
0000000000005b94	retq
_thread_info:
0000000000005b95	pushq	%rbp
0000000000005b96	movq	%rsp, %rbp
0000000000005b99	pushq	%r15
0000000000005b9b	pushq	%r14
0000000000005b9d	pushq	%r12
0000000000005b9f	pushq	%rbx
0000000000005ba0	subq	$0xc0, %rsp
0000000000005ba7	movq	%rcx, %r15
0000000000005baa	leaq	_NDR_record(%rip), %rax
0000000000005bb1	movq	(%rax), %rax
0000000000005bb4	leaq	-0xd0(%rbp), %rbx
0000000000005bbb	movq	%rax, 0x18(%rbx)
0000000000005bbf	movl	%esi, 0x20(%rbx)
0000000000005bc2	movl	(%rcx), %eax
0000000000005bc4	movl	$0x20, %ecx
0000000000005bc9	cmpl	%ecx, %eax
0000000000005bcb	cmovbl	%eax, %ecx
0000000000005bce	movq	%rdx, %r14
0000000000005bd1	movl	%ecx, 0x24(%rbx)
0000000000005bd4	movl	$0x1513, (%rbx)
0000000000005bda	movl	%edi, 0x8(%rbx)
0000000000005bdd	callq	_mig_get_reply_port
0000000000005be2	movl	%eax, 0xc(%rbx)
0000000000005be5	movabsq	$0xe1c00000000, %rcx
0000000000005bef	movq	%rcx, 0x10(%rbx)
0000000000005bf3	movl	$0x0, (%rsp)
0000000000005bfa	movl	$0x3, %esi
0000000000005bff	movl	$0x28, %edx
0000000000005c04	movl	$0xb0, %ecx
0000000000005c09	xorl	%r9d, %r9d
0000000000005c0c	movq	%rbx, %rdi
0000000000005c0f	movl	%eax, %r8d
0000000000005c12	callq	_mach_msg
0000000000005c17	movl	%eax, %ebx
0000000000005c19	leal	-0x10000002(%rbx), %eax
0000000000005c1f	cmpl	$0xe, %eax
0000000000005c22	ja	0x5c3e
0000000000005c24	movl	$0x4003, %ecx
0000000000005c29	btl	%eax, %ecx
0000000000005c2c	jae	0x5c3e
0000000000005c2e	movl	-0xc4(%rbp), %edi
0000000000005c34	callq	_mig_put_reply_port
0000000000005c39	jmp	0x5d12
0000000000005c3e	testl	%ebx, %ebx
0000000000005c40	jne	0x5c92
0000000000005c42	movl	-0xbc(%rbp), %eax
0000000000005c48	cmpl	$0x47, %eax
0000000000005c4b	je	0x5c9f
0000000000005c4d	cmpl	$0xe80, %eax
0000000000005c52	jne	0x5ca6
0000000000005c54	cmpl	$0x0, -0xd0(%rbp)
0000000000005c5b	js	0x5d01
0000000000005c61	movl	-0xcc(%rbp), %eax
0000000000005c67	leal	-0x28(%rax), %ecx
0000000000005c6a	cmpl	$0x81, %ecx
0000000000005c70	jb	0x5cad
0000000000005c72	movl	$0xfffffed4, %ebx
0000000000005c77	cmpl	$0x24, %eax
0000000000005c7a	jne	0x5d06
0000000000005c80	movl	-0xb0(%rbp), %eax
0000000000005c86	testl	%eax, %eax
0000000000005c88	movl	$0xfffffed4, %ebx
0000000000005c8d	cmovnel	%eax, %ebx
0000000000005c90	jmp	0x5d06
0000000000005c92	movl	-0xc4(%rbp), %edi
0000000000005c98	callq	_mig_dealloc_reply_port
0000000000005c9d	jmp	0x5d12
0000000000005c9f	movl	$0xfffffecc, %ebx
0000000000005ca4	jmp	0x5d06
0000000000005ca6	movl	$0xfffffed3, %ebx
0000000000005cab	jmp	0x5d06
0000000000005cad	movl	-0xb0(%rbp), %ebx
0000000000005cb3	testl	%ebx, %ebx
0000000000005cb5	jne	0x5d06
0000000000005cb7	movl	-0xac(%rbp), %r12d
0000000000005cbe	cmpl	$0x20, %r12d
0000000000005cc2	ja	0x5d01
0000000000005cc4	shrl	$0x2, %ecx
0000000000005cc7	cmpl	%r12d, %ecx
0000000000005cca	jb	0x5d01
0000000000005ccc	leal	0x28(,%r12,4), %ecx
0000000000005cd4	movl	$0xfffffed4, %ebx
0000000000005cd9	cmpl	%ecx, %eax
0000000000005cdb	jne	0x5d06
0000000000005cdd	movl	(%r15), %edx
0000000000005ce0	leaq	-0xa8(%rbp), %rsi
0000000000005ce7	cmpl	%edx, %r12d
0000000000005cea	jbe	0x5d24
0000000000005cec	shll	$0x2, %edx
0000000000005cef	movq	%r14, %rdi
0000000000005cf2	callq	_memcpy
0000000000005cf7	movl	%r12d, (%r15)
0000000000005cfa	movl	$0xfffffecd, %ebx
0000000000005cff	jmp	0x5d12
0000000000005d01	movl	$0xfffffed4, %ebx
0000000000005d06	leaq	-0xd0(%rbp), %rdi
0000000000005d0d	callq	_mach_msg_destroy
0000000000005d12	movl	%ebx, %eax
0000000000005d14	addq	$0xc0, %rsp
0000000000005d1b	popq	%rbx
0000000000005d1c	popq	%r12
0000000000005d1e	popq	%r14
0000000000005d20	popq	%r15
0000000000005d22	popq	%rbp
0000000000005d23	retq
0000000000005d24	leal	(,%r12,4), %eax
0000000000005d2c	movl	%eax, %edx
0000000000005d2e	movq	%r14, %rdi
0000000000005d31	callq	_memcpy
0000000000005d36	movl	%r12d, (%r15)
0000000000005d39	xorl	%ebx, %ebx
0000000000005d3b	jmp	0x5d12
0000000000005d3d	nop
0000000000005d3e	nop
0000000000005d3f	nop
___pthread_sigmask:
0000000000005d40	movl	$0x2000149, %eax
0000000000005d45	movq	%rcx, %r10
0000000000005d48	syscall
0000000000005d4a	jae	0x5d54
0000000000005d4c	movq	%rax, %rdi
0000000000005d4f	jmp	_cerror_nocancel
0000000000005d54	retq
_rmdir:
0000000000005d55	pushq	%rbp
0000000000005d56	movq	%rsp, %rbp
0000000000005d59	pushq	%rbx
0000000000005d5a	pushq	%rax
0000000000005d5b	callq	___rmdir
0000000000005d60	movl	%eax, %ebx
0000000000005d62	testl	%eax, %eax
0000000000005d64	jne	0x5d6b
0000000000005d66	callq	___inc_remove_counter
0000000000005d6b	movl	%ebx, %eax
0000000000005d6d	addq	$0x8, %rsp
0000000000005d71	popq	%rbx
0000000000005d72	popq	%rbp
0000000000005d73	retq
___rmdir:
0000000000005d74	movl	$0x2000089, %eax
0000000000005d79	movq	%rcx, %r10
0000000000005d7c	syscall
0000000000005d7e	jae	0x5d88
0000000000005d80	movq	%rax, %rdi
0000000000005d83	jmp	_cerror_nocancel
0000000000005d88	retq
_gethostuuid:
0000000000005d89	pushq	%rbp
0000000000005d8a	movq	%rsp, %rbp
0000000000005d8d	pushq	%rbx
0000000000005d8e	pushq	%rax
0000000000005d8f	movq	%rdi, %rbx
0000000000005d92	xorl	%edx, %edx
0000000000005d94	callq	___gethostuuid
0000000000005d99	cmpl	$-0x1, %eax
0000000000005d9c	jne	0x5dca
0000000000005d9e	callq	___error
0000000000005da3	movq	%rax, %rcx
0000000000005da6	movl	$0xffffffff, %eax
0000000000005dab	cmpl	$0x1, (%rcx)
0000000000005dae	jne	0x5dca
0000000000005db0	movq	__gethostuuid_callback(%rip), %rcx
0000000000005db7	testq	%rcx, %rcx
0000000000005dba	je	0x5dc7
0000000000005dbc	movq	%rbx, %rdi
0000000000005dbf	addq	$0x8, %rsp
0000000000005dc3	popq	%rbx
0000000000005dc4	popq	%rbp
0000000000005dc5	jmpq	*%rcx
0000000000005dc7	movb	$0x0, (%rbx)
0000000000005dca	addq	$0x8, %rsp
0000000000005dce	popq	%rbx
0000000000005dcf	popq	%rbp
0000000000005dd0	retq
0000000000005dd1	nop
0000000000005dd2	nop
0000000000005dd3	nop
___gethostuuid:
0000000000005dd4	movl	$0x200008e, %eax
0000000000005dd9	movq	%rcx, %r10
0000000000005ddc	syscall
0000000000005dde	jae	0x5de8
0000000000005de0	movq	%rax, %rdi
0000000000005de3	jmp	_cerror_nocancel
0000000000005de8	retq
0000000000005de9	nop
0000000000005dea	nop
0000000000005deb	nop
_pipe:
___pipe:
0000000000005dec	movl	$0x200002a, %eax
0000000000005df1	movq	%rcx, %r10
0000000000005df4	syscall
0000000000005df6	jae	0x5e00
0000000000005df8	movq	%rax, %rdi
0000000000005dfb	jmp	_cerror_nocancel
0000000000005e00	movl	%eax, (%rdi)
0000000000005e02	movl	%edx, 0x4(%rdi)
0000000000005e05	xorl	%eax, %eax
0000000000005e07	retq
_posix_spawn_file_actions_init:
0000000000005e08	pushq	%rbp
0000000000005e09	movq	%rsp, %rbp
0000000000005e0c	pushq	%rbx
0000000000005e0d	pushq	%rax
0000000000005e0e	movq	%rdi, %rbx
0000000000005e11	movl	$0x828, %edi
0000000000005e16	callq	_malloc
0000000000005e1b	movq	%rax, (%rbx)
0000000000005e1e	testq	%rax, %rax
0000000000005e21	je	0x5e2e
0000000000005e23	movq	$0x2, (%rax)
0000000000005e2a	xorl	%eax, %eax
0000000000005e2c	jmp	0x5e33
0000000000005e2e	movl	$0xc, %eax
0000000000005e33	addq	$0x8, %rsp
0000000000005e37	popq	%rbx
0000000000005e38	popq	%rbp
0000000000005e39	retq
_malloc:
0000000000005e3a	leaq	__libkernel_functions(%rip), %rax
0000000000005e41	movq	(%rax), %rax
0000000000005e44	jmpq	*0x10(%rax)
_posix_spawn_file_actions_adddup2:
0000000000005e47	pushq	%rbp
0000000000005e48	movq	%rsp, %rbp
0000000000005e4b	pushq	%r15
0000000000005e4d	pushq	%r14
0000000000005e4f	pushq	%rbx
0000000000005e50	pushq	%rax
0000000000005e51	movl	$0x16, %eax
0000000000005e56	testq	%rdi, %rdi
0000000000005e59	je	0x5ed0
0000000000005e5b	movq	%rdi, %rbx
0000000000005e5e	movq	(%rdi), %rcx
0000000000005e61	testq	%rcx, %rcx
0000000000005e64	je	0x5ed0
0000000000005e66	movl	%esi, %r15d
0000000000005e69	movl	$0x9, %eax
0000000000005e6e	cmpl	$0x27ff, %esi
0000000000005e74	ja	0x5ed0
0000000000005e76	movl	%edx, %r14d
0000000000005e79	cmpl	$0x27ff, %edx
0000000000005e7f	ja	0x5ed0
0000000000005e81	movl	0x4(%rcx), %eax
0000000000005e84	cmpl	(%rcx), %eax
0000000000005e86	jne	0x5ea7
0000000000005e88	movq	%rbx, %rdi
0000000000005e8b	callq	__posix_spawn_file_actions_grow
0000000000005e90	movl	%eax, %ecx
0000000000005e92	movl	$0xc, %eax
0000000000005e97	testl	%ecx, %ecx
0000000000005e99	jne	0x5ed0
0000000000005e9b	movq	(%rbx), %rcx
0000000000005e9e	leaq	0x4(%rcx), %rdx
0000000000005ea2	movl	0x4(%rcx), %eax
0000000000005ea5	jmp	0x5eae
0000000000005ea7	movq	%rcx, %rdx
0000000000005eaa	addq	$0x4, %rdx
0000000000005eae	leal	0x1(%rax), %esi
0000000000005eb1	movl	%esi, (%rdx)
0000000000005eb3	cltq
0000000000005eb5	imulq	$0x410, %rax, %rax
0000000000005ebc	movl	$0x2, 0x8(%rcx,%rax)
0000000000005ec4	movl	%r15d, 0xc(%rcx,%rax)
0000000000005ec9	movl	%r14d, 0x10(%rcx,%rax)
0000000000005ece	xorl	%eax, %eax
0000000000005ed0	addq	$0x8, %rsp
0000000000005ed4	popq	%rbx
0000000000005ed5	popq	%r14
0000000000005ed7	popq	%r15
0000000000005ed9	popq	%rbp
0000000000005eda	retq
0000000000005edb	nop
_dup:
0000000000005edc	movl	$0x2000029, %eax
0000000000005ee1	movq	%rcx, %r10
0000000000005ee4	syscall
0000000000005ee6	jae	0x5ef0
0000000000005ee8	movq	%rax, %rdi
0000000000005eeb	jmp	_cerror_nocancel
0000000000005ef0	retq
__posix_spawn_file_actions_grow:
0000000000005ef1	pushq	%rbp
0000000000005ef2	movq	%rsp, %rbp
0000000000005ef5	pushq	%r15
0000000000005ef7	pushq	%r14
0000000000005ef9	pushq	%rbx
0000000000005efa	pushq	%rax
0000000000005efb	movq	%rdi, %r15
0000000000005efe	movq	(%rdi), %rdi
0000000000005f01	movl	(%rdi), %ebx
0000000000005f03	movl	$0xc, %r14d
0000000000005f09	addl	%ebx, %ebx
0000000000005f0b	jo	0x5f3f
0000000000005f0d	movslq	%ebx, %rax
0000000000005f10	movl	$0x410, %ecx
0000000000005f15	mulq	%rcx
0000000000005f18	seto	%dl
0000000000005f1b	addq	$0x8, %rax
0000000000005f1f	setb	%cl
0000000000005f22	testb	%dl, %dl
0000000000005f24	jne	0x5f3f
0000000000005f26	testb	%cl, %cl
0000000000005f28	jne	0x5f3f
0000000000005f2a	movq	%rax, %rsi
0000000000005f2d	callq	_realloc
0000000000005f32	testq	%rax, %rax
0000000000005f35	je	0x5f3f
0000000000005f37	movl	%ebx, (%rax)
0000000000005f39	movq	%rax, (%r15)
0000000000005f3c	xorl	%r14d, %r14d
0000000000005f3f	movl	%r14d, %eax
0000000000005f42	addq	$0x8, %rsp
0000000000005f46	popq	%rbx
0000000000005f47	popq	%r14
0000000000005f49	popq	%r15
0000000000005f4b	popq	%rbp
0000000000005f4c	retq
_realloc:
0000000000005f4d	leaq	__libkernel_functions(%rip), %rax
0000000000005f54	movq	(%rax), %rax
0000000000005f57	movq	0x20(%rax), %rax
0000000000005f5b	jmpq	*%rax
_posix_spawnattr_init:
0000000000005f5d	pushq	%rbp
0000000000005f5e	movq	%rsp, %rbp
0000000000005f61	pushq	%rbx
0000000000005f62	pushq	%rax
0000000000005f63	movq	%rdi, %rbx
0000000000005f66	movl	$0x90, %edi
0000000000005f6b	callq	_malloc
0000000000005f70	movq	%rax, (%rbx)
0000000000005f73	testq	%rax, %rax
0000000000005f76	je	0x5fd9
0000000000005f78	movq	%rax, %rcx
0000000000005f7b	xorl	%eax, %eax
0000000000005f7d	movq	%rax, 0x70(%rcx)
0000000000005f81	movl	%eax, 0x40(%rcx)
0000000000005f84	movq	%rax, 0x20(%rcx)
0000000000005f88	movq	%rax, 0x18(%rcx)
0000000000005f8c	movq	%rax, 0x10(%rcx)
0000000000005f90	movq	%rax, 0x8(%rcx)
0000000000005f94	movq	%rax, (%rcx)
0000000000005f97	movq	$-0x1, 0x44(%rcx)
0000000000005f9f	movl	$0xffffffff, 0x4c(%rcx)
0000000000005fa6	movl	%eax, 0x60(%rcx)
0000000000005fa9	movq	%rax, 0x30(%rcx)
0000000000005fad	movq	%rax, 0x28(%rcx)
0000000000005fb1	movq	%rax, 0x88(%rcx)
0000000000005fb8	movq	%rax, 0x80(%rcx)
0000000000005fbf	movq	%rax, 0x78(%rcx)
0000000000005fc3	movq	$0x1, 0x38(%rcx)
0000000000005fcb	movq	%rax, 0x68(%rcx)
0000000000005fcf	movq	%rax, 0x58(%rcx)
0000000000005fd3	movq	%rax, 0x50(%rcx)
0000000000005fd7	jmp	0x5fde
0000000000005fd9	movl	$0xc, %eax
0000000000005fde	addq	$0x8, %rsp
0000000000005fe2	popq	%rbx
0000000000005fe3	popq	%rbp
0000000000005fe4	retq
_posix_spawnattr_setsigmask:
0000000000005fe5	movl	$0x16, %eax
0000000000005fea	testq	%rdi, %rdi
0000000000005fed	je	0x5ffe
0000000000005fef	movq	(%rdi), %rcx
0000000000005ff2	testq	%rcx, %rcx
0000000000005ff5	je	0x5ffe
0000000000005ff7	movl	(%rsi), %eax
0000000000005ff9	movl	%eax, 0x8(%rcx)
0000000000005ffc	xorl	%eax, %eax
0000000000005ffe	retq
_posix_spawnattr_setsigdefault:
0000000000005fff	movl	$0x16, %eax
0000000000006004	testq	%rdi, %rdi
0000000000006007	je	0x6018
0000000000006009	movq	(%rdi), %rcx
000000000000600c	testq	%rcx, %rcx
000000000000600f	je	0x6018
0000000000006011	movl	(%rsi), %eax
0000000000006013	movl	%eax, 0x4(%rcx)
0000000000006016	xorl	%eax, %eax
0000000000006018	retq
_posix_spawnattr_setflags:
0000000000006019	movl	$0x16, %eax
000000000000601e	testq	%rdi, %rdi
0000000000006021	je	0x6030
0000000000006023	movq	(%rdi), %rcx
0000000000006026	testq	%rcx, %rcx
0000000000006029	je	0x6030
000000000000602b	movw	%si, (%rcx)
000000000000602e	xorl	%eax, %eax
0000000000006030	retq
0000000000006031	nop
0000000000006032	nop
0000000000006033	nop
___pthread_fchdir:
0000000000006034	movl	$0x200015d, %eax
0000000000006039	movq	%rcx, %r10
000000000000603c	syscall
000000000000603e	jae	0x6048
0000000000006040	movq	%rax, %rdi
0000000000006043	jmp	_cerror_nocancel
0000000000006048	retq
0000000000006049	nop
000000000000604a	nop
000000000000604b	nop
___pthread_chdir:
000000000000604c	movl	$0x200015c, %eax
0000000000006051	movq	%rcx, %r10
0000000000006054	syscall
0000000000006056	jae	0x6060
0000000000006058	movq	%rax, %rdi
000000000000605b	jmp	_cerror_nocancel
0000000000006060	retq
_posix_spawn:
0000000000006061	pushq	%rbp
0000000000006062	movq	%rsp, %rbp
0000000000006065	pushq	%r15
0000000000006067	pushq	%r14
0000000000006069	pushq	%r13
000000000000606b	pushq	%r12
000000000000606d	pushq	%rbx
000000000000606e	subq	$0x78, %rsp
0000000000006072	movq	%r9, -0x38(%rbp)
0000000000006076	movq	%r8, %r15
0000000000006079	movq	%rcx, %r14
000000000000607c	movq	%rdx, %rbx
000000000000607f	movq	%rsi, %r12
0000000000006082	movq	%rdi, %r13
0000000000006085	callq	___error
000000000000608a	movl	(%rax), %edx
000000000000608c	testq	%rbx, %rbx
000000000000608f	movl	%edx, -0x2c(%rbp)
0000000000006092	je	0x60d7
0000000000006094	movq	(%rbx), %rcx
0000000000006097	testq	%rcx, %rcx
000000000000609a	je	0x60d7
000000000000609c	testq	%r14, %r14
000000000000609f	jne	0x60ac
00000000000060a1	movl	0x4(%rcx), %eax
00000000000060a4	testl	%eax, %eax
00000000000060a6	jle	0x621b
00000000000060ac	xorps	%xmm0, %xmm0
00000000000060af	movaps	%xmm0, -0x50(%rbp)
00000000000060b3	movaps	%xmm0, -0x60(%rbp)
00000000000060b7	movaps	%xmm0, -0x70(%rbp)
00000000000060bb	movaps	%xmm0, -0x80(%rbp)
00000000000060bf	movaps	%xmm0, -0x90(%rbp)
00000000000060c6	movaps	%xmm0, -0xa0(%rbp)
00000000000060cd	testq	%r14, %r14
00000000000060d0	jne	0x6101
00000000000060d2	jmp	0x61e1
00000000000060d7	testq	%r14, %r14
00000000000060da	je	0x621b
00000000000060e0	xorps	%xmm0, %xmm0
00000000000060e3	movaps	%xmm0, -0x50(%rbp)
00000000000060e7	movaps	%xmm0, -0x60(%rbp)
00000000000060eb	movaps	%xmm0, -0x70(%rbp)
00000000000060ef	movaps	%xmm0, -0x80(%rbp)
00000000000060f3	movaps	%xmm0, -0x90(%rbp)
00000000000060fa	movaps	%xmm0, -0xa0(%rbp)
0000000000006101	movq	(%r14), %rsi
0000000000006104	testq	%rsi, %rsi
0000000000006107	je	0x61d4
000000000000610d	movq	$0x90, -0xa0(%rbp)
0000000000006118	movq	%rsi, -0x98(%rbp)
000000000000611f	movq	0x70(%rsi), %rdi
0000000000006123	testq	%rdi, %rdi
0000000000006126	je	0x6161
0000000000006128	movslq	0x4(%rdi), %rcx
000000000000612c	movl	$0x18, %edx
0000000000006131	movq	%rcx, %rax
0000000000006134	mulq	%rdx
0000000000006137	seto	%dl
000000000000613a	xorl	%r8d, %r8d
000000000000613d	addq	$0x8, %rax
0000000000006141	cmovbq	%r8, %rax
0000000000006145	testb	%dl, %dl
0000000000006147	cmovneq	%r8, %rax
000000000000614b	testq	%rcx, %rcx
000000000000614e	je	0x6159
0000000000006150	testq	%rax, %rax
0000000000006153	je	0x6233
0000000000006159	movq	%rdi, -0x78(%rbp)
000000000000615d	movq	%rax, -0x80(%rbp)
0000000000006161	movq	0x78(%rsi), %rdi
0000000000006165	testq	%rdi, %rdi
0000000000006168	je	0x61a4
000000000000616a	movslq	0x4(%rdi), %rcx
000000000000616e	movl	$0x90, %edx
0000000000006173	movq	%rcx, %rax
0000000000006176	mulq	%rdx
0000000000006179	seto	%r8b
000000000000617d	addq	$0x8, %rax
0000000000006181	setb	%dl
0000000000006184	orb	%r8b, %dl
0000000000006187	testq	%rcx, %rcx
000000000000618a	je	0x6194
000000000000618c	testb	%dl, %dl
000000000000618e	jne	0x6233
0000000000006194	xorl	%ecx, %ecx
0000000000006196	testb	%dl, %dl
0000000000006198	cmovneq	%rcx, %rax
000000000000619c	movq	%rdi, -0x68(%rbp)
00000000000061a0	movq	%rax, -0x70(%rbp)
00000000000061a4	movq	0x80(%rsi), %rax
00000000000061ab	testq	%rax, %rax
00000000000061ae	je	0x61bc
00000000000061b0	movq	$0x30, -0x60(%rbp)
00000000000061b8	movq	%rax, -0x58(%rbp)
00000000000061bc	movq	0x88(%rsi), %rax
00000000000061c3	testq	%rax, %rax
00000000000061c6	je	0x61d4
00000000000061c8	movq	$0x58, -0x50(%rbp)
00000000000061d0	movq	%rax, -0x48(%rbp)
00000000000061d4	testq	%rbx, %rbx
00000000000061d7	je	0x6212
00000000000061d9	movq	(%rbx), %rcx
00000000000061dc	testq	%rcx, %rcx
00000000000061df	je	0x6212
00000000000061e1	movslq	0x4(%rcx), %rax
00000000000061e5	testq	%rax, %rax
00000000000061e8	jle	0x6212
00000000000061ea	movl	$0x410, %edx
00000000000061ef	mulq	%rdx
00000000000061f2	seto	%bl
00000000000061f5	addq	$0x8, %rax
00000000000061f9	setb	%dl
00000000000061fc	testb	%bl, %bl
00000000000061fe	jne	0x6233
0000000000006200	testb	%dl, %dl
0000000000006202	jne	0x6233
0000000000006204	movq	%rax, -0x90(%rbp)
000000000000620b	movq	%rcx, -0x88(%rbp)
0000000000006212	leaq	-0xa0(%rbp), %rdx
0000000000006219	jmp	0x621d
000000000000621b	xorl	%edx, %edx
000000000000621d	movq	%r13, %rdi
0000000000006220	movq	%r12, %rsi
0000000000006223	movq	%r15, %rcx
0000000000006226	movq	-0x38(%rbp), %r8
000000000000622a	callq	___posix_spawn
000000000000622f	movl	%eax, %ebx
0000000000006231	jmp	0x6243
0000000000006233	callq	___error
0000000000006238	movl	$0x16, (%rax)
000000000000623e	movl	$0xffffffff, %ebx
0000000000006243	testl	%ebx, %ebx
0000000000006245	jns	0x624e
0000000000006247	callq	___error
000000000000624c	movl	(%rax), %ebx
000000000000624e	callq	___error
0000000000006253	movl	-0x2c(%rbp), %ecx
0000000000006256	movl	%ecx, (%rax)
0000000000006258	movl	%ebx, %eax
000000000000625a	addq	$0x78, %rsp
000000000000625e	popq	%rbx
000000000000625f	popq	%r12
0000000000006261	popq	%r13
0000000000006263	popq	%r14
0000000000006265	popq	%r15
0000000000006267	popq	%rbp
0000000000006268	retq
0000000000006269	nop
000000000000626a	nop
000000000000626b	nop
___posix_spawn:
000000000000626c	movl	$0x20000f4, %eax
0000000000006271	movq	%rcx, %r10
0000000000006274	syscall
0000000000006276	jae	0x6280
0000000000006278	movq	%rax, %rdi
000000000000627b	jmp	_cerror
0000000000006280	retq
_posix_spawnattr_destroy:
0000000000006281	pushq	%rbp
0000000000006282	movq	%rsp, %rbp
0000000000006285	pushq	%r14
0000000000006287	pushq	%rbx
0000000000006288	movl	$0x16, %eax
000000000000628d	testq	%rdi, %rdi
0000000000006290	je	0x6307
0000000000006292	movq	%rdi, %rbx
0000000000006295	movq	(%rdi), %r14
0000000000006298	testq	%r14, %r14
000000000000629b	je	0x6307
000000000000629d	movq	0x70(%r14), %rdi
00000000000062a1	movq	%r14, %rax
00000000000062a4	testq	%rdi, %rdi
00000000000062a7	je	0x62b6
00000000000062a9	callq	_free
00000000000062ae	movq	(%rbx), %rax
00000000000062b1	testq	%rax, %rax
00000000000062b4	je	0x62f6
00000000000062b6	movq	0x80(%rax), %rdi
00000000000062bd	testq	%rdi, %rdi
00000000000062c0	je	0x62da
00000000000062c2	movq	$0x0, 0x80(%rax)
00000000000062cd	callq	_free
00000000000062d2	movq	(%rbx), %rax
00000000000062d5	testq	%rax, %rax
00000000000062d8	je	0x62f6
00000000000062da	movq	0x88(%rax), %rdi
00000000000062e1	testq	%rdi, %rdi
00000000000062e4	je	0x62f6
00000000000062e6	movq	$0x0, 0x88(%rax)
00000000000062f1	callq	_free
00000000000062f6	movq	%r14, %rdi
00000000000062f9	callq	_free
00000000000062fe	movq	$0x0, (%rbx)
0000000000006305	xorl	%eax, %eax
0000000000006307	popq	%rbx
0000000000006308	popq	%r14
000000000000630a	popq	%rbp
000000000000630b	retq
_free:
000000000000630c	leaq	__libkernel_functions(%rip), %rax
0000000000006313	movq	(%rax), %rax
0000000000006316	jmpq	*0x18(%rax)
_posix_spawn_file_actions_destroy:
0000000000006319	pushq	%rbp
000000000000631a	movq	%rsp, %rbp
000000000000631d	pushq	%rbx
000000000000631e	pushq	%rax
000000000000631f	movl	$0x16, %eax
0000000000006324	testq	%rdi, %rdi
0000000000006327	je	0x6342
0000000000006329	movq	%rdi, %rbx
000000000000632c	movq	(%rdi), %rdi
000000000000632f	testq	%rdi, %rdi
0000000000006332	je	0x6342
0000000000006334	callq	_free
0000000000006339	movq	$0x0, (%rbx)
0000000000006340	xorl	%eax, %eax
0000000000006342	addq	$0x8, %rsp
0000000000006346	popq	%rbx
0000000000006347	popq	%rbp
0000000000006348	retq
0000000000006349	nop
000000000000634a	nop
000000000000634b	nop
___wait4:
000000000000634c	movl	$0x2000007, %eax
0000000000006351	movq	%rcx, %r10
0000000000006354	syscall
0000000000006356	jae	0x6360
0000000000006358	movq	%rax, %rdi
000000000000635b	jmp	_cerror
0000000000006360	retq
0000000000006361	nop
0000000000006362	nop
0000000000006363	nop
___ptrace:
_ptrace:
0000000000006364	xorq	%rax, %rax
0000000000006367	leaq	_errno(%rip), %r11
000000000000636e	movl	%eax, (%r11)
0000000000006371	movl	$0x200001a, %eax
0000000000006376	movq	%rcx, %r10
0000000000006379	syscall
000000000000637b	jae	0x6385
000000000000637d	movq	%rax, %rdi
0000000000006380	jmp	_cerror
0000000000006385	retq
_vm_read:
0000000000006386	pushq	%rbp
0000000000006387	movq	%rsp, %rbp
000000000000638a	pushq	%r15
000000000000638c	pushq	%r14
000000000000638e	pushq	%rbx
000000000000638f	pushq	%rax
0000000000006390	movq	%r8, %rbx
0000000000006393	movq	%rcx, %r15
0000000000006396	callq	__kernelrpc_vm_read
000000000000639b	movl	%eax, %r14d
000000000000639e	movq	___syscall_logger(%rip), %rax
00000000000063a5	testq	%rax, %rax
00000000000063a8	je	0x63c4
00000000000063aa	leaq	_mach_task_self_(%rip), %rcx
00000000000063b1	movl	(%rcx), %esi
00000000000063b3	movl	(%rbx), %edx
00000000000063b5	movq	(%r15), %r8
00000000000063b8	movl	$0x90, %edi
00000000000063bd	xorl	%ecx, %ecx
00000000000063bf	xorl	%r9d, %r9d
00000000000063c2	callq	*%rax
00000000000063c4	movl	%r14d, %eax
00000000000063c7	addq	$0x8, %rsp
00000000000063cb	popq	%rbx
00000000000063cc	popq	%r14
00000000000063ce	popq	%r15
00000000000063d0	popq	%rbp
00000000000063d1	retq
__kernelrpc_vm_read:
00000000000063d2	pushq	%rbp
00000000000063d3	movq	%rsp, %rbp
00000000000063d6	pushq	%r15
00000000000063d8	pushq	%r14
00000000000063da	pushq	%rbx
00000000000063db	subq	$0x48, %rsp
00000000000063df	movq	%r8, %r14
00000000000063e2	movq	%rcx, %r15
00000000000063e5	leaq	_NDR_record(%rip), %rax
00000000000063ec	movq	(%rax), %rax
00000000000063ef	leaq	-0x58(%rbp), %rbx
00000000000063f3	movq	%rax, 0x18(%rbx)
00000000000063f7	movq	%rsi, 0x20(%rbx)
00000000000063fb	movq	%rdx, 0x28(%rbx)
00000000000063ff	movl	$0x1513, (%rbx)
0000000000006405	movl	%edi, 0x8(%rbx)
0000000000006408	callq	_mig_get_reply_port
000000000000640d	movl	%eax, 0xc(%rbx)
0000000000006410	movabsq	$0x12c400000000, %rcx
000000000000641a	movq	%rcx, 0x10(%rbx)
000000000000641e	movl	$0x0, (%rsp)
0000000000006425	movl	$0x3, %esi
000000000000642a	movl	$0x30, %edx
000000000000642f	movl	$0x40, %ecx
0000000000006434	xorl	%r9d, %r9d
0000000000006437	movq	%rbx, %rdi
000000000000643a	movl	%eax, %r8d
000000000000643d	callq	_mach_msg
0000000000006442	movl	%eax, %ebx
0000000000006444	leal	-0x10000002(%rbx), %eax
000000000000644a	cmpl	$0xe, %eax
000000000000644d	ja	0x6463
000000000000644f	movl	$0x4003, %ecx
0000000000006454	btl	%eax, %ecx
0000000000006457	jae	0x6463
0000000000006459	movl	-0x4c(%rbp), %edi
000000000000645c	callq	_mig_put_reply_port
0000000000006461	jmp	0x64b7
0000000000006463	testl	%ebx, %ebx
0000000000006465	jne	0x6498
0000000000006467	movl	-0x44(%rbp), %eax
000000000000646a	cmpl	$0x47, %eax
000000000000646d	je	0x64a2
000000000000646f	cmpl	$_swtch_pri, %eax
0000000000006474	jne	0x64a9
0000000000006476	cmpl	$0x0, -0x58(%rbp)
000000000000647a	movl	-0x54(%rbp), %eax
000000000000647d	movl	$0xfffffed4, %ebx
0000000000006482	js	0x64c4
0000000000006484	cmpl	$0x24, %eax
0000000000006487	jne	0x64ae
0000000000006489	movl	-0x38(%rbp), %eax
000000000000648c	testl	%eax, %eax
000000000000648e	movl	$0xfffffed4, %ebx
0000000000006493	cmovnel	%eax, %ebx
0000000000006496	jmp	0x64ae
0000000000006498	movl	-0x4c(%rbp), %edi
000000000000649b	callq	_mig_dealloc_reply_port
00000000000064a0	jmp	0x64b7
00000000000064a2	movl	$0xfffffecc, %ebx
00000000000064a7	jmp	0x64ae
00000000000064a9	movl	$0xfffffed3, %ebx
00000000000064ae	leaq	-0x58(%rbp), %rdi
00000000000064b2	callq	_mach_msg_destroy
00000000000064b7	movl	%ebx, %eax
00000000000064b9	addq	$0x48, %rsp
00000000000064bd	popq	%rbx
00000000000064be	popq	%r14
00000000000064c0	popq	%r15
00000000000064c2	popq	%rbp
00000000000064c3	retq
00000000000064c4	cmpl	$0x38, %eax
00000000000064c7	jne	0x64ae
00000000000064c9	cmpl	$0x1, -0x40(%rbp)
00000000000064cd	jne	0x64ae
00000000000064cf	movl	$0xff000000, %eax
00000000000064d4	andl	-0x34(%rbp), %eax
00000000000064d7	cmpl	$0x1000000, %eax
00000000000064dc	jne	0x64ae
00000000000064de	movl	-0x30(%rbp), %eax
00000000000064e1	cmpl	-0x24(%rbp), %eax
00000000000064e4	jne	0x64ae
00000000000064e6	movq	-0x3c(%rbp), %rcx
00000000000064ea	movq	%rcx, (%r15)
00000000000064ed	movl	%eax, (%r14)
00000000000064f0	xorl	%ebx, %ebx
00000000000064f2	jmp	0x64b7
_sem_open:
___sem_open:
00000000000064f4	movl	$0x200010c, %eax
00000000000064f9	movq	%rcx, %r10
00000000000064fc	syscall
00000000000064fe	jae	0x6508
0000000000006500	movq	%rax, %rdi
0000000000006503	jmp	_cerror_nocancel
0000000000006508	retq
0000000000006509	nop
000000000000650a	nop
000000000000650b	nop
_sem_close:
000000000000650c	movl	$0x200010d, %eax
0000000000006511	movq	%rcx, %r10
0000000000006514	syscall
0000000000006516	jae	0x6520
0000000000006518	movq	%rax, %rdi
000000000000651b	jmp	_cerror_nocancel
0000000000006520	retq
_thread_policy:
0000000000006521	pushq	%rbp
0000000000006522	movq	%rsp, %rbp
0000000000006525	pushq	%rbx
0000000000006526	pushq	%rax
0000000000006527	movl	%edi, %ebx
0000000000006529	callq	__kernelrpc_thread_policy
000000000000652e	cmpl	$0x33, %eax
0000000000006531	je	0x653e
0000000000006533	testl	%eax, %eax
0000000000006535	jne	0x6540
0000000000006537	movl	%ebx, %edi
0000000000006539	callq	__pthread_clear_qos_tsd
000000000000653e	xorl	%eax, %eax
0000000000006540	addq	$0x8, %rsp
0000000000006544	popq	%rbx
0000000000006545	popq	%rbp
0000000000006546	retq
__kernelrpc_thread_policy:
0000000000006547	pushq	%rbp
0000000000006548	movq	%rsp, %rbp
000000000000654b	pushq	%r15
000000000000654d	pushq	%r14
000000000000654f	pushq	%r13
0000000000006551	pushq	%r12
0000000000006553	pushq	%rbx
0000000000006554	subq	$0x48, %rsp
0000000000006558	leaq	_NDR_record(%rip), %rax
000000000000655f	movq	(%rax), %rax
0000000000006562	movq	%rax, -0x50(%rbp)
0000000000006566	movl	%esi, -0x48(%rbp)
0000000000006569	movl	$0xfffffecd, %r12d
000000000000656f	cmpl	$0x5, %ecx
0000000000006572	ja	0x6673
0000000000006578	movl	%r8d, %r14d
000000000000657b	movl	%ecx, %ebx
000000000000657d	movl	%edi, %r15d
0000000000006580	leaq	-0x40(%rbp), %r12
0000000000006584	leal	(,%rbx,4), %r13d
000000000000658c	movq	%r12, %rdi
000000000000658f	movq	%rdx, %rsi
0000000000006592	movq	%r13, %rdx
0000000000006595	callq	_memcpy
000000000000659a	movl	%ebx, -0x4(%r12)
000000000000659f	leal	0x2c(,%rbx,4), %ebx
00000000000065a6	leaq	-0x68(%rbp), %rax
00000000000065aa	movl	%r14d, 0x28(%r13,%rax)
00000000000065af	movq	%rax, %r14
00000000000065b2	movl	$0x1513, -0x28(%r12)
00000000000065bb	movl	%r15d, -0x20(%r12)
00000000000065c0	callq	_mig_get_reply_port
00000000000065c5	movl	%eax, -0x1c(%r12)
00000000000065ca	movabsq	$0xe2000000000, %rcx
00000000000065d4	movq	%rcx, -0x18(%r12)
00000000000065d9	movl	$0x0, (%rsp)
00000000000065e0	movl	$0x3, %esi
00000000000065e5	movl	$0x2c, %ecx
00000000000065ea	xorl	%r9d, %r9d
00000000000065ed	movq	%r14, %rdi
00000000000065f0	movl	%ebx, %edx
00000000000065f2	movl	%eax, %r8d
00000000000065f5	callq	_mach_msg
00000000000065fa	movl	%eax, %r12d
00000000000065fd	leal	-0x10000002(%r12), %eax
0000000000006605	cmpl	$0xe, %eax
0000000000006608	ja	0x661e
000000000000660a	movl	$0x4003, %ecx
000000000000660f	btl	%eax, %ecx
0000000000006612	jae	0x661e
0000000000006614	movl	-0x5c(%rbp), %edi
0000000000006617	callq	_mig_put_reply_port
000000000000661c	jmp	0x6673
000000000000661e	testl	%r12d, %r12d
0000000000006621	jne	0x6652
0000000000006623	movl	-0x54(%rbp), %eax
0000000000006626	cmpl	$0x47, %eax
0000000000006629	je	0x665c
000000000000662b	cmpl	$0xe84, %eax
0000000000006630	jne	0x6664
0000000000006632	movl	$0xfffffed4, %r12d
0000000000006638	cmpl	$0x0, -0x68(%rbp)
000000000000663c	js	0x666a
000000000000663e	cmpl	$0x24, -0x64(%rbp)
0000000000006642	jne	0x666a
0000000000006644	movl	-0x48(%rbp), %r12d
0000000000006648	testl	%r12d, %r12d
000000000000664b	jne	0x666a
000000000000664d	xorl	%r12d, %r12d
0000000000006650	jmp	0x6673
0000000000006652	movl	-0x5c(%rbp), %edi
0000000000006655	callq	_mig_dealloc_reply_port
000000000000665a	jmp	0x6673
000000000000665c	movl	$0xfffffecc, %r12d
0000000000006662	jmp	0x666a
0000000000006664	movl	$0xfffffed3, %r12d
000000000000666a	leaq	-0x68(%rbp), %rdi
000000000000666e	callq	_mach_msg_destroy
0000000000006673	movl	%r12d, %eax
0000000000006676	addq	$0x48, %rsp
000000000000667a	popq	%rbx
000000000000667b	popq	%r12
000000000000667d	popq	%r13
000000000000667f	popq	%r14
0000000000006681	popq	%r15
0000000000006683	popq	%rbp
0000000000006684	retq
0000000000006685	nop
0000000000006686	nop
0000000000006687	nop
_setsockopt:
0000000000006688	movl	$0x2000069, %eax
000000000000668d	movq	%rcx, %r10
0000000000006690	syscall
0000000000006692	jae	0x669c
0000000000006694	movq	%rax, %rdi
0000000000006697	jmp	_cerror_nocancel
000000000000669c	retq
000000000000669d	nop
000000000000669e	nop
000000000000669f	nop
_connect$NOCANCEL:
___connect_nocancel:
00000000000066a0	movl	$0x2000199, %eax
00000000000066a5	movq	%rcx, %r10
00000000000066a8	syscall
00000000000066aa	jae	0x66b4
00000000000066ac	movq	%rax, %rdi
00000000000066af	jmp	_cerror_nocancel
00000000000066b4	retq
00000000000066b5	nop
00000000000066b6	nop
00000000000066b7	nop
_sendto$NOCANCEL:
___sendto_nocancel:
00000000000066b8	movl	$0x200019d, %eax
00000000000066bd	movq	%rcx, %r10
00000000000066c0	syscall
00000000000066c2	jae	0x66cc
00000000000066c4	movq	%rax, %rdi
00000000000066c7	jmp	_cerror_nocancel
00000000000066cc	retq
_select$NOCANCEL:
00000000000066cd	cmpl	$0x401, %edi
00000000000066d3	jl	_select$DARWIN_EXTSN$NOCANCEL
00000000000066d9	pushq	%rbp
00000000000066da	movq	%rsp, %rbp
00000000000066dd	callq	___error
00000000000066e2	movl	$0x16, (%rax)
00000000000066e8	movl	$0xffffffff, %eax
00000000000066ed	popq	%rbp
00000000000066ee	retq
00000000000066ef	nop
_select$DARWIN_EXTSN$NOCANCEL:
___select_nocancel:
00000000000066f0	movl	$0x2000197, %eax
00000000000066f5	movq	%rcx, %r10
00000000000066f8	syscall
00000000000066fa	jae	0x6704
00000000000066fc	movq	%rax, %rdi
00000000000066ff	jmp	_cerror_nocancel
0000000000006704	retq
0000000000006705	nop
0000000000006706	nop
0000000000006707	nop
_recvfrom$NOCANCEL:
___recvfrom_nocancel:
0000000000006708	movl	$0x2000193, %eax
000000000000670d	movq	%rcx, %r10
0000000000006710	syscall
0000000000006712	jae	0x671c
0000000000006714	movq	%rax, %rdi
0000000000006717	jmp	_cerror_nocancel
000000000000671c	retq
000000000000671d	nop
000000000000671e	nop
000000000000671f	nop
_sendmsg$NOCANCEL:
___sendmsg_nocancel:
0000000000006720	movl	$0x2000192, %eax
0000000000006725	movq	%rcx, %r10
0000000000006728	syscall
000000000000672a	jae	0x6734
000000000000672c	movq	%rax, %rdi
000000000000672f	jmp	_cerror_nocancel
0000000000006734	retq
0000000000006735	nop
0000000000006736	nop
0000000000006737	nop
_shutdown:
0000000000006738	movl	$0x2000086, %eax
000000000000673d	movq	%rcx, %r10
0000000000006740	syscall
0000000000006742	jae	0x674c
0000000000006744	movq	%rax, %rdi
0000000000006747	jmp	_cerror_nocancel
000000000000674c	retq
000000000000674d	nop
000000000000674e	nop
000000000000674f	nop
_connectx:
0000000000006750	movl	$0x20001bf, %eax
0000000000006755	movq	%rcx, %r10
0000000000006758	syscall
000000000000675a	jae	0x6764
000000000000675c	movq	%rax, %rdi
000000000000675f	jmp	_cerror
0000000000006764	retq
0000000000006765	nop
0000000000006766	nop
0000000000006767	nop
_sendmsg:
___sendmsg:
0000000000006768	movl	$0x200001c, %eax
000000000000676d	movq	%rcx, %r10
0000000000006770	syscall
0000000000006772	jae	0x677c
0000000000006774	movq	%rax, %rdi
0000000000006777	jmp	_cerror
000000000000677c	retq
000000000000677d	nop
000000000000677e	nop
000000000000677f	nop
___recvmsg:
_recvmsg:
0000000000006780	movl	$0x200001b, %eax
0000000000006785	movq	%rcx, %r10
0000000000006788	syscall
000000000000678a	jae	0x6794
000000000000678c	movq	%rax, %rdi
000000000000678f	jmp	_cerror
0000000000006794	retq
0000000000006795	nop
0000000000006796	nop
0000000000006797	nop
_guarded_close_np:
0000000000006798	movl	$0x20001ba, %eax
000000000000679d	movq	%rcx, %r10
00000000000067a0	syscall
00000000000067a2	jae	0x67ac
00000000000067a4	movq	%rax, %rdi
00000000000067a7	jmp	_cerror_nocancel
00000000000067ac	retq
00000000000067ad	nop
00000000000067ae	nop
00000000000067af	nop
_auditon:
00000000000067b0	movl	$0x200015f, %eax
00000000000067b5	movq	%rcx, %r10
00000000000067b8	syscall
00000000000067ba	jae	0x67c4
00000000000067bc	movq	%rax, %rdi
00000000000067bf	jmp	_cerror_nocancel
00000000000067c4	retq
_sfi_set_class_offtime:
00000000000067c5	movq	%rsi, %rax
00000000000067c8	movl	%edi, %edx
00000000000067ca	movl	$0x3, %edi
00000000000067cf	xorl	%ecx, %ecx
00000000000067d1	movl	%edx, %esi
00000000000067d3	movq	%rax, %rdx
00000000000067d6	jmp	___sfi_ctl
00000000000067db	nop
___sfi_ctl:
00000000000067dc	movl	$0x20001c8, %eax
00000000000067e1	movq	%rcx, %r10
00000000000067e4	syscall
00000000000067e6	jae	0x67f0
00000000000067e8	movq	%rax, %rdi
00000000000067eb	jmp	_cerror_nocancel
00000000000067f0	retq
_system_set_sfi_window:
00000000000067f1	movq	%rdi, %rax
00000000000067f4	movl	$0x1, %edi
00000000000067f9	xorl	%esi, %esi
00000000000067fb	xorl	%ecx, %ecx
00000000000067fd	movq	%rax, %rdx
0000000000006800	jmp	___sfi_ctl
0000000000006805	nop
0000000000006806	nop
0000000000006807	nop
___mac_set_proc:
___sandbox_msp:
0000000000006808	movl	$0x2000183, %eax
000000000000680d	movq	%rcx, %r10
0000000000006810	syscall
0000000000006812	jae	0x681c
0000000000006814	movq	%rax, %rdi
0000000000006817	jmp	_cerror_nocancel
000000000000681c	retq
_fs_snapshot_list:
000000000000681d	testl	%r8d, %r8d
0000000000006820	je	0x6838
0000000000006822	pushq	%rbp
0000000000006823	movq	%rsp, %rbp
0000000000006826	callq	___error
000000000000682b	movl	$0x16, (%rax)
0000000000006831	movl	$0xffffffff, %eax
0000000000006836	popq	%rbp
0000000000006837	retq
0000000000006838	movl	$0x40, %r8d
000000000000683e	jmp	_getattrlistbulk
_thread_get_exception_ports:
0000000000006843	pushq	%rbp
0000000000006844	movq	%rsp, %rbp
0000000000006847	pushq	%r15
0000000000006849	pushq	%r14
000000000000684b	pushq	%r13
000000000000684d	pushq	%r12
000000000000684f	pushq	%rbx
0000000000006850	subq	$0x348, %rsp
0000000000006857	movq	%r9, -0x38(%rbp)
000000000000685b	movq	%r8, %r15
000000000000685e	movq	%rcx, %r12
0000000000006861	movq	%rdx, %r13
0000000000006864	leaq	_NDR_record(%rip), %rax
000000000000686b	movq	(%rax), %rax
000000000000686e	movq	%rax, -0x350(%rbp)
0000000000006875	movl	%esi, -0x348(%rbp)
000000000000687b	movl	$0x1513, -0x368(%rbp)
0000000000006885	movl	%edi, -0x360(%rbp)
000000000000688b	callq	_mig_get_reply_port
0000000000006890	movl	%eax, -0x35c(%rbp)
0000000000006896	movabsq	$0xe1e00000000, %rcx
00000000000068a0	movq	%rcx, -0x358(%rbp)
00000000000068a7	movl	$0x0, (%rsp)
00000000000068ae	leaq	-0x368(%rbp), %r14
00000000000068b5	movl	$0x3, %esi
00000000000068ba	movl	$0x24, %edx
00000000000068bf	movl	$0x330, %ecx
00000000000068c4	xorl	%r9d, %r9d
00000000000068c7	movl	%eax, %r8d
00000000000068ca	movq	%r14, %rdi
00000000000068cd	callq	_mach_msg
00000000000068d2	movl	%eax, %ebx
00000000000068d4	leal	-0x10000002(%rbx), %eax
00000000000068da	cmpl	$0xe, %eax
00000000000068dd	ja	0x68f6
00000000000068df	movl	$0x4003, %ecx
00000000000068e4	btl	%eax, %ecx
00000000000068e7	jae	0x68f6
00000000000068e9	movl	-0x35c(%rbp), %edi
00000000000068ef	callq	_mig_put_reply_port
00000000000068f4	jmp	0x695c
00000000000068f6	testl	%ebx, %ebx
00000000000068f8	jne	0x6937
00000000000068fa	movl	-0x354(%rbp), %eax
0000000000006900	cmpl	$0x47, %eax
0000000000006903	je	0x6944
0000000000006905	cmpl	$0xe82, %eax
000000000000690a	jne	0x694b
000000000000690c	cmpl	$0x0, -0x368(%rbp)
0000000000006913	movl	-0x364(%rbp), %eax
0000000000006919	js	0x6970
000000000000691b	movl	$0xfffffed4, %ebx
0000000000006920	cmpl	$0x24, %eax
0000000000006923	jne	0x6950
0000000000006925	movl	-0x348(%rbp), %eax
000000000000692b	testl	%eax, %eax
000000000000692d	movl	$0xfffffed4, %ebx
0000000000006932	cmovnel	%eax, %ebx
0000000000006935	jmp	0x6950
0000000000006937	movl	-0x35c(%rbp), %edi
000000000000693d	callq	_mig_dealloc_reply_port
0000000000006942	jmp	0x695c
0000000000006944	movl	$0xfffffecc, %ebx
0000000000006949	jmp	0x6950
000000000000694b	movl	$0xfffffed3, %ebx
0000000000006950	leaq	-0x368(%rbp), %rdi
0000000000006957	callq	_mach_msg_destroy
000000000000695c	movl	%ebx, %eax
000000000000695e	addq	$0x348, %rsp
0000000000006965	popq	%rbx
0000000000006966	popq	%r12
0000000000006968	popq	%r13
000000000000696a	popq	%r14
000000000000696c	popq	%r15
000000000000696e	popq	%rbp
000000000000696f	retq
0000000000006970	leal	-0x1a8(%rax), %ecx
0000000000006976	movl	$0xfffffed4, %ebx
000000000000697b	cmpl	$0x180, %ecx
0000000000006981	ja	0x6950
0000000000006983	cmpl	$0x20, -0x350(%rbp)
000000000000698a	jne	0x6950
000000000000698c	leaq	-0x344(%rbp), %rdx
0000000000006993	xorl	%esi, %esi
0000000000006995	cmpl	$0xffffff, (%rdx)
000000000000699b	ja	0x6950
000000000000699d	incl	%esi
000000000000699f	addq	$0xc, %rdx
00000000000069a3	cmpl	$0x20, %esi
00000000000069a6	jb	0x6995
00000000000069a8	movslq	-0x1c4(%rbp), %rdi
00000000000069af	cmpq	$0x20, %rdi
00000000000069b3	ja	0x6950
00000000000069b5	shrl	$0x2, %ecx
00000000000069b8	cmpl	%edi, %ecx
00000000000069ba	jb	0x6950
00000000000069bc	leal	(,%rdi,4), %ecx
00000000000069c3	leal	0x1a8(%rcx), %edx
00000000000069c9	cmpl	%edx, %eax
00000000000069cb	jb	0x6950
00000000000069cd	subl	%ecx, %eax
00000000000069cf	cmpl	%edx, %eax
00000000000069d1	jb	0x6950
00000000000069d7	leal	-0x1a8(%rax), %esi
00000000000069dd	shrl	$0x2, %esi
00000000000069e0	cmpl	%edi, %esi
00000000000069e2	jb	0x6950
00000000000069e8	subl	%ecx, %eax
00000000000069ea	cmpl	%edx, %eax
00000000000069ec	jne	0x6950
00000000000069f2	addl	$0xfffffe58, %eax
00000000000069f7	shrl	$0x2, %eax
00000000000069fa	cmpl	%edi, %eax
00000000000069fc	jb	0x6950
0000000000006a02	movl	%ecx, %eax
0000000000006a04	leaq	-0x80(%rax), %rbx
0000000000006a08	leaq	-0x80(%rax,%r14), %r14
0000000000006a0d	addq	%r14, %rbx
0000000000006a10	leaq	-0x1c0(%rbp), %rsi
0000000000006a17	movq	%rdi, -0x30(%rbp)
0000000000006a1b	movq	%r13, %rdi
0000000000006a1e	movq	%rax, %r13
0000000000006a21	movq	%rax, %rdx
0000000000006a24	callq	_memcpy
0000000000006a29	movq	-0x30(%rbp), %rsi
0000000000006a2d	leaq	-0x34c(%rbp), %rdx
0000000000006a34	movl	%esi, (%r12)
0000000000006a38	testl	%esi, %esi
0000000000006a3a	je	0x6a50
0000000000006a3c	xorl	%eax, %eax
0000000000006a3e	movl	(%rdx), %ecx
0000000000006a40	movl	%ecx, (%r15,%rax,4)
0000000000006a44	addq	$0xc, %rdx
0000000000006a48	incq	%rax
0000000000006a4b	cmpq	%rsi, %rax
0000000000006a4e	jl	0x6a3e
0000000000006a50	addq	$0x228, %r14
0000000000006a57	movq	-0x38(%rbp), %rdi
0000000000006a5b	movq	%r14, %rsi
0000000000006a5e	movq	%r13, %rdx
0000000000006a61	callq	_memcpy
0000000000006a66	addq	$0x2a8, %rbx
0000000000006a6d	movq	0x10(%rbp), %rdi
0000000000006a71	movq	%rbx, %rsi
0000000000006a74	movq	%r13, %rdx
0000000000006a77	callq	_memcpy
0000000000006a7c	xorl	%ebx, %ebx
0000000000006a7e	jmp	0x695c
_thread_set_exception_ports:
0000000000006a83	pushq	%rbp
0000000000006a84	movq	%rsp, %rbp
0000000000006a87	pushq	%rbx
0000000000006a88	subq	$0x48, %rsp
0000000000006a8c	leaq	-0x48(%rbp), %rbx
0000000000006a90	movl	$0x1, 0x18(%rbx)
0000000000006a97	movl	%edx, 0x1c(%rbx)
0000000000006a9a	movl	$0x130000, 0x24(%rbx)
0000000000006aa1	leaq	_NDR_record(%rip), %rax
0000000000006aa8	movq	(%rax), %rax
0000000000006aab	movq	%rax, 0x28(%rbx)
0000000000006aaf	movl	%esi, 0x30(%rbx)
0000000000006ab2	movl	%ecx, 0x34(%rbx)
0000000000006ab5	movl	%r8d, 0x38(%rbx)
0000000000006ab9	movl	$0x80001513, (%rbx)
0000000000006abf	movl	%edi, 0x8(%rbx)
0000000000006ac2	callq	_mig_get_reply_port
0000000000006ac7	movl	%eax, 0xc(%rbx)
0000000000006aca	movabsq	$0xe1d00000000, %rcx
0000000000006ad4	movq	%rcx, 0x10(%rbx)
0000000000006ad8	movl	$0x0, (%rsp)
0000000000006adf	movl	$0x3, %esi
0000000000006ae4	movl	$0x3c, %edx
0000000000006ae9	movl	$0x2c, %ecx
0000000000006aee	xorl	%r9d, %r9d
0000000000006af1	movq	%rbx, %rdi
0000000000006af4	movl	%eax, %r8d
0000000000006af7	callq	_mach_msg
0000000000006afc	movl	%eax, %ebx
0000000000006afe	leal	-0x10000002(%rbx), %eax
0000000000006b04	cmpl	$0xe, %eax
0000000000006b07	ja	0x6b1d
0000000000006b09	movl	$0x4003, %ecx
0000000000006b0e	btl	%eax, %ecx
0000000000006b11	jae	0x6b1d
0000000000006b13	movl	-0x3c(%rbp), %edi
0000000000006b16	callq	_mig_put_reply_port
0000000000006b1b	jmp	0x6b6b
0000000000006b1d	testl	%ebx, %ebx
0000000000006b1f	jne	0x6b4c
0000000000006b21	movl	-0x34(%rbp), %eax
0000000000006b24	cmpl	$0x47, %eax
0000000000006b27	je	0x6b56
0000000000006b29	cmpl	$0xe81, %eax
0000000000006b2e	jne	0x6b5d
0000000000006b30	movl	$0xfffffed4, %ebx
0000000000006b35	cmpl	$0x0, -0x48(%rbp)
0000000000006b39	js	0x6b62
0000000000006b3b	cmpl	$0x24, -0x44(%rbp)
0000000000006b3f	jne	0x6b62
0000000000006b41	movl	-0x28(%rbp), %ebx
0000000000006b44	testl	%ebx, %ebx
0000000000006b46	jne	0x6b62
0000000000006b48	xorl	%ebx, %ebx
0000000000006b4a	jmp	0x6b6b
0000000000006b4c	movl	-0x3c(%rbp), %edi
0000000000006b4f	callq	_mig_dealloc_reply_port
0000000000006b54	jmp	0x6b6b
0000000000006b56	movl	$0xfffffecc, %ebx
0000000000006b5b	jmp	0x6b62
0000000000006b5d	movl	$0xfffffed3, %ebx
0000000000006b62	leaq	-0x48(%rbp), %rdi
0000000000006b66	callq	_mach_msg_destroy
0000000000006b6b	movl	%ebx, %eax
0000000000006b6d	addq	$0x48, %rsp
0000000000006b71	popq	%rbx
0000000000006b72	popq	%rbp
0000000000006b73	retq
_pwrite:
0000000000006b74	movl	$0x200009a, %eax
0000000000006b79	movq	%rcx, %r10
0000000000006b7c	syscall
0000000000006b7e	jae	0x6b88
0000000000006b80	movq	%rax, %rdi
0000000000006b83	jmp	_cerror
0000000000006b88	retq
_unlinkat:
0000000000006b89	pushq	%rbp
0000000000006b8a	movq	%rsp, %rbp
0000000000006b8d	pushq	%rbx
0000000000006b8e	pushq	%rax
0000000000006b8f	callq	___unlinkat
0000000000006b94	movl	%eax, %ebx
0000000000006b96	testl	%eax, %eax
0000000000006b98	jne	0x6b9f
0000000000006b9a	callq	___inc_remove_counter
0000000000006b9f	movl	%ebx, %eax
0000000000006ba1	addq	$0x8, %rsp
0000000000006ba5	popq	%rbx
0000000000006ba6	popq	%rbp
0000000000006ba7	retq
___unlinkat:
0000000000006ba8	movl	$0x20001d8, %eax
0000000000006bad	movq	%rcx, %r10
0000000000006bb0	syscall
0000000000006bb2	jae	0x6bbc
0000000000006bb4	movq	%rax, %rdi
0000000000006bb7	jmp	_cerror
0000000000006bbc	retq
0000000000006bbd	nop
0000000000006bbe	nop
0000000000006bbf	nop
_msync:
___msync:
0000000000006bc0	movl	$0x2000041, %eax
0000000000006bc5	movq	%rcx, %r10
0000000000006bc8	syscall
0000000000006bca	jae	0x6bd4
0000000000006bcc	movq	%rax, %rdi
0000000000006bcf	jmp	_cerror
0000000000006bd4	retq
0000000000006bd5	nop
0000000000006bd6	nop
0000000000006bd7	nop
_clonefileat:
0000000000006bd8	movl	$0x20001ce, %eax
0000000000006bdd	movq	%rcx, %r10
0000000000006be0	syscall
0000000000006be2	jae	0x6bec
0000000000006be4	movq	%rax, %rdi
0000000000006be7	jmp	_cerror_nocancel
0000000000006bec	retq
_proc_get_cpumon_params:
0000000000006bed	pushq	%rbp
0000000000006bee	movq	%rsp, %rbp
0000000000006bf1	pushq	%r14
0000000000006bf3	pushq	%rbx
0000000000006bf4	subq	$0x20, %rsp
0000000000006bf8	movq	%rdx, %r14
0000000000006bfb	movq	%rsi, %rbx
0000000000006bfe	movl	%edi, %eax
0000000000006c00	movq	$0x0, (%rsp)
0000000000006c08	leaq	-0x28(%rbp), %r8
0000000000006c0c	movl	$0x1, %edi
0000000000006c11	movl	$0xb, %esi
0000000000006c16	movl	$0x4, %edx
0000000000006c1b	movl	$0x3, %ecx
0000000000006c20	movl	%eax, %r9d
0000000000006c23	callq	___process_policy
0000000000006c28	testl	%eax, %eax
0000000000006c2a	jne	0x6c3c
0000000000006c2c	cmpl	$0x5, -0x28(%rbp)
0000000000006c30	jne	0x6c3c
0000000000006c32	movl	-0x24(%rbp), %ecx
0000000000006c35	movl	%ecx, (%rbx)
0000000000006c37	movl	-0x20(%rbp), %ecx
0000000000006c3a	jmp	0x6c44
0000000000006c3c	movl	$0x0, (%rbx)
0000000000006c42	xorl	%ecx, %ecx
0000000000006c44	movl	%ecx, (%r14)
0000000000006c47	addq	$0x20, %rsp
0000000000006c4b	popq	%rbx
0000000000006c4c	popq	%r14
0000000000006c4e	popq	%rbp
0000000000006c4f	retq
_mach_port_get_context:
0000000000006c50	pushq	%rbp
0000000000006c51	movq	%rsp, %rbp
0000000000006c54	pushq	%rbx
0000000000006c55	pushq	%rax
0000000000006c56	movq	%rdx, %rbx
0000000000006c59	leaq	-0x10(%rbp), %rdx
0000000000006c5d	callq	__kernelrpc_mach_port_get_context
0000000000006c62	testl	%eax, %eax
0000000000006c64	jne	0x6c6d
0000000000006c66	movq	-0x10(%rbp), %rcx
0000000000006c6a	movq	%rcx, (%rbx)
0000000000006c6d	addq	$0x8, %rsp
0000000000006c71	popq	%rbx
0000000000006c72	popq	%rbp
0000000000006c73	retq
__kernelrpc_mach_port_get_context:
0000000000006c74	pushq	%rbp
0000000000006c75	movq	%rsp, %rbp
0000000000006c78	pushq	%r14
0000000000006c7a	pushq	%rbx
0000000000006c7b	subq	$0x40, %rsp
0000000000006c7f	movq	%rdx, %r14
0000000000006c82	leaq	_NDR_record(%rip), %rax
0000000000006c89	movq	(%rax), %rax
0000000000006c8c	leaq	-0x48(%rbp), %rbx
0000000000006c90	movq	%rax, 0x18(%rbx)
0000000000006c94	movl	%esi, 0x20(%rbx)
0000000000006c97	movl	$0x1513, (%rbx)
0000000000006c9d	movl	%edi, 0x8(%rbx)
0000000000006ca0	callq	_mig_get_reply_port
0000000000006ca5	movl	%eax, 0xc(%rbx)
0000000000006ca8	movabsq	$0xc9c00000000, %rcx
0000000000006cb2	movq	%rcx, 0x10(%rbx)
0000000000006cb6	movl	$0x0, (%rsp)
0000000000006cbd	movl	$0x3, %esi
0000000000006cc2	movl	$0x24, %edx
0000000000006cc7	movl	$0x34, %ecx
0000000000006ccc	xorl	%r9d, %r9d
0000000000006ccf	movq	%rbx, %rdi
0000000000006cd2	movl	%eax, %r8d
0000000000006cd5	callq	_mach_msg
0000000000006cda	movl	%eax, %ebx
0000000000006cdc	leal	-0x10000002(%rbx), %eax
0000000000006ce2	cmpl	$0xe, %eax
0000000000006ce5	ja	0x6cfb
0000000000006ce7	movl	$0x4003, %ecx
0000000000006cec	btl	%eax, %ecx
0000000000006cef	jae	0x6cfb
0000000000006cf1	movl	-0x3c(%rbp), %edi
0000000000006cf4	callq	_mig_put_reply_port
0000000000006cf9	jmp	0x6d50
0000000000006cfb	testl	%ebx, %ebx
0000000000006cfd	jne	0x6d2f
0000000000006cff	movl	-0x34(%rbp), %eax
0000000000006d02	cmpl	$0x47, %eax
0000000000006d05	je	0x6d39
0000000000006d07	cmpl	$0xd00, %eax
0000000000006d0c	jne	0x6d40
0000000000006d0e	movl	$0xfffffed4, %eax
0000000000006d13	cmpl	$0x0, -0x48(%rbp)
0000000000006d17	js	0x6d45
0000000000006d19	movl	-0x44(%rbp), %ecx
0000000000006d1c	cmpl	$0x2c, %ecx
0000000000006d1f	je	0x6d5b
0000000000006d21	cmpl	$0x24, %ecx
0000000000006d24	jne	0x6d45
0000000000006d26	movl	-0x28(%rbp), %ebx
0000000000006d29	testl	%ebx, %ebx
0000000000006d2b	jne	0x6d47
0000000000006d2d	jmp	0x6d45
0000000000006d2f	movl	-0x3c(%rbp), %edi
0000000000006d32	callq	_mig_dealloc_reply_port
0000000000006d37	jmp	0x6d50
0000000000006d39	movl	$0xfffffecc, %eax
0000000000006d3e	jmp	0x6d45
0000000000006d40	movl	$0xfffffed3, %eax
0000000000006d45	movl	%eax, %ebx
0000000000006d47	leaq	-0x48(%rbp), %rdi
0000000000006d4b	callq	_mach_msg_destroy
0000000000006d50	movl	%ebx, %eax
0000000000006d52	addq	$0x40, %rsp
0000000000006d56	popq	%rbx
0000000000006d57	popq	%r14
0000000000006d59	popq	%rbp
0000000000006d5a	retq
0000000000006d5b	movl	-0x28(%rbp), %ebx
0000000000006d5e	testl	%ebx, %ebx
0000000000006d60	jne	0x6d47
0000000000006d62	movq	-0x24(%rbp), %rax
0000000000006d66	movq	%rax, (%r14)
0000000000006d69	xorl	%ebx, %ebx
0000000000006d6b	jmp	0x6d50
_proc_disable_wakemon:
0000000000006d6d	pushq	%rbp
0000000000006d6e	movq	%rsp, %rbp
0000000000006d71	subq	$0x10, %rsp
0000000000006d75	movabsq	$-0xfffffffe, %rax
0000000000006d7f	leaq	-0x8(%rbp), %rdx
0000000000006d83	movq	%rax, (%rdx)
0000000000006d86	movl	$0x1, %esi
0000000000006d8b	callq	_proc_rlimit_control
0000000000006d90	addq	$0x10, %rsp
0000000000006d94	popq	%rbp
0000000000006d95	retq
0000000000006d96	nop
0000000000006d97	nop
_mlock:
0000000000006d98	movl	$0x20000cb, %eax
0000000000006d9d	movq	%rcx, %r10
0000000000006da0	syscall
0000000000006da2	jae	0x6dac
0000000000006da4	movq	%rax, %rdi
0000000000006da7	jmp	_cerror_nocancel
0000000000006dac	retq
0000000000006dad	nop
0000000000006dae	nop
0000000000006daf	nop
_munlock:
0000000000006db0	movl	$0x20000cc, %eax
0000000000006db5	movq	%rcx, %r10
0000000000006db8	syscall
0000000000006dba	jae	0x6dc4
0000000000006dbc	movq	%rax, %rdi
0000000000006dbf	jmp	_cerror_nocancel
0000000000006dc4	retq
_proc_set_wakemon_defaults:
0000000000006dc5	pushq	%rbp
0000000000006dc6	movq	%rsp, %rbp
0000000000006dc9	subq	$0x10, %rsp
0000000000006dcd	movabsq	$-0xfffffff7, %rax
0000000000006dd7	leaq	-0x8(%rbp), %rdx
0000000000006ddb	movq	%rax, (%rdx)
0000000000006dde	movl	$0x1, %esi
0000000000006de3	callq	_proc_rlimit_control
0000000000006de8	addq	$0x10, %rsp
0000000000006dec	popq	%rbp
0000000000006ded	retq
0000000000006dee	nop
0000000000006def	nop
_fileport_makefd:
0000000000006df0	movl	$0x20001af, %eax
0000000000006df5	movq	%rcx, %r10
0000000000006df8	syscall
0000000000006dfa	jae	0x6e04
0000000000006dfc	movq	%rax, %rdi
0000000000006dff	jmp	_cerror_nocancel
0000000000006e04	retq
0000000000006e05	nop
0000000000006e06	nop
0000000000006e07	nop
_getsockname:
___getsockname:
0000000000006e08	movl	$0x2000020, %eax
0000000000006e0d	movq	%rcx, %r10
0000000000006e10	syscall
0000000000006e12	jae	0x6e1c
0000000000006e14	movq	%rax, %rdi
0000000000006e17	jmp	_cerror_nocancel
0000000000006e1c	retq
_proc_set_cpumon_defaults:
0000000000006e1d	pushq	%rbp
0000000000006e1e	movq	%rsp, %rbp
0000000000006e21	subq	$0x20, %rsp
0000000000006e25	movl	%edi, %eax
0000000000006e27	movabsq	$0xfe00000005, %rcx
0000000000006e31	leaq	-0x18(%rbp), %r8
0000000000006e35	movq	%rcx, (%r8)
0000000000006e38	xorl	%ecx, %ecx
0000000000006e3a	movq	%rcx, 0x10(%r8)
0000000000006e3e	movq	%rcx, 0x8(%r8)
0000000000006e42	movq	%rcx, (%rsp)
0000000000006e46	movl	$0x1, %edi
0000000000006e4b	movl	$0xa, %esi
0000000000006e50	movl	$0x4, %edx
0000000000006e55	movl	$0x3, %ecx
0000000000006e5a	movl	%eax, %r9d
0000000000006e5d	callq	___process_policy
0000000000006e62	addq	$0x20, %rsp
0000000000006e66	popq	%rbp
0000000000006e67	retq
_proc_pid_rusage:
0000000000006e68	movl	%esi, %eax
0000000000006e6a	movl	%edi, %esi
0000000000006e6c	movl	$0x9, %edi
0000000000006e71	xorl	%ecx, %ecx
0000000000006e73	xorl	%r9d, %r9d
0000000000006e76	movq	%rdx, %r8
0000000000006e79	movl	%eax, %edx
0000000000006e7b	jmp	___proc_info
_host_statistics64:
0000000000006e80	pushq	%rbp
0000000000006e81	movq	%rsp, %rbp
0000000000006e84	pushq	%r15
0000000000006e86	pushq	%r14
0000000000006e88	pushq	%r12
0000000000006e8a	pushq	%rbx
0000000000006e8b	subq	$0x440, %rsp
0000000000006e92	movq	%rcx, %r15
0000000000006e95	leaq	_NDR_record(%rip), %rax
0000000000006e9c	movq	(%rax), %rax
0000000000006e9f	leaq	-0x450(%rbp), %rbx
0000000000006ea6	movq	%rax, 0x18(%rbx)
0000000000006eaa	movl	%esi, 0x20(%rbx)
0000000000006ead	movl	(%rcx), %eax
0000000000006eaf	movl	$0x100, %ecx
0000000000006eb4	cmpl	%ecx, %eax
0000000000006eb6	cmovbl	%eax, %ecx
0000000000006eb9	movq	%rdx, %r14
0000000000006ebc	movl	%ecx, 0x24(%rbx)
0000000000006ebf	movl	$0x1513, (%rbx)
0000000000006ec5	movl	%edi, 0x8(%rbx)
0000000000006ec8	callq	_mig_get_reply_port
0000000000006ecd	movl	%eax, 0xc(%rbx)
0000000000006ed0	movabsq	$0xdb00000000, %rcx
0000000000006eda	movq	%rcx, 0x10(%rbx)
0000000000006ede	movl	$0x0, (%rsp)
0000000000006ee5	movl	$0x3, %esi
0000000000006eea	movl	$0x28, %edx
0000000000006eef	movl	$0x430, %ecx
0000000000006ef4	xorl	%r9d, %r9d
0000000000006ef7	movq	%rbx, %rdi
0000000000006efa	movl	%eax, %r8d
0000000000006efd	callq	_mach_msg
0000000000006f02	movl	%eax, %ebx
0000000000006f04	leal	-0x10000002(%rbx), %eax
0000000000006f0a	cmpl	$0xe, %eax
0000000000006f0d	ja	0x6f29
0000000000006f0f	movl	$0x4003, %ecx
0000000000006f14	btl	%eax, %ecx
0000000000006f17	jae	0x6f29
0000000000006f19	movl	-0x444(%rbp), %edi
0000000000006f1f	callq	_mig_put_reply_port
0000000000006f24	jmp	0x7000
0000000000006f29	testl	%ebx, %ebx
0000000000006f2b	jne	0x6f7d
0000000000006f2d	movl	-0x43c(%rbp), %eax
0000000000006f33	cmpl	$0x47, %eax
0000000000006f36	je	0x6f8a
0000000000006f38	cmpl	$0x13f, %eax
0000000000006f3d	jne	0x6f91
0000000000006f3f	cmpl	$0x0, -0x450(%rbp)
0000000000006f46	js	0x6fef
0000000000006f4c	movl	-0x44c(%rbp), %eax
0000000000006f52	leal	-0x28(%rax), %ecx
0000000000006f55	cmpl	$0x401, %ecx
0000000000006f5b	jb	0x6f98
0000000000006f5d	movl	$0xfffffed4, %ebx
0000000000006f62	cmpl	$0x24, %eax
0000000000006f65	jne	0x6ff4
0000000000006f6b	movl	-0x430(%rbp), %eax
0000000000006f71	testl	%eax, %eax
0000000000006f73	movl	$0xfffffed4, %ebx
0000000000006f78	cmovnel	%eax, %ebx
0000000000006f7b	jmp	0x6ff4
0000000000006f7d	movl	-0x444(%rbp), %edi
0000000000006f83	callq	_mig_dealloc_reply_port
0000000000006f88	jmp	0x7000
0000000000006f8a	movl	$0xfffffecc, %ebx
0000000000006f8f	jmp	0x6ff4
0000000000006f91	movl	$0xfffffed3, %ebx
0000000000006f96	jmp	0x6ff4
0000000000006f98	movl	-0x430(%rbp), %ebx
0000000000006f9e	testl	%ebx, %ebx
0000000000006fa0	jne	0x6ff4
0000000000006fa2	movl	-0x42c(%rbp), %r12d
0000000000006fa9	cmpl	$0x100, %r12d
0000000000006fb0	ja	0x6fef
0000000000006fb2	shrl	$0x2, %ecx
0000000000006fb5	cmpl	%r12d, %ecx
0000000000006fb8	jb	0x6fef
0000000000006fba	leal	0x28(,%r12,4), %ecx
0000000000006fc2	movl	$0xfffffed4, %ebx
0000000000006fc7	cmpl	%ecx, %eax
0000000000006fc9	jne	0x6ff4
0000000000006fcb	movl	(%r15), %edx
0000000000006fce	leaq	-0x428(%rbp), %rsi
0000000000006fd5	cmpl	%edx, %r12d
0000000000006fd8	jbe	0x7012
0000000000006fda	shll	$0x2, %edx
0000000000006fdd	movq	%r14, %rdi
0000000000006fe0	callq	_memcpy
0000000000006fe5	movl	%r12d, (%r15)
0000000000006fe8	movl	$0xfffffecd, %ebx
0000000000006fed	jmp	0x7000
0000000000006fef	movl	$0xfffffed4, %ebx
0000000000006ff4	leaq	-0x450(%rbp), %rdi
0000000000006ffb	callq	_mach_msg_destroy
0000000000007000	movl	%ebx, %eax
0000000000007002	addq	$0x440, %rsp
0000000000007009	popq	%rbx
000000000000700a	popq	%r12
000000000000700c	popq	%r14
000000000000700e	popq	%r15
0000000000007010	popq	%rbp
0000000000007011	retq
0000000000007012	leal	(,%r12,4), %eax
000000000000701a	movl	%eax, %edx
000000000000701c	movq	%r14, %rdi
000000000000701f	callq	_memcpy
0000000000007024	movl	%r12d, (%r15)
0000000000007027	xorl	%ebx, %ebx
0000000000007029	jmp	0x7000
_proc_listpids:
000000000000702b	pushq	%rbp
000000000000702c	movq	%rsp, %rbp
000000000000702f	pushq	%rbx
0000000000007030	pushq	%rax
0000000000007031	movl	%ecx, %r9d
0000000000007034	movq	%rdx, %rax
0000000000007037	movl	%esi, %edx
0000000000007039	movl	%edi, %esi
000000000000703b	xorl	%ebx, %ebx
000000000000703d	movl	$0x1, %edi
0000000000007042	xorl	%ecx, %ecx
0000000000007044	movq	%rax, %r8
0000000000007047	callq	___proc_info
000000000000704c	cmpl	$-0x1, %eax
000000000000704f	cmovel	%ebx, %eax
0000000000007052	addq	$0x8, %rsp
0000000000007056	popq	%rbx
0000000000007057	popq	%rbp
0000000000007058	retq
_mach_error_string:
0000000000007059	pushq	%rbp
000000000000705a	movq	%rsp, %rbp
000000000000705d	subq	$0x10, %rsp
0000000000007061	leaq	-0x4(%rbp), %rsi
0000000000007065	callq	_mach_error_string_int
000000000000706a	addq	$0x10, %rsp
000000000000706e	popq	%rbp
000000000000706f	retq
_mach_error_string_int:
0000000000007070	pushq	%rbp
0000000000007071	movq	%rsp, %rbp
0000000000007074	pushq	%r15
0000000000007076	pushq	%r14
0000000000007078	pushq	%r13
000000000000707a	pushq	%r12
000000000000707c	pushq	%rbx
000000000000707d	pushq	%rax
000000000000707e	movq	%rsi, %r14
0000000000007081	leaq	-0x2c(%rbp), %rbx
0000000000007085	movl	%edi, (%rbx)
0000000000007087	movq	%rbx, %rdi
000000000000708a	callq	_do_compat
000000000000708f	movl	(%rbx), %r13d
0000000000007092	movq	%r13, %rcx
0000000000007095	shrq	$0x1a, %rcx
0000000000007099	movl	%r13d, %eax
000000000000709c	shrl	$0xe, %eax
000000000000709f	andl	$0xfff, %eax
00000000000070a4	movl	$0x1, (%r14)
00000000000070ab	leaq	(%rcx,%rcx,4), %rbx
00000000000070af	leaq	__mach_errors(%rip), %r15
00000000000070b6	movq	0x18(%r15,%rbx,8), %rsi
00000000000070bb	testq	%rsi, %rsi
00000000000070be	je	0x70cc
00000000000070c0	movl	0x20(%r15,%rbx,8), %edx
00000000000070c5	movl	%eax, %edi
00000000000070c7	callq	_err_sparse_mapit
00000000000070cc	cmpl	(%r15,%rbx,8), %eax
00000000000070d0	jge	0x711c
00000000000070d2	andl	$0x3fff, %r13d
00000000000070d9	movq	0x10(%r15,%rbx,8), %r15
00000000000070de	cltq
00000000000070e0	leaq	(%rax,%rax,4), %r12
00000000000070e4	movq	0x18(%r15,%r12,8), %rsi
00000000000070e9	testq	%rsi, %rsi
00000000000070ec	je	0x70fe
00000000000070ee	movl	0x20(%r15,%r12,8), %edx
00000000000070f3	movl	%r13d, %edi
00000000000070f6	callq	_err_sparse_mapit
00000000000070fb	movl	%eax, %r13d
00000000000070fe	cmpl	0x8(%r15,%r12,8), %r13d
0000000000007103	jge	0x7126
0000000000007105	movl	_mach_error_full_diag(%rip), %eax
000000000000710b	movl	%eax, (%r14)
000000000000710e	movslq	%r13d, %rax
0000000000007111	shlq	$0x3, %rax
0000000000007115	addq	0x10(%r15,%r12,8), %rax
000000000000711a	jmp	0x7121
000000000000711c	leaq	0x8(%r15,%rbx,8), %rax
0000000000007121	movq	(%rax), %rax
0000000000007124	jmp	0x712d
0000000000007126	leaq	0x1a0a4(%rip), %rax ## literal pool for: "unknown error code"
000000000000712d	addq	$0x8, %rsp
0000000000007131	popq	%rbx
0000000000007132	popq	%r12
0000000000007134	popq	%r13
0000000000007136	popq	%r14
0000000000007138	popq	%r15
000000000000713a	popq	%rbp
000000000000713b	retq
_do_compat:
000000000000713c	movl	(%rdi), %eax
000000000000713e	leal	0xc7(%rax), %ecx
0000000000007144	cmpl	$0x63, %ecx
0000000000007147	ja	0x7158
0000000000007149	movl	$0xffffff9c, %ecx
000000000000714e	subl	%eax, %ecx
0000000000007150	orl	$0xc000000, %ecx
0000000000007156	jmp	0x71c8
0000000000007158	leal	0x12b(%rax), %ecx
000000000000715e	cmpl	$0x63, %ecx
0000000000007161	ja	0x7172
0000000000007163	movl	$0xffffff38, %ecx
0000000000007168	subl	%eax, %ecx
000000000000716a	orl	$0xc004000, %ecx
0000000000007170	jmp	0x71c8
0000000000007172	leal	0x18f(%rax), %ecx
0000000000007178	cmpl	$0x63, %ecx
000000000000717b	ja	0x718c
000000000000717d	movl	$0xfffffed4, %ecx
0000000000007182	subl	%eax, %ecx
0000000000007184	orl	$0x10008000, %ecx
000000000000718a	jmp	0x71c8
000000000000718c	leal	-0x3e8(%rax), %ecx
0000000000007192	cmpl	$0x63, %ecx
0000000000007195	ja	0x719f
0000000000007197	orl	$0x8000000, %ecx
000000000000719d	jmp	0x71c8
000000000000719f	leal	-0x640(%rax), %ecx
00000000000071a5	cmpl	$0x63, %ecx
00000000000071a8	ja	0x71b2
00000000000071aa	orl	$0x8004000, %ecx
00000000000071b0	jmp	0x71c8
00000000000071b2	leal	-0x6bd0(%rax), %ecx
00000000000071b8	movl	%ecx, %edx
00000000000071ba	orl	$0x8008000, %edx
00000000000071c0	cmpl	$0x64, %ecx
00000000000071c3	cmovbl	%edx, %eax
00000000000071c6	movl	%eax, %ecx
00000000000071c8	movl	%ecx, (%rdi)
00000000000071ca	retq
_open_dprotected_np:
00000000000071cb	pushq	%rbp
00000000000071cc	movq	%rsp, %rbp
00000000000071cf	subq	$0xd0, %rsp
00000000000071d6	testb	%al, %al
00000000000071d8	je	0x7200
00000000000071da	movaps	%xmm0, -0xa0(%rbp)
00000000000071e1	movaps	%xmm1, -0x90(%rbp)
00000000000071e8	movaps	%xmm2, -0x80(%rbp)
00000000000071ec	movaps	%xmm3, -0x70(%rbp)
00000000000071f0	movaps	%xmm4, -0x60(%rbp)
00000000000071f4	movaps	%xmm5, -0x50(%rbp)
00000000000071f8	movaps	%xmm6, -0x40(%rbp)
00000000000071fc	movaps	%xmm7, -0x30(%rbp)
0000000000007200	movq	%r9, -0xa8(%rbp)
0000000000007207	movq	%r8, -0xb0(%rbp)
000000000000720e	xorl	%r8d, %r8d
0000000000007211	btl	$0x9, %esi
0000000000007215	jae	0x7261
0000000000007217	movabsq	$0x3000000020, %rax
0000000000007221	movq	%rax, -0x20(%rbp)
0000000000007225	leaq	-0xd0(%rbp), %rax
000000000000722c	movq	%rax, -0x10(%rbp)
0000000000007230	leaq	0x10(%rbp), %rax
0000000000007234	movq	%rax, -0x18(%rbp)
0000000000007238	movslq	-0x20(%rbp), %r8
000000000000723c	cmpq	$0x28, %r8
0000000000007240	ja	0x7252
0000000000007242	movq	%r8, %r9
0000000000007245	addq	-0x10(%rbp), %r9
0000000000007249	leal	0x8(%r8), %eax
000000000000724d	movl	%eax, -0x20(%rbp)
0000000000007250	jmp	0x725e
0000000000007252	movq	-0x18(%rbp), %r9
0000000000007256	leaq	0x8(%r9), %rax
000000000000725a	movq	%rax, -0x18(%rbp)
000000000000725e	movl	(%r9), %r8d
0000000000007261	callq	___open_dprotected_np
0000000000007266	addq	$0xd0, %rsp
000000000000726d	popq	%rbp
000000000000726e	retq
000000000000726f	nop
___open_dprotected_np:
0000000000007270	movl	$0x20000d8, %eax
0000000000007275	movq	%rcx, %r10
0000000000007278	syscall
000000000000727a	jae	0x7284
000000000000727c	movq	%rax, %rdi
000000000000727f	jmp	_cerror_nocancel
0000000000007284	retq
_thread_switch:
0000000000007285	jmp	_syscall_thread_switch
000000000000728a	nop
000000000000728b	nop
_sigprocmask:
000000000000728c	movl	$0x2000030, %eax
0000000000007291	movq	%rcx, %r10
0000000000007294	syscall
0000000000007296	jae	0x72a0
0000000000007298	movq	%rax, %rdi
000000000000729b	jmp	_cerror_nocancel
00000000000072a0	retq
00000000000072a1	nop
00000000000072a2	nop
00000000000072a3	nop
___sigaltstack:
00000000000072a4	movl	$0x2000035, %eax
00000000000072a9	movq	%rcx, %r10
00000000000072ac	syscall
00000000000072ae	jae	0x72b8
00000000000072b0	movq	%rax, %rdi
00000000000072b3	jmp	_cerror
00000000000072b8	retq
00000000000072b9	nop
00000000000072ba	nop
00000000000072bb	nop
___pthread_kill:
00000000000072bc	movl	$0x2000148, %eax
00000000000072c1	movq	%rcx, %r10
00000000000072c4	syscall
00000000000072c6	jae	0x72d0
00000000000072c8	movq	%rax, %rdi
00000000000072cb	jmp	_cerror_nocancel
00000000000072d0	retq
_mach_vm_region:
00000000000072d1	pushq	%rbp
00000000000072d2	movq	%rsp, %rbp
00000000000072d5	pushq	%r15
00000000000072d7	pushq	%r14
00000000000072d9	pushq	%r13
00000000000072db	pushq	%r12
00000000000072dd	pushq	%rbx
00000000000072de	subq	$0x88, %rsp
00000000000072e5	movq	%r9, %r15
00000000000072e8	movq	%rsi, %r12
00000000000072eb	leaq	_NDR_record(%rip), %rax
00000000000072f2	movq	(%rax), %rax
00000000000072f5	leaq	-0xa0(%rbp), %rbx
00000000000072fc	movq	%rax, 0x18(%rbx)
0000000000007300	movq	(%rsi), %rax
0000000000007303	movq	%rax, 0x20(%rbx)
0000000000007307	movl	%ecx, 0x28(%rbx)
000000000000730a	movl	(%r9), %eax
000000000000730d	movl	$0xa, %ecx
0000000000007312	cmpl	%ecx, %eax
0000000000007314	cmovbl	%eax, %ecx
0000000000007317	movq	%r8, %r14
000000000000731a	movq	%rdx, %r13
000000000000731d	movl	%ecx, 0x2c(%rbx)
0000000000007320	movl	$0x1513, (%rbx)
0000000000007326	movl	%edi, 0x8(%rbx)
0000000000007329	callq	_mig_get_reply_port
000000000000732e	movl	%eax, 0xc(%rbx)
0000000000007331	movabsq	$0x12d000000000, %rcx
000000000000733b	movq	%rcx, 0x10(%rbx)
000000000000733f	movl	$0x0, (%rsp)
0000000000007346	movl	$0x3, %esi
000000000000734b	movl	$0x30, %edx
0000000000007350	movl	$0x74, %ecx
0000000000007355	xorl	%r9d, %r9d
0000000000007358	movq	%rbx, %rdi
000000000000735b	movl	%eax, %r8d
000000000000735e	callq	_mach_msg
0000000000007363	movl	%eax, %ebx
0000000000007365	leal	-0x10000002(%rbx), %eax
000000000000736b	cmpl	$0xe, %eax
000000000000736e	ja	0x7387
0000000000007370	movl	$0x4003, %ecx
0000000000007375	btl	%eax, %ecx
0000000000007378	jae	0x7387
000000000000737a	movl	-0x94(%rbp), %edi
0000000000007380	callq	_mig_put_reply_port
0000000000007385	jmp	0x73ea
0000000000007387	testl	%ebx, %ebx
0000000000007389	jne	0x73c5
000000000000738b	movl	-0x8c(%rbp), %eax
0000000000007391	cmpl	$0x47, %eax
0000000000007394	je	0x73d2
0000000000007396	cmpl	$_swtch, %eax
000000000000739b	jne	0x73d9
000000000000739d	cmpl	$0x0, -0xa0(%rbp)
00000000000073a4	movl	-0x9c(%rbp), %eax
00000000000073aa	js	0x73fe
00000000000073ac	movl	$0xfffffed4, %ebx
00000000000073b1	cmpl	$0x24, %eax
00000000000073b4	jne	0x73de
00000000000073b6	movl	-0x80(%rbp), %eax
00000000000073b9	testl	%eax, %eax
00000000000073bb	movl	$0xfffffed4, %ebx
00000000000073c0	cmovnel	%eax, %ebx
00000000000073c3	jmp	0x73de
00000000000073c5	movl	-0x94(%rbp), %edi
00000000000073cb	callq	_mig_dealloc_reply_port
00000000000073d0	jmp	0x73ea
00000000000073d2	movl	$0xfffffecc, %ebx
00000000000073d7	jmp	0x73de
00000000000073d9	movl	$0xfffffed3, %ebx
00000000000073de	leaq	-0xa0(%rbp), %rdi
00000000000073e5	callq	_mach_msg_destroy
00000000000073ea	movl	%ebx, %eax
00000000000073ec	addq	$0x88, %rsp
00000000000073f3	popq	%rbx
00000000000073f4	popq	%r12
00000000000073f6	popq	%r13
00000000000073f8	popq	%r14
00000000000073fa	popq	%r15
00000000000073fc	popq	%rbp
00000000000073fd	retq
00000000000073fe	leal	-0x44(%rax), %ecx
0000000000007401	movl	$0xfffffed4, %ebx
0000000000007406	cmpl	$0x28, %ecx
0000000000007409	ja	0x73de
000000000000740b	cmpl	$0x1, -0x88(%rbp)
0000000000007412	jne	0x73de
0000000000007414	movl	$0xffff0000, %edx
0000000000007419	andl	-0x7c(%rbp), %edx
000000000000741c	cmpl	$0x110000, %edx
0000000000007422	jne	0x73de
0000000000007424	movl	-0x60(%rbp), %edi
0000000000007427	cmpl	$0xa, %edi
000000000000742a	ja	0x73de
000000000000742c	shrl	$0x2, %ecx
000000000000742f	cmpl	%edi, %ecx
0000000000007431	jb	0x73de
0000000000007433	leal	0x44(,%rdi,4), %ecx
000000000000743a	cmpl	%ecx, %eax
000000000000743c	jne	0x73de
000000000000743e	leaq	-0x5c(%rbp), %rsi
0000000000007442	movq	-0x14(%rsi), %rax
0000000000007446	movq	%rax, (%r12)
000000000000744a	movq	-0xc(%rsi), %rax
000000000000744e	movq	%rax, (%r13)
0000000000007452	movl	(%r15), %edx
0000000000007455	cmpl	%edx, %edi
0000000000007457	jbe	0x7474
0000000000007459	shll	$0x2, %edx
000000000000745c	movq	%rdi, %rbx
000000000000745f	movq	%r14, %rdi
0000000000007462	callq	_memcpy
0000000000007467	movl	%ebx, (%r15)
000000000000746a	movl	$0xfffffecd, %ebx
000000000000746f	jmp	0x73ea
0000000000007474	movq	0x10(%rbp), %r12
0000000000007478	leal	(,%rdi,4), %eax
000000000000747f	movl	%eax, %edx
0000000000007481	movq	%rdi, %rbx
0000000000007484	movq	%r14, %rdi
0000000000007487	callq	_memcpy
000000000000748c	movl	%ebx, (%r15)
000000000000748f	movl	-0x84(%rbp), %eax
0000000000007495	movl	%eax, (%r12)
0000000000007499	xorl	%ebx, %ebx
000000000000749b	jmp	0x73ea
_openat$NOCANCEL:
___openat_nocancel:
00000000000074a0	movl	$0x20001d0, %eax
00000000000074a5	movq	%rcx, %r10
00000000000074a8	syscall
00000000000074aa	jae	0x74b4
00000000000074ac	movq	%rax, %rdi
00000000000074af	jmp	_cerror_nocancel
00000000000074b4	retq
_pselect$DARWIN_EXTSN:
00000000000074b5	pushq	%rbp
00000000000074b6	movq	%rsp, %rbp
00000000000074b9	pushq	%r15
00000000000074bb	pushq	%r14
00000000000074bd	pushq	%r13
00000000000074bf	pushq	%r12
00000000000074c1	pushq	%rbx
00000000000074c2	subq	$0x28, %rsp
00000000000074c6	movq	%r9, %rbx
00000000000074c9	movq	%r8, %r15
00000000000074cc	movq	%rsi, %r12
00000000000074cf	movl	%edi, %r13d
00000000000074d2	movq	%rdx, -0x38(%rbp)
00000000000074d6	movq	%rcx, -0x40(%rbp)
00000000000074da	callq	___pselect
00000000000074df	movl	%eax, %r14d
00000000000074e2	cmpl	$-0x1, %eax
00000000000074e5	jne	0x75a3
00000000000074eb	callq	___error
00000000000074f0	movl	$0xffffffff, %r14d
00000000000074f6	cmpl	$0x4e, (%rax)
00000000000074f9	jne	0x75a3
00000000000074ff	testq	%r15, %r15
0000000000007502	je	0x7531
0000000000007504	movq	(%r15), %rax
0000000000007507	leaq	-0x50(%rbp), %rcx
000000000000750b	movq	%rax, (%rcx)
000000000000750e	movabsq	$0x20c49ba5e353f7cf, %rax
0000000000007518	imulq	0x8(%r15)
000000000000751c	movq	%rcx, %r15
000000000000751f	movq	%rdx, %rax
0000000000007522	shrq	$0x3f, %rax
0000000000007526	shrq	$0x7, %rdx
000000000000752a	addl	%eax, %edx
000000000000752c	movl	%edx, 0x8(%rcx)
000000000000752f	jmp	0x7534
0000000000007531	xorl	%r15d, %r15d
0000000000007534	testq	%rbx, %rbx
0000000000007537	je	0x758a
0000000000007539	leaq	-0x2c(%rbp), %rdx
000000000000753d	movl	$0x3, %edi
0000000000007542	movq	%rbx, %rsi
0000000000007545	callq	___pthread_sigmask
000000000000754a	movl	%eax, %r14d
000000000000754d	testl	%eax, %eax
000000000000754f	jne	0x75a3
0000000000007551	movl	%r13d, %edi
0000000000007554	movq	%r12, %rsi
0000000000007557	movq	-0x38(%rbp), %rdx
000000000000755b	movq	-0x40(%rbp), %rcx
000000000000755f	movq	%r15, %r8
0000000000007562	callq	_select$DARWIN_EXTSN
0000000000007567	movl	%eax, %r14d
000000000000756a	callq	___error
000000000000756f	movl	(%rax), %ebx
0000000000007571	leaq	-0x2c(%rbp), %rsi
0000000000007575	movl	$0x3, %edi
000000000000757a	xorl	%edx, %edx
000000000000757c	callq	___pthread_sigmask
0000000000007581	callq	___error
0000000000007586	movl	%ebx, (%rax)
0000000000007588	jmp	0x75a3
000000000000758a	movl	%r13d, %edi
000000000000758d	movq	%r12, %rsi
0000000000007590	movq	-0x38(%rbp), %rdx
0000000000007594	movq	-0x40(%rbp), %rcx
0000000000007598	movq	%r15, %r8
000000000000759b	callq	_select$DARWIN_EXTSN
00000000000075a0	movl	%eax, %r14d
00000000000075a3	movl	%r14d, %eax
00000000000075a6	addq	$0x28, %rsp
00000000000075aa	popq	%rbx
00000000000075ab	popq	%r12
00000000000075ad	popq	%r13
00000000000075af	popq	%r14
00000000000075b1	popq	%r15
00000000000075b3	popq	%rbp
00000000000075b4	retq
00000000000075b5	nop
00000000000075b6	nop
00000000000075b7	nop
___pselect:
00000000000075b8	movl	$0x200018a, %eax
00000000000075bd	movq	%rcx, %r10
00000000000075c0	syscall
00000000000075c2	jae	0x75cc
00000000000075c4	movq	%rax, %rdi
00000000000075c7	jmp	_cerror
00000000000075cc	retq
_fchmod:
00000000000075cd	pushq	%rbp
00000000000075ce	movq	%rsp, %rbp
00000000000075d1	pushq	%r15
00000000000075d3	pushq	%r14
00000000000075d5	pushq	%r13
00000000000075d7	pushq	%r12
00000000000075d9	pushq	%rbx
00000000000075da	pushq	%rax
00000000000075db	movl	%esi, %r15d
00000000000075de	movl	%edi, %r14d
00000000000075e1	callq	___fchmod
00000000000075e6	movl	%eax, %ebx
00000000000075e8	testl	%eax, %eax
00000000000075ea	jns	0x7692
00000000000075f0	callq	___error
00000000000075f5	cmpl	$0x1, (%rax)
00000000000075f8	jne	0x7692
00000000000075fe	movzwl	%r15w, %r13d
0000000000007602	movl	%r13d, %r12d
0000000000007605	andl	$0xc00, %r12d
000000000000760c	je	0x7692
0000000000007612	btl	$0xa, %r13d
0000000000007617	jb	0x764a
0000000000007619	btl	$0xb, %r13d
000000000000761e	jb	0x766f
0000000000007620	cmpl	$0xc00, %r12d
0000000000007627	jne	0x7692
0000000000007629	xorl	$0xc00, %r15d
0000000000007630	movzwl	%r15w, %esi
0000000000007634	movl	%r14d, %edi
0000000000007637	addq	$0x8, %rsp
000000000000763b	popq	%rbx
000000000000763c	popq	%r12
000000000000763e	popq	%r13
0000000000007640	popq	%r14
0000000000007642	popq	%r15
0000000000007644	popq	%rbp
0000000000007645	jmp	___fchmod
000000000000764a	movl	%r15d, %eax
000000000000764d	xorl	$0x400, %eax
0000000000007652	movzwl	%ax, %esi
0000000000007655	movl	%r14d, %edi
0000000000007658	callq	___fchmod
000000000000765d	movl	%eax, %ebx
000000000000765f	testl	%eax, %eax
0000000000007661	jns	0x7692
0000000000007663	callq	___error
0000000000007668	cmpl	$0x1, (%rax)
000000000000766b	je	0x7619
000000000000766d	jmp	0x7692
000000000000766f	movl	%r15d, %eax
0000000000007672	xorl	$0x800, %eax
0000000000007677	movzwl	%ax, %esi
000000000000767a	movl	%r14d, %edi
000000000000767d	callq	___fchmod
0000000000007682	movl	%eax, %ebx
0000000000007684	testl	%eax, %eax
0000000000007686	jns	0x7692
0000000000007688	callq	___error
000000000000768d	cmpl	$0x1, (%rax)
0000000000007690	je	0x7620
0000000000007692	movl	%ebx, %eax
0000000000007694	addq	$0x8, %rsp
0000000000007698	popq	%rbx
0000000000007699	popq	%r12
000000000000769b	popq	%r13
000000000000769d	popq	%r14
000000000000769f	popq	%r15
00000000000076a1	popq	%rbp
00000000000076a2	retq
00000000000076a3	nop
___fchmod:
00000000000076a4	movl	$0x200007c, %eax
00000000000076a9	movq	%rcx, %r10
00000000000076ac	syscall
00000000000076ae	jae	0x76b8
00000000000076b0	movq	%rax, %rdi
00000000000076b3	jmp	_cerror_nocancel
00000000000076b8	retq
00000000000076b9	nop
00000000000076ba	nop
00000000000076bb	nop
_symlink:
00000000000076bc	movl	$0x2000039, %eax
00000000000076c1	movq	%rcx, %r10
00000000000076c4	syscall
00000000000076c6	jae	0x76d0
00000000000076c8	movq	%rax, %rdi
00000000000076cb	jmp	_cerror
00000000000076d0	retq
00000000000076d1	nop
00000000000076d2	nop
00000000000076d3	nop
_fsctl:
00000000000076d4	movl	$0x20000f2, %eax
00000000000076d9	movq	%rcx, %r10
00000000000076dc	syscall
00000000000076de	jae	0x76e8
00000000000076e0	movq	%rax, %rdi
00000000000076e3	jmp	_cerror_nocancel
00000000000076e8	retq
00000000000076e9	nop
00000000000076ea	nop
00000000000076eb	nop
_fgetattrlist:
00000000000076ec	movl	$0x20000e4, %eax
00000000000076f1	movq	%rcx, %r10
00000000000076f4	syscall
00000000000076f6	jae	0x7700
00000000000076f8	movq	%rax, %rdi
00000000000076fb	jmp	_cerror_nocancel
0000000000007700	retq
_clonefile:
0000000000007701	movl	%edx, %eax
0000000000007703	movq	%rsi, %rcx
0000000000007706	movq	%rdi, %rsi
0000000000007709	movl	$0xfffffffe, %edi
000000000000770e	movl	$0xfffffffe, %edx
0000000000007713	movl	%eax, %r8d
0000000000007716	jmp	_clonefileat
000000000000771b	nop
___fstat64_extended:
000000000000771c	movl	$0x2000157, %eax
0000000000007721	movq	%rcx, %r10
0000000000007724	syscall
0000000000007726	jae	0x7730
0000000000007728	movq	%rax, %rdi
000000000000772b	jmp	_cerror_nocancel
0000000000007730	retq
0000000000007731	nop
0000000000007732	nop
0000000000007733	nop
___setattrlist:
_setattrlist:
0000000000007734	movl	$0x20000dd, %eax
0000000000007739	movq	%rcx, %r10
000000000000773c	syscall
000000000000773e	jae	0x7748
0000000000007740	movq	%rax, %rdi
0000000000007743	jmp	_cerror_nocancel
0000000000007748	retq
_select$1050:
0000000000007749	cmpl	$0x401, %edi
000000000000774f	jl	_select$DARWIN_EXTSN
0000000000007755	pushq	%rbp
0000000000007756	movq	%rsp, %rbp
0000000000007759	callq	___error
000000000000775e	movl	$0x16, (%rax)
0000000000007764	movl	$0xffffffff, %eax
0000000000007769	popq	%rbp
000000000000776a	retq
000000000000776b	nop
_kqueue:
000000000000776c	movl	$0x200016a, %eax
0000000000007771	movq	%rcx, %r10
0000000000007774	syscall
0000000000007776	jae	0x7780
0000000000007778	movq	%rax, %rdi
000000000000777b	jmp	_cerror_nocancel
0000000000007780	retq
0000000000007781	nop
0000000000007782	nop
0000000000007783	nop
_kevent:
0000000000007784	movl	$0x200016b, %eax
0000000000007789	movq	%rcx, %r10
000000000000778c	syscall
000000000000778e	jae	0x7798
0000000000007790	movq	%rax, %rdi
0000000000007793	jmp	_cerror_nocancel
0000000000007798	retq
_proc_denap_assertion_begin_with_msg:
0000000000007799	movq	%rsi, %rdx
000000000000779c	jmp	_proc_importance_assertion_begin_with_msg
_proc_importance_assertion_begin_with_msg:
00000000000077a1	pushq	%rbp
00000000000077a2	movq	%rsp, %rbp
00000000000077a5	pushq	%r14
00000000000077a7	pushq	%rbx
00000000000077a8	subq	$0x10, %rsp
00000000000077ac	testq	%rdx, %rdx
00000000000077af	je	0x77e6
00000000000077b1	movl	(%rdi), %eax
00000000000077b3	movl	%eax, %ecx
00000000000077b5	andl	$0x201f0000, %ecx
00000000000077bb	movl	$0x5, %ebx
00000000000077c0	cmpl	$0x20000000, %ecx
00000000000077c6	jne	0x7837
00000000000077c8	movq	%rdx, %r14
00000000000077cb	btl	$0x1c, %eax
00000000000077cf	jb	0x77ed
00000000000077d1	orl	$0x10000000, %eax
00000000000077d6	movl	%eax, (%rdi)
00000000000077d8	leaq	_important_boost_assertion_token(%rip), %rax
00000000000077df	movq	%rax, (%r14)
00000000000077e2	xorl	%ebx, %ebx
00000000000077e4	jmp	0x7837
00000000000077e6	movl	$0x16, %ebx
00000000000077eb	jmp	0x7837
00000000000077ed	callq	_getpid
00000000000077f2	movq	$0x0, (%rsp)
00000000000077fa	xorl	%ebx, %ebx
00000000000077fc	movl	$0x1, %edi
0000000000007801	movl	$0xe, %esi
0000000000007806	movl	$0x7, %edx
000000000000780b	movl	$0x1, %ecx
0000000000007810	xorl	%r8d, %r8d
0000000000007813	movl	%eax, %r9d
0000000000007816	callq	___process_policy
000000000000781b	testl	%eax, %eax
000000000000781d	je	0x782d
000000000000781f	callq	___error
0000000000007824	callq	___error
0000000000007829	movl	(%rax), %ebx
000000000000782b	jmp	0x7837
000000000000782d	leaq	_important_boost_assertion_token(%rip), %rax
0000000000007834	movq	%rax, (%r14)
0000000000007837	movl	%ebx, %eax
0000000000007839	addq	$0x10, %rsp
000000000000783d	popq	%rbx
000000000000783e	popq	%r14
0000000000007840	popq	%rbp
0000000000007841	retq
_proc_denap_assertion_complete:
0000000000007842	jmp	_proc_importance_assertion_complete
_proc_importance_assertion_complete:
0000000000007847	pushq	%rbp
0000000000007848	movq	%rsp, %rbp
000000000000784b	pushq	%rbx
000000000000784c	pushq	%rax
000000000000784d	testq	%rdi, %rdi
0000000000007850	je	0x78a3
0000000000007852	movl	$0x5, %ebx
0000000000007857	leaq	_important_boost_assertion_token(%rip), %rax
000000000000785e	cmpq	%rax, %rdi
0000000000007861	jne	0x78a5
0000000000007863	callq	_getpid
0000000000007868	movq	$0x0, (%rsp)
0000000000007870	xorl	%ebx, %ebx
0000000000007872	movl	$0x1, %edi
0000000000007877	movl	$0xf, %esi
000000000000787c	movl	$0x7, %edx
0000000000007881	movl	$0x1, %ecx
0000000000007886	xorl	%r8d, %r8d
0000000000007889	movl	%eax, %r9d
000000000000788c	callq	___process_policy
0000000000007891	testl	%eax, %eax
0000000000007893	je	0x78a5
0000000000007895	callq	___error
000000000000789a	callq	___error
000000000000789f	movl	(%rax), %ebx
00000000000078a1	jmp	0x78a5
00000000000078a3	xorl	%ebx, %ebx
00000000000078a5	movl	%ebx, %eax
00000000000078a7	addq	$0x8, %rsp
00000000000078ab	popq	%rbx
00000000000078ac	popq	%rbp
00000000000078ad	retq
_mach_port_extract_right:
00000000000078ae	jmp	__kernelrpc_mach_port_extract_right
__kernelrpc_mach_port_extract_right:
00000000000078b3	pushq	%rbp
00000000000078b4	movq	%rsp, %rbp
00000000000078b7	pushq	%r15
00000000000078b9	pushq	%r14
00000000000078bb	pushq	%rbx
00000000000078bc	subq	$0x38, %rsp
00000000000078c0	movq	%r8, %r14
00000000000078c3	movq	%rcx, %r15
00000000000078c6	leaq	_NDR_record(%rip), %rax
00000000000078cd	movq	(%rax), %rax
00000000000078d0	leaq	-0x48(%rbp), %rbx
00000000000078d4	movq	%rax, 0x18(%rbx)
00000000000078d8	movl	%esi, 0x20(%rbx)
00000000000078db	movl	%edx, 0x24(%rbx)
00000000000078de	movl	$0x1513, (%rbx)
00000000000078e4	movl	%edi, 0x8(%rbx)
00000000000078e7	callq	_mig_get_reply_port
00000000000078ec	movl	%eax, 0xc(%rbx)
00000000000078ef	movabsq	$0xc8f00000000, %rcx
00000000000078f9	movq	%rcx, 0x10(%rbx)
00000000000078fd	movl	$0x0, (%rsp)
0000000000007904	movl	$0x3, %esi
0000000000007909	movl	$0x28, %edx
000000000000790e	movl	$0x30, %ecx
0000000000007913	xorl	%r9d, %r9d
0000000000007916	movq	%rbx, %rdi
0000000000007919	movl	%eax, %r8d
000000000000791c	callq	_mach_msg
0000000000007921	movl	%eax, %ebx
0000000000007923	leal	-0x10000002(%rbx), %eax
0000000000007929	cmpl	$0xe, %eax
000000000000792c	ja	0x7942
000000000000792e	movl	$0x4003, %ecx
0000000000007933	btl	%eax, %ecx
0000000000007936	jae	0x7942
0000000000007938	movl	-0x3c(%rbp), %edi
000000000000793b	callq	_mig_put_reply_port
0000000000007940	jmp	0x7996
0000000000007942	testl	%ebx, %ebx
0000000000007944	jne	0x7977
0000000000007946	movl	-0x34(%rbp), %eax
0000000000007949	cmpl	$0x47, %eax
000000000000794c	je	0x7981
000000000000794e	cmpl	$0xcf3, %eax
0000000000007953	jne	0x7988
0000000000007955	cmpl	$0x0, -0x48(%rbp)
0000000000007959	movl	-0x44(%rbp), %eax
000000000000795c	movl	$0xfffffed4, %ebx
0000000000007961	js	0x79a3
0000000000007963	cmpl	$0x24, %eax
0000000000007966	jne	0x798d
0000000000007968	movl	-0x28(%rbp), %eax
000000000000796b	testl	%eax, %eax
000000000000796d	movl	$0xfffffed4, %ebx
0000000000007972	cmovnel	%eax, %ebx
0000000000007975	jmp	0x798d
0000000000007977	movl	-0x3c(%rbp), %edi
000000000000797a	callq	_mig_dealloc_reply_port
000000000000797f	jmp	0x7996
0000000000007981	movl	$0xfffffecc, %ebx
0000000000007986	jmp	0x798d
0000000000007988	movl	$0xfffffed3, %ebx
000000000000798d	leaq	-0x48(%rbp), %rdi
0000000000007991	callq	_mach_msg_destroy
0000000000007996	movl	%ebx, %eax
0000000000007998	addq	$0x38, %rsp
000000000000799c	popq	%rbx
000000000000799d	popq	%r14
000000000000799f	popq	%r15
00000000000079a1	popq	%rbp
00000000000079a2	retq
00000000000079a3	cmpl	$0x28, %eax
00000000000079a6	jne	0x798d
00000000000079a8	cmpl	$0x1, -0x30(%rbp)
00000000000079ac	jne	0x798d
00000000000079ae	movl	-0x24(%rbp), %eax
00000000000079b1	cmpl	$0x1000000, %eax
00000000000079b6	jae	0x798d
00000000000079b8	movl	-0x2c(%rbp), %ecx
00000000000079bb	movl	%ecx, (%r15)
00000000000079be	shrl	$0x10, %eax
00000000000079c1	movzbl	%al, %eax
00000000000079c4	movl	%eax, (%r14)
00000000000079c7	xorl	%ebx, %ebx
00000000000079c9	jmp	0x7996
_mach_ports_register:
00000000000079cb	pushq	%rbp
00000000000079cc	movq	%rsp, %rbp
00000000000079cf	pushq	%rbx
00000000000079d0	subq	$0x48, %rsp
00000000000079d4	leaq	-0x40(%rbp), %rbx
00000000000079d8	movl	$0x1, 0x18(%rbx)
00000000000079df	movq	%rsi, 0x1c(%rbx)
00000000000079e3	movl	%edx, 0x28(%rbx)
00000000000079e6	movl	$0x2130000, 0x24(%rbx)
00000000000079ed	leaq	_NDR_record(%rip), %rax
00000000000079f4	movq	(%rax), %rax
00000000000079f7	movq	%rax, 0x2c(%rbx)
00000000000079fb	movl	%edx, 0x34(%rbx)
00000000000079fe	movl	$0x80001513, (%rbx)
0000000000007a04	movl	%edi, 0x8(%rbx)
0000000000007a07	callq	_mig_get_reply_port
0000000000007a0c	movl	%eax, 0xc(%rbx)
0000000000007a0f	movabsq	$0xd4b00000000, %rcx
0000000000007a19	movq	%rcx, 0x10(%rbx)
0000000000007a1d	movl	$0x0, (%rsp)
0000000000007a24	movl	$0x3, %esi
0000000000007a29	movl	$0x38, %edx
0000000000007a2e	movl	$0x2c, %ecx
0000000000007a33	xorl	%r9d, %r9d
0000000000007a36	movq	%rbx, %rdi
0000000000007a39	movl	%eax, %r8d
0000000000007a3c	callq	_mach_msg
0000000000007a41	movl	%eax, %ebx
0000000000007a43	leal	-0x10000002(%rbx), %eax
0000000000007a49	cmpl	$0xe, %eax
0000000000007a4c	ja	0x7a62
0000000000007a4e	movl	$0x4003, %ecx
0000000000007a53	btl	%eax, %ecx
0000000000007a56	jae	0x7a62
0000000000007a58	movl	-0x34(%rbp), %edi
0000000000007a5b	callq	_mig_put_reply_port
0000000000007a60	jmp	0x7ab0
0000000000007a62	testl	%ebx, %ebx
0000000000007a64	jne	0x7a91
0000000000007a66	movl	-0x2c(%rbp), %eax
0000000000007a69	cmpl	$0x47, %eax
0000000000007a6c	je	0x7a9b
0000000000007a6e	cmpl	$0xdaf, %eax
0000000000007a73	jne	0x7aa2
0000000000007a75	movl	$0xfffffed4, %ebx
0000000000007a7a	cmpl	$0x0, -0x40(%rbp)
0000000000007a7e	js	0x7aa7
0000000000007a80	cmpl	$0x24, -0x3c(%rbp)
0000000000007a84	jne	0x7aa7
0000000000007a86	movl	-0x20(%rbp), %ebx
0000000000007a89	testl	%ebx, %ebx
0000000000007a8b	jne	0x7aa7
0000000000007a8d	xorl	%ebx, %ebx
0000000000007a8f	jmp	0x7ab0
0000000000007a91	movl	-0x34(%rbp), %edi
0000000000007a94	callq	_mig_dealloc_reply_port
0000000000007a99	jmp	0x7ab0
0000000000007a9b	movl	$0xfffffecc, %ebx
0000000000007aa0	jmp	0x7aa7
0000000000007aa2	movl	$0xfffffed3, %ebx
0000000000007aa7	leaq	-0x40(%rbp), %rdi
0000000000007aab	callq	_mach_msg_destroy
0000000000007ab0	movl	%ebx, %eax
0000000000007ab2	addq	$0x48, %rsp
0000000000007ab6	popq	%rbx
0000000000007ab7	popq	%rbp
0000000000007ab8	retq
0000000000007ab9	nop
0000000000007aba	nop
0000000000007abb	nop
___fork:
0000000000007abc	subq	$0x18, %rsp
0000000000007ac0	movl	$0x2000002, %eax
0000000000007ac5	syscall
0000000000007ac7	jae	0x7add
0000000000007ac9	movq	%rax, %rdi
0000000000007acc	callq	_cerror
0000000000007ad1	movq	$-0x1, %rax
0000000000007ad8	addq	$0x18, %rsp
0000000000007adc	retq
0000000000007add	orl	%edx, %edx
0000000000007adf	je	0x7aee
0000000000007ae1	xorq	%rax, %rax
0000000000007ae4	leaq	__current_pid(%rip), %r11
0000000000007aeb	movl	%eax, (%r11)
0000000000007aee	addq	$0x18, %rsp
0000000000007af2	retq
_task_set_exception_ports:
0000000000007af3	pushq	%rbp
0000000000007af4	movq	%rsp, %rbp
0000000000007af7	pushq	%rbx
0000000000007af8	subq	$0x48, %rsp
0000000000007afc	leaq	-0x48(%rbp), %rbx
0000000000007b00	movl	$0x1, 0x18(%rbx)
0000000000007b07	movl	%edx, 0x1c(%rbx)
0000000000007b0a	movl	$0x130000, 0x24(%rbx)
0000000000007b11	leaq	_NDR_record(%rip), %rax
0000000000007b18	movq	(%rax), %rax
0000000000007b1b	movq	%rax, 0x28(%rbx)
0000000000007b1f	movl	%esi, 0x30(%rbx)
0000000000007b22	movl	%ecx, 0x34(%rbx)
0000000000007b25	movl	%r8d, 0x38(%rbx)
0000000000007b29	movl	$0x80001513, (%rbx)
0000000000007b2f	movl	%edi, 0x8(%rbx)
0000000000007b32	callq	_mig_get_reply_port
0000000000007b37	movl	%eax, 0xc(%rbx)
0000000000007b3a	movabsq	$0xd5500000000, %rcx
0000000000007b44	movq	%rcx, 0x10(%rbx)
0000000000007b48	movl	$0x0, (%rsp)
0000000000007b4f	movl	$0x3, %esi
0000000000007b54	movl	$0x3c, %edx
0000000000007b59	movl	$0x2c, %ecx
0000000000007b5e	xorl	%r9d, %r9d
0000000000007b61	movq	%rbx, %rdi
0000000000007b64	movl	%eax, %r8d
0000000000007b67	callq	_mach_msg
0000000000007b6c	movl	%eax, %ebx
0000000000007b6e	leal	-0x10000002(%rbx), %eax
0000000000007b74	cmpl	$0xe, %eax
0000000000007b77	ja	0x7b8d
0000000000007b79	movl	$0x4003, %ecx
0000000000007b7e	btl	%eax, %ecx
0000000000007b81	jae	0x7b8d
0000000000007b83	movl	-0x3c(%rbp), %edi
0000000000007b86	callq	_mig_put_reply_port
0000000000007b8b	jmp	0x7bdb
0000000000007b8d	testl	%ebx, %ebx
0000000000007b8f	jne	0x7bbc
0000000000007b91	movl	-0x34(%rbp), %eax
0000000000007b94	cmpl	$0x47, %eax
0000000000007b97	je	0x7bc6
0000000000007b99	cmpl	$0xdb9, %eax
0000000000007b9e	jne	0x7bcd
0000000000007ba0	movl	$0xfffffed4, %ebx
0000000000007ba5	cmpl	$0x0, -0x48(%rbp)
0000000000007ba9	js	0x7bd2
0000000000007bab	cmpl	$0x24, -0x44(%rbp)
0000000000007baf	jne	0x7bd2
0000000000007bb1	movl	-0x28(%rbp), %ebx
0000000000007bb4	testl	%ebx, %ebx
0000000000007bb6	jne	0x7bd2
0000000000007bb8	xorl	%ebx, %ebx
0000000000007bba	jmp	0x7bdb
0000000000007bbc	movl	-0x3c(%rbp), %edi
0000000000007bbf	callq	_mig_dealloc_reply_port
0000000000007bc4	jmp	0x7bdb
0000000000007bc6	movl	$0xfffffecc, %ebx
0000000000007bcb	jmp	0x7bd2
0000000000007bcd	movl	$0xfffffed3, %ebx
0000000000007bd2	leaq	-0x48(%rbp), %rdi
0000000000007bd6	callq	_mach_msg_destroy
0000000000007bdb	movl	%ebx, %eax
0000000000007bdd	addq	$0x48, %rsp
0000000000007be1	popq	%rbx
0000000000007be2	popq	%rbp
0000000000007be3	retq
_kill:
0000000000007be4	movl	$0x1, %edx
0000000000007be9	jmp	___kill
0000000000007bee	nop
0000000000007bef	nop
___kill:
0000000000007bf0	movl	$0x2000025, %eax
0000000000007bf5	movq	%rcx, %r10
0000000000007bf8	syscall
0000000000007bfa	jae	0x7c04
0000000000007bfc	movq	%rax, %rdi
0000000000007bff	jmp	_cerror_nocancel
0000000000007c04	retq
0000000000007c05	nop
0000000000007c06	nop
0000000000007c07	nop
_getpgid:
0000000000007c08	movl	$0x2000097, %eax
0000000000007c0d	movq	%rcx, %r10
0000000000007c10	syscall
0000000000007c12	jae	0x7c1c
0000000000007c14	movq	%rax, %rdi
0000000000007c17	jmp	_cerror_nocancel
0000000000007c1c	retq
0000000000007c1d	nop
0000000000007c1e	nop
0000000000007c1f	nop
_getpgrp:
0000000000007c20	movl	$0x2000051, %eax
0000000000007c25	movq	%rcx, %r10
0000000000007c28	syscall
0000000000007c2a	jae	0x7c34
0000000000007c2c	movq	%rax, %rdi
0000000000007c2f	jmp	_cerror_nocancel
0000000000007c34	retq
_kdebug_signpost_start:
0000000000007c35	leal	0x1(,%rdi,4), %edi
0000000000007c3c	jmp	_kdebug_signpost_internal
_kdebug_signpost_internal:
0000000000007c41	pushq	%rbp
0000000000007c42	movq	%rsp, %rbp
0000000000007c45	pushq	%r15
0000000000007c47	pushq	%r14
0000000000007c49	pushq	%r13
0000000000007c4b	pushq	%r12
0000000000007c4d	pushq	%rbx
0000000000007c4e	pushq	%rax
0000000000007c4f	cmpl	$0x10000, %edi
0000000000007c55	jb	0x7c69
0000000000007c57	callq	___error
0000000000007c5c	movl	$0x16, (%rax)
0000000000007c62	movl	$0xffffffff, %eax
0000000000007c67	jmp	0x7cad
0000000000007c69	movq	%r8, %r14
0000000000007c6c	movq	%rcx, %r15
0000000000007c6f	movq	%rdx, %r12
0000000000007c72	movq	%rsi, %r13
0000000000007c75	movl	%edi, %ebx
0000000000007c77	orl	$0x210a0000, %ebx
0000000000007c7d	movl	%ebx, %edi
0000000000007c7f	callq	_kdebug_is_enabled
0000000000007c84	movl	%eax, %ecx
0000000000007c86	xorl	%eax, %eax
0000000000007c88	testb	%cl, %cl
0000000000007c8a	je	0x7cad
0000000000007c8c	movl	%ebx, %edi
0000000000007c8e	movq	%r13, %rsi
0000000000007c91	movq	%r12, %rdx
0000000000007c94	movq	%r15, %rcx
0000000000007c97	movq	%r14, %r8
0000000000007c9a	addq	$0x8, %rsp
0000000000007c9e	popq	%rbx
0000000000007c9f	popq	%r12
0000000000007ca1	popq	%r13
0000000000007ca3	popq	%r14
0000000000007ca5	popq	%r15
0000000000007ca7	popq	%rbp
0000000000007ca8	jmp	___kdebug_trace64
0000000000007cad	addq	$0x8, %rsp
0000000000007cb1	popq	%rbx
0000000000007cb2	popq	%r12
0000000000007cb4	popq	%r13
0000000000007cb6	popq	%r14
0000000000007cb8	popq	%r15
0000000000007cba	popq	%rbp
0000000000007cbb	retq
_kdebug_signpost_end:
0000000000007cbc	leal	0x2(,%rdi,4), %edi
0000000000007cc3	jmp	_kdebug_signpost_internal
_audit_session_self:
0000000000007cc8	movl	$0x20001ac, %eax
0000000000007ccd	movq	%rcx, %r10
0000000000007cd0	syscall
0000000000007cd2	jae	0x7cdc
0000000000007cd4	movq	%rax, %rdi
0000000000007cd7	jmp	_cerror_nocancel
0000000000007cdc	retq
0000000000007cdd	nop
0000000000007cde	nop
0000000000007cdf	nop
_setitimer:
0000000000007ce0	movl	$0x2000053, %eax
0000000000007ce5	movq	%rcx, %r10
0000000000007ce8	syscall
0000000000007cea	jae	0x7cf4
0000000000007cec	movq	%rax, %rdi
0000000000007cef	jmp	_cerror_nocancel
0000000000007cf4	retq
_mach_right_send_release:
0000000000007cf5	pushq	%rbp
0000000000007cf6	movq	%rsp, %rbp
0000000000007cf9	pushq	%r14
0000000000007cfb	pushq	%rbx
0000000000007cfc	movl	%edi, %ebx
0000000000007cfe	leaq	_mach_task_self_(%rip), %r14
0000000000007d05	movl	(%r14), %edi
0000000000007d08	xorl	%edx, %edx
0000000000007d0a	movl	$0xffffffff, %ecx
0000000000007d0f	movl	%ebx, %esi
0000000000007d11	callq	_mach_port_mod_refs
0000000000007d16	testl	%eax, %eax
0000000000007d18	je	0x7d37
0000000000007d1a	cmpl	$0x11, %eax
0000000000007d1d	jne	0x7d3c
0000000000007d1f	movl	(%r14), %edi
0000000000007d22	movl	$0x4, %edx
0000000000007d27	movl	$0xffffffff, %ecx
0000000000007d2c	movl	%ebx, %esi
0000000000007d2e	callq	_mach_port_mod_refs
0000000000007d33	testl	%eax, %eax
0000000000007d35	jne	0x7d55
0000000000007d37	popq	%rbx
0000000000007d38	popq	%r14
0000000000007d3a	popq	%rbp
0000000000007d3b	retq
0000000000007d3c	cltq
0000000000007d3e	leaq	0x1d919(%rip), %rcx ## literal pool for: "release send right failed"
0000000000007d45	movq	%rcx, 0x2385c(%rip)
0000000000007d4c	movq	%rax, 0x23885(%rip)
0000000000007d53	ud2
0000000000007d55	cltq
0000000000007d57	leaq	0x1d8e7(%rip), %rcx ## literal pool for: "release dead name failed"
0000000000007d5e	movq	%rcx, 0x23843(%rip)
0000000000007d65	movq	%rax, 0x2386c(%rip)
0000000000007d6c	ud2
0000000000007d6e	nop
0000000000007d6f	nop
___psynch_cvclrprepost:
0000000000007d70	movl	$0x2000138, %eax
0000000000007d75	movq	%rcx, %r10
0000000000007d78	syscall
0000000000007d7a	jae	0x7d84
0000000000007d7c	movq	%rax, %rdi
0000000000007d7f	jmp	_cerror_nocancel
0000000000007d84	retq
0000000000007d85	nop
0000000000007d86	nop
0000000000007d87	nop
_chflags:
0000000000007d88	movl	$0x2000022, %eax
0000000000007d8d	movq	%rcx, %r10
0000000000007d90	syscall
0000000000007d92	jae	0x7d9c
0000000000007d94	movq	%rax, %rdi
0000000000007d97	jmp	_cerror_nocancel
0000000000007d9c	retq
_host_statistics:
0000000000007d9d	pushq	%rbp
0000000000007d9e	movq	%rsp, %rbp
0000000000007da1	pushq	%r15
0000000000007da3	pushq	%r14
0000000000007da5	pushq	%r12
0000000000007da7	pushq	%rbx
0000000000007da8	subq	$0x150, %rsp
0000000000007daf	movq	%rcx, %r15
0000000000007db2	leaq	_NDR_record(%rip), %rax
0000000000007db9	movq	(%rax), %rax
0000000000007dbc	leaq	-0x160(%rbp), %rbx
0000000000007dc3	movq	%rax, 0x18(%rbx)
0000000000007dc7	movl	%esi, 0x20(%rbx)
0000000000007dca	movl	(%rcx), %eax
0000000000007dcc	movl	$0x44, %ecx
0000000000007dd1	cmpl	%ecx, %eax
0000000000007dd3	cmovbl	%eax, %ecx
0000000000007dd6	movq	%rdx, %r14
0000000000007dd9	movl	%ecx, 0x24(%rbx)
0000000000007ddc	movl	$0x1513, (%rbx)
0000000000007de2	movl	%edi, 0x8(%rbx)
0000000000007de5	callq	_mig_get_reply_port
0000000000007dea	movl	%eax, 0xc(%rbx)
0000000000007ded	movabsq	$0xd800000000, %rcx
0000000000007df7	movq	%rcx, 0x10(%rbx)
0000000000007dfb	movl	$0x0, (%rsp)
0000000000007e02	movl	$0x3, %esi
0000000000007e07	movl	$0x28, %edx
0000000000007e0c	movl	$0x140, %ecx
0000000000007e11	xorl	%r9d, %r9d
0000000000007e14	movq	%rbx, %rdi
0000000000007e17	movl	%eax, %r8d
0000000000007e1a	callq	_mach_msg
0000000000007e1f	movl	%eax, %ebx
0000000000007e21	leal	-0x10000002(%rbx), %eax
0000000000007e27	cmpl	$0xe, %eax
0000000000007e2a	ja	0x7e46
0000000000007e2c	movl	$0x4003, %ecx
0000000000007e31	btl	%eax, %ecx
0000000000007e34	jae	0x7e46
0000000000007e36	movl	-0x154(%rbp), %edi
0000000000007e3c	callq	_mig_put_reply_port
0000000000007e41	jmp	0x7f1a
0000000000007e46	testl	%ebx, %ebx
0000000000007e48	jne	0x7e9a
0000000000007e4a	movl	-0x14c(%rbp), %eax
0000000000007e50	cmpl	$0x47, %eax
0000000000007e53	je	0x7ea7
0000000000007e55	cmpl	$0x13c, %eax
0000000000007e5a	jne	0x7eae
0000000000007e5c	cmpl	$0x0, -0x160(%rbp)
0000000000007e63	js	0x7f09
0000000000007e69	movl	-0x15c(%rbp), %eax
0000000000007e6f	leal	-0x28(%rax), %ecx
0000000000007e72	cmpl	$0x111, %ecx
0000000000007e78	jb	0x7eb5
0000000000007e7a	movl	$0xfffffed4, %ebx
0000000000007e7f	cmpl	$0x24, %eax
0000000000007e82	jne	0x7f0e
0000000000007e88	movl	-0x140(%rbp), %eax
0000000000007e8e	testl	%eax, %eax
0000000000007e90	movl	$0xfffffed4, %ebx
0000000000007e95	cmovnel	%eax, %ebx
0000000000007e98	jmp	0x7f0e
0000000000007e9a	movl	-0x154(%rbp), %edi
0000000000007ea0	callq	_mig_dealloc_reply_port
0000000000007ea5	jmp	0x7f1a
0000000000007ea7	movl	$0xfffffecc, %ebx
0000000000007eac	jmp	0x7f0e
0000000000007eae	movl	$0xfffffed3, %ebx
0000000000007eb3	jmp	0x7f0e
0000000000007eb5	movl	-0x140(%rbp), %ebx
0000000000007ebb	testl	%ebx, %ebx
0000000000007ebd	jne	0x7f0e
0000000000007ebf	movl	-0x13c(%rbp), %r12d
0000000000007ec6	cmpl	$0x44, %r12d
0000000000007eca	ja	0x7f09
0000000000007ecc	shrl	$0x2, %ecx
0000000000007ecf	cmpl	%r12d, %ecx
0000000000007ed2	jb	0x7f09
0000000000007ed4	leal	0x28(,%r12,4), %ecx
0000000000007edc	movl	$0xfffffed4, %ebx
0000000000007ee1	cmpl	%ecx, %eax
0000000000007ee3	jne	0x7f0e
0000000000007ee5	movl	(%r15), %edx
0000000000007ee8	leaq	-0x138(%rbp), %rsi
0000000000007eef	cmpl	%edx, %r12d
0000000000007ef2	jbe	0x7f2c
0000000000007ef4	shll	$0x2, %edx
0000000000007ef7	movq	%r14, %rdi
0000000000007efa	callq	_memcpy
0000000000007eff	movl	%r12d, (%r15)
0000000000007f02	movl	$0xfffffecd, %ebx
0000000000007f07	jmp	0x7f1a
0000000000007f09	movl	$0xfffffed4, %ebx
0000000000007f0e	leaq	-0x160(%rbp), %rdi
0000000000007f15	callq	_mach_msg_destroy
0000000000007f1a	movl	%ebx, %eax
0000000000007f1c	addq	$0x150, %rsp
0000000000007f23	popq	%rbx
0000000000007f24	popq	%r12
0000000000007f26	popq	%r14
0000000000007f28	popq	%r15
0000000000007f2a	popq	%rbp
0000000000007f2b	retq
0000000000007f2c	leal	(,%r12,4), %eax
0000000000007f34	movl	%eax, %edx
0000000000007f36	movq	%r14, %rdi
0000000000007f39	callq	_memcpy
0000000000007f3e	movl	%r12d, (%r15)
0000000000007f41	xorl	%ebx, %ebx
0000000000007f43	jmp	0x7f1a
_terminate_with_reason:
0000000000007f45	pushq	%rbp
0000000000007f46	movq	%rsp, %rbp
0000000000007f49	subq	$0x10, %rsp
0000000000007f4d	movq	%rcx, %rax
0000000000007f50	movq	%r8, (%rsp)
0000000000007f54	xorl	%ecx, %ecx
0000000000007f56	xorl	%r8d, %r8d
0000000000007f59	movq	%rax, %r9
0000000000007f5c	callq	___terminate_with_payload
0000000000007f61	addq	$0x10, %rsp
0000000000007f65	popq	%rbp
0000000000007f66	retq
0000000000007f67	nop
___terminate_with_payload:
0000000000007f68	movl	$0x2000208, %eax
0000000000007f6d	movq	%rcx, %r10
0000000000007f70	syscall
0000000000007f72	jae	0x7f7c
0000000000007f74	movq	%rax, %rdi
0000000000007f77	jmp	_cerror_nocancel
0000000000007f7c	retq
_task_set_info:
0000000000007f7d	pushq	%rbp
0000000000007f7e	movq	%rsp, %rbp
0000000000007f81	pushq	%r15
0000000000007f83	pushq	%r14
0000000000007f85	pushq	%rbx
0000000000007f86	subq	$0x108, %rsp
0000000000007f8d	leaq	_NDR_record(%rip), %rax
0000000000007f94	movq	(%rax), %rax
0000000000007f97	movq	%rax, -0xf8(%rbp)
0000000000007f9e	movl	%esi, -0xf0(%rbp)
0000000000007fa4	movl	$0xfffffecd, %r14d
0000000000007faa	cmpl	$0x34, %ecx
0000000000007fad	ja	0x80b4
0000000000007fb3	movl	%ecx, %ebx
0000000000007fb5	movl	%edi, %r15d
0000000000007fb8	leaq	-0xe8(%rbp), %r14
0000000000007fbf	leal	(,%rbx,4), %eax
0000000000007fc6	movq	%r14, %rdi
0000000000007fc9	movq	%rdx, %rsi
0000000000007fcc	movq	%rax, %rdx
0000000000007fcf	callq	_memcpy
0000000000007fd4	movl	%ebx, -0x4(%r14)
0000000000007fd8	leal	0x28(,%rbx,4), %ebx
0000000000007fdf	movl	$0x1513, -0x28(%r14)
0000000000007fe7	movl	%r15d, -0x20(%r14)
0000000000007feb	callq	_mig_get_reply_port
0000000000007ff0	movl	%eax, -0x1c(%r14)
0000000000007ff4	movabsq	$0xd4e00000000, %rcx
0000000000007ffe	movq	%rcx, -0x18(%r14)
0000000000008002	movl	$0x0, (%rsp)
0000000000008009	leaq	-0x110(%rbp), %rdi
0000000000008010	movl	$0x3, %esi
0000000000008015	movl	$0x2c, %ecx
000000000000801a	xorl	%r9d, %r9d
000000000000801d	movl	%eax, %r8d
0000000000008020	movl	%ebx, %edx
0000000000008022	callq	_mach_msg
0000000000008027	movl	%eax, %r14d
000000000000802a	leal	-0x10000002(%r14), %eax
0000000000008031	cmpl	$0xe, %eax
0000000000008034	ja	0x804d
0000000000008036	movl	$0x4003, %ecx
000000000000803b	btl	%eax, %ecx
000000000000803e	jae	0x804d
0000000000008040	movl	-0x104(%rbp), %edi
0000000000008046	callq	_mig_put_reply_port
000000000000804b	jmp	0x80b4
000000000000804d	testl	%r14d, %r14d
0000000000008050	jne	0x808d
0000000000008052	movl	-0xfc(%rbp), %eax
0000000000008058	cmpl	$0x47, %eax
000000000000805b	je	0x809a
000000000000805d	cmpl	$0xdb2, %eax
0000000000008062	jne	0x80a2
0000000000008064	movl	$0xfffffed4, %r14d
000000000000806a	cmpl	$0x0, -0x110(%rbp)
0000000000008071	js	0x80a8
0000000000008073	cmpl	$0x24, -0x10c(%rbp)
000000000000807a	jne	0x80a8
000000000000807c	movl	-0xf0(%rbp), %r14d
0000000000008083	testl	%r14d, %r14d
0000000000008086	jne	0x80a8
0000000000008088	xorl	%r14d, %r14d
000000000000808b	jmp	0x80b4
000000000000808d	movl	-0x104(%rbp), %edi
0000000000008093	callq	_mig_dealloc_reply_port
0000000000008098	jmp	0x80b4
000000000000809a	movl	$0xfffffecc, %r14d
00000000000080a0	jmp	0x80a8
00000000000080a2	movl	$0xfffffed3, %r14d
00000000000080a8	leaq	-0x110(%rbp), %rdi
00000000000080af	callq	_mach_msg_destroy
00000000000080b4	movl	%r14d, %eax
00000000000080b7	addq	$0x108, %rsp
00000000000080be	popq	%rbx
00000000000080bf	popq	%r14
00000000000080c1	popq	%r15
00000000000080c3	popq	%rbp
00000000000080c4	retq
_mach_voucher_extract_attr_content:
00000000000080c5	pushq	%rbp
00000000000080c6	movq	%rsp, %rbp
00000000000080c9	pushq	%r15
00000000000080cb	pushq	%r14
00000000000080cd	pushq	%r12
00000000000080cf	pushq	%rbx
00000000000080d0	subq	$0x1040, %rsp
00000000000080d7	movq	%rcx, %r15
00000000000080da	leaq	_NDR_record(%rip), %rax
00000000000080e1	movq	(%rax), %rax
00000000000080e4	leaq	-0x1050(%rbp), %rbx
00000000000080eb	movq	%rax, 0x18(%rbx)
00000000000080ef	movl	%esi, 0x20(%rbx)
00000000000080f2	movl	(%rcx), %eax
00000000000080f4	movl	$0x1000, %ecx
00000000000080f9	cmpl	%ecx, %eax
00000000000080fb	cmovbl	%eax, %ecx
00000000000080fe	movq	%rdx, %r14
0000000000008101	movl	%ecx, 0x24(%rbx)
0000000000008104	movl	$0x1513, (%rbx)
000000000000810a	movl	%edi, 0x8(%rbx)
000000000000810d	callq	_mig_get_reply_port
0000000000008112	movl	%eax, 0xc(%rbx)
0000000000008115	movabsq	$0x151800000000, %rcx
000000000000811f	movq	%rcx, 0x10(%rbx)
0000000000008123	movl	$0x0, (%rsp)
000000000000812a	movl	$0x3, %esi
000000000000812f	movl	$0x28, %edx
0000000000008134	movl	$0x1030, %ecx
0000000000008139	xorl	%r9d, %r9d
000000000000813c	movq	%rbx, %rdi
000000000000813f	movl	%eax, %r8d
0000000000008142	callq	_mach_msg
0000000000008147	movl	%eax, %ebx
0000000000008149	leal	-0x10000002(%rbx), %eax
000000000000814f	cmpl	$0xe, %eax
0000000000008152	ja	0x816e
0000000000008154	movl	$0x4003, %ecx
0000000000008159	btl	%eax, %ecx
000000000000815c	jae	0x816e
000000000000815e	movl	-0x1044(%rbp), %edi
0000000000008164	callq	_mig_put_reply_port
0000000000008169	jmp	0x823f
000000000000816e	testl	%ebx, %ebx
0000000000008170	jne	0x81c2
0000000000008172	movl	-0x103c(%rbp), %eax
0000000000008178	cmpl	$0x47, %eax
000000000000817b	je	0x81cf
000000000000817d	cmpl	$0x157c, %eax
0000000000008182	jne	0x81d6
0000000000008184	cmpl	$0x0, -0x1050(%rbp)
000000000000818b	js	0x822e
0000000000008191	movl	-0x104c(%rbp), %eax
0000000000008197	leal	-0x28(%rax), %ecx
000000000000819a	cmpl	$0x1001, %ecx
00000000000081a0	jb	0x81dd
00000000000081a2	movl	$0xfffffed4, %ebx
00000000000081a7	cmpl	$0x24, %eax
00000000000081aa	jne	0x8233
00000000000081b0	movl	-0x1030(%rbp), %eax
00000000000081b6	testl	%eax, %eax
00000000000081b8	movl	$0xfffffed4, %ebx
00000000000081bd	cmovnel	%eax, %ebx
00000000000081c0	jmp	0x8233
00000000000081c2	movl	-0x1044(%rbp), %edi
00000000000081c8	callq	_mig_dealloc_reply_port
00000000000081cd	jmp	0x823f
00000000000081cf	movl	$0xfffffecc, %ebx
00000000000081d4	jmp	0x8233
00000000000081d6	movl	$0xfffffed3, %ebx
00000000000081db	jmp	0x8233
00000000000081dd	movl	-0x1030(%rbp), %ebx
00000000000081e3	testl	%ebx, %ebx
00000000000081e5	jne	0x8233
00000000000081e7	movl	-0x102c(%rbp), %r12d
00000000000081ee	cmpq	$0x1000, %r12
00000000000081f5	ja	0x822e
00000000000081f7	cmpl	%r12d, %ecx
00000000000081fa	jb	0x822e
00000000000081fc	leal	0x2b(%r12), %ecx
0000000000008201	andl	$-0x4, %ecx
0000000000008204	movl	$0xfffffed4, %ebx
0000000000008209	cmpl	%ecx, %eax
000000000000820b	jne	0x8233
000000000000820d	movl	(%r15), %edx
0000000000008210	leaq	-0x1028(%rbp), %rsi
0000000000008217	movq	%r14, %rdi
000000000000821a	cmpl	%edx, %r12d
000000000000821d	jbe	0x8251
000000000000821f	callq	_memcpy
0000000000008224	movl	%r12d, (%r15)
0000000000008227	movl	$0xfffffecd, %ebx
000000000000822c	jmp	0x823f
000000000000822e	movl	$0xfffffed4, %ebx
0000000000008233	leaq	-0x1050(%rbp), %rdi
000000000000823a	callq	_mach_msg_destroy
000000000000823f	movl	%ebx, %eax
0000000000008241	addq	$0x1040, %rsp
0000000000008248	popq	%rbx
0000000000008249	popq	%r12
000000000000824b	popq	%r14
000000000000824d	popq	%r15
000000000000824f	popq	%rbp
0000000000008250	retq
0000000000008251	movq	%r12, %rdx
0000000000008254	callq	_memcpy
0000000000008259	movl	%r12d, (%r15)
000000000000825c	xorl	%ebx, %ebx
000000000000825e	jmp	0x823f
_guarded_kqueue_np:
0000000000008260	movl	$0x20001bb, %eax
0000000000008265	movq	%rcx, %r10
0000000000008268	syscall
000000000000826a	jae	0x8274
000000000000826c	movq	%rax, %rdi
000000000000826f	jmp	_cerror_nocancel
0000000000008274	retq
__kernelrpc_mach_port_get_attributes:
0000000000008275	pushq	%rbp
0000000000008276	movq	%rsp, %rbp
0000000000008279	pushq	%r15
000000000000827b	pushq	%r14
000000000000827d	pushq	%r12
000000000000827f	pushq	%rbx
0000000000008280	subq	$0x80, %rsp
0000000000008287	movq	%r8, %r15
000000000000828a	leaq	_NDR_record(%rip), %rax
0000000000008291	movq	(%rax), %rax
0000000000008294	leaq	-0x98(%rbp), %rbx
000000000000829b	movq	%rax, 0x18(%rbx)
000000000000829f	movl	%esi, 0x20(%rbx)
00000000000082a2	movl	%edx, 0x24(%rbx)
00000000000082a5	movl	(%r8), %eax
00000000000082a8	movl	$0x11, %edx
00000000000082ad	cmpl	%edx, %eax
00000000000082af	cmovbl	%eax, %edx
00000000000082b2	movq	%rcx, %r14
00000000000082b5	movl	%edx, 0x28(%rbx)
00000000000082b8	movl	$0x1513, (%rbx)
00000000000082be	movl	%edi, 0x8(%rbx)
00000000000082c1	callq	_mig_get_reply_port
00000000000082c6	movl	%eax, 0xc(%rbx)
00000000000082c9	movabsq	$0xc9100000000, %rcx
00000000000082d3	movq	%rcx, 0x10(%rbx)
00000000000082d7	movl	$0x0, (%rsp)
00000000000082de	movl	$0x3, %esi
00000000000082e3	movl	$0x2c, %edx
00000000000082e8	movl	$0x74, %ecx
00000000000082ed	xorl	%r9d, %r9d
00000000000082f0	movq	%rbx, %rdi
00000000000082f3	movl	%eax, %r8d
00000000000082f6	callq	_mach_msg
00000000000082fb	movl	%eax, %ebx
00000000000082fd	leal	-0x10000002(%rbx), %eax
0000000000008303	cmpl	$0xe, %eax
0000000000008306	ja	0x8322
0000000000008308	movl	$0x4003, %ecx
000000000000830d	btl	%eax, %ecx
0000000000008310	jae	0x8322
0000000000008312	movl	-0x8c(%rbp), %edi
0000000000008318	callq	_mig_put_reply_port
000000000000831d	jmp	0x83e3
0000000000008322	testl	%ebx, %ebx
0000000000008324	jne	0x836c
0000000000008326	movl	-0x84(%rbp), %eax
000000000000832c	cmpl	$0x47, %eax
000000000000832f	je	0x8379
0000000000008331	cmpl	$0xcf5, %eax
0000000000008336	jne	0x8380
0000000000008338	cmpl	$0x0, -0x98(%rbp)
000000000000833f	js	0x83d2
0000000000008345	movl	-0x94(%rbp), %eax
000000000000834b	leal	-0x28(%rax), %ecx
000000000000834e	cmpl	$0x45, %ecx
0000000000008351	jb	0x8387
0000000000008353	movl	$0xfffffed4, %ebx
0000000000008358	cmpl	$0x24, %eax
000000000000835b	jne	0x83d7
000000000000835d	movl	-0x78(%rbp), %eax
0000000000008360	testl	%eax, %eax
0000000000008362	movl	$0xfffffed4, %ebx
0000000000008367	cmovnel	%eax, %ebx
000000000000836a	jmp	0x83d7
000000000000836c	movl	-0x8c(%rbp), %edi
0000000000008372	callq	_mig_dealloc_reply_port
0000000000008377	jmp	0x83e3
0000000000008379	movl	$0xfffffecc, %ebx
000000000000837e	jmp	0x83d7
0000000000008380	movl	$0xfffffed3, %ebx
0000000000008385	jmp	0x83d7
0000000000008387	movl	-0x78(%rbp), %ebx
000000000000838a	testl	%ebx, %ebx
000000000000838c	jne	0x83d7
000000000000838e	movl	-0x74(%rbp), %r12d
0000000000008392	cmpl	$0x11, %r12d
0000000000008396	ja	0x83d2
0000000000008398	shrl	$0x2, %ecx
000000000000839b	cmpl	%r12d, %ecx
000000000000839e	jb	0x83d2
00000000000083a0	leal	0x28(,%r12,4), %ecx
00000000000083a8	movl	$0xfffffed4, %ebx
00000000000083ad	cmpl	%ecx, %eax
00000000000083af	jne	0x83d7
00000000000083b1	leaq	-0x70(%rbp), %rsi
00000000000083b5	movl	(%r15), %edx
00000000000083b8	cmpl	%edx, %r12d
00000000000083bb	jbe	0x83f5
00000000000083bd	shll	$0x2, %edx
00000000000083c0	movq	%r14, %rdi
00000000000083c3	callq	_memcpy
00000000000083c8	movl	%r12d, (%r15)
00000000000083cb	movl	$0xfffffecd, %ebx
00000000000083d0	jmp	0x83e3
00000000000083d2	movl	$0xfffffed4, %ebx
00000000000083d7	leaq	-0x98(%rbp), %rdi
00000000000083de	callq	_mach_msg_destroy
00000000000083e3	movl	%ebx, %eax
00000000000083e5	addq	$0x80, %rsp
00000000000083ec	popq	%rbx
00000000000083ed	popq	%r12
00000000000083ef	popq	%r14
00000000000083f1	popq	%r15
00000000000083f3	popq	%rbp
00000000000083f4	retq
00000000000083f5	leal	(,%r12,4), %eax
00000000000083fd	movl	%eax, %edx
00000000000083ff	movq	%r14, %rdi
0000000000008402	callq	_memcpy
0000000000008407	movl	%r12d, (%r15)
000000000000840a	xorl	%ebx, %ebx
000000000000840c	jmp	0x83e3
_mach_vm_region_recurse:
000000000000840e	pushq	%rbp
000000000000840f	movq	%rsp, %rbp
0000000000008412	pushq	%r15
0000000000008414	pushq	%r14
0000000000008416	pushq	%r13
0000000000008418	pushq	%r12
000000000000841a	pushq	%rbx
000000000000841b	subq	$0xa8, %rsp
0000000000008422	movq	%r9, %r14
0000000000008425	movq	%rcx, %r12
0000000000008428	movq	%rsi, %r13
000000000000842b	leaq	_NDR_record(%rip), %rax
0000000000008432	movq	(%rax), %rax
0000000000008435	leaq	-0xc8(%rbp), %rbx
000000000000843c	movq	%rax, 0x18(%rbx)
0000000000008440	movq	(%rsi), %rax
0000000000008443	movq	%rax, 0x20(%rbx)
0000000000008447	movl	(%rcx), %eax
0000000000008449	movl	%eax, 0x28(%rbx)
000000000000844c	movl	(%r9), %eax
000000000000844f	movl	$0x13, %ecx
0000000000008454	cmpl	%ecx, %eax
0000000000008456	cmovbl	%eax, %ecx
0000000000008459	movq	%r8, -0x30(%rbp)
000000000000845d	movq	%rdx, -0x38(%rbp)
0000000000008461	movl	%ecx, 0x2c(%rbx)
0000000000008464	movl	$0x1513, (%rbx)
000000000000846a	movl	%edi, 0x8(%rbx)
000000000000846d	callq	_mig_get_reply_port
0000000000008472	movl	%eax, 0xc(%rbx)
0000000000008475	movabsq	$0x12cf00000000, %rcx
000000000000847f	movq	%rcx, 0x10(%rbx)
0000000000008483	movl	$0x0, (%rsp)
000000000000848a	movl	$0x3, %esi
000000000000848f	movl	$0x30, %edx
0000000000008494	movl	$0x90, %ecx
0000000000008499	xorl	%r9d, %r9d
000000000000849c	movq	%rbx, %rdi
000000000000849f	movl	%eax, %r8d
00000000000084a2	callq	_mach_msg
00000000000084a7	movl	%eax, %r15d
00000000000084aa	leal	-0x10000002(%r15), %eax
00000000000084b1	cmpl	$0xe, %eax
00000000000084b4	ja	0x84d0
00000000000084b6	movl	$0x4003, %ecx
00000000000084bb	btl	%eax, %ecx
00000000000084be	jae	0x84d0
00000000000084c0	movl	-0xbc(%rbp), %edi
00000000000084c6	callq	_mig_put_reply_port
00000000000084cb	jmp	0x85c8
00000000000084d0	testl	%r15d, %r15d
00000000000084d3	jne	0x8528
00000000000084d5	movl	-0xb4(%rbp), %eax
00000000000084db	cmpl	$0x47, %eax
00000000000084de	je	0x8538
00000000000084e0	cmpl	$0x1333, %eax
00000000000084e5	jne	0x8540
00000000000084e7	cmpl	$0x0, -0xc8(%rbp)
00000000000084ee	js	0x85b6
00000000000084f4	movl	-0xc4(%rbp), %eax
00000000000084fa	leal	-0x3c(%rax), %ecx
00000000000084fd	cmpl	$0x4d, %ecx
0000000000008500	jb	0x8548
0000000000008502	movl	$0xfffffed4, %r15d
0000000000008508	cmpl	$0x24, %eax
000000000000850b	jne	0x85bc
0000000000008511	movl	-0xa8(%rbp), %eax
0000000000008517	testl	%eax, %eax
0000000000008519	movl	$0xfffffed4, %r15d
000000000000851f	cmovnel	%eax, %r15d
0000000000008523	jmp	0x85bc
0000000000008528	movl	-0xbc(%rbp), %edi
000000000000852e	callq	_mig_dealloc_reply_port
0000000000008533	jmp	0x85c8
0000000000008538	movl	$0xfffffecc, %r15d
000000000000853e	jmp	0x85bc
0000000000008540	movl	$0xfffffed3, %r15d
0000000000008546	jmp	0x85bc
0000000000008548	movl	-0xa8(%rbp), %r15d
000000000000854f	testl	%r15d, %r15d
0000000000008552	jne	0x85bc
0000000000008554	movl	-0x90(%rbp), %ebx
000000000000855a	cmpl	$0x13, %ebx
000000000000855d	ja	0x85b6
000000000000855f	shrl	$0x2, %ecx
0000000000008562	cmpl	%ebx, %ecx
0000000000008564	jb	0x85b6
0000000000008566	leal	0x3c(,%rbx,4), %ecx
000000000000856d	movl	$0xfffffed4, %r15d
0000000000008573	cmpl	%ecx, %eax
0000000000008575	jne	0x85bc
0000000000008577	leaq	-0x8c(%rbp), %rsi
000000000000857e	movq	-0x18(%rsi), %rax
0000000000008582	movq	%rax, (%r13)
0000000000008586	movq	-0x10(%rsi), %rax
000000000000858a	movq	-0x38(%rbp), %rcx
000000000000858e	movq	%rax, (%rcx)
0000000000008591	movl	-0x8(%rsi), %eax
0000000000008594	movl	%eax, (%r12)
0000000000008598	movl	(%r14), %edx
000000000000859b	cmpl	%edx, %ebx
000000000000859d	jbe	0x85dd
000000000000859f	shll	$0x2, %edx
00000000000085a2	movq	-0x30(%rbp), %rdi
00000000000085a6	callq	_memcpy
00000000000085ab	movl	%ebx, (%r14)
00000000000085ae	movl	$0xfffffecd, %r15d
00000000000085b4	jmp	0x85c8
00000000000085b6	movl	$0xfffffed4, %r15d
00000000000085bc	leaq	-0xc8(%rbp), %rdi
00000000000085c3	callq	_mach_msg_destroy
00000000000085c8	movl	%r15d, %eax
00000000000085cb	addq	$0xa8, %rsp
00000000000085d2	popq	%rbx
00000000000085d3	popq	%r12
00000000000085d5	popq	%r13
00000000000085d7	popq	%r14
00000000000085d9	popq	%r15
00000000000085db	popq	%rbp
00000000000085dc	retq
00000000000085dd	leal	(,%rbx,4), %eax
00000000000085e4	movl	%eax, %edx
00000000000085e6	movq	-0x30(%rbp), %rdi
00000000000085ea	callq	_memcpy
00000000000085ef	movl	%ebx, (%r14)
00000000000085f2	xorl	%r15d, %r15d
00000000000085f5	jmp	0x85c8
00000000000085f7	nop
_necp_match_policy:
00000000000085f8	movl	$0x20001cc, %eax
00000000000085fd	movq	%rcx, %r10
0000000000008600	syscall
0000000000008602	jae	0x860c
0000000000008604	movq	%rax, %rdi
0000000000008607	jmp	_cerror_nocancel
000000000000860c	retq
000000000000860d	nop
000000000000860e	nop
000000000000860f	nop
_select$DARWIN_EXTSN:
___select:
0000000000008610	movl	$0x200005d, %eax
0000000000008615	movq	%rcx, %r10
0000000000008618	syscall
000000000000861a	jae	0x8624
000000000000861c	movq	%rax, %rdi
000000000000861f	jmp	_cerror
0000000000008624	retq
_mach_vm_read_overwrite:
0000000000008625	pushq	%rbp
0000000000008626	movq	%rsp, %rbp
0000000000008629	pushq	%r14
000000000000862b	pushq	%rbx
000000000000862c	subq	$0x40, %rsp
0000000000008630	movq	%r8, %r14
0000000000008633	leaq	_NDR_record(%rip), %rax
000000000000863a	movq	(%rax), %rax
000000000000863d	leaq	-0x48(%rbp), %rbx
0000000000008641	movq	%rax, 0x18(%rbx)
0000000000008645	movq	%rsi, 0x20(%rbx)
0000000000008649	movq	%rdx, 0x28(%rbx)
000000000000864d	movq	%rcx, 0x30(%rbx)
0000000000008651	movl	$0x1513, (%rbx)
0000000000008657	movl	%edi, 0x8(%rbx)
000000000000865a	callq	_mig_get_reply_port
000000000000865f	movl	%eax, 0xc(%rbx)
0000000000008662	movabsq	$0x12c800000000, %rcx
000000000000866c	movq	%rcx, 0x10(%rbx)
0000000000008670	movl	$0x0, (%rsp)
0000000000008677	movl	$0x3, %esi
000000000000867c	movl	$0x38, %edx
0000000000008681	movl	$0x34, %ecx
0000000000008686	xorl	%r9d, %r9d
0000000000008689	movq	%rbx, %rdi
000000000000868c	movl	%eax, %r8d
000000000000868f	callq	_mach_msg
0000000000008694	movl	%eax, %ebx
0000000000008696	leal	-0x10000002(%rbx), %eax
000000000000869c	cmpl	$0xe, %eax
000000000000869f	ja	0x86b5
00000000000086a1	movl	$0x4003, %ecx
00000000000086a6	btl	%eax, %ecx
00000000000086a9	jae	0x86b5
00000000000086ab	movl	-0x3c(%rbp), %edi
00000000000086ae	callq	_mig_put_reply_port
00000000000086b3	jmp	0x870a
00000000000086b5	testl	%ebx, %ebx
00000000000086b7	jne	0x86e9
00000000000086b9	movl	-0x34(%rbp), %eax
00000000000086bc	cmpl	$0x47, %eax
00000000000086bf	je	0x86f3
00000000000086c1	cmpl	$0x132c, %eax
00000000000086c6	jne	0x86fa
00000000000086c8	movl	$0xfffffed4, %eax
00000000000086cd	cmpl	$0x0, -0x48(%rbp)
00000000000086d1	js	0x86ff
00000000000086d3	movl	-0x44(%rbp), %ecx
00000000000086d6	cmpl	$0x2c, %ecx
00000000000086d9	je	0x8715
00000000000086db	cmpl	$0x24, %ecx
00000000000086de	jne	0x86ff
00000000000086e0	movl	-0x28(%rbp), %ebx
00000000000086e3	testl	%ebx, %ebx
00000000000086e5	jne	0x8701
00000000000086e7	jmp	0x86ff
00000000000086e9	movl	-0x3c(%rbp), %edi
00000000000086ec	callq	_mig_dealloc_reply_port
00000000000086f1	jmp	0x870a
00000000000086f3	movl	$0xfffffecc, %eax
00000000000086f8	jmp	0x86ff
00000000000086fa	movl	$0xfffffed3, %eax
00000000000086ff	movl	%eax, %ebx
0000000000008701	leaq	-0x48(%rbp), %rdi
0000000000008705	callq	_mach_msg_destroy
000000000000870a	movl	%ebx, %eax
000000000000870c	addq	$0x40, %rsp
0000000000008710	popq	%rbx
0000000000008711	popq	%r14
0000000000008713	popq	%rbp
0000000000008714	retq
0000000000008715	movl	-0x28(%rbp), %ebx
0000000000008718	testl	%ebx, %ebx
000000000000871a	jne	0x8701
000000000000871c	movq	-0x24(%rbp), %rax
0000000000008720	movq	%rax, (%r14)
0000000000008723	xorl	%ebx, %ebx
0000000000008725	jmp	0x870a
0000000000008727	nop
_getpeername:
___getpeername:
0000000000008728	movl	$0x200001f, %eax
000000000000872d	movq	%rcx, %r10
0000000000008730	syscall
0000000000008732	jae	0x873c
0000000000008734	movq	%rax, %rdi
0000000000008737	jmp	_cerror_nocancel
000000000000873c	retq
000000000000873d	nop
000000000000873e	nop
000000000000873f	nop
_mach_msg_server_once:
0000000000008740	pushq	%rbp
0000000000008741	movq	%rsp, %rbp
0000000000008744	pushq	%r15
0000000000008746	pushq	%r14
0000000000008748	pushq	%r13
000000000000874a	pushq	%r12
000000000000874c	pushq	%rbx
000000000000874d	subq	$0x58, %rsp
0000000000008751	movl	%ecx, %ebx
0000000000008753	movl	%edx, -0x4c(%rbp)
0000000000008756	movq	%rdi, -0x68(%rbp)
000000000000875a	leaq	_mach_task_self_(%rip), %rax
0000000000008761	movl	(%rax), %edi
0000000000008763	movl	%ecx, %eax
0000000000008765	shrl	$0x18, %eax
0000000000008768	movl	%eax, %ecx
000000000000876a	andb	$0xf, %cl
000000000000876d	movl	$0x44, %edx
0000000000008772	cmpb	$0x4, %cl
0000000000008775	ja	0x878c
0000000000008777	movzbl	%al, %eax
000000000000877a	shlq	$0x3c, %rax
000000000000877e	sarq	$0x3c, %rax
0000000000008782	leaq	0x17d87(%rip), %rcx
0000000000008789	movl	(%rcx,%rax,4), %edx
000000000000878c	movq	%rdx, -0x70(%rbp)
0000000000008790	movl	$0xffffffff, %ecx
0000000000008795	leal	(%rdx,%rsi), %eax
0000000000008798	leaq	_vm_page_size(%rip), %r8
000000000000879f	movq	(%r8), %r13
00000000000087a2	leaq	(%r13,%rcx), %rcx
00000000000087a7	leaq	(%rax,%rcx), %r15
00000000000087ab	negq	%r13
00000000000087ae	andq	%r13, %r15
00000000000087b1	testb	$0x4, %bl
00000000000087b4	movl	%r15d, %r14d
00000000000087b7	cmovel	%eax, %r14d
00000000000087bb	leal	0x44(%rsi), %eax
00000000000087be	btl	$0x11, %ebx
00000000000087c2	cmovael	%esi, %eax
00000000000087c5	addl	%eax, %ecx
00000000000087c7	andl	%ecx, %r13d
00000000000087ca	leaq	-0x48(%rbp), %rsi
00000000000087ce	movl	$0x14000001, %ecx
00000000000087d3	movq	%r13, %rdx
00000000000087d6	movl	%edi, -0x2c(%rbp)
00000000000087d9	callq	_vm_allocate
00000000000087de	movl	%eax, %r12d
00000000000087e1	testl	%eax, %eax
00000000000087e3	jne	0x89da
00000000000087e9	movl	%r14d, -0x54(%rbp)
00000000000087ed	movl	%ebx, -0x3c(%rbp)
00000000000087f0	movq	%r13, -0x60(%rbp)
00000000000087f4	movl	-0x2c(%rbp), %ebx
00000000000087f7	movl	%r15d, %r13d
00000000000087fa	leaq	-0x38(%rbp), %rsi
00000000000087fe	movl	$0x14000001, %ecx
0000000000008803	movl	%ebx, %edi
0000000000008805	movq	%r13, %rdx
0000000000008808	callq	_vm_allocate
000000000000880d	movl	%eax, %r12d
0000000000008810	testl	%eax, %eax
0000000000008812	je	0x8823
0000000000008814	movq	-0x48(%rbp), %rsi
0000000000008818	movl	%ebx, %edi
000000000000881a	movq	-0x60(%rbp), %rdx
000000000000881e	jmp	0x89d5
0000000000008823	movl	-0x3c(%rbp), %ecx
0000000000008826	movl	%ecx, %eax
0000000000008828	andl	$0xfffff7fc, %eax
000000000000882d	testb	$0x4, %cl
0000000000008830	sete	%r14b
0000000000008834	movl	%eax, -0x50(%rbp)
0000000000008837	movl	%eax, %esi
0000000000008839	orl	$0x802, %esi
000000000000883f	movq	-0x38(%rbp), %rdi
0000000000008843	xorl	%eax, %eax
0000000000008845	movl	%eax, (%rsp)
0000000000008848	xorl	%edx, %edx
000000000000884a	xorl	%r9d, %r9d
000000000000884d	movl	%esi, -0x3c(%rbp)
0000000000008850	movl	-0x54(%rbp), %ecx
0000000000008853	movl	-0x4c(%rbp), %r8d
0000000000008857	callq	_mach_msg
000000000000885c	movl	%eax, %r12d
000000000000885f	cmpl	$0x10004004, %eax
0000000000008864	jne	0x88eb
000000000000886a	testb	%r14b, %r14b
000000000000886d	jne	0x88eb
000000000000886f	movq	-0x38(%rbp), %rsi
0000000000008873	movl	0x4(%rsi), %eax
0000000000008876	addl	-0x70(%rbp), %eax
0000000000008879	leaq	_vm_page_size(%rip), %rcx
0000000000008880	movq	(%rcx), %r15
0000000000008883	movl	$0xffffffff, %ecx
0000000000008888	leaq	(%r15,%rcx), %rcx
000000000000888c	addq	%rax, %rcx
000000000000888f	negq	%r15
0000000000008892	andq	%rcx, %r15
0000000000008895	movl	-0x2c(%rbp), %ebx
0000000000008898	movl	%ebx, %edi
000000000000889a	movq	%r13, %rdx
000000000000889d	callq	_vm_deallocate
00000000000088a2	movl	%r15d, %r13d
00000000000088a5	movl	$0x14000001, %ecx
00000000000088aa	movl	%ebx, %edi
00000000000088ac	leaq	-0x38(%rbp), %rsi
00000000000088b0	movq	%r13, %rdx
00000000000088b3	callq	_vm_allocate
00000000000088b8	testl	%eax, %eax
00000000000088ba	jne	0x8936
00000000000088bc	movq	-0x38(%rbp), %rdi
00000000000088c0	movl	$0x0, (%rsp)
00000000000088c7	xorl	%edx, %edx
00000000000088c9	xorl	%r9d, %r9d
00000000000088cc	movl	-0x3c(%rbp), %esi
00000000000088cf	movl	%r15d, %ecx
00000000000088d2	movl	-0x4c(%rbp), %r8d
00000000000088d6	callq	_mach_msg
00000000000088db	movl	%eax, %r12d
00000000000088de	cmpl	$0x10004004, %eax
00000000000088e3	setne	%al
00000000000088e6	orb	%r14b, %al
00000000000088e9	je	0x886f
00000000000088eb	movq	$-0x1, %r13
00000000000088f2	testl	%r12d, %r12d
00000000000088f5	movq	-0x60(%rbp), %r14
00000000000088f9	jne	0x89b3
00000000000088ff	movq	-0x38(%rbp), %rdi
0000000000008903	callq	_voucher_mach_msg_adopt
0000000000008908	movq	%rax, %r13
000000000000890b	movq	-0x38(%rbp), %rdi
000000000000890f	movq	-0x48(%rbp), %rsi
0000000000008913	callq	*-0x68(%rbp)
0000000000008916	movq	-0x48(%rbp), %rdi
000000000000891a	cmpl	$0x0, (%rdi)
000000000000891d	js	0x895d
000000000000891f	movl	0x20(%rdi), %eax
0000000000008922	testl	%eax, %eax
0000000000008924	je	0x895d
0000000000008926	cmpl	$0xfffffecf, %eax
000000000000892b	jne	0x8941
000000000000892d	movl	$0x0, 0x8(%rdi)
0000000000008934	jmp	0x895d
0000000000008936	movl	%eax, %r12d
0000000000008939	movl	-0x2c(%rbp), %ebx
000000000000893c	jmp	0x8814
0000000000008941	movq	-0x38(%rbp), %rax
0000000000008945	cmpl	$0x0, (%rax)
0000000000008948	jns	0x895d
000000000000894a	movl	$0x0, 0x8(%rax)
0000000000008951	movq	%rax, %rdi
0000000000008954	callq	_mach_msg_destroy
0000000000008959	movq	-0x48(%rbp), %rdi
000000000000895d	cmpl	$0x0, 0x8(%rdi)
0000000000008961	je	0x89a6
0000000000008963	movl	(%rdi), %eax
0000000000008965	movl	0x4(%rdi), %edx
0000000000008968	andl	$0x1f, %eax
000000000000896b	xorl	%esi, %esi
000000000000896d	cmpl	$0x12, %eax
0000000000008970	setne	%sil
0000000000008974	shll	$0x4, %esi
0000000000008977	orl	-0x50(%rbp), %esi
000000000000897a	orl	$0x1, %esi
000000000000897d	movl	$0x0, (%rsp)
0000000000008984	xorl	%ecx, %ecx
0000000000008986	xorl	%r8d, %r8d
0000000000008989	xorl	%r9d, %r9d
000000000000898c	callq	_mach_msg
0000000000008991	movl	%eax, %r12d
0000000000008994	addl	$0xeffffffd, %eax
0000000000008999	movl	$0x1, %ecx
000000000000899e	cmpl	%ecx, %eax
00000000000089a0	ja	0x89b3
00000000000089a2	movq	-0x48(%rbp), %rdi
00000000000089a6	xorl	%r12d, %r12d
00000000000089a9	cmpl	$0x0, (%rdi)
00000000000089ac	jns	0x89b3
00000000000089ae	callq	_mach_msg_destroy
00000000000089b3	movq	%r13, %rdi
00000000000089b6	callq	_voucher_mach_msg_revert
00000000000089bb	movq	-0x38(%rbp), %rsi
00000000000089bf	movl	%r15d, %edx
00000000000089c2	movl	-0x2c(%rbp), %ebx
00000000000089c5	movl	%ebx, %edi
00000000000089c7	callq	_vm_deallocate
00000000000089cc	movq	-0x48(%rbp), %rsi
00000000000089d0	movl	%ebx, %edi
00000000000089d2	movq	%r14, %rdx
00000000000089d5	callq	_vm_deallocate
00000000000089da	movl	%r12d, %eax
00000000000089dd	addq	$0x58, %rsp
00000000000089e1	popq	%rbx
00000000000089e2	popq	%r12
00000000000089e4	popq	%r13
00000000000089e6	popq	%r14
00000000000089e8	popq	%r15
00000000000089ea	popq	%rbp
00000000000089eb	retq
_proc_disable_cpumon:
00000000000089ec	pushq	%rbp
00000000000089ed	movq	%rsp, %rbp
00000000000089f0	subq	$0x20, %rsp
00000000000089f4	movl	%edi, %eax
00000000000089f6	movabsq	$0xff00000005, %rcx
0000000000008a00	leaq	-0x18(%rbp), %r8
0000000000008a04	movq	%rcx, (%r8)
0000000000008a07	xorl	%ecx, %ecx
0000000000008a09	movq	%rcx, 0x10(%r8)
0000000000008a0d	movq	%rcx, 0x8(%r8)
0000000000008a11	movq	%rcx, (%rsp)
0000000000008a15	movl	$0x1, %edi
0000000000008a1a	movl	$0xa, %esi
0000000000008a1f	movl	$0x4, %edx
0000000000008a24	movl	$0x3, %ecx
0000000000008a29	movl	%eax, %r9d
0000000000008a2c	callq	___process_policy
0000000000008a31	addq	$0x20, %rsp
0000000000008a35	popq	%rbp
0000000000008a36	retq
_task_get_exception_ports:
0000000000008a37	pushq	%rbp
0000000000008a38	movq	%rsp, %rbp
0000000000008a3b	pushq	%r15
0000000000008a3d	pushq	%r14
0000000000008a3f	pushq	%r13
0000000000008a41	pushq	%r12
0000000000008a43	pushq	%rbx
0000000000008a44	subq	$0x348, %rsp
0000000000008a4b	movq	%r9, -0x38(%rbp)
0000000000008a4f	movq	%r8, %r15
0000000000008a52	movq	%rcx, %r12
0000000000008a55	movq	%rdx, %r13
0000000000008a58	leaq	_NDR_record(%rip), %rax
0000000000008a5f	movq	(%rax), %rax
0000000000008a62	movq	%rax, -0x350(%rbp)
0000000000008a69	movl	%esi, -0x348(%rbp)
0000000000008a6f	movl	$0x1513, -0x368(%rbp)
0000000000008a79	movl	%edi, -0x360(%rbp)
0000000000008a7f	callq	_mig_get_reply_port
0000000000008a84	movl	%eax, -0x35c(%rbp)
0000000000008a8a	movabsq	$0xd5600000000, %rcx
0000000000008a94	movq	%rcx, -0x358(%rbp)
0000000000008a9b	movl	$0x0, (%rsp)
0000000000008aa2	leaq	-0x368(%rbp), %r14
0000000000008aa9	movl	$0x3, %esi
0000000000008aae	movl	$0x24, %edx
0000000000008ab3	movl	$0x330, %ecx
0000000000008ab8	xorl	%r9d, %r9d
0000000000008abb	movl	%eax, %r8d
0000000000008abe	movq	%r14, %rdi
0000000000008ac1	callq	_mach_msg
0000000000008ac6	movl	%eax, %ebx
0000000000008ac8	leal	-0x10000002(%rbx), %eax
0000000000008ace	cmpl	$0xe, %eax
0000000000008ad1	ja	0x8aea
0000000000008ad3	movl	$0x4003, %ecx
0000000000008ad8	btl	%eax, %ecx
0000000000008adb	jae	0x8aea
0000000000008add	movl	-0x35c(%rbp), %edi
0000000000008ae3	callq	_mig_put_reply_port
0000000000008ae8	jmp	0x8b50
0000000000008aea	testl	%ebx, %ebx
0000000000008aec	jne	0x8b2b
0000000000008aee	movl	-0x354(%rbp), %eax
0000000000008af4	cmpl	$0x47, %eax
0000000000008af7	je	0x8b38
0000000000008af9	cmpl	$0xdba, %eax
0000000000008afe	jne	0x8b3f
0000000000008b00	cmpl	$0x0, -0x368(%rbp)
0000000000008b07	movl	-0x364(%rbp), %eax
0000000000008b0d	js	0x8b64
0000000000008b0f	movl	$0xfffffed4, %ebx
0000000000008b14	cmpl	$0x24, %eax
0000000000008b17	jne	0x8b44
0000000000008b19	movl	-0x348(%rbp), %eax
0000000000008b1f	testl	%eax, %eax
0000000000008b21	movl	$0xfffffed4, %ebx
0000000000008b26	cmovnel	%eax, %ebx
0000000000008b29	jmp	0x8b44
0000000000008b2b	movl	-0x35c(%rbp), %edi
0000000000008b31	callq	_mig_dealloc_reply_port
0000000000008b36	jmp	0x8b50
0000000000008b38	movl	$0xfffffecc, %ebx
0000000000008b3d	jmp	0x8b44
0000000000008b3f	movl	$0xfffffed3, %ebx
0000000000008b44	leaq	-0x368(%rbp), %rdi
0000000000008b4b	callq	_mach_msg_destroy
0000000000008b50	movl	%ebx, %eax
0000000000008b52	addq	$0x348, %rsp
0000000000008b59	popq	%rbx
0000000000008b5a	popq	%r12
0000000000008b5c	popq	%r13
0000000000008b5e	popq	%r14
0000000000008b60	popq	%r15
0000000000008b62	popq	%rbp
0000000000008b63	retq
0000000000008b64	leal	-0x1a8(%rax), %ecx
0000000000008b6a	movl	$0xfffffed4, %ebx
0000000000008b6f	cmpl	$0x180, %ecx
0000000000008b75	ja	0x8b44
0000000000008b77	cmpl	$0x20, -0x350(%rbp)
0000000000008b7e	jne	0x8b44
0000000000008b80	leaq	-0x344(%rbp), %rdx
0000000000008b87	xorl	%esi, %esi
0000000000008b89	cmpl	$0xffffff, (%rdx)
0000000000008b8f	ja	0x8b44
0000000000008b91	incl	%esi
0000000000008b93	addq	$0xc, %rdx
0000000000008b97	cmpl	$0x20, %esi
0000000000008b9a	jb	0x8b89
0000000000008b9c	movslq	-0x1c4(%rbp), %rdi
0000000000008ba3	cmpq	$0x20, %rdi
0000000000008ba7	ja	0x8b44
0000000000008ba9	shrl	$0x2, %ecx
0000000000008bac	cmpl	%edi, %ecx
0000000000008bae	jb	0x8b44
0000000000008bb0	leal	(,%rdi,4), %ecx
0000000000008bb7	leal	0x1a8(%rcx), %edx
0000000000008bbd	cmpl	%edx, %eax
0000000000008bbf	jb	0x8b44
0000000000008bc1	subl	%ecx, %eax
0000000000008bc3	cmpl	%edx, %eax
0000000000008bc5	jb	0x8b44
0000000000008bcb	leal	-0x1a8(%rax), %esi
0000000000008bd1	shrl	$0x2, %esi
0000000000008bd4	cmpl	%edi, %esi
0000000000008bd6	jb	0x8b44
0000000000008bdc	subl	%ecx, %eax
0000000000008bde	cmpl	%edx, %eax
0000000000008be0	jne	0x8b44
0000000000008be6	addl	$0xfffffe58, %eax
0000000000008beb	shrl	$0x2, %eax
0000000000008bee	cmpl	%edi, %eax
0000000000008bf0	jb	0x8b44
0000000000008bf6	movl	%ecx, %eax
0000000000008bf8	leaq	-0x80(%rax), %rbx
0000000000008bfc	leaq	-0x80(%rax,%r14), %r14
0000000000008c01	addq	%r14, %rbx
0000000000008c04	leaq	-0x1c0(%rbp), %rsi
0000000000008c0b	movq	%rdi, -0x30(%rbp)
0000000000008c0f	movq	%r13, %rdi
0000000000008c12	movq	%rax, %r13
0000000000008c15	movq	%rax, %rdx
0000000000008c18	callq	_memcpy
0000000000008c1d	movq	-0x30(%rbp), %rsi
0000000000008c21	leaq	-0x34c(%rbp), %rdx
0000000000008c28	movl	%esi, (%r12)
0000000000008c2c	testl	%esi, %esi
0000000000008c2e	je	0x8c44
0000000000008c30	xorl	%eax, %eax
0000000000008c32	movl	(%rdx), %ecx
0000000000008c34	movl	%ecx, (%r15,%rax,4)
0000000000008c38	addq	$0xc, %rdx
0000000000008c3c	incq	%rax
0000000000008c3f	cmpq	%rsi, %rax
0000000000008c42	jl	0x8c32
0000000000008c44	addq	$0x228, %r14
0000000000008c4b	movq	-0x38(%rbp), %rdi
0000000000008c4f	movq	%r14, %rsi
0000000000008c52	movq	%r13, %rdx
0000000000008c55	callq	_memcpy
0000000000008c5a	addq	$0x2a8, %rbx
0000000000008c61	movq	0x10(%rbp), %rdi
0000000000008c65	movq	%rbx, %rsi
0000000000008c68	movq	%r13, %rdx
0000000000008c6b	callq	_memcpy
0000000000008c70	xorl	%ebx, %ebx
0000000000008c72	jmp	0x8b50
0000000000008c77	nop
_audit_session_port:
0000000000008c78	movl	$0x20001b0, %eax
0000000000008c7d	movq	%rcx, %r10
0000000000008c80	syscall
0000000000008c82	jae	0x8c8c
0000000000008c84	movq	%rax, %rdi
0000000000008c87	jmp	_cerror_nocancel
0000000000008c8c	retq
_posix_spawnattr_setauditsessionport_np:
0000000000008c8d	pushq	%rbp
0000000000008c8e	movq	%rsp, %rbp
0000000000008c91	subq	$0x20, %rsp
0000000000008c95	leaq	-0x18(%rbp), %rax
0000000000008c99	movq	$0x2, (%rax)
0000000000008ca0	movl	%esi, 0x8(%rax)
0000000000008ca3	movq	$0x0, 0xc(%rax)
0000000000008cab	movl	$0x0, 0x14(%rax)
0000000000008cb2	movq	%rax, %rsi
0000000000008cb5	callq	_posix_spawn_appendportaction_np
0000000000008cba	addq	$0x20, %rsp
0000000000008cbe	popq	%rbp
0000000000008cbf	retq
_posix_spawn_appendportaction_np:
0000000000008cc0	pushq	%rbp
0000000000008cc1	movq	%rsp, %rbp
0000000000008cc4	pushq	%r15
0000000000008cc6	pushq	%r14
0000000000008cc8	pushq	%r13
0000000000008cca	pushq	%r12
0000000000008ccc	pushq	%rbx
0000000000008ccd	pushq	%rax
0000000000008cce	movl	$0x16, %r15d
0000000000008cd4	testq	%rdi, %rdi
0000000000008cd7	je	0x8daf
0000000000008cdd	movq	%rsi, %r14
0000000000008ce0	testq	%rsi, %rsi
0000000000008ce3	je	0x8daf
0000000000008ce9	movq	%rdi, %rbx
0000000000008cec	movq	(%rdi), %r12
0000000000008cef	testq	%r12, %r12
0000000000008cf2	je	0x8daf
0000000000008cf8	movq	0x70(%r12), %rax
0000000000008cfd	testq	%rax, %rax
0000000000008d00	jne	0x8d21
0000000000008d02	movl	$0x38, %edi
0000000000008d07	callq	_malloc
0000000000008d0c	testq	%rax, %rax
0000000000008d0f	je	0x8da9
0000000000008d15	movq	$0x2, (%rax)
0000000000008d1c	movq	%rax, 0x70(%r12)
0000000000008d21	movl	0x4(%rax), %ecx
0000000000008d24	cmpl	%ecx, (%rax)
0000000000008d26	jne	0x8d80
0000000000008d28	movq	(%rbx), %rbx
0000000000008d2b	testq	%rbx, %rbx
0000000000008d2e	je	0x8daf
0000000000008d30	movq	0x70(%rbx), %rdi
0000000000008d34	testq	%rdi, %rdi
0000000000008d37	je	0x8daf
0000000000008d39	movl	(%rdi), %r13d
0000000000008d3c	movl	$0xc, %r15d
0000000000008d42	addl	%r13d, %r13d
0000000000008d45	jo	0x8daf
0000000000008d47	movslq	%r13d, %rax
0000000000008d4a	movl	$0x18, %ecx
0000000000008d4f	mulq	%rcx
0000000000008d52	seto	%dl
0000000000008d55	addq	$0x8, %rax
0000000000008d59	setb	%cl
0000000000008d5c	testb	%dl, %dl
0000000000008d5e	jne	0x8daf
0000000000008d60	testb	%cl, %cl
0000000000008d62	jne	0x8daf
0000000000008d64	movq	%rax, %rsi
0000000000008d67	callq	_realloc
0000000000008d6c	testq	%rax, %rax
0000000000008d6f	je	0x8daf
0000000000008d71	movl	%r13d, (%rax)
0000000000008d74	movq	%rax, 0x70(%rbx)
0000000000008d78	movq	0x70(%r12), %rax
0000000000008d7d	movl	0x4(%rax), %ecx
0000000000008d80	movslq	%ecx, %rcx
0000000000008d83	leaq	(%rcx,%rcx,2), %rcx
0000000000008d87	movq	0x10(%r14), %rdx
0000000000008d8b	movq	%rdx, 0x18(%rax,%rcx,8)
0000000000008d90	movq	(%r14), %rdx
0000000000008d93	movq	0x8(%r14), %rsi
0000000000008d97	movq	%rsi, 0x10(%rax,%rcx,8)
0000000000008d9c	movq	%rdx, 0x8(%rax,%rcx,8)
0000000000008da1	incl	0x4(%rax)
0000000000008da4	xorl	%r15d, %r15d
0000000000008da7	jmp	0x8daf
0000000000008da9	movl	$0xc, %r15d
0000000000008daf	movl	%r15d, %eax
0000000000008db2	addq	$0x8, %rsp
0000000000008db6	popq	%rbx
0000000000008db7	popq	%r12
0000000000008db9	popq	%r13
0000000000008dbb	popq	%r14
0000000000008dbd	popq	%r15
0000000000008dbf	popq	%rbp
0000000000008dc0	retq
0000000000008dc1	nop
0000000000008dc2	nop
0000000000008dc3	nop
_getdtablesize:
0000000000008dc4	movl	$0x2000059, %eax
0000000000008dc9	movq	%rcx, %r10
0000000000008dcc	syscall
0000000000008dce	jae	0x8dd8
0000000000008dd0	movq	%rax, %rdi
0000000000008dd3	jmp	_cerror_nocancel
0000000000008dd8	retq
0000000000008dd9	nop
0000000000008dda	nop
0000000000008ddb	nop
___sigreturn:
0000000000008ddc	movl	$0x20000b8, %eax
0000000000008de1	movq	%rcx, %r10
0000000000008de4	syscall
0000000000008de6	jae	0x8df0
0000000000008de8	movq	%rax, %rdi
0000000000008deb	jmp	_cerror
0000000000008df0	retq
0000000000008df1	nop
0000000000008df2	nop
0000000000008df3	nop
_audit_session_join:
0000000000008df4	movl	$0x20001ad, %eax
0000000000008df9	movq	%rcx, %r10
0000000000008dfc	syscall
0000000000008dfe	jae	0x8e08
0000000000008e00	movq	%rax, %rdi
0000000000008e03	jmp	_cerror_nocancel
0000000000008e08	retq
0000000000008e09	nop
0000000000008e0a	nop
0000000000008e0b	nop
___sigwait:
0000000000008e0c	movl	$0x200014a, %eax
0000000000008e11	movq	%rcx, %r10
0000000000008e14	syscall
0000000000008e16	jae	0x8e20
0000000000008e18	movq	%rax, %rdi
0000000000008e1b	jmp	_cerror
0000000000008e20	retq
0000000000008e21	nop
0000000000008e22	nop
0000000000008e23	nop
_setpgid:
0000000000008e24	movl	$0x2000052, %eax
0000000000008e29	movq	%rcx, %r10
0000000000008e2c	syscall
0000000000008e2e	jae	0x8e38
0000000000008e30	movq	%rax, %rdi
0000000000008e33	jmp	_cerror_nocancel
0000000000008e38	retq
0000000000008e39	nop
0000000000008e3a	nop
0000000000008e3b	nop
_lstat:
0000000000008e3c	movl	$0x20000be, %eax
0000000000008e41	movq	%rcx, %r10
0000000000008e44	syscall
0000000000008e46	jae	0x8e50
0000000000008e48	movq	%rax, %rdi
0000000000008e4b	jmp	_cerror
0000000000008e50	retq
0000000000008e51	nop
0000000000008e52	nop
0000000000008e53	nop
_stat:
0000000000008e54	movl	$0x20000bc, %eax
0000000000008e59	movq	%rcx, %r10
0000000000008e5c	syscall
0000000000008e5e	jae	0x8e68
0000000000008e60	movq	%rax, %rdi
0000000000008e63	jmp	_cerror
0000000000008e68	retq
0000000000008e69	nop
0000000000008e6a	nop
0000000000008e6b	nop
_fstatfs:
0000000000008e6c	movl	$0x200009e, %eax
0000000000008e71	movq	%rcx, %r10
0000000000008e74	syscall
0000000000008e76	jae	0x8e80
0000000000008e78	movq	%rax, %rdi
0000000000008e7b	jmp	_cerror_nocancel
0000000000008e80	retq
_mach_ports_lookup:
0000000000008e81	pushq	%rbp
0000000000008e82	movq	%rsp, %rbp
0000000000008e85	pushq	%r15
0000000000008e87	pushq	%r14
0000000000008e89	pushq	%rbx
0000000000008e8a	subq	$0x48, %rsp
0000000000008e8e	movq	%rdx, %r14
0000000000008e91	movq	%rsi, %r15
0000000000008e94	leaq	-0x58(%rbp), %rbx
0000000000008e98	movl	$0x1513, (%rbx)
0000000000008e9e	movl	%edi, 0x8(%rbx)
0000000000008ea1	callq	_mig_get_reply_port
0000000000008ea6	movl	%eax, 0xc(%rbx)
0000000000008ea9	movabsq	$0xd4c00000000, %rcx
0000000000008eb3	movq	%rcx, 0x10(%rbx)
0000000000008eb7	movl	$0x0, (%rsp)
0000000000008ebe	movl	$0x3, %esi
0000000000008ec3	movl	$0x18, %edx
0000000000008ec8	movl	$0x40, %ecx
0000000000008ecd	xorl	%r9d, %r9d
0000000000008ed0	movq	%rbx, %rdi
0000000000008ed3	movl	%eax, %r8d
0000000000008ed6	callq	_mach_msg
0000000000008edb	movl	%eax, %ebx
0000000000008edd	leal	-0x10000002(%rbx), %eax
0000000000008ee3	cmpl	$0xe, %eax
0000000000008ee6	ja	0x8efc
0000000000008ee8	movl	$0x4003, %ecx
0000000000008eed	btl	%eax, %ecx
0000000000008ef0	jae	0x8efc
0000000000008ef2	movl	-0x4c(%rbp), %edi
0000000000008ef5	callq	_mig_put_reply_port
0000000000008efa	jmp	0x8f50
0000000000008efc	testl	%ebx, %ebx
0000000000008efe	jne	0x8f31
0000000000008f00	movl	-0x44(%rbp), %eax
0000000000008f03	cmpl	$0x47, %eax
0000000000008f06	je	0x8f3b
0000000000008f08	cmpl	$0xdb0, %eax
0000000000008f0d	jne	0x8f42
0000000000008f0f	cmpl	$0x0, -0x58(%rbp)
0000000000008f13	movl	-0x54(%rbp), %eax
0000000000008f16	movl	$0xfffffed4, %ebx
0000000000008f1b	js	0x8f5d
0000000000008f1d	cmpl	$0x24, %eax
0000000000008f20	jne	0x8f47
0000000000008f22	movl	-0x38(%rbp), %eax
0000000000008f25	testl	%eax, %eax
0000000000008f27	movl	$0xfffffed4, %ebx
0000000000008f2c	cmovnel	%eax, %ebx
0000000000008f2f	jmp	0x8f47
0000000000008f31	movl	-0x4c(%rbp), %edi
0000000000008f34	callq	_mig_dealloc_reply_port
0000000000008f39	jmp	0x8f50
0000000000008f3b	movl	$0xfffffecc, %ebx
0000000000008f40	jmp	0x8f47
0000000000008f42	movl	$0xfffffed3, %ebx
0000000000008f47	leaq	-0x58(%rbp), %rdi
0000000000008f4b	callq	_mach_msg_destroy
0000000000008f50	movl	%ebx, %eax
0000000000008f52	addq	$0x48, %rsp
0000000000008f56	popq	%rbx
0000000000008f57	popq	%r14
0000000000008f59	popq	%r15
0000000000008f5b	popq	%rbp
0000000000008f5c	retq
0000000000008f5d	cmpl	$0x38, %eax
0000000000008f60	jne	0x8f47
0000000000008f62	cmpl	$0x1, -0x40(%rbp)
0000000000008f66	jne	0x8f47
0000000000008f68	movl	$0xffff0000, %eax
0000000000008f6d	andl	-0x34(%rbp), %eax
0000000000008f70	cmpl	$0x2110000, %eax
0000000000008f75	jne	0x8f47
0000000000008f77	movl	-0x30(%rbp), %eax
0000000000008f7a	cmpl	-0x24(%rbp), %eax
0000000000008f7d	jne	0x8f47
0000000000008f7f	movq	-0x3c(%rbp), %rcx
0000000000008f83	movq	%rcx, (%r15)
0000000000008f86	movl	%eax, (%r14)
0000000000008f89	xorl	%ebx, %ebx
0000000000008f8b	jmp	0x8f50
_posix_spawnattr_setcpumonitor_default:
0000000000008f8d	movl	$0x16, %eax
0000000000008f92	testq	%rdi, %rdi
0000000000008f95	je	0x8fb0
0000000000008f97	movq	(%rdi), %rcx
0000000000008f9a	testq	%rcx, %rcx
0000000000008f9d	je	0x8fb0
0000000000008f9f	movl	$0xfe, %eax
0000000000008fa4	movq	%rax, %xmm0
0000000000008fa9	movdqu	%xmm0, 0x28(%rcx)
0000000000008fae	xorl	%eax, %eax
0000000000008fb0	retq
_posix_spawnattr_setspecialport_np:
0000000000008fb1	pushq	%rbp
0000000000008fb2	movq	%rsp, %rbp
0000000000008fb5	subq	$0x20, %rsp
0000000000008fb9	xorl	%ecx, %ecx
0000000000008fbb	leaq	-0x18(%rbp), %rax
0000000000008fbf	movq	%rcx, (%rax)
0000000000008fc2	movl	%esi, 0x8(%rax)
0000000000008fc5	movq	%rcx, 0xc(%rax)
0000000000008fc9	movl	%edx, 0x14(%rax)
0000000000008fcc	movq	%rax, %rsi
0000000000008fcf	callq	_posix_spawn_appendportaction_np
0000000000008fd4	addq	$0x20, %rsp
0000000000008fd8	popq	%rbp
0000000000008fd9	retq
_posix_spawn_file_actions_addopen:
0000000000008fda	pushq	%rbp
0000000000008fdb	movq	%rsp, %rbp
0000000000008fde	pushq	%r15
0000000000008fe0	pushq	%r14
0000000000008fe2	pushq	%r13
0000000000008fe4	pushq	%r12
0000000000008fe6	pushq	%rbx
0000000000008fe7	pushq	%rax
0000000000008fe8	movl	$0x16, %eax
0000000000008fed	testq	%rdi, %rdi
0000000000008ff0	je	0x907d
0000000000008ff6	movl	%ecx, %r12d
0000000000008ff9	movq	%rdi, %rbx
0000000000008ffc	movq	(%rdi), %rcx
0000000000008fff	testq	%rcx, %rcx
0000000000009002	je	0x907d
0000000000009004	movl	%esi, %r13d
0000000000009007	movl	$0x9, %eax
000000000000900c	cmpl	$0x27ff, %esi
0000000000009012	ja	0x907d
0000000000009014	movl	%r8d, %r15d
0000000000009017	movq	%rdx, %r14
000000000000901a	movl	0x4(%rcx), %eax
000000000000901d	cmpl	(%rcx), %eax
000000000000901f	jne	0x9040
0000000000009021	movq	%rbx, %rdi
0000000000009024	callq	__posix_spawn_file_actions_grow
0000000000009029	movl	%eax, %ecx
000000000000902b	movl	$0xc, %eax
0000000000009030	testl	%ecx, %ecx
0000000000009032	jne	0x907d
0000000000009034	movq	(%rbx), %rcx
0000000000009037	leaq	0x4(%rcx), %rdx
000000000000903b	movl	0x4(%rcx), %eax
000000000000903e	jmp	0x9047
0000000000009040	movq	%rcx, %rdx
0000000000009043	addq	$0x4, %rdx
0000000000009047	leal	0x1(%rax), %esi
000000000000904a	movl	%esi, (%rdx)
000000000000904c	cltq
000000000000904e	imulq	$0x410, %rax, %rax
0000000000009055	leaq	0x16(%rcx,%rax), %rdi
000000000000905a	movl	$0x0, -0xe(%rdi)
0000000000009061	movl	%r13d, -0xa(%rdi)
0000000000009065	movl	%r12d, -0x6(%rdi)
0000000000009069	movw	%r15w, -0x2(%rdi)
000000000000906e	movl	$0x400, %edx
0000000000009073	movq	%r14, %rsi
0000000000009076	callq	_strlcpy
000000000000907b	xorl	%eax, %eax
000000000000907d	addq	$0x8, %rsp
0000000000009081	popq	%rbx
0000000000009082	popq	%r12
0000000000009084	popq	%r13
0000000000009086	popq	%r14
0000000000009088	popq	%r15
000000000000908a	popq	%rbp
000000000000908b	retq
_strlcpy:
000000000000908c	movq	__libkernel_string_functions(%rip), %rax
0000000000009093	movq	0x58(%rax), %rax
0000000000009097	jmpq	*%rax
0000000000009099	nop
000000000000909a	nop
000000000000909b	nop
_kevent64:
000000000000909c	movl	$0x2000171, %eax
00000000000090a1	movq	%rcx, %r10
00000000000090a4	syscall
00000000000090a6	jae	0x90b0
00000000000090a8	movq	%rax, %rdi
00000000000090ab	jmp	_cerror_nocancel
00000000000090b0	retq
_posix_spawnattr_setbinpref_np:
00000000000090b1	movl	$0x16, %eax
00000000000090b6	testq	%rdi, %rdi
00000000000090b9	je	0x90ec
00000000000090bb	movq	(%rdi), %r8
00000000000090be	testq	%r8, %r8
00000000000090c1	je	0x90ec
00000000000090c3	xorl	%eax, %eax
00000000000090c5	xorl	%r9d, %r9d
00000000000090c8	testq	%rsi, %rsi
00000000000090cb	je	0x90e4
00000000000090cd	movl	(%rdx,%r9,4), %edi
00000000000090d1	movl	%edi, 0x10(%r8,%r9,4)
00000000000090d6	incq	%r9
00000000000090d9	cmpq	$0x3, %r9
00000000000090dd	ja	0x90e4
00000000000090df	cmpq	%rsi, %r9
00000000000090e2	jb	0x90cd
00000000000090e4	testq	%rcx, %rcx
00000000000090e7	je	0x90ec
00000000000090e9	movq	%r9, (%rcx)
00000000000090ec	retq
00000000000090ed	nop
00000000000090ee	nop
00000000000090ef	nop
___setlogin:
00000000000090f0	movl	$0x2000032, %eax
00000000000090f5	movq	%rcx, %r10
00000000000090f8	syscall
00000000000090fa	jae	0x9104
00000000000090fc	movq	%rax, %rdi
00000000000090ff	jmp	_cerror_nocancel
0000000000009104	retq
0000000000009105	nop
0000000000009106	nop
0000000000009107	nop
___initgroups:
0000000000009108	movl	$0x20000f3, %eax
000000000000910d	movq	%rcx, %r10
0000000000009110	syscall
0000000000009112	jae	0x911c
0000000000009114	movq	%rax, %rdi
0000000000009117	jmp	_cerror_nocancel
000000000000911c	retq
000000000000911d	nop
000000000000911e	nop
000000000000911f	nop
___getlogin:
0000000000009120	movl	$0x2000031, %eax
0000000000009125	movq	%rcx, %r10
0000000000009128	syscall
000000000000912a	jae	0x9134
000000000000912c	movq	%rax, %rdi
000000000000912f	jmp	_cerror
0000000000009134	retq
_mach_port_set_context:
0000000000009135	jmp	__kernelrpc_mach_port_set_context
__kernelrpc_mach_port_set_context:
000000000000913a	pushq	%rbp
000000000000913b	movq	%rsp, %rbp
000000000000913e	pushq	%rbx
000000000000913f	subq	$0x38, %rsp
0000000000009143	leaq	_NDR_record(%rip), %rax
000000000000914a	movq	(%rax), %rax
000000000000914d	leaq	-0x38(%rbp), %rbx
0000000000009151	movq	%rax, 0x18(%rbx)
0000000000009155	movl	%esi, 0x20(%rbx)
0000000000009158	movq	%rdx, 0x24(%rbx)
000000000000915c	movl	$0x1513, (%rbx)
0000000000009162	movl	%edi, 0x8(%rbx)
0000000000009165	callq	_mig_get_reply_port
000000000000916a	movl	%eax, 0xc(%rbx)
000000000000916d	movabsq	$0xc9d00000000, %rcx
0000000000009177	movq	%rcx, 0x10(%rbx)
000000000000917b	movl	$0x0, (%rsp)
0000000000009182	movl	$0x3, %esi
0000000000009187	movl	$0x2c, %edx
000000000000918c	movl	$0x2c, %ecx
0000000000009191	xorl	%r9d, %r9d
0000000000009194	movq	%rbx, %rdi
0000000000009197	movl	%eax, %r8d
000000000000919a	callq	_mach_msg
000000000000919f	movl	%eax, %ebx
00000000000091a1	leal	-0x10000002(%rbx), %eax
00000000000091a7	cmpl	$0xe, %eax
00000000000091aa	ja	0x91c0
00000000000091ac	movl	$0x4003, %ecx
00000000000091b1	btl	%eax, %ecx
00000000000091b4	jae	0x91c0
00000000000091b6	movl	-0x2c(%rbp), %edi
00000000000091b9	callq	_mig_put_reply_port
00000000000091be	jmp	0x920e
00000000000091c0	testl	%ebx, %ebx
00000000000091c2	jne	0x91ef
00000000000091c4	movl	-0x24(%rbp), %eax
00000000000091c7	cmpl	$0x47, %eax
00000000000091ca	je	0x91f9
00000000000091cc	cmpl	$0xd01, %eax
00000000000091d1	jne	0x9200
00000000000091d3	movl	$0xfffffed4, %ebx
00000000000091d8	cmpl	$0x0, -0x38(%rbp)
00000000000091dc	js	0x9205
00000000000091de	cmpl	$0x24, -0x34(%rbp)
00000000000091e2	jne	0x9205
00000000000091e4	movl	-0x18(%rbp), %ebx
00000000000091e7	testl	%ebx, %ebx
00000000000091e9	jne	0x9205
00000000000091eb	xorl	%ebx, %ebx
00000000000091ed	jmp	0x920e
00000000000091ef	movl	-0x2c(%rbp), %edi
00000000000091f2	callq	_mig_dealloc_reply_port
00000000000091f7	jmp	0x920e
00000000000091f9	movl	$0xfffffecc, %ebx
00000000000091fe	jmp	0x9205
0000000000009200	movl	$0xfffffed3, %ebx
0000000000009205	leaq	-0x38(%rbp), %rdi
0000000000009209	callq	_mach_msg_destroy
000000000000920e	movl	%ebx, %eax
0000000000009210	addq	$0x38, %rsp
0000000000009214	popq	%rbx
0000000000009215	popq	%rbp
0000000000009216	retq
_mach_port_get_set_status:
0000000000009217	jmp	__kernelrpc_mach_port_get_set_status
__kernelrpc_mach_port_get_set_status:
000000000000921c	pushq	%rbp
000000000000921d	movq	%rsp, %rbp
0000000000009220	pushq	%r15
0000000000009222	pushq	%r14
0000000000009224	pushq	%rbx
0000000000009225	subq	$0x48, %rsp
0000000000009229	movq	%rcx, %r14
000000000000922c	movq	%rdx, %r15
000000000000922f	leaq	_NDR_record(%rip), %rax
0000000000009236	movq	(%rax), %rax
0000000000009239	leaq	-0x58(%rbp), %rbx
000000000000923d	movq	%rax, 0x18(%rbx)
0000000000009241	movl	%esi, 0x20(%rbx)
0000000000009244	movl	$0x1513, (%rbx)
000000000000924a	movl	%edi, 0x8(%rbx)
000000000000924d	callq	_mig_get_reply_port
0000000000009252	movl	%eax, 0xc(%rbx)
0000000000009255	movabsq	$0xc8b00000000, %rcx
000000000000925f	movq	%rcx, 0x10(%rbx)
0000000000009263	movl	$0x0, (%rsp)
000000000000926a	movl	$0x3, %esi
000000000000926f	movl	$0x24, %edx
0000000000009274	movl	$0x40, %ecx
0000000000009279	xorl	%r9d, %r9d
000000000000927c	movq	%rbx, %rdi
000000000000927f	movl	%eax, %r8d
0000000000009282	callq	_mach_msg
0000000000009287	movl	%eax, %ebx
0000000000009289	leal	-0x10000002(%rbx), %eax
000000000000928f	cmpl	$0xe, %eax
0000000000009292	ja	0x92a8
0000000000009294	movl	$0x4003, %ecx
0000000000009299	btl	%eax, %ecx
000000000000929c	jae	0x92a8
000000000000929e	movl	-0x4c(%rbp), %edi
00000000000092a1	callq	_mig_put_reply_port
00000000000092a6	jmp	0x92fc
00000000000092a8	testl	%ebx, %ebx
00000000000092aa	jne	0x92dd
00000000000092ac	movl	-0x44(%rbp), %eax
00000000000092af	cmpl	$0x47, %eax
00000000000092b2	je	0x92e7
00000000000092b4	cmpl	$0xcef, %eax
00000000000092b9	jne	0x92ee
00000000000092bb	cmpl	$0x0, -0x58(%rbp)
00000000000092bf	movl	-0x54(%rbp), %eax
00000000000092c2	movl	$0xfffffed4, %ebx
00000000000092c7	js	0x9309
00000000000092c9	cmpl	$0x24, %eax
00000000000092cc	jne	0x92f3
00000000000092ce	movl	-0x38(%rbp), %eax
00000000000092d1	testl	%eax, %eax
00000000000092d3	movl	$0xfffffed4, %ebx
00000000000092d8	cmovnel	%eax, %ebx
00000000000092db	jmp	0x92f3
00000000000092dd	movl	-0x4c(%rbp), %edi
00000000000092e0	callq	_mig_dealloc_reply_port
00000000000092e5	jmp	0x92fc
00000000000092e7	movl	$0xfffffecc, %ebx
00000000000092ec	jmp	0x92f3
00000000000092ee	movl	$0xfffffed3, %ebx
00000000000092f3	leaq	-0x58(%rbp), %rdi
00000000000092f7	callq	_mach_msg_destroy
00000000000092fc	movl	%ebx, %eax
00000000000092fe	addq	$0x48, %rsp
0000000000009302	popq	%rbx
0000000000009303	popq	%r14
0000000000009305	popq	%r15
0000000000009307	popq	%rbp
0000000000009308	retq
0000000000009309	cmpl	$0x38, %eax
000000000000930c	jne	0x92f3
000000000000930e	cmpl	$0x1, -0x40(%rbp)
0000000000009312	jne	0x92f3
0000000000009314	movl	$0xff000000, %eax
0000000000009319	andl	-0x34(%rbp), %eax
000000000000931c	cmpl	$0x1000000, %eax
0000000000009321	jne	0x92f3
0000000000009323	movl	-0x30(%rbp), %eax
0000000000009326	shrl	$0x2, %eax
0000000000009329	cmpl	-0x24(%rbp), %eax
000000000000932c	jne	0x92f3
000000000000932e	movq	-0x3c(%rbp), %rcx
0000000000009332	movq	%rcx, (%r15)
0000000000009335	movl	%eax, (%r14)
0000000000009338	xorl	%ebx, %ebx
000000000000933a	jmp	0x92fc
___pthread_canceled:
000000000000933c	movl	$0x200014d, %eax
0000000000009341	movq	%rcx, %r10
0000000000009344	syscall
0000000000009346	jae	0x9350
0000000000009348	movq	%rax, %rdi
000000000000934b	jmp	_cerror_nocancel
0000000000009350	retq
_clock_sleep:
0000000000009351	movq	%rcx, %rax
0000000000009354	movq	%rdx, %rcx
0000000000009357	shrq	$0x20, %rcx
000000000000935b	movq	%rax, %r8
000000000000935e	jmp	_clock_sleep_trap
0000000000009363	nop
_poll:
0000000000009364	movl	$0x20000e6, %eax
0000000000009369	movq	%rcx, %r10
000000000000936c	syscall
000000000000936e	jae	0x9378
0000000000009370	movq	%rax, %rdi
0000000000009373	jmp	_cerror
0000000000009378	retq
_vm_map:
0000000000009379	pushq	%rbp
000000000000937a	movq	%rsp, %rbp
000000000000937d	pushq	%r15
000000000000937f	pushq	%r14
0000000000009381	pushq	%r13
0000000000009383	pushq	%r12
0000000000009385	pushq	%rbx
0000000000009386	pushq	%rax
0000000000009387	movl	%r8d, %ebx
000000000000938a	movq	%rdx, %r14
000000000000938d	movq	%rsi, %r15
0000000000009390	movl	%edi, %r12d
0000000000009393	movl	0x18(%rbp), %r10d
0000000000009397	movl	0x20(%rbp), %r11d
000000000000939b	movl	0x28(%rbp), %r13d
000000000000939f	movl	0x30(%rbp), %eax
00000000000093a2	subq	$0x8, %rsp
00000000000093a6	pushq	%rax
00000000000093a7	pushq	%r13
00000000000093a9	pushq	%r11
00000000000093ab	pushq	%r10
00000000000093ad	pushq	0x10(%rbp)
00000000000093b0	callq	__kernelrpc_vm_map
00000000000093b5	addq	$0x30, %rsp
00000000000093b9	movl	%eax, %r13d
00000000000093bc	movq	___syscall_logger(%rip), %rax
00000000000093c3	testq	%rax, %rax
00000000000093c6	je	0x93e6
00000000000093c8	andl	$0xff000000, %ebx
00000000000093ce	orl	$0x90, %ebx
00000000000093d4	movl	%r12d, %esi
00000000000093d7	movq	(%r15), %r8
00000000000093da	xorl	%ecx, %ecx
00000000000093dc	xorl	%r9d, %r9d
00000000000093df	movl	%ebx, %edi
00000000000093e1	movq	%r14, %rdx
00000000000093e4	callq	*%rax
00000000000093e6	movl	%r13d, %eax
00000000000093e9	addq	$0x8, %rsp
00000000000093ed	popq	%rbx
00000000000093ee	popq	%r12
00000000000093f0	popq	%r13
00000000000093f2	popq	%r14
00000000000093f4	popq	%r15
00000000000093f6	popq	%rbp
00000000000093f7	retq
__kernelrpc_vm_map:
00000000000093f8	pushq	%rbp
00000000000093f9	movq	%rsp, %rbp
00000000000093fc	pushq	%r15
00000000000093fe	pushq	%r14
0000000000009400	pushq	%r12
0000000000009402	pushq	%rbx
0000000000009403	subq	$0x70, %rsp
0000000000009407	movq	%rsi, %r14
000000000000940a	movl	0x30(%rbp), %r10d
000000000000940e	movl	0x28(%rbp), %r11d
0000000000009412	movl	0x20(%rbp), %r15d
0000000000009416	movl	0x18(%rbp), %r12d
000000000000941a	movq	0x10(%rbp), %rax
000000000000941e	leaq	-0x88(%rbp), %rbx
0000000000009425	movl	$0x1, 0x18(%rbx)
000000000000942c	movl	%r9d, 0x1c(%rbx)
0000000000009430	movl	$0x130000, 0x24(%rbx)
0000000000009437	leaq	_NDR_record(%rip), %rsi
000000000000943e	movq	(%rsi), %rsi
0000000000009441	movq	%rsi, 0x28(%rbx)
0000000000009445	movq	(%r14), %rsi
0000000000009448	movq	%rsi, 0x30(%rbx)
000000000000944c	movq	%rdx, 0x38(%rbx)
0000000000009450	movq	%rcx, 0x40(%rbx)
0000000000009454	movl	%r8d, 0x48(%rbx)
0000000000009458	movq	%rax, 0x4c(%rbx)
000000000000945c	movl	%r12d, 0x54(%rbx)
0000000000009460	movl	%r15d, 0x58(%rbx)
0000000000009464	movl	%r11d, 0x5c(%rbx)
0000000000009468	movl	%r10d, 0x60(%rbx)
000000000000946c	movl	$0x80001513, (%rbx)
0000000000009472	movl	%edi, 0x8(%rbx)
0000000000009475	callq	_mig_get_reply_port
000000000000947a	movl	%eax, 0xc(%rbx)
000000000000947d	movabsq	$0x12cb00000000, %rcx
0000000000009487	movq	%rcx, 0x10(%rbx)
000000000000948b	movl	$0x0, (%rsp)
0000000000009492	movl	$0x3, %esi
0000000000009497	movl	$0x64, %edx
000000000000949c	movl	$0x34, %ecx
00000000000094a1	xorl	%r9d, %r9d
00000000000094a4	movq	%rbx, %rdi
00000000000094a7	movl	%eax, %r8d
00000000000094aa	callq	_mach_msg
00000000000094af	movl	%eax, %ebx
00000000000094b1	leal	-0x10000002(%rbx), %eax
00000000000094b7	cmpl	$0xe, %eax
00000000000094ba	ja	0x94d0
00000000000094bc	movl	$0x4003, %ecx
00000000000094c1	btl	%eax, %ecx
00000000000094c4	jae	0x94d0
00000000000094c6	movl	-0x7c(%rbp), %edi
00000000000094c9	callq	_mig_put_reply_port
00000000000094ce	jmp	0x952e
00000000000094d0	testl	%ebx, %ebx
00000000000094d2	jne	0x950a
00000000000094d4	movl	-0x74(%rbp), %eax
00000000000094d7	cmpl	$0x47, %eax
00000000000094da	je	0x9514
00000000000094dc	cmpl	$0x132f, %eax
00000000000094e1	jne	0x951b
00000000000094e3	movl	$0xfffffed4, %eax
00000000000094e8	cmpl	$0x0, -0x88(%rbp)
00000000000094ef	js	0x9520
00000000000094f1	movl	-0x84(%rbp), %ecx
00000000000094f7	cmpl	$0x2c, %ecx
00000000000094fa	je	0x953d
00000000000094fc	cmpl	$0x24, %ecx
00000000000094ff	jne	0x9520
0000000000009501	movl	-0x68(%rbp), %ebx
0000000000009504	testl	%ebx, %ebx
0000000000009506	jne	0x9522
0000000000009508	jmp	0x9520
000000000000950a	movl	-0x7c(%rbp), %edi
000000000000950d	callq	_mig_dealloc_reply_port
0000000000009512	jmp	0x952e
0000000000009514	movl	$0xfffffecc, %eax
0000000000009519	jmp	0x9520
000000000000951b	movl	$0xfffffed3, %eax
0000000000009520	movl	%eax, %ebx
0000000000009522	leaq	-0x88(%rbp), %rdi
0000000000009529	callq	_mach_msg_destroy
000000000000952e	movl	%ebx, %eax
0000000000009530	addq	$0x70, %rsp
0000000000009534	popq	%rbx
0000000000009535	popq	%r12
0000000000009537	popq	%r14
0000000000009539	popq	%r15
000000000000953b	popq	%rbp
000000000000953c	retq
000000000000953d	movl	-0x68(%rbp), %ebx
0000000000009540	testl	%ebx, %ebx
0000000000009542	jne	0x9522
0000000000009544	movq	-0x64(%rbp), %rax
0000000000009548	movq	%rax, (%r14)
000000000000954b	xorl	%ebx, %ebx
000000000000954d	jmp	0x952e
000000000000954f	nop
___stat64_extended:
0000000000009550	movl	$0x2000155, %eax
0000000000009555	movq	%rcx, %r10
0000000000009558	syscall
000000000000955a	jae	0x9564
000000000000955c	movq	%rax, %rdi
000000000000955f	jmp	_cerror_nocancel
0000000000009564	retq
0000000000009565	nop
0000000000009566	nop
0000000000009567	nop
___chmod_extended:
0000000000009568	movl	$0x200011a, %eax
000000000000956d	movq	%rcx, %r10
0000000000009570	syscall
0000000000009572	jae	0x957c
0000000000009574	movq	%rax, %rdi
0000000000009577	jmp	_cerror_nocancel
000000000000957c	retq
000000000000957d	nop
000000000000957e	nop
000000000000957f	nop
___lstat64_extended:
0000000000009580	movl	$0x2000156, %eax
0000000000009585	movq	%rcx, %r10
0000000000009588	syscall
000000000000958a	jae	0x9594
000000000000958c	movq	%rax, %rdi
000000000000958f	jmp	_cerror_nocancel
0000000000009594	retq
0000000000009595	nop
0000000000009596	nop
0000000000009597	nop
___fchmod_extended:
0000000000009598	movl	$0x200011b, %eax
000000000000959d	movq	%rcx, %r10
00000000000095a0	syscall
00000000000095a2	jae	0x95ac
00000000000095a4	movq	%rax, %rdi
00000000000095a7	jmp	_cerror_nocancel
00000000000095ac	retq
00000000000095ad	nop
00000000000095ae	nop
00000000000095af	nop
_fchflags:
00000000000095b0	movl	$0x2000023, %eax
00000000000095b5	movq	%rcx, %r10
00000000000095b8	syscall
00000000000095ba	jae	0x95c4
00000000000095bc	movq	%rax, %rdi
00000000000095bf	jmp	_cerror_nocancel
00000000000095c4	retq
00000000000095c5	nop
00000000000095c6	nop
00000000000095c7	nop
_futimes:
00000000000095c8	movl	$0x200008b, %eax
00000000000095cd	movq	%rcx, %r10
00000000000095d0	syscall
00000000000095d2	jae	0x95dc
00000000000095d4	movq	%rax, %rdi
00000000000095d7	jmp	_cerror_nocancel
00000000000095dc	retq
00000000000095dd	nop
00000000000095de	nop
00000000000095df	nop
_utimes:
00000000000095e0	movl	$0x200008a, %eax
00000000000095e5	movq	%rcx, %r10
00000000000095e8	syscall
00000000000095ea	jae	0x95f4
00000000000095ec	movq	%rax, %rdi
00000000000095ef	jmp	_cerror_nocancel
00000000000095f4	retq
00000000000095f5	nop
00000000000095f6	nop
00000000000095f7	nop
_flistxattr:
00000000000095f8	movl	$0x20000f1, %eax
00000000000095fd	movq	%rcx, %r10
0000000000009600	syscall
0000000000009602	jae	0x960c
0000000000009604	movq	%rax, %rdi
0000000000009607	jmp	_cerror_nocancel
000000000000960c	retq
000000000000960d	nop
_mach_msg_receive:
000000000000960e	pushq	%rbp
000000000000960f	movq	%rsp, %rbp
0000000000009612	subq	$0x10, %rsp
0000000000009616	movl	0x4(%rdi), %ecx
0000000000009619	movl	0xc(%rdi), %r8d
000000000000961d	movl	$0x0, (%rsp)
0000000000009624	movl	$0x2, %esi
0000000000009629	xorl	%edx, %edx
000000000000962b	xorl	%r9d, %r9d
000000000000962e	callq	_mach_msg
0000000000009633	addq	$0x10, %rsp
0000000000009637	popq	%rbp
0000000000009638	retq
0000000000009639	nop
000000000000963a	nop
000000000000963b	nop
_mount:
000000000000963c	movl	$0x20000a7, %eax
0000000000009641	movq	%rcx, %r10
0000000000009644	syscall
0000000000009646	jae	0x9650
0000000000009648	movq	%rax, %rdi
000000000000964b	jmp	_cerror_nocancel
0000000000009650	retq
0000000000009651	nop
0000000000009652	nop
0000000000009653	nop
_wait4:
___wait4_nocancel:
0000000000009654	movl	$0x2000190, %eax
0000000000009659	movq	%rcx, %r10
000000000000965c	syscall
000000000000965e	jae	0x9668
0000000000009660	movq	%rax, %rdi
0000000000009663	jmp	_cerror_nocancel
0000000000009668	retq
0000000000009669	nop
000000000000966a	nop
000000000000966b	nop
_getgroups:
000000000000966c	movl	$0x200004f, %eax
0000000000009671	movq	%rcx, %r10
0000000000009674	syscall
0000000000009676	jae	0x9680
0000000000009678	movq	%rax, %rdi
000000000000967b	jmp	_cerror_nocancel
0000000000009680	retq
0000000000009681	nop
0000000000009682	nop
0000000000009683	nop
___open_extended:
0000000000009684	movl	$0x2000115, %eax
0000000000009689	movq	%rcx, %r10
000000000000968c	syscall
000000000000968e	jae	0x9698
0000000000009690	movq	%rax, %rdi
0000000000009693	jmp	_cerror_nocancel
0000000000009698	retq
0000000000009699	nop
000000000000969a	nop
000000000000969b	nop
_exchangedata:
000000000000969c	movl	$0x20000df, %eax
00000000000096a1	movq	%rcx, %r10
00000000000096a4	syscall
00000000000096a6	jae	0x96b0
00000000000096a8	movq	%rax, %rdi
00000000000096ab	jmp	_cerror_nocancel
00000000000096b0	retq
___carbon_delete:
00000000000096b1	pushq	%rbp
00000000000096b2	movq	%rsp, %rbp
00000000000096b5	pushq	%rbx
00000000000096b6	pushq	%rax
00000000000096b7	callq	___delete
00000000000096bc	movl	%eax, %ebx
00000000000096be	testl	%eax, %eax
00000000000096c0	jne	0x96c7
00000000000096c2	callq	___inc_remove_counter
00000000000096c7	movl	%ebx, %eax
00000000000096c9	addq	$0x8, %rsp
00000000000096cd	popq	%rbx
00000000000096ce	popq	%rbp
00000000000096cf	retq
___delete:
00000000000096d0	movl	$0x20000e2, %eax
00000000000096d5	movq	%rcx, %r10
00000000000096d8	syscall
00000000000096da	jae	0x96e4
00000000000096dc	movq	%rax, %rdi
00000000000096df	jmp	_cerror_nocancel
00000000000096e4	retq
00000000000096e5	nop
00000000000096e6	nop
00000000000096e7	nop
_unmount:
00000000000096e8	movl	$0x200009f, %eax
00000000000096ed	movq	%rcx, %r10
00000000000096f0	syscall
00000000000096f2	jae	0x96fc
00000000000096f4	movq	%rax, %rdi
00000000000096f7	jmp	_cerror_nocancel
00000000000096fc	retq
_posix_spawn_file_actions_addinherit_np:
00000000000096fd	pushq	%rbp
00000000000096fe	movq	%rsp, %rbp
0000000000009701	pushq	%r14
0000000000009703	pushq	%rbx
0000000000009704	movl	$0x16, %eax
0000000000009709	testq	%rdi, %rdi
000000000000970c	je	0x9773
000000000000970e	movq	%rdi, %rbx
0000000000009711	movq	(%rdi), %rcx
0000000000009714	testq	%rcx, %rcx
0000000000009717	je	0x9773
0000000000009719	movl	%esi, %r14d
000000000000971c	movl	$0x9, %eax
0000000000009721	cmpl	$0x27ff, %esi
0000000000009727	ja	0x9773
0000000000009729	movl	0x4(%rcx), %eax
000000000000972c	cmpl	(%rcx), %eax
000000000000972e	jne	0x974f
0000000000009730	movq	%rbx, %rdi
0000000000009733	callq	__posix_spawn_file_actions_grow
0000000000009738	movl	%eax, %ecx
000000000000973a	movl	$0xc, %eax
000000000000973f	testl	%ecx, %ecx
0000000000009741	jne	0x9773
0000000000009743	movq	(%rbx), %rcx
0000000000009746	leaq	0x4(%rcx), %rdx
000000000000974a	movl	0x4(%rcx), %eax
000000000000974d	jmp	0x9756
000000000000974f	movq	%rcx, %rdx
0000000000009752	addq	$0x4, %rdx
0000000000009756	leal	0x1(%rax), %esi
0000000000009759	movl	%esi, (%rdx)
000000000000975b	cltq
000000000000975d	imulq	$0x410, %rax, %rax
0000000000009764	movl	$0x3, 0x8(%rcx,%rax)
000000000000976c	movl	%r14d, 0xc(%rcx,%rax)
0000000000009771	xorl	%eax, %eax
0000000000009773	popq	%rbx
0000000000009774	popq	%r14
0000000000009776	popq	%rbp
0000000000009777	retq
_posix_spawn_file_actions_addclose:
0000000000009778	pushq	%rbp
0000000000009779	movq	%rsp, %rbp
000000000000977c	pushq	%r14
000000000000977e	pushq	%rbx
000000000000977f	movl	$0x16, %eax
0000000000009784	testq	%rdi, %rdi
0000000000009787	je	0x97ef
0000000000009789	movq	%rdi, %rbx
000000000000978c	movq	(%rdi), %rcx
000000000000978f	testq	%rcx, %rcx
0000000000009792	je	0x97ef
0000000000009794	movl	%esi, %r14d
0000000000009797	movl	$0x9, %eax
000000000000979c	cmpl	$0x27ff, %esi
00000000000097a2	ja	0x97ef
00000000000097a4	movl	0x4(%rcx), %eax
00000000000097a7	cmpl	(%rcx), %eax
00000000000097a9	jne	0x97ca
00000000000097ab	movq	%rbx, %rdi
00000000000097ae	callq	__posix_spawn_file_actions_grow
00000000000097b3	movl	%eax, %ecx
00000000000097b5	movl	$0xc, %eax
00000000000097ba	testl	%ecx, %ecx
00000000000097bc	jne	0x97ef
00000000000097be	movq	(%rbx), %rcx
00000000000097c1	leaq	0x4(%rcx), %rdx
00000000000097c5	movl	0x4(%rcx), %eax
00000000000097c8	jmp	0x97d1
00000000000097ca	movq	%rcx, %rdx
00000000000097cd	addq	$0x4, %rdx
00000000000097d1	leal	0x1(%rax), %esi
00000000000097d4	movl	%esi, (%rdx)
00000000000097d6	cltq
00000000000097d8	imulq	$0x410, %rax, %rax
00000000000097df	movl	$0x1, %edx
00000000000097e4	movl	%edx, 0x8(%rcx,%rax)
00000000000097e8	movl	%r14d, 0xc(%rcx,%rax)
00000000000097ed	xorl	%eax, %eax
00000000000097ef	popq	%rbx
00000000000097f0	popq	%r14
00000000000097f2	popq	%rbp
00000000000097f3	retq
_posix_spawnattr_setexceptionports_np:
00000000000097f4	pushq	%rbp
00000000000097f5	movq	%rsp, %rbp
00000000000097f8	subq	$0x20, %rsp
00000000000097fc	leaq	-0x18(%rbp), %rax
0000000000009800	movl	$0x1, (%rax)
0000000000009806	movl	%esi, 0x4(%rax)
0000000000009809	movl	%edx, 0x8(%rax)
000000000000980c	movl	%ecx, 0xc(%rax)
000000000000980f	movl	%r8d, 0x10(%rax)
0000000000009813	movl	$0x0, 0x14(%rax)
000000000000981a	movq	%rax, %rsi
000000000000981d	callq	_posix_spawn_appendportaction_np
0000000000009822	addq	$0x20, %rsp
0000000000009826	popq	%rbp
0000000000009827	retq
_reallocf:
0000000000009828	pushq	%rbp
0000000000009829	movq	%rsp, %rbp
000000000000982c	pushq	%r15
000000000000982e	pushq	%r14
0000000000009830	pushq	%rbx
0000000000009831	pushq	%rax
0000000000009832	movq	%rdi, %rbx
0000000000009835	leaq	__libkernel_functions(%rip), %r15
000000000000983c	movq	(%r15), %rax
000000000000983f	callq	*0x20(%rax)
0000000000009842	movq	%rax, %r14
0000000000009845	testq	%rbx, %rbx
0000000000009848	je	0x9858
000000000000984a	testq	%r14, %r14
000000000000984d	jne	0x9858
000000000000984f	movq	(%r15), %rax
0000000000009852	movq	%rbx, %rdi
0000000000009855	callq	*0x18(%rax)
0000000000009858	movq	%r14, %rax
000000000000985b	addq	$0x8, %rsp
000000000000985f	popq	%rbx
0000000000009860	popq	%r14
0000000000009862	popq	%r15
0000000000009864	popq	%rbp
0000000000009865	retq
_bzero:
0000000000009866	movq	__libkernel_string_functions(%rip), %rax
000000000000986d	movq	0x8(%rax), %rax
0000000000009871	jmpq	*%rax
__libkernel_strlen:
0000000000009873	movq	%rdi, %rax
0000000000009876	testb	$0x7, %dil
000000000000987a	je	0x9897
000000000000987c	cmpb	$0x0, (%rdi)
000000000000987f	je	0x98f3
0000000000009881	leaq	0x1(%rdi), %rax
0000000000009885	testb	$0x7, %al
0000000000009887	je	0x9897
0000000000009889	cmpb	$0x0, (%rax)
000000000000988c	leaq	0x1(%rax), %rax
0000000000009890	jne	0x9885
0000000000009892	decq	%rax
0000000000009895	jmp	0x98f6
0000000000009897	movabsq	$-0x101010101010101, %r8
00000000000098a1	movabsq	$-0x7f7f7f7f7f7f7f80, %rdx
00000000000098ab	jmp	0x98c9
00000000000098ad	cmpb	$0x0, 0x4(%rax)
00000000000098b1	je	0x9908
00000000000098b3	cmpb	$0x0, 0x5(%rax)
00000000000098b7	je	0x990f
00000000000098b9	cmpb	$0x0, 0x6(%rax)
00000000000098bd	je	0x9916
00000000000098bf	cmpb	$0x0, 0x7(%rax)
00000000000098c3	je	0x991d
00000000000098c5	addq	$0x8, %rax
00000000000098c9	movq	(%rax), %rsi
00000000000098cc	leaq	(%rsi,%r8), %rcx
00000000000098d0	testq	%rdx, %rcx
00000000000098d3	je	0x98c5
00000000000098d5	testb	%sil, %sil
00000000000098d8	je	0x98f6
00000000000098da	cmpb	$0x0, 0x1(%rax)
00000000000098de	je	0x98fa
00000000000098e0	cmpb	$0x0, 0x2(%rax)
00000000000098e4	je	0x9901
00000000000098e6	cmpb	$0x0, 0x3(%rax)
00000000000098ea	jne	0x98ad
00000000000098ec	movl	$0x3, %ecx
00000000000098f1	jmp	0x9922
00000000000098f3	movq	%rdi, %rax
00000000000098f6	subq	%rdi, %rax
00000000000098f9	retq
00000000000098fa	movl	$0x1, %ecx
00000000000098ff	jmp	0x9922
0000000000009901	movl	$0x2, %ecx
0000000000009906	jmp	0x9922
0000000000009908	movl	$0x4, %ecx
000000000000990d	jmp	0x9922
000000000000990f	movl	$0x5, %ecx
0000000000009914	jmp	0x9922
0000000000009916	movl	$0x6, %ecx
000000000000991b	jmp	0x9922
000000000000991d	movl	$0x7, %ecx
0000000000009922	subq	%rdi, %rcx
0000000000009925	addq	%rcx, %rax
0000000000009928	retq
__libkernel_strchr:
0000000000009929	movsbl	(%rdi), %ecx
000000000000992c	movsbl	%sil, %eax
0000000000009930	jmp	0x993d
0000000000009932	testb	%cl, %cl
0000000000009934	je	0x9943
0000000000009936	movsbl	0x1(%rdi), %ecx
000000000000993a	incq	%rdi
000000000000993d	cmpl	%ecx, %eax
000000000000993f	jne	0x9932
0000000000009941	jmp	0x9945
0000000000009943	xorl	%edi, %edi
0000000000009945	movq	%rdi, %rax
0000000000009948	retq
__libkernel_bzero:
0000000000009949	movq	%rsi, %rax
000000000000994c	xorl	%esi, %esi
000000000000994e	movq	%rax, %rdx
0000000000009951	jmp	__libkernel_memset
__libkernel_memset:
0000000000009956	cmpq	$0xb, %rdx
000000000000995a	ja	0x9975
000000000000995c	testq	%rdx, %rdx
000000000000995f	je	0x99e6
0000000000009965	xorl	%eax, %eax
0000000000009967	movb	%sil, (%rdi,%rax)
000000000000996b	incq	%rax
000000000000996e	cmpq	%rax, %rdx
0000000000009971	jne	0x9967
0000000000009973	jmp	0x99e6
0000000000009975	movzbl	%sil, %eax
0000000000009979	movl	%eax, %r9d
000000000000997c	shll	$0x8, %r9d
0000000000009980	orl	%eax, %r9d
0000000000009983	testl	%eax, %eax
0000000000009985	cmovel	%eax, %r9d
0000000000009989	movq	%rdi, %rcx
000000000000998c	andq	$0x3, %rcx
0000000000009990	je	0x99b0
0000000000009992	movl	$0x4, %eax
0000000000009997	subq	%rcx, %rax
000000000000999a	subq	%rax, %rdx
000000000000999d	xorl	%ecx, %ecx
000000000000999f	movb	%sil, (%rdi,%rcx)
00000000000099a3	incq	%rcx
00000000000099a6	cmpq	%rcx, %rax
00000000000099a9	jne	0x999f
00000000000099ab	addq	%rdi, %rax
00000000000099ae	jmp	0x99b3
00000000000099b0	movq	%rdi, %rax
00000000000099b3	movq	%rdx, %r10
00000000000099b6	shrq	$0x2, %r10
00000000000099ba	movq	%rdx, %r8
00000000000099bd	andq	$-0x4, %r8
00000000000099c1	xorl	%ecx, %ecx
00000000000099c3	movl	%r9d, (%rax,%rcx,4)
00000000000099c7	incq	%rcx
00000000000099ca	cmpq	%rcx, %r10
00000000000099cd	jne	0x99c3
00000000000099cf	andq	$0x3, %rdx
00000000000099d3	je	0x99e6
00000000000099d5	addq	%r8, %rax
00000000000099d8	xorl	%ecx, %ecx
00000000000099da	movb	%sil, (%rax,%rcx)
00000000000099de	incq	%rcx
00000000000099e1	cmpq	%rcx, %rdx
00000000000099e4	jne	0x99da
00000000000099e6	movq	%rdi, %rax
00000000000099e9	retq
__libkernel_memmove:
00000000000099ea	cmpq	%rsi, %rdi
00000000000099ed	je	0x9b51
00000000000099f3	testq	%rdx, %rdx
00000000000099f6	je	0x9b51
00000000000099fc	cmpq	%rsi, %rdi
00000000000099ff	jae	0x9a52
0000000000009a01	movl	%esi, %eax
0000000000009a03	orl	%edi, %eax
0000000000009a05	testb	$0x3, %al
0000000000009a07	je	0x9aa8
0000000000009a0d	movl	%esi, %r8d
0000000000009a10	xorl	%edi, %r8d
0000000000009a13	movl	%esi, %ecx
0000000000009a15	andl	$0x3, %ecx
0000000000009a18	movl	$0x4, %r9d
0000000000009a1e	movl	$0x4, %r11d
0000000000009a24	subq	%rcx, %r11
0000000000009a27	testb	$0x3, %r8b
0000000000009a2b	cmovneq	%rdx, %r11
0000000000009a2f	cmpq	%r9, %rdx
0000000000009a32	cmovbq	%rdx, %r11
0000000000009a36	leaq	(%rsi,%r11), %r8
0000000000009a3a	xorl	%ecx, %ecx
0000000000009a3c	movb	(%rsi,%rcx), %al
0000000000009a3f	movb	%al, (%rdi,%rcx)
0000000000009a42	incq	%rcx
0000000000009a45	cmpq	%rcx, %r11
0000000000009a48	jne	0x9a3c
0000000000009a4a	subq	%r11, %rdx
0000000000009a4d	addq	%rdi, %r11
0000000000009a50	jmp	0x9aae
0000000000009a52	leaq	(%rsi,%rdx), %r9
0000000000009a56	leaq	(%rdi,%rdx), %r11
0000000000009a5a	movl	%r9d, %eax
0000000000009a5d	orl	%r11d, %eax
0000000000009a60	testb	$0x3, %al
0000000000009a62	je	0x9ad9
0000000000009a64	xorl	%r9d, %r11d
0000000000009a67	andl	$0x3, %r9d
0000000000009a6b	testb	$0x3, %r11b
0000000000009a6f	cmovneq	%rdx, %r9
0000000000009a73	cmpq	$0x5, %rdx
0000000000009a77	cmovbq	%rdx, %r9
0000000000009a7b	movq	%rdx, %r8
0000000000009a7e	subq	%r9, %r8
0000000000009a81	leaq	-0x1(%rdi,%rdx), %r10
0000000000009a86	leaq	-0x1(%rsi,%rdx), %rdx
0000000000009a8b	addq	%r8, %rsi
0000000000009a8e	negq	%r9
0000000000009a91	xorl	%eax, %eax
0000000000009a93	movb	(%rdx,%rax), %cl
0000000000009a96	movb	%cl, (%r10,%rax)
0000000000009a9a	decq	%rax
0000000000009a9d	cmpq	%rax, %r9
0000000000009aa0	jne	0x9a93
0000000000009aa2	leaq	(%rdi,%r8), %r11
0000000000009aa6	jmp	0x9adf
0000000000009aa8	movq	%rdi, %r11
0000000000009aab	movq	%rsi, %r8
0000000000009aae	movq	%rdx, %rcx
0000000000009ab1	shrq	$0x2, %rcx
0000000000009ab5	je	0x9b14
0000000000009ab7	movq	%rdx, %r9
0000000000009aba	andq	$-0x4, %r9
0000000000009abe	leaq	(%r8,%r9), %r10
0000000000009ac2	xorl	%esi, %esi
0000000000009ac4	movl	(%r8,%rsi,4), %eax
0000000000009ac8	movl	%eax, (%r11,%rsi,4)
0000000000009acc	incq	%rsi
0000000000009acf	cmpq	%rsi, %rcx
0000000000009ad2	jne	0x9ac4
0000000000009ad4	addq	%r9, %r11
0000000000009ad7	jmp	0x9b17
0000000000009ad9	movq	%rdx, %r8
0000000000009adc	movq	%r9, %rsi
0000000000009adf	movq	%r8, %rdx
0000000000009ae2	shrq	$0x2, %rdx
0000000000009ae6	je	0x9b31
0000000000009ae8	leaq	(,%rdx,4), %r9
0000000000009af0	movq	%rsi, %r10
0000000000009af3	subq	%r9, %r10
0000000000009af6	negq	%r9
0000000000009af9	negq	%rdx
0000000000009afc	xorl	%eax, %eax
0000000000009afe	movl	-0x4(%rsi,%rax,4), %ecx
0000000000009b02	movl	%ecx, -0x4(%r11,%rax,4)
0000000000009b07	decq	%rax
0000000000009b0a	cmpq	%rax, %rdx
0000000000009b0d	jne	0x9afe
0000000000009b0f	addq	%r9, %r11
0000000000009b12	jmp	0x9b34
0000000000009b14	movq	%r8, %r10
0000000000009b17	andq	$0x3, %rdx
0000000000009b1b	je	0x9b51
0000000000009b1d	xorl	%ecx, %ecx
0000000000009b1f	movb	(%r10,%rcx), %al
0000000000009b23	movb	%al, (%r11,%rcx)
0000000000009b27	incq	%rcx
0000000000009b2a	cmpq	%rcx, %rdx
0000000000009b2d	jne	0x9b1f
0000000000009b2f	jmp	0x9b51
0000000000009b31	movq	%rsi, %r10
0000000000009b34	andq	$0x3, %r8
0000000000009b38	je	0x9b51
0000000000009b3a	negq	%r8
0000000000009b3d	xorl	%eax, %eax
0000000000009b3f	movb	-0x1(%r10,%rax), %cl
0000000000009b44	movb	%cl, -0x1(%r11,%rax)
0000000000009b49	decq	%rax
0000000000009b4c	cmpq	%rax, %r8
0000000000009b4f	jne	0x9b3f
0000000000009b51	movq	%rdi, %rax
0000000000009b54	retq
__libkernel_strcpy:
0000000000009b55	pushq	%rbp
0000000000009b56	movq	%rsp, %rbp
0000000000009b59	pushq	%r14
0000000000009b5b	pushq	%rbx
0000000000009b5c	movq	%rsi, %rbx
0000000000009b5f	movq	%rdi, %r14
0000000000009b62	movq	%rsi, %rdi
0000000000009b65	callq	__libkernel_strlen
0000000000009b6a	leaq	0x1(%rax), %rdx
0000000000009b6e	movq	%r14, %rdi
0000000000009b71	movq	%rbx, %rsi
0000000000009b74	callq	__libkernel_memmove
0000000000009b79	movq	%r14, %rax
0000000000009b7c	popq	%rbx
0000000000009b7d	popq	%r14
0000000000009b7f	popq	%rbp
0000000000009b80	retq
__libkernel_strlcpy:
0000000000009b81	pushq	%rbp
0000000000009b82	movq	%rsp, %rbp
0000000000009b85	pushq	%r15
0000000000009b87	pushq	%r14
0000000000009b89	pushq	%r12
0000000000009b8b	pushq	%rbx
0000000000009b8c	movq	%rdx, %r12
0000000000009b8f	movq	%rsi, %r15
0000000000009b92	movq	%rdi, %r14
0000000000009b95	movq	%rsi, %rdi
0000000000009b98	callq	__libkernel_strlen
0000000000009b9d	movq	%rax, %rbx
0000000000009ba0	cmpq	%r12, %rax
0000000000009ba3	jae	0x9bb8
0000000000009ba5	movq	%rbx, %rdx
0000000000009ba8	incq	%rdx
0000000000009bab	movq	%r14, %rdi
0000000000009bae	movq	%r15, %rsi
0000000000009bb1	callq	__libkernel_memmove
0000000000009bb6	jmp	0x9bd3
0000000000009bb8	testq	%r12, %r12
0000000000009bbb	je	0x9bd3
0000000000009bbd	leaq	-0x1(%r12), %rdx
0000000000009bc2	movq	%r14, %rdi
0000000000009bc5	movq	%r15, %rsi
0000000000009bc8	callq	__libkernel_memmove
0000000000009bcd	movb	$0x0, -0x1(%r14,%r12)
0000000000009bd3	movq	%rbx, %rax
0000000000009bd6	popq	%rbx
0000000000009bd7	popq	%r12
0000000000009bd9	popq	%r14
0000000000009bdb	popq	%r15
0000000000009bdd	popq	%rbp
0000000000009bde	retq
_mach_host_special_port_description:
0000000000009bdf	cmpl	$0x1d, %edi
0000000000009be2	jbe	0x9be7
0000000000009be4	xorl	%eax, %eax
0000000000009be6	retq
0000000000009be7	movslq	%edi, %rax
0000000000009bea	leaq	_mach_host_special_port_description.hsp_descs(%rip), %rcx
0000000000009bf1	movq	(%rcx,%rax,8), %rax
0000000000009bf5	retq
_mach_task_special_port_description:
0000000000009bf6	cmpl	$0xb, %edi
0000000000009bf9	jbe	0x9bfe
0000000000009bfb	xorl	%eax, %eax
0000000000009bfd	retq
0000000000009bfe	movslq	%edi, %rax
0000000000009c01	leaq	_mach_task_special_port_description.tsp_descs(%rip), %rcx
0000000000009c08	movq	(%rcx,%rax,8), %rax
0000000000009c0c	retq
_mach_host_special_port_for_id:
0000000000009c0d	leaq	_mach_host_special_port_for_id.hsp_ids(%rip), %rsi
0000000000009c14	movl	$0x1e, %edx
0000000000009c19	jmp	_port_for_id_internal
_port_for_id_internal:
0000000000009c1e	pushq	%rbp
0000000000009c1f	movq	%rsp, %rbp
0000000000009c22	pushq	%r15
0000000000009c24	pushq	%r14
0000000000009c26	pushq	%r12
0000000000009c28	pushq	%rbx
0000000000009c29	testq	%rdi, %rdi
0000000000009c2c	je	0x9c67
0000000000009c2e	testl	%edx, %edx
0000000000009c30	jle	0x9c5a
0000000000009c32	movq	%rsi, %r14
0000000000009c35	movq	%rdi, %r15
0000000000009c38	movslq	%edx, %r12
0000000000009c3b	xorl	%ebx, %ebx
0000000000009c3d	movq	(%r14,%rbx,8), %rdi
0000000000009c41	testq	%rdi, %rdi
0000000000009c44	je	0x9c52
0000000000009c46	movq	%r15, %rsi
0000000000009c49	callq	_strcmp
0000000000009c4e	testl	%eax, %eax
0000000000009c50	je	0x9c77
0000000000009c52	incq	%rbx
0000000000009c55	cmpq	%r12, %rbx
0000000000009c58	jl	0x9c3d
0000000000009c5a	callq	___error
0000000000009c5f	movl	$0x2, (%rax)
0000000000009c65	jmp	0x9c72
0000000000009c67	callq	___error
0000000000009c6c	movl	$0x16, (%rax)
0000000000009c72	movl	$0xffffffff, %ebx
0000000000009c77	movl	%ebx, %eax
0000000000009c79	popq	%rbx
0000000000009c7a	popq	%r12
0000000000009c7c	popq	%r14
0000000000009c7e	popq	%r15
0000000000009c80	popq	%rbp
0000000000009c81	retq
_mach_task_special_port_for_id:
0000000000009c82	leaq	_mach_task_special_port_for_id.tsp_ids(%rip), %rsi
0000000000009c89	movl	$0xc, %edx
0000000000009c8e	jmp	_port_for_id_internal
_pkt_subtype_assert_fail:
0000000000009c93	leaq	0x16d9b(%rip), %rcx ## literal pool for: "invalid packet subtype"
0000000000009c9a	movq	%rdi, %rax
0000000000009c9d	movq	%rcx, 0x21904(%rip)
0000000000009ca4	movq	%rax, 0x2192d(%rip)
0000000000009cab	ud2
_pkt_type_assert_fail:
0000000000009cad	leaq	0x16d98(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000009cb4	movq	%rdi, %rax
0000000000009cb7	movq	%rcx, 0x218ea(%rip)
0000000000009cbe	movq	%rax, 0x21913(%rip)
0000000000009cc5	ud2
_os_packet_set_link_header_offset:
0000000000009cc7	movl	%edi, %eax
0000000000009cc9	andl	$0xf, %eax
0000000000009ccc	cmpq	$0xa, %rax
0000000000009cd0	jne	0x9ce9
0000000000009cd2	andq	$-0x10, %rdi
0000000000009cd6	cmpw	%si, 0x64(%rdi)
0000000000009cda	jbe	0x9ce3
0000000000009cdc	movw	%si, 0x3a(%rdi)
0000000000009ce0	xorl	%eax, %eax
0000000000009ce2	retq
0000000000009ce3	movl	$0x22, %eax
0000000000009ce8	retq
0000000000009ce9	leaq	0x16d45(%rip), %rcx ## literal pool for: "invalid packet subtype"
0000000000009cf0	movq	%rdi, %rax
0000000000009cf3	movq	%rcx, 0x218ae(%rip)
0000000000009cfa	movq	%rax, 0x218d7(%rip)
0000000000009d01	ud2
_os_packet_get_link_header_offset:
0000000000009d03	movl	%edi, %eax
0000000000009d05	andl	$0xf, %eax
0000000000009d08	cmpq	$0xa, %rax
0000000000009d0c	jne	0x9d17
0000000000009d0e	andq	$-0x10, %rdi
0000000000009d12	movzwl	0x3a(%rdi), %eax
0000000000009d16	retq
0000000000009d17	leaq	0x16d17(%rip), %rcx ## literal pool for: "invalid packet subtype"
0000000000009d1e	movq	%rdi, %rax
0000000000009d21	movq	%rcx, 0x21880(%rip)
0000000000009d28	movq	%rax, 0x218a9(%rip)
0000000000009d2f	ud2
_os_packet_set_link_broadcast:
0000000000009d31	movl	%edi, %eax
0000000000009d33	andl	$0xf, %eax
0000000000009d36	cmpq	$0xa, %rax
0000000000009d3a	jne	0x9d47
0000000000009d3c	andq	$-0x10, %rdi
0000000000009d40	orb	$0x1, 0x38(%rdi)
0000000000009d44	xorl	%eax, %eax
0000000000009d46	retq
0000000000009d47	leaq	0x16ce7(%rip), %rcx ## literal pool for: "invalid packet subtype"
0000000000009d4e	movq	%rdi, %rax
0000000000009d51	movq	%rcx, 0x21850(%rip)
0000000000009d58	movq	%rax, 0x21879(%rip)
0000000000009d5f	ud2
_os_packet_get_link_broadcast:
0000000000009d61	movl	%edi, %eax
0000000000009d63	andl	$0xf, %eax
0000000000009d66	cmpq	$0xa, %rax
0000000000009d6a	jne	0x9d78
0000000000009d6c	andq	$-0x10, %rdi
0000000000009d70	movzwl	0x38(%rdi), %eax
0000000000009d74	andl	$0x1, %eax
0000000000009d77	retq
0000000000009d78	leaq	0x16cb6(%rip), %rcx ## literal pool for: "invalid packet subtype"
0000000000009d7f	movq	%rdi, %rax
0000000000009d82	movq	%rcx, 0x2181f(%rip)
0000000000009d89	movq	%rax, 0x21848(%rip)
0000000000009d90	ud2
_os_packet_set_link_multicast:
0000000000009d92	movl	%edi, %eax
0000000000009d94	andl	$0xf, %eax
0000000000009d97	cmpq	$0xa, %rax
0000000000009d9b	jne	0x9da8
0000000000009d9d	andq	$-0x10, %rdi
0000000000009da1	orb	$0x2, 0x38(%rdi)
0000000000009da5	xorl	%eax, %eax
0000000000009da7	retq
0000000000009da8	leaq	0x16c86(%rip), %rcx ## literal pool for: "invalid packet subtype"
0000000000009daf	movq	%rdi, %rax
0000000000009db2	movq	%rcx, 0x217ef(%rip)
0000000000009db9	movq	%rax, 0x21818(%rip)
0000000000009dc0	ud2
_os_packet_get_link_multicast:
0000000000009dc2	movl	%edi, %eax
0000000000009dc4	andl	$0xf, %eax
0000000000009dc7	cmpq	$0xa, %rax
0000000000009dcb	jne	0x9dda
0000000000009dcd	andq	$-0x10, %rdi
0000000000009dd1	movl	0x38(%rdi), %eax
0000000000009dd4	shrl	%eax
0000000000009dd6	andl	$0x1, %eax
0000000000009dd9	retq
0000000000009dda	leaq	0x16c54(%rip), %rcx ## literal pool for: "invalid packet subtype"
0000000000009de1	movq	%rdi, %rax
0000000000009de4	movq	%rcx, 0x217bd(%rip)
0000000000009deb	movq	%rax, 0x217e6(%rip)
0000000000009df2	ud2
_os_packet_set_link_ethfcs:
0000000000009df4	movl	%edi, %eax
0000000000009df6	andl	$0xf, %eax
0000000000009df9	cmpq	$0xa, %rax
0000000000009dfd	jne	0x9e0a
0000000000009dff	andq	$-0x10, %rdi
0000000000009e03	orb	$0x4, 0x38(%rdi)
0000000000009e07	xorl	%eax, %eax
0000000000009e09	retq
0000000000009e0a	leaq	0x16c24(%rip), %rcx ## literal pool for: "invalid packet subtype"
0000000000009e11	movq	%rdi, %rax
0000000000009e14	movq	%rcx, 0x2178d(%rip)
0000000000009e1b	movq	%rax, 0x217b6(%rip)
0000000000009e22	ud2
_os_packet_get_link_ethfcs:
0000000000009e24	movl	%edi, %eax
0000000000009e26	andl	$0xf, %eax
0000000000009e29	cmpq	$0xa, %rax
0000000000009e2d	jne	0x9e3d
0000000000009e2f	andq	$-0x10, %rdi
0000000000009e33	movl	0x38(%rdi), %eax
0000000000009e36	shrl	$0x2, %eax
0000000000009e39	andl	$0x1, %eax
0000000000009e3c	retq
0000000000009e3d	leaq	0x16bf1(%rip), %rcx ## literal pool for: "invalid packet subtype"
0000000000009e44	movq	%rdi, %rax
0000000000009e47	movq	%rcx, 0x2175a(%rip)
0000000000009e4e	movq	%rax, 0x21783(%rip)
0000000000009e55	ud2
_os_packet_set_network_header_offset:
0000000000009e57	movl	%edi, %eax
0000000000009e59	andl	$0x3, %eax
0000000000009e5c	cmpq	$0x2, %rax
0000000000009e60	jne	0x9e79
0000000000009e62	andq	$-0x10, %rdi
0000000000009e66	cmpw	%si, 0x64(%rdi)
0000000000009e6a	jbe	0x9e73
0000000000009e6c	movw	%si, 0x40(%rdi)
0000000000009e70	xorl	%eax, %eax
0000000000009e72	retq
0000000000009e73	movl	$0x22, %eax
0000000000009e78	retq
0000000000009e79	leaq	0x16bcc(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000009e80	movq	%rdi, %rax
0000000000009e83	movq	%rcx, 0x2171e(%rip)
0000000000009e8a	movq	%rax, 0x21747(%rip)
0000000000009e91	ud2
_os_packet_get_network_header_offset:
0000000000009e93	movl	%edi, %eax
0000000000009e95	andl	$0x3, %eax
0000000000009e98	cmpq	$0x2, %rax
0000000000009e9c	jne	0x9ea7
0000000000009e9e	andq	$-0x10, %rdi
0000000000009ea2	movzwl	0x40(%rdi), %eax
0000000000009ea6	retq
0000000000009ea7	leaq	0x16b9e(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000009eae	movq	%rdi, %rax
0000000000009eb1	movq	%rcx, 0x216f0(%rip)
0000000000009eb8	movq	%rax, 0x21719(%rip)
0000000000009ebf	ud2
_os_packet_set_transport_header_offset:
0000000000009ec1	movl	%edi, %eax
0000000000009ec3	andl	$0x3, %eax
0000000000009ec6	cmpq	$0x2, %rax
0000000000009eca	jne	0x9ee3
0000000000009ecc	andq	$-0x10, %rdi
0000000000009ed0	cmpw	%si, 0x64(%rdi)
0000000000009ed4	jbe	0x9edd
0000000000009ed6	movw	%si, 0x42(%rdi)
0000000000009eda	xorl	%eax, %eax
0000000000009edc	retq
0000000000009edd	movl	$0x22, %eax
0000000000009ee2	retq
0000000000009ee3	leaq	0x16b62(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000009eea	movq	%rdi, %rax
0000000000009eed	movq	%rcx, 0x216b4(%rip)
0000000000009ef4	movq	%rax, 0x216dd(%rip)
0000000000009efb	ud2
_os_packet_get_transport_header_offset:
0000000000009efd	movl	%edi, %eax
0000000000009eff	andl	$0x3, %eax
0000000000009f02	cmpq	$0x2, %rax
0000000000009f06	jne	0x9f11
0000000000009f08	andq	$-0x10, %rdi
0000000000009f0c	movzwl	0x42(%rdi), %eax
0000000000009f10	retq
0000000000009f11	leaq	0x16b34(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000009f18	movq	%rdi, %rax
0000000000009f1b	movq	%rcx, 0x21686(%rip)
0000000000009f22	movq	%rax, 0x216af(%rip)
0000000000009f29	ud2
_os_packet_set_transport_traffic_background:
0000000000009f2b	movl	%edi, %eax
0000000000009f2d	andl	$0x3, %eax
0000000000009f30	cmpq	$0x2, %rax
0000000000009f34	jne	0x9f41
0000000000009f36	andq	$-0x10, %rdi
0000000000009f3a	orb	$-0x80, 0x3d(%rdi)
0000000000009f3e	xorl	%eax, %eax
0000000000009f40	retq
0000000000009f41	leaq	0x16b04(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000009f48	movq	%rdi, %rax
0000000000009f4b	movq	%rcx, 0x21656(%rip)
0000000000009f52	movq	%rax, 0x2167f(%rip)
0000000000009f59	ud2
_os_packet_get_transport_traffic_background:
0000000000009f5b	movl	%edi, %eax
0000000000009f5d	andl	$0x3, %eax
0000000000009f60	cmpq	$0x2, %rax
0000000000009f64	jne	0x9f74
0000000000009f66	andq	$-0x10, %rdi
0000000000009f6a	movl	0x3c(%rdi), %eax
0000000000009f6d	shrl	$0xf, %eax
0000000000009f70	andl	$0x1, %eax
0000000000009f73	retq
0000000000009f74	leaq	0x16ad1(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000009f7b	movq	%rdi, %rax
0000000000009f7e	movq	%rcx, 0x21623(%rip)
0000000000009f85	movq	%rax, 0x2164c(%rip)
0000000000009f8c	ud2
_os_packet_set_transport_traffic_realtime:
0000000000009f8e	movl	%edi, %eax
0000000000009f90	andl	$0x3, %eax
0000000000009f93	cmpq	$0x2, %rax
0000000000009f97	jne	0x9fa4
0000000000009f99	andq	$-0x10, %rdi
0000000000009f9d	orb	$0x8, 0x3e(%rdi)
0000000000009fa1	xorl	%eax, %eax
0000000000009fa3	retq
0000000000009fa4	leaq	0x16aa1(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000009fab	movq	%rdi, %rax
0000000000009fae	movq	%rcx, 0x215f3(%rip)
0000000000009fb5	movq	%rax, 0x2161c(%rip)
0000000000009fbc	ud2
_os_packet_get_transport_traffic_realtime:
0000000000009fbe	movl	%edi, %eax
0000000000009fc0	andl	$0x3, %eax
0000000000009fc3	cmpq	$0x2, %rax
0000000000009fc7	jne	0x9fd7
0000000000009fc9	andq	$-0x10, %rdi
0000000000009fcd	movl	0x3c(%rdi), %eax
0000000000009fd0	shrl	$0x13, %eax
0000000000009fd3	andl	$0x1, %eax
0000000000009fd6	retq
0000000000009fd7	leaq	0x16a6e(%rip), %rcx ## literal pool for: "invalid packet type"
0000000000009fde	movq	%rdi, %rax
0000000000009fe1	movq	%rcx, 0x215c0(%rip)
0000000000009fe8	movq	%rax, 0x215e9(%rip)
0000000000009fef	ud2
_os_packet_set_transport_retransmit:
0000000000009ff1	movl	%edi, %eax
0000000000009ff3	andl	$0x3, %eax
0000000000009ff6	cmpq	$0x2, %rax
0000000000009ffa	jne	0xa007
0000000000009ffc	andq	$-0x10, %rdi
000000000000a000	orb	$0x20, 0x3e(%rdi)
000000000000a004	xorl	%eax, %eax
000000000000a006	retq
000000000000a007	leaq	0x16a3e(%rip), %rcx ## literal pool for: "invalid packet type"
000000000000a00e	movq	%rdi, %rax
000000000000a011	movq	%rcx, 0x21590(%rip)
000000000000a018	movq	%rax, 0x215b9(%rip)
000000000000a01f	ud2
_os_packet_get_transport_retransmit:
000000000000a021	movl	%edi, %eax
000000000000a023	andl	$0x3, %eax
000000000000a026	cmpq	$0x2, %rax
000000000000a02a	jne	0xa03a
000000000000a02c	andq	$-0x10, %rdi
000000000000a030	movl	0x3c(%rdi), %eax
000000000000a033	shrl	$0x15, %eax
000000000000a036	andl	$0x1, %eax
000000000000a039	retq
000000000000a03a	leaq	0x16a0b(%rip), %rcx ## literal pool for: "invalid packet type"
000000000000a041	movq	%rdi, %rax
000000000000a044	movq	%rcx, 0x2155d(%rip)
000000000000a04b	movq	%rax, 0x21586(%rip)
000000000000a052	ud2
_os_packet_set_transport_last_packet:
000000000000a054	movl	%edi, %eax
000000000000a056	andl	$0x3, %eax
000000000000a059	cmpq	$0x2, %rax
000000000000a05d	jne	0xa06a
000000000000a05f	andq	$-0x10, %rdi
000000000000a063	orb	$0x10, 0x3f(%rdi)
000000000000a067	xorl	%eax, %eax
000000000000a069	retq
000000000000a06a	leaq	0x169db(%rip), %rcx ## literal pool for: "invalid packet type"
000000000000a071	movq	%rdi, %rax
000000000000a074	movq	%rcx, 0x2152d(%rip)
000000000000a07b	movq	%rax, 0x21556(%rip)
000000000000a082	ud2
_os_packet_set_service_class:
000000000000a084	movl	%edi, %eax
000000000000a086	andl	$0x3, %eax
000000000000a089	cmpq	$0x2, %rax
000000000000a08d	jne	0xa113
000000000000a093	movl	$0x16, %eax
000000000000a098	cmpl	$0x28011f, %esi
000000000000a09e	jle	0xa0c1
000000000000a0a0	cmpl	$0x38012f, %esi
000000000000a0a6	jg	0xa0e3
000000000000a0a8	cmpl	$0x280120, %esi
000000000000a0ae	je	0xa109
000000000000a0b0	cmpl	$0x300110, %esi
000000000000a0b6	je	0xa109
000000000000a0b8	cmpl	$0x380100, %esi
000000000000a0be	je	0xa109
000000000000a0c0	retq
000000000000a0c1	cmpl	$0x10007f, %esi
000000000000a0c7	jle	0xa0fd
000000000000a0c9	cmpl	$0x100080, %esi
000000000000a0cf	je	0xa109
000000000000a0d1	cmpl	$0x180010, %esi
000000000000a0d7	je	0xa109
000000000000a0d9	cmpl	$0x200020, %esi
000000000000a0df	je	0xa109
000000000000a0e1	jmp	0xa0c0
000000000000a0e3	cmpl	$0x380130, %esi
000000000000a0e9	je	0xa109
000000000000a0eb	cmpl	$0x480190, %esi
000000000000a0f1	je	0xa109
000000000000a0f3	cmpl	$0x400180, %esi
000000000000a0f9	je	0xa109
000000000000a0fb	jmp	0xa0c0
000000000000a0fd	testl	%esi, %esi
000000000000a0ff	je	0xa109
000000000000a101	cmpl	$0x80090, %esi
000000000000a107	jne	0xa0c0
000000000000a109	andq	$-0x10, %rdi
000000000000a10d	movl	%esi, 0x4c(%rdi)
000000000000a110	xorl	%eax, %eax
000000000000a112	retq
000000000000a113	leaq	0x16932(%rip), %rcx ## literal pool for: "invalid packet type"
000000000000a11a	movq	%rdi, %rax
000000000000a11d	movq	%rcx, 0x21484(%rip)
000000000000a124	movq	%rax, 0x214ad(%rip)
000000000000a12b	ud2
_os_packet_get_service_class:
000000000000a12d	movl	%edi, %eax
000000000000a12f	andl	$0x3, %eax
000000000000a132	cmpq	$0x2, %rax
000000000000a136	jne	0xa1b5
000000000000a138	andq	$-0x10, %rdi
000000000000a13c	movl	0x4c(%rdi), %ecx
000000000000a13f	xorl	%eax, %eax
000000000000a141	cmpl	$0x28011f, %ecx
000000000000a147	jle	0xa16a
000000000000a149	cmpl	$0x38012f, %ecx
000000000000a14f	jg	0xa18c
000000000000a151	cmpl	$0x280120, %ecx
000000000000a157	je	0xa1b2
000000000000a159	cmpl	$0x300110, %ecx
000000000000a15f	je	0xa1b2
000000000000a161	cmpl	$0x380100, %ecx
000000000000a167	je	0xa1b2
000000000000a169	retq
000000000000a16a	cmpl	$0x10007f, %ecx
000000000000a170	jle	0xa1a6
000000000000a172	cmpl	$0x100080, %ecx
000000000000a178	je	0xa1b2
000000000000a17a	cmpl	$0x180010, %ecx
000000000000a180	je	0xa1b2
000000000000a182	cmpl	$0x200020, %ecx
000000000000a188	je	0xa1b2
000000000000a18a	jmp	0xa169
000000000000a18c	cmpl	$0x380130, %ecx
000000000000a192	je	0xa1b2
000000000000a194	cmpl	$0x480190, %ecx
000000000000a19a	je	0xa1b2
000000000000a19c	cmpl	$0x400180, %ecx
000000000000a1a2	je	0xa1b2
000000000000a1a4	jmp	0xa169
000000000000a1a6	testl	%ecx, %ecx
000000000000a1a8	je	0xa1b2
000000000000a1aa	cmpl	$0x80090, %ecx
000000000000a1b0	jne	0xa169
000000000000a1b2	movl	%ecx, %eax
000000000000a1b4	retq
000000000000a1b5	leaq	0x16890(%rip), %rcx ## literal pool for: "invalid packet type"
000000000000a1bc	movq	%rdi, %rax
000000000000a1bf	movq	%rcx, 0x213e2(%rip)
000000000000a1c6	movq	%rax, 0x2140b(%rip)
000000000000a1cd	ud2
_os_packet_set_traffic_class:
000000000000a1cf	movl	%esi, %eax
000000000000a1d1	andl	$0x1ffffff, %eax
000000000000a1d6	xorl	%ecx, %ecx
000000000000a1d8	cmpl	$0x3, %eax
000000000000a1db	ja	0xa1ef
000000000000a1dd	shlq	$0x27, %rsi
000000000000a1e1	sarq	$0x27, %rsi
000000000000a1e5	leaq	0x16264(%rip), %rax
000000000000a1ec	movl	(%rax,%rsi,4), %ecx
000000000000a1ef	movl	%edi, %eax
000000000000a1f1	andl	$0x3, %eax
000000000000a1f4	cmpq	$0x2, %rax
000000000000a1f8	jne	0xa236
000000000000a1fa	movl	%ecx, %edx
000000000000a1fc	andl	$0x7fffff, %edx
000000000000a202	movl	$0x16, %eax
000000000000a207	cmpl	$0x3800ff, %edx
000000000000a20d	jg	0xa21c
000000000000a20f	testl	%edx, %edx
000000000000a211	je	0xa22c
000000000000a213	cmpl	$0x100080, %edx
000000000000a219	je	0xa22c
000000000000a21b	retq
000000000000a21c	cmpl	$0x400180, %edx
000000000000a222	je	0xa22c
000000000000a224	cmpl	$0x380100, %edx
000000000000a22a	jne	0xa21b
000000000000a22c	andq	$-0x10, %rdi
000000000000a230	movl	%ecx, 0x4c(%rdi)
000000000000a233	xorl	%eax, %eax
000000000000a235	retq
000000000000a236	leaq	0x1680f(%rip), %rcx ## literal pool for: "invalid packet type"
000000000000a23d	movq	%rdi, %rax
000000000000a240	movq	%rcx, 0x21361(%rip)
000000000000a247	movq	%rax, 0x2138a(%rip)
000000000000a24e	ud2
_os_packet_get_traffic_class:
000000000000a250	movl	%edi, %eax
000000000000a252	andl	$0x3, %eax
000000000000a255	cmpq	$0x2, %rax
000000000000a259	jne	0xa2e5
000000000000a25f	andq	$-0x10, %rdi
000000000000a263	movl	0x4c(%rdi), %ecx
000000000000a266	xorl	%eax, %eax
000000000000a268	cmpl	$0x28011f, %ecx
000000000000a26e	jle	0xa291
000000000000a270	cmpl	$0x38012f, %ecx
000000000000a276	jg	0xa2b3
000000000000a278	cmpl	$0x280120, %ecx
000000000000a27e	je	0xa2d9
000000000000a280	cmpl	$0x300110, %ecx
000000000000a286	je	0xa2d9
000000000000a288	cmpl	$0x380100, %ecx
000000000000a28e	je	0xa2d9
000000000000a290	retq
000000000000a291	cmpl	$0x10007f, %ecx
000000000000a297	jle	0xa2cd
000000000000a299	cmpl	$0x100080, %ecx
000000000000a29f	je	0xa2d9
000000000000a2a1	cmpl	$0x180010, %ecx
000000000000a2a7	je	0xa2d9
000000000000a2a9	cmpl	$0x200020, %ecx
000000000000a2af	je	0xa2d9
000000000000a2b1	jmp	0xa290
000000000000a2b3	cmpl	$0x380130, %ecx
000000000000a2b9	je	0xa2d9
000000000000a2bb	cmpl	$0x480190, %ecx
000000000000a2c1	je	0xa2d9
000000000000a2c3	cmpl	$0x400180, %ecx
000000000000a2c9	je	0xa2d9
000000000000a2cb	jmp	0xa290
000000000000a2cd	testl	%ecx, %ecx
000000000000a2cf	je	0xa2d9
000000000000a2d1	cmpl	$0x80090, %ecx
000000000000a2d7	jne	0xa290
000000000000a2d9	shrl	$0x7, %ecx
000000000000a2dc	andl	$0x1ff, %ecx
000000000000a2e2	movl	%ecx, %eax
000000000000a2e4	retq
000000000000a2e5	leaq	0x16760(%rip), %rcx ## literal pool for: "invalid packet type"
000000000000a2ec	movq	%rdi, %rax
000000000000a2ef	movq	%rcx, 0x212b2(%rip)
000000000000a2f6	movq	%rax, 0x212db(%rip)
000000000000a2fd	ud2
_os_packet_set_inet_checksum:
000000000000a2ff	movl	%edi, %eax
000000000000a301	andl	$0x3, %eax
000000000000a304	cmpq	$0x2, %rax
000000000000a308	jne	0xa31f
000000000000a30a	andl	$0x3, %esi
000000000000a30d	andq	$-0x10, %rdi
000000000000a311	movl	%esi, 0x44(%rdi)
000000000000a314	movw	%dx, 0x48(%rdi)
000000000000a318	movw	%cx, 0x4a(%rdi)
000000000000a31c	xorl	%eax, %eax
000000000000a31e	retq
000000000000a31f	leaq	0x16726(%rip), %rcx ## literal pool for: "invalid packet type"
000000000000a326	movq	%rdi, %rax
000000000000a329	movq	%rcx, 0x21278(%rip)
000000000000a330	movq	%rax, 0x212a1(%rip)
000000000000a337	ud2
_os_packet_get_inet_checksum:
000000000000a339	movl	%edi, %eax
000000000000a33b	andl	$0x3, %eax
000000000000a33e	cmpq	$0x2, %rax
000000000000a342	jne	0xa367
000000000000a344	andq	$-0x10, %rdi
000000000000a348	testq	%rsi, %rsi
000000000000a34b	je	0xa354
000000000000a34d	movzwl	0x48(%rdi), %eax
000000000000a351	movw	%ax, (%rsi)
000000000000a354	testq	%rdx, %rdx
000000000000a357	je	0xa360
000000000000a359	movzwl	0x4a(%rdi), %eax
000000000000a35d	movw	%ax, (%rdx)
000000000000a360	movl	0x44(%rdi), %eax
000000000000a363	andl	$0x3, %eax
000000000000a366	retq
000000000000a367	leaq	0x166de(%rip), %rcx ## literal pool for: "invalid packet type"
000000000000a36e	movq	%rdi, %rax
000000000000a371	movq	%rcx, 0x21230(%rip)
000000000000a378	movq	%rax, 0x21259(%rip)
000000000000a37f	ud2
_os_packet_get_flow_uuid:
000000000000a381	andq	$-0x10, %rdi
000000000000a385	testb	$0x7, %sil
000000000000a389	jne	0xa39a
000000000000a38b	movq	(%rdi), %rax
000000000000a38e	movq	%rax, (%rsi)
000000000000a391	movq	0x8(%rdi), %rax
000000000000a395	movq	%rax, 0x8(%rsi)
000000000000a399	retq
000000000000a39a	testb	$0x3, %sil
000000000000a39e	jne	0xa3b7
000000000000a3a0	movl	(%rdi), %eax
000000000000a3a2	movl	%eax, (%rsi)
000000000000a3a4	movl	0x4(%rdi), %eax
000000000000a3a7	movl	%eax, 0x4(%rsi)
000000000000a3aa	movl	0x8(%rdi), %eax
000000000000a3ad	movl	%eax, 0x8(%rsi)
000000000000a3b0	movl	0xc(%rdi), %eax
000000000000a3b3	movl	%eax, 0xc(%rsi)
000000000000a3b6	retq
000000000000a3b7	movl	$0x10, %edx
000000000000a3bc	jmp	_bcopy
_os_packet_set_flow_uuid:
000000000000a3c1	movq	%rdi, %rax
000000000000a3c4	andq	$-0x10, %rax
000000000000a3c8	testb	$0x7, %sil
000000000000a3cc	jne	0xa3dd
000000000000a3ce	movq	(%rsi), %rcx
000000000000a3d1	movq	%rcx, (%rax)
000000000000a3d4	movq	0x8(%rsi), %rcx
000000000000a3d8	movq	%rcx, 0x8(%rax)
000000000000a3dc	retq
000000000000a3dd	testb	$0x3, %sil
000000000000a3e1	jne	0xa3fa
000000000000a3e3	movl	(%rsi), %ecx
000000000000a3e5	movl	%ecx, (%rax)
000000000000a3e7	movl	0x4(%rsi), %ecx
000000000000a3ea	movl	%ecx, 0x4(%rax)
000000000000a3ed	movl	0x8(%rsi), %ecx
000000000000a3f0	movl	%ecx, 0x8(%rax)
000000000000a3f3	movl	0xc(%rsi), %ecx
000000000000a3f6	movl	%ecx, 0xc(%rax)
000000000000a3f9	retq
000000000000a3fa	movl	$0x10, %edx
000000000000a3ff	movq	%rsi, %rdi
000000000000a402	movq	%rax, %rsi
000000000000a405	jmp	_bcopy
_os_packet_clear_flow_uuid:
000000000000a40a	andq	$-0x10, %rdi
000000000000a40e	xorps	%xmm0, %xmm0
000000000000a411	movaps	%xmm0, (%rdi)
000000000000a414	retq
_os_packet_get_data_length:
000000000000a415	andq	$-0x10, %rdi
000000000000a419	movl	0x14(%rdi), %eax
000000000000a41c	retq
_os_packet_get_buflet_count:
000000000000a41d	movl	%edi, %ecx
000000000000a41f	andb	$0x3, %cl
000000000000a422	cmpb	$0x2, %cl
000000000000a425	jne	0xa43e
000000000000a427	andq	$-0x10, %rdi
000000000000a42b	movzwl	0x52(%rdi), %eax
000000000000a42f	testw	%ax, %ax
000000000000a432	movl	$0x1, %ecx
000000000000a437	cmovnel	%eax, %ecx
000000000000a43a	movzwl	%cx, %eax
000000000000a43d	retq
000000000000a43e	movl	$0x1, %eax
000000000000a443	cmpb	$0x1, %cl
000000000000a446	je	0xa43d
000000000000a448	leaq	0x165fd(%rip), %rcx ## literal pool for: "invalid packet type"
000000000000a44f	movq	%rdi, %rax
000000000000a452	movq	%rcx, 0x2114f(%rip)
000000000000a459	movq	%rax, 0x21178(%rip)
000000000000a460	ud2
_os_packet_get_next_buflet:
000000000000a462	movl	%edi, %eax
000000000000a464	andb	$0x3, %al
000000000000a466	cmpb	$0x2, %al
000000000000a468	jne	0xa4b6
000000000000a46a	andq	$-0x10, %rdi
000000000000a46e	movzwl	0x52(%rdi), %eax
000000000000a472	testw	%ax, %ax
000000000000a475	movl	$0x1, %ecx
000000000000a47a	cmovnel	%eax, %ecx
000000000000a47d	movzwl	%cx, %eax
000000000000a480	testq	%rsi, %rsi
000000000000a483	je	0xa49a
000000000000a485	leaq	0x58(%rdi), %rcx
000000000000a489	subq	%rcx, %rsi
000000000000a48c	shrq	$0x3, %rsi
000000000000a490	imull	$0xaaaaaaab, %esi, %edx
000000000000a496	incl	%edx
000000000000a498	jmp	0xa49c
000000000000a49a	xorl	%edx, %edx
000000000000a49c	cmpl	%eax, %edx
000000000000a49e	setb	%cl
000000000000a4a1	movslq	%edx, %rax
000000000000a4a4	leaq	(%rax,%rax,2), %rax
000000000000a4a8	leaq	0x58(%rdi,%rax,8), %rdi
000000000000a4ad	xorl	%eax, %eax
000000000000a4af	testb	%cl, %cl
000000000000a4b1	cmovneq	%rdi, %rax
000000000000a4b5	retq
000000000000a4b6	cmpb	$0x1, %al
000000000000a4b8	jne	0xa4e2
000000000000a4ba	testq	%rsi, %rsi
000000000000a4bd	sete	%cl
000000000000a4c0	andq	$-0x10, %rdi
000000000000a4c4	addq	$0x20, %rdi
000000000000a4c8	cmpq	%rsi, %rdi
000000000000a4cb	je	0xa4ad
000000000000a4cd	testq	%rsi, %rsi
000000000000a4d0	je	0xa4ad
000000000000a4d2	leaq	0x16587(%rip), %rcx ## literal pool for: "assertion failed: (((struct __user_buflet *)(uintptr_t)bprev)) == ((void*)0) || (((struct __user_buflet *)(uintptr_t)bprev)) == (((struct __user_quantum *)((uint64_t)(ph) & (~((uint64_t)0xf)))))->qum_buf"
000000000000a4d9	movq	%rcx, 0x210c8(%rip)
000000000000a4e0	ud2
000000000000a4e2	leaq	0x16563(%rip), %rcx ## literal pool for: "invalid packet type"
000000000000a4e9	movq	%rdi, %rax
000000000000a4ec	movq	%rcx, 0x210b5(%rip)
000000000000a4f3	movq	%rax, 0x210de(%rip)
000000000000a4fa	ud2
_os_packet_finalize:
000000000000a4fc	pushq	%rbp
000000000000a4fd	pushq	%r15
000000000000a4ff	pushq	%r14
000000000000a501	pushq	%r13
000000000000a503	pushq	%r12
000000000000a505	pushq	%rbx
000000000000a506	movq	%rdi, %rdx
000000000000a509	andq	$-0x10, %rdx
000000000000a50d	movzwl	0x12(%rdx), %eax
000000000000a511	andl	$-0x4, %eax
000000000000a514	movw	%ax, 0x12(%rdx)
000000000000a518	movl	%edi, %r11d
000000000000a51b	andb	$0x3, %r11b
000000000000a51f	cmpb	$0x2, %r11b
000000000000a523	movl	%eax, -0x14(%rsp)
000000000000a527	movq	%rdi, -0x8(%rsp)
000000000000a52c	jne	0xa69d
000000000000a532	leaq	0x52(%rdx), %r10
000000000000a536	movzwl	0x52(%rdx), %eax
000000000000a53a	testw	%ax, %ax
000000000000a53d	movl	$0x1, %ecx
000000000000a542	cmovnel	%eax, %ecx
000000000000a545	movzwl	%cx, %eax
000000000000a548	decl	%eax
000000000000a54a	movq	%rdx, %rdi
000000000000a54d	movl	$0x0, 0x14(%rdi)
000000000000a554	leaq	0x20(%rdi), %rcx
000000000000a558	movq	%rcx, -0x10(%rsp)
000000000000a55d	leaq	0x58(%rdi), %r12
000000000000a561	notl	%eax
000000000000a563	xorl	%edx, %edx
000000000000a565	movl	$0x1, %r15d
000000000000a56b	xorl	%ecx, %ecx
000000000000a56d	xorl	%r13d, %r13d
000000000000a570	xorl	%ebx, %ebx
000000000000a572	jmp	0xa59a
000000000000a574	cmpb	$0x1, %r11b
000000000000a578	jne	0xa6b1
000000000000a57e	cmpq	%rbx, -0x10(%rsp)
000000000000a583	je	0xa58e
000000000000a585	testq	%rbx, %rbx
000000000000a588	jne	0xa6dd
000000000000a58e	movq	-0x10(%rsp), %rbp
000000000000a593	testq	%rbx, %rbx
000000000000a596	jne	0xa5cd
000000000000a598	jmp	0xa5dd
000000000000a59a	cmpb	$0x2, %r11b
000000000000a59e	jne	0xa574
000000000000a5a0	movzwl	(%r10), %esi
000000000000a5a4	testw	%si, %si
000000000000a5a7	cmovel	%r15d, %esi
000000000000a5ab	movzwl	%si, %ebp
000000000000a5ae	testq	%rbx, %rbx
000000000000a5b1	je	0xa5c7
000000000000a5b3	movq	%rbx, %rsi
000000000000a5b6	subq	%r12, %rsi
000000000000a5b9	shrq	$0x3, %rsi
000000000000a5bd	imull	$0xaaaaaaab, %esi, %esi
000000000000a5c3	incl	%esi
000000000000a5c5	jmp	0xa5c9
000000000000a5c7	xorl	%esi, %esi
000000000000a5c9	cmpl	%ebp, %esi
000000000000a5cb	jb	0xa5d1
000000000000a5cd	xorl	%ebp, %ebp
000000000000a5cf	jmp	0xa5dd
000000000000a5d1	movslq	%esi, %rsi
000000000000a5d4	leaq	(%rsi,%rsi,2), %rsi
000000000000a5d8	leaq	0x58(%rdi,%rsi,8), %rbp
000000000000a5dd	movq	%rbx, %rsi
000000000000a5e0	orq	%rbp, %rsi
000000000000a5e3	je	0xa6cd
000000000000a5e9	movzwl	0x10(%rbp), %r14d
000000000000a5ee	movzwl	0xe(%rbp), %esi
000000000000a5f2	leal	(%rsi,%r14), %r9d
000000000000a5f6	movzwl	0xc(%rbp), %r8d
000000000000a5fb	cmpl	%r8d, %r9d
000000000000a5fe	ja	0xa677
000000000000a600	testq	%rbx, %rbx
000000000000a603	cmovel	%r14d, %ecx
000000000000a607	cmovel	%r8d, %edx
000000000000a60b	addl	%esi, %r13d
000000000000a60e	movq	%rbp, %rbx
000000000000a611	incl	%eax
000000000000a613	jne	0xa59a
000000000000a615	movq	%rdi, %rbx
000000000000a618	movq	-0x8(%rsp), %rdi
000000000000a61d	movl	%edi, %esi
000000000000a61f	andl	$0x3, %esi
000000000000a622	xorl	%eax, %eax
000000000000a624	movw	$0x1, %bp
000000000000a628	cmpq	$0x2, %rsi
000000000000a62c	jne	0xa64f
000000000000a62e	andl	$0xc, %edi
000000000000a631	cmpq	$0x8, %rdi
000000000000a635	jne	0xa654
000000000000a637	movq	%rbx, %rdi
000000000000a63a	movzwl	0x3a(%rbx), %ebx
000000000000a63e	movzwl	%bx, %esi
000000000000a641	cmpl	%esi, %edx
000000000000a643	jbe	0xa677
000000000000a645	cmpl	%esi, %ecx
000000000000a647	jne	0xa677
000000000000a649	movw	%bx, 0x40(%rdi)
000000000000a64d	jmp	0xa66c
000000000000a64f	movq	%rbx, %rdi
000000000000a652	jmp	0xa683
000000000000a654	testl	%ecx, %ecx
000000000000a656	movq	%rbx, %rdi
000000000000a659	jne	0xa677
000000000000a65b	movzwl	0x40(%rdi), %esi
000000000000a65f	testw	%si, %si
000000000000a662	jne	0xa677
000000000000a664	movw	$0x0, 0x3a(%rdi)
000000000000a66a	xorl	%ebx, %ebx
000000000000a66c	movw	%bx, 0x42(%rdi)
000000000000a670	addl	%r13d, %ecx
000000000000a673	cmpl	%edx, %ecx
000000000000a675	jbe	0xa683
000000000000a677	movl	$0x22, %eax
000000000000a67c	movw	$0x2, %bp
000000000000a680	xorl	%r13d, %r13d
000000000000a683	movl	%r13d, 0x14(%rdi)
000000000000a687	movzwl	%bp, %ecx
000000000000a68a	orl	-0x14(%rsp), %ecx
000000000000a68e	movw	%cx, 0x12(%rdi)
000000000000a692	popq	%rbx
000000000000a693	popq	%r12
000000000000a695	popq	%r13
000000000000a697	popq	%r14
000000000000a699	popq	%r15
000000000000a69b	popq	%rbp
000000000000a69c	retq
000000000000a69d	cmpb	$0x1, %r11b
000000000000a6a1	jne	0xa6ed
000000000000a6a3	movq	%rdx, %rdi
000000000000a6a6	leaq	0x52(%rdx), %r10
000000000000a6aa	xorl	%eax, %eax
000000000000a6ac	jmp	0xa54d
000000000000a6b1	leaq	0x16394(%rip), %rcx ## literal pool for: "invalid packet type"
000000000000a6b8	movq	-0x8(%rsp), %rax
000000000000a6bd	movq	%rcx, 0x20ee4(%rip)
000000000000a6c4	movq	%rax, 0x20f0d(%rip)
000000000000a6cb	ud2
000000000000a6cd	leaq	0x16458(%rip), %rcx ## literal pool for: "assertion failed: bprev != ((void*)0) || bcur != ((void*)0)"
000000000000a6d4	movq	%rcx, 0x20ecd(%rip)
000000000000a6db	ud2
000000000000a6dd	leaq	0x1637c(%rip), %rcx ## literal pool for: "assertion failed: (((struct __user_buflet *)(uintptr_t)bprev)) == ((void*)0) || (((struct __user_buflet *)(uintptr_t)bprev)) == (((struct __user_quantum *)((uint64_t)(ph) & (~((uint64_t)0xf)))))->qum_buf"
000000000000a6e4	movq	%rcx, 0x20ebd(%rip)
000000000000a6eb	ud2
000000000000a6ed	leaq	0x16358(%rip), %rcx ## literal pool for: "invalid packet type"
000000000000a6f4	movq	%rdi, %rax
000000000000a6f7	movq	%rcx, 0x20eaa(%rip)
000000000000a6fe	movq	%rax, 0x20ed3(%rip)
000000000000a705	ud2
_os_inet_checksum:
000000000000a707	jmp	_os_cpu_in_cksum
_os_copy_and_inet_checksum:
000000000000a70c	pushq	%rbp
000000000000a70d	movq	%rsp, %rbp
000000000000a710	callq	_os_cpu_copy_in_cksum
000000000000a715	movzwl	%ax, %ecx
000000000000a718	shrl	$0x10, %eax
000000000000a71b	addl	%eax, %ecx
000000000000a71d	movzwl	%cx, %eax
000000000000a720	shrl	$0x10, %ecx
000000000000a723	addl	%ecx, %eax
000000000000a725	movl	%eax, %ecx
000000000000a727	shrl	$0x10, %ecx
000000000000a72a	addl	%eax, %ecx
000000000000a72c	notl	%ecx
000000000000a72e	movzwl	%cx, %eax
000000000000a731	popq	%rbp
000000000000a732	retq
_os_buflet_get_data_offset:
000000000000a733	movzwl	0x10(%rdi), %eax
000000000000a737	retq
_os_buflet_get_data_length:
000000000000a738	movzwl	0xe(%rdi), %eax
000000000000a73c	retq
_os_buflet_set_data_offset:
000000000000a73d	movzwl	0xe(%rdi), %eax
000000000000a741	addl	%esi, %eax
000000000000a743	movzwl	0xc(%rdi), %ecx
000000000000a747	cmpl	%ecx, %eax
000000000000a749	ja	0xa752
000000000000a74b	movw	%si, 0x10(%rdi)
000000000000a74f	xorl	%eax, %eax
000000000000a751	retq
000000000000a752	movl	$0x22, %eax
000000000000a757	retq
_os_buflet_set_data_length:
000000000000a758	movzwl	0x10(%rdi), %eax
000000000000a75c	addl	%esi, %eax
000000000000a75e	movzwl	0xc(%rdi), %ecx
000000000000a762	cmpl	%ecx, %eax
000000000000a764	ja	0xa76d
000000000000a766	movw	%si, 0xe(%rdi)
000000000000a76a	xorl	%eax, %eax
000000000000a76c	retq
000000000000a76d	movl	$0x22, %eax
000000000000a772	retq
_os_buflet_get_object_address:
000000000000a773	movq	(%rdi), %rax
000000000000a776	retq
_os_buflet_get_data_limit:
000000000000a777	movzwl	0xc(%rdi), %eax
000000000000a77b	retq
_clock_set_time:
000000000000a77c	pushq	%rbp
000000000000a77d	movq	%rsp, %rbp
000000000000a780	pushq	%rbx
000000000000a781	subq	$0x38, %rsp
000000000000a785	leaq	_NDR_record(%rip), %rax
000000000000a78c	movq	(%rax), %rax
000000000000a78f	leaq	-0x38(%rbp), %rbx
000000000000a793	movq	%rax, 0x18(%rbx)
000000000000a797	movq	%rsi, 0x20(%rbx)
000000000000a79b	movl	$0x1513, (%rbx)
000000000000a7a1	movl	%edi, 0x8(%rbx)
000000000000a7a4	callq	_mig_get_reply_port
000000000000a7a9	movl	%eax, 0xc(%rbx)
000000000000a7ac	movabsq	$0x4b000000000, %rcx
000000000000a7b6	movq	%rcx, 0x10(%rbx)
000000000000a7ba	movl	$0x0, (%rsp)
000000000000a7c1	movl	$0x3, %esi
000000000000a7c6	movl	$0x28, %edx
000000000000a7cb	movl	$0x2c, %ecx
000000000000a7d0	xorl	%r9d, %r9d
000000000000a7d3	movq	%rbx, %rdi
000000000000a7d6	movl	%eax, %r8d
000000000000a7d9	callq	_mach_msg
000000000000a7de	movl	%eax, %ebx
000000000000a7e0	leal	-0x10000002(%rbx), %eax
000000000000a7e6	cmpl	$0xe, %eax
000000000000a7e9	ja	0xa7ff
000000000000a7eb	movl	$0x4003, %ecx
000000000000a7f0	btl	%eax, %ecx
000000000000a7f3	jae	0xa7ff
000000000000a7f5	movl	-0x2c(%rbp), %edi
000000000000a7f8	callq	_mig_put_reply_port
000000000000a7fd	jmp	0xa84d
000000000000a7ff	testl	%ebx, %ebx
000000000000a801	jne	0xa82e
000000000000a803	movl	-0x24(%rbp), %eax
000000000000a806	cmpl	$0x47, %eax
000000000000a809	je	0xa838
000000000000a80b	cmpl	$0x514, %eax
000000000000a810	jne	0xa83f
000000000000a812	movl	$0xfffffed4, %ebx
000000000000a817	cmpl	$0x0, -0x38(%rbp)
000000000000a81b	js	0xa844
000000000000a81d	cmpl	$0x24, -0x34(%rbp)
000000000000a821	jne	0xa844
000000000000a823	movl	-0x18(%rbp), %ebx
000000000000a826	testl	%ebx, %ebx
000000000000a828	jne	0xa844
000000000000a82a	xorl	%ebx, %ebx
000000000000a82c	jmp	0xa84d
000000000000a82e	movl	-0x2c(%rbp), %edi
000000000000a831	callq	_mig_dealloc_reply_port
000000000000a836	jmp	0xa84d
000000000000a838	movl	$0xfffffecc, %ebx
000000000000a83d	jmp	0xa844
000000000000a83f	movl	$0xfffffed3, %ebx
000000000000a844	leaq	-0x38(%rbp), %rdi
000000000000a848	callq	_mach_msg_destroy
000000000000a84d	movl	%ebx, %eax
000000000000a84f	addq	$0x38, %rsp
000000000000a853	popq	%rbx
000000000000a854	popq	%rbp
000000000000a855	retq
_clock_set_attributes:
000000000000a856	pushq	%rbp
000000000000a857	movq	%rsp, %rbp
000000000000a85a	pushq	%r15
000000000000a85c	pushq	%r14
000000000000a85e	pushq	%rbx
000000000000a85f	subq	$0x38, %rsp
000000000000a863	leaq	_NDR_record(%rip), %rax
000000000000a86a	movq	(%rax), %rax
000000000000a86d	movq	%rax, -0x30(%rbp)
000000000000a871	movl	%esi, -0x28(%rbp)
000000000000a874	movl	$0xfffffecd, %r14d
000000000000a87a	cmpl	$0x1, %ecx
000000000000a87d	ja	0xa969
000000000000a883	movl	%ecx, %ebx
000000000000a885	movl	%edi, %r15d
000000000000a888	leaq	-0x20(%rbp), %r14
000000000000a88c	leal	(,%rbx,4), %eax
000000000000a893	movq	%r14, %rdi
000000000000a896	movq	%rdx, %rsi
000000000000a899	movq	%rax, %rdx
000000000000a89c	callq	_memcpy
000000000000a8a1	movl	%ebx, -0x4(%r14)
000000000000a8a5	leal	0x28(,%rbx,4), %ebx
000000000000a8ac	movl	$0x1513, -0x28(%r14)
000000000000a8b4	movl	%r15d, -0x20(%r14)
000000000000a8b8	callq	_mig_get_reply_port
000000000000a8bd	movl	%eax, -0x1c(%r14)
000000000000a8c1	movabsq	$0x4b100000000, %rcx
000000000000a8cb	movq	%rcx, -0x18(%r14)
000000000000a8cf	movl	$0x0, (%rsp)
000000000000a8d6	leaq	-0x48(%rbp), %rdi
000000000000a8da	movl	$0x3, %esi
000000000000a8df	movl	$0x2c, %ecx
000000000000a8e4	xorl	%r9d, %r9d
000000000000a8e7	movl	%eax, %r8d
000000000000a8ea	movl	%ebx, %edx
000000000000a8ec	callq	_mach_msg
000000000000a8f1	movl	%eax, %r14d
000000000000a8f4	leal	-0x10000002(%r14), %eax
000000000000a8fb	cmpl	$0xe, %eax
000000000000a8fe	ja	0xa914
000000000000a900	movl	$0x4003, %ecx
000000000000a905	btl	%eax, %ecx
000000000000a908	jae	0xa914
000000000000a90a	movl	-0x3c(%rbp), %edi
000000000000a90d	callq	_mig_put_reply_port
000000000000a912	jmp	0xa969
000000000000a914	testl	%r14d, %r14d
000000000000a917	jne	0xa948
000000000000a919	movl	-0x34(%rbp), %eax
000000000000a91c	cmpl	$0x47, %eax
000000000000a91f	je	0xa952
000000000000a921	cmpl	$0x515, %eax
000000000000a926	jne	0xa95a
000000000000a928	movl	$0xfffffed4, %r14d
000000000000a92e	cmpl	$0x0, -0x48(%rbp)
000000000000a932	js	0xa960
000000000000a934	cmpl	$0x24, -0x44(%rbp)
000000000000a938	jne	0xa960
000000000000a93a	movl	-0x28(%rbp), %r14d
000000000000a93e	testl	%r14d, %r14d
000000000000a941	jne	0xa960
000000000000a943	xorl	%r14d, %r14d
000000000000a946	jmp	0xa969
000000000000a948	movl	-0x3c(%rbp), %edi
000000000000a94b	callq	_mig_dealloc_reply_port
000000000000a950	jmp	0xa969
000000000000a952	movl	$0xfffffecc, %r14d
000000000000a958	jmp	0xa960
000000000000a95a	movl	$0xfffffed3, %r14d
000000000000a960	leaq	-0x48(%rbp), %rdi
000000000000a964	callq	_mach_msg_destroy
000000000000a969	movl	%r14d, %eax
000000000000a96c	addq	$0x38, %rsp
000000000000a970	popq	%rbx
000000000000a971	popq	%r14
000000000000a973	popq	%r15
000000000000a975	popq	%rbp
000000000000a976	retq
_clock_alarm_reply:
000000000000a977	pushq	%rbp
000000000000a978	movq	%rsp, %rbp
000000000000a97b	subq	$0x40, %rsp
000000000000a97f	leaq	_NDR_record(%rip), %rax
000000000000a986	movq	(%rax), %r9
000000000000a989	leaq	-0x30(%rbp), %rax
000000000000a98d	movq	%r9, 0x18(%rax)
000000000000a991	movl	%edx, 0x20(%rax)
000000000000a994	movl	%ecx, 0x24(%rax)
000000000000a997	movq	%r8, 0x28(%rax)
000000000000a99b	movl	%esi, (%rax)
000000000000a99d	movl	%edi, 0x8(%rax)
000000000000a9a0	movq	$0x0, 0xc(%rax)
000000000000a9a8	movl	$0x2faf73, 0x14(%rax)
000000000000a9af	movl	$0x0, (%rsp)
000000000000a9b6	movl	$0x1, %esi
000000000000a9bb	movl	$0x30, %edx
000000000000a9c0	xorl	%ecx, %ecx
000000000000a9c2	xorl	%r8d, %r8d
000000000000a9c5	xorl	%r9d, %r9d
000000000000a9c8	movq	%rax, %rdi
000000000000a9cb	callq	_mach_msg
000000000000a9d0	addq	$0x40, %rsp
000000000000a9d4	popq	%rbp
000000000000a9d5	retq
_clock_get_attributes:
000000000000a9d6	pushq	%rbp
000000000000a9d7	movq	%rsp, %rbp
000000000000a9da	pushq	%r15
000000000000a9dc	pushq	%r14
000000000000a9de	pushq	%r12
000000000000a9e0	pushq	%rbx
000000000000a9e1	subq	$0x40, %rsp
000000000000a9e5	movq	%rcx, %r15
000000000000a9e8	movq	%rdx, %r14
000000000000a9eb	leaq	_NDR_record(%rip), %rax
000000000000a9f2	movq	(%rax), %rax
000000000000a9f5	leaq	-0x58(%rbp), %rbx
000000000000a9f9	movq	%rax, 0x18(%rbx)
000000000000a9fd	movl	%esi, 0x20(%rbx)
000000000000aa00	xorl	%r12d, %r12d
000000000000aa03	xorl	%eax, %eax
000000000000aa05	cmpl	%r12d, (%rcx)
000000000000aa08	setne	%al
000000000000aa0b	movl	%eax, 0x24(%rbx)
000000000000aa0e	movl	$0x1513, (%rbx)
000000000000aa14	movl	%edi, 0x8(%rbx)
000000000000aa17	callq	_mig_get_reply_port
000000000000aa1c	movl	%eax, 0xc(%rbx)
000000000000aa1f	movabsq	$0x3e900000000, %rcx
000000000000aa29	movq	%rcx, 0x10(%rbx)
000000000000aa2d	movl	%r12d, (%rsp)
000000000000aa31	movl	$0x3, %esi
000000000000aa36	movl	$0x28, %edx
000000000000aa3b	movl	$0x34, %ecx
000000000000aa40	xorl	%r9d, %r9d
000000000000aa43	movq	%rbx, %rdi
000000000000aa46	movl	%eax, %r8d
000000000000aa49	callq	_mach_msg
000000000000aa4e	movl	%eax, %ebx
000000000000aa50	leal	-0x10000002(%rbx), %eax
000000000000aa56	cmpl	$0xe, %eax
000000000000aa59	ja	0xaa72
000000000000aa5b	movl	$0x4003, %ecx
000000000000aa60	btl	%eax, %ecx
000000000000aa63	jae	0xaa72
000000000000aa65	movl	-0x4c(%rbp), %edi
000000000000aa68	callq	_mig_put_reply_port
000000000000aa6d	jmp	0xab24
000000000000aa72	testl	%ebx, %ebx
000000000000aa74	jne	0xaab3
000000000000aa76	movl	-0x44(%rbp), %eax
000000000000aa79	cmpl	$0x47, %eax
000000000000aa7c	je	0xaabd
000000000000aa7e	cmpl	$0x44d, %eax
000000000000aa83	jne	0xaac4
000000000000aa85	cmpl	$0x0, -0x58(%rbp)
000000000000aa89	js	0xab16
000000000000aa8f	movl	-0x54(%rbp), %eax
000000000000aa92	leal	-0x28(%rax), %ecx
000000000000aa95	cmpl	$0x5, %ecx
000000000000aa98	jb	0xaacb
000000000000aa9a	movl	$0xfffffed4, %ebx
000000000000aa9f	cmpl	$0x24, %eax
000000000000aaa2	jne	0xab1b
000000000000aaa4	movl	-0x38(%rbp), %eax
000000000000aaa7	testl	%eax, %eax
000000000000aaa9	movl	$0xfffffed4, %ebx
000000000000aaae	cmovnel	%eax, %ebx
000000000000aab1	jmp	0xab1b
000000000000aab3	movl	-0x4c(%rbp), %edi
000000000000aab6	callq	_mig_dealloc_reply_port
000000000000aabb	jmp	0xab24
000000000000aabd	movl	$0xfffffecc, %ebx
000000000000aac2	jmp	0xab1b
000000000000aac4	movl	$0xfffffed3, %ebx
000000000000aac9	jmp	0xab1b
000000000000aacb	movl	-0x38(%rbp), %ebx
000000000000aace	testl	%ebx, %ebx
000000000000aad0	jne	0xab1b
000000000000aad2	movl	-0x34(%rbp), %r12d
000000000000aad6	cmpl	$0x1, %r12d
000000000000aada	ja	0xab16
000000000000aadc	shrl	$0x2, %ecx
000000000000aadf	cmpl	%r12d, %ecx
000000000000aae2	jb	0xab16
000000000000aae4	leal	0x28(,%r12,4), %ecx
000000000000aaec	movl	$0xfffffed4, %ebx
000000000000aaf1	cmpl	%ecx, %eax
000000000000aaf3	jne	0xab1b
000000000000aaf5	movl	(%r15), %edx
000000000000aaf8	leaq	-0x30(%rbp), %rsi
000000000000aafc	cmpl	%edx, %r12d
000000000000aaff	jbe	0xab33
000000000000ab01	shll	$0x2, %edx
000000000000ab04	movq	%r14, %rdi
000000000000ab07	callq	_memcpy
000000000000ab0c	movl	%r12d, (%r15)
000000000000ab0f	movl	$0xfffffecd, %ebx
000000000000ab14	jmp	0xab24
000000000000ab16	movl	$0xfffffed4, %ebx
000000000000ab1b	leaq	-0x58(%rbp), %rdi
000000000000ab1f	callq	_mach_msg_destroy
000000000000ab24	movl	%ebx, %eax
000000000000ab26	addq	$0x40, %rsp
000000000000ab2a	popq	%rbx
000000000000ab2b	popq	%r12
000000000000ab2d	popq	%r14
000000000000ab2f	popq	%r15
000000000000ab31	popq	%rbp
000000000000ab32	retq
000000000000ab33	leal	(,%r12,4), %eax
000000000000ab3b	movl	%eax, %edx
000000000000ab3d	movq	%r14, %rdi
000000000000ab40	callq	_memcpy
000000000000ab45	movl	%r12d, (%r15)
000000000000ab48	xorl	%ebx, %ebx
000000000000ab4a	jmp	0xab24
_clock_alarm:
000000000000ab4c	pushq	%rbp
000000000000ab4d	movq	%rsp, %rbp
000000000000ab50	pushq	%rbx
000000000000ab51	subq	$0x48, %rsp
000000000000ab55	leaq	-0x48(%rbp), %rbx
000000000000ab59	movl	$0x1, 0x18(%rbx)
000000000000ab60	movl	%ecx, 0x1c(%rbx)
000000000000ab63	movl	$0x150000, 0x24(%rbx)
000000000000ab6a	leaq	_NDR_record(%rip), %rax
000000000000ab71	movq	(%rax), %rax
000000000000ab74	movq	%rax, 0x28(%rbx)
000000000000ab78	movl	%esi, 0x30(%rbx)
000000000000ab7b	movq	%rdx, 0x34(%rbx)
000000000000ab7f	movl	$0x80001513, (%rbx)
000000000000ab85	movl	%edi, 0x8(%rbx)
000000000000ab88	callq	_mig_get_reply_port
000000000000ab8d	movl	%eax, 0xc(%rbx)
000000000000ab90	movabsq	$0x3ea00000000, %rcx
000000000000ab9a	movq	%rcx, 0x10(%rbx)
000000000000ab9e	movl	$0x0, (%rsp)
000000000000aba5	movl	$0x3, %esi
000000000000abaa	movl	$0x3c, %edx
000000000000abaf	movl	$0x2c, %ecx
000000000000abb4	xorl	%r9d, %r9d
000000000000abb7	movq	%rbx, %rdi
000000000000abba	movl	%eax, %r8d
000000000000abbd	callq	_mach_msg
000000000000abc2	movl	%eax, %ebx
000000000000abc4	leal	-0x10000002(%rbx), %eax
000000000000abca	cmpl	$0xe, %eax
000000000000abcd	ja	0xabe3
000000000000abcf	movl	$0x4003, %ecx
000000000000abd4	btl	%eax, %ecx
000000000000abd7	jae	0xabe3
000000000000abd9	movl	-0x3c(%rbp), %edi
000000000000abdc	callq	_mig_put_reply_port
000000000000abe1	jmp	0xac31
000000000000abe3	testl	%ebx, %ebx
000000000000abe5	jne	0xac12
000000000000abe7	movl	-0x34(%rbp), %eax
000000000000abea	cmpl	$0x47, %eax
000000000000abed	je	0xac1c
000000000000abef	cmpl	$0x44e, %eax
000000000000abf4	jne	0xac23
000000000000abf6	movl	$0xfffffed4, %ebx
000000000000abfb	cmpl	$0x0, -0x48(%rbp)
000000000000abff	js	0xac28
000000000000ac01	cmpl	$0x24, -0x44(%rbp)
000000000000ac05	jne	0xac28
000000000000ac07	movl	-0x28(%rbp), %ebx
000000000000ac0a	testl	%ebx, %ebx
000000000000ac0c	jne	0xac28
000000000000ac0e	xorl	%ebx, %ebx
000000000000ac10	jmp	0xac31
000000000000ac12	movl	-0x3c(%rbp), %edi
000000000000ac15	callq	_mig_dealloc_reply_port
000000000000ac1a	jmp	0xac31
000000000000ac1c	movl	$0xfffffecc, %ebx
000000000000ac21	jmp	0xac28
000000000000ac23	movl	$0xfffffed3, %ebx
000000000000ac28	leaq	-0x48(%rbp), %rdi
000000000000ac2c	callq	_mach_msg_destroy
000000000000ac31	movl	%ebx, %eax
000000000000ac33	addq	$0x48, %rsp
000000000000ac37	popq	%rbx
000000000000ac38	popq	%rbp
000000000000ac39	retq
_exception_raise:
000000000000ac3a	pushq	%rbp
000000000000ac3b	movq	%rsp, %rbp
000000000000ac3e	pushq	%r15
000000000000ac40	pushq	%r14
000000000000ac42	pushq	%rbx
000000000000ac43	subq	$0x58, %rsp
000000000000ac47	movl	$0x2, %eax
000000000000ac4c	movl	%eax, -0x50(%rbp)
000000000000ac4f	movl	%esi, -0x4c(%rbp)
000000000000ac52	movl	$0x130000, %esi
000000000000ac57	movl	%esi, -0x44(%rbp)
000000000000ac5a	movl	%edx, -0x40(%rbp)
000000000000ac5d	movl	%esi, -0x38(%rbp)
000000000000ac60	leaq	_NDR_record(%rip), %rdx
000000000000ac67	movq	(%rdx), %rdx
000000000000ac6a	movq	%rdx, -0x34(%rbp)
000000000000ac6e	movl	%ecx, -0x2c(%rbp)
000000000000ac71	movl	$0xfffffecd, %r14d
000000000000ac77	cmpl	%eax, %r9d
000000000000ac7a	ja	0xad64
000000000000ac80	movl	%r9d, %ebx
000000000000ac83	movl	%edi, %r15d
000000000000ac86	leaq	-0x24(%rbp), %r14
000000000000ac8a	leal	(,%rbx,4), %edx
000000000000ac91	movq	%r14, %rdi
000000000000ac94	movq	%r8, %rsi
000000000000ac97	callq	_memcpy
000000000000ac9c	movl	%ebx, -0x4(%r14)
000000000000aca0	leal	0x44(,%rbx,4), %ebx
000000000000aca7	movl	$0x80001513, -0x44(%r14)
000000000000acaf	movl	%r15d, -0x3c(%r14)
000000000000acb3	callq	_mig_get_reply_port
000000000000acb8	movl	%eax, -0x38(%r14)
000000000000acbc	movabsq	$0x96100000000, %rcx
000000000000acc6	movq	%rcx, -0x34(%r14)
000000000000acca	movl	$0x0, (%rsp)
000000000000acd1	leaq	-0x68(%rbp), %rdi
000000000000acd5	movl	$0x3, %esi
000000000000acda	movl	$0x2c, %ecx
000000000000acdf	xorl	%r9d, %r9d
000000000000ace2	movl	%eax, %r8d
000000000000ace5	movl	%ebx, %edx
000000000000ace7	callq	_mach_msg
000000000000acec	movl	%eax, %r14d
000000000000acef	leal	-0x10000002(%r14), %eax
000000000000acf6	cmpl	$0xe, %eax
000000000000acf9	ja	0xad0f
000000000000acfb	movl	$0x4003, %ecx
000000000000ad00	btl	%eax, %ecx
000000000000ad03	jae	0xad0f
000000000000ad05	movl	-0x5c(%rbp), %edi
000000000000ad08	callq	_mig_put_reply_port
000000000000ad0d	jmp	0xad64
000000000000ad0f	testl	%r14d, %r14d
000000000000ad12	jne	0xad43
000000000000ad14	movl	-0x54(%rbp), %eax
000000000000ad17	cmpl	$0x47, %eax
000000000000ad1a	je	0xad4d
000000000000ad1c	cmpl	$0x9c5, %eax
000000000000ad21	jne	0xad55
000000000000ad23	movl	$0xfffffed4, %r14d
000000000000ad29	cmpl	$0x0, -0x68(%rbp)
000000000000ad2d	js	0xad5b
000000000000ad2f	cmpl	$0x24, -0x64(%rbp)
000000000000ad33	jne	0xad5b
000000000000ad35	movl	-0x48(%rbp), %r14d
000000000000ad39	testl	%r14d, %r14d
000000000000ad3c	jne	0xad5b
000000000000ad3e	xorl	%r14d, %r14d
000000000000ad41	jmp	0xad64
000000000000ad43	movl	-0x5c(%rbp), %edi
000000000000ad46	callq	_mig_dealloc_reply_port
000000000000ad4b	jmp	0xad64
000000000000ad4d	movl	$0xfffffecc, %r14d
000000000000ad53	jmp	0xad5b
000000000000ad55	movl	$0xfffffed3, %r14d
000000000000ad5b	leaq	-0x68(%rbp), %rdi
000000000000ad5f	callq	_mach_msg_destroy
000000000000ad64	movl	%r14d, %eax
000000000000ad67	addq	$0x58, %rsp
000000000000ad6b	popq	%rbx
000000000000ad6c	popq	%r14
000000000000ad6e	popq	%r15
000000000000ad70	popq	%rbp
000000000000ad71	retq
_exception_raise_state:
000000000000ad72	pushq	%rbp
000000000000ad73	movq	%rsp, %rbp
000000000000ad76	pushq	%r15
000000000000ad78	pushq	%r14
000000000000ad7a	pushq	%r13
000000000000ad7c	pushq	%r12
000000000000ad7e	pushq	%rbx
000000000000ad7f	subq	$0x9e8, %rsp
000000000000ad86	leaq	_NDR_record(%rip), %rax
000000000000ad8d	movq	(%rax), %rax
000000000000ad90	movq	%rax, -0x9f0(%rbp)
000000000000ad97	movl	%esi, -0x9e8(%rbp)
000000000000ad9d	movl	$0xfffffecd, %r13d
000000000000ada3	cmpl	$0x2, %ecx
000000000000ada6	ja	0xaf7a
000000000000adac	movl	%ecx, %r14d
000000000000adaf	movq	%r9, -0x38(%rbp)
000000000000adb3	movl	%edi, -0x2c(%rbp)
000000000000adb6	movq	%r8, %r12
000000000000adb9	leaq	-0x9e0(%rbp), %r15
000000000000adc0	leal	(,%r14,4), %ebx
000000000000adc8	movq	%r15, %rdi
000000000000adcb	movq	%rdx, %rsi
000000000000adce	movq	%rbx, %rdx
000000000000add1	callq	_memcpy
000000000000add6	movl	%r14d, -0x4(%r15)
000000000000adda	movq	%r12, %r15
000000000000addd	movl	0x10(%rbp), %r12d
000000000000ade1	leaq	-0xa08(%rbp), %rax
000000000000ade8	movl	(%r15), %ecx
000000000000adeb	movl	%ecx, 0x28(%rbx,%rax)
000000000000adef	cmpl	$0x266, %r12d
000000000000adf6	ja	0xaf7a
000000000000adfc	leaq	-0x8(%rbx,%rax), %r14
000000000000ae01	leaq	0x38(%r14), %rdi
000000000000ae05	leal	(,%r12,4), %edx
000000000000ae0d	movq	-0x38(%rbp), %rsi
000000000000ae11	callq	_memcpy
000000000000ae16	movl	%r12d, 0x34(%r14)
000000000000ae1a	leal	0x30(%rbx,%r12,4), %r14d
000000000000ae1f	leaq	-0xa08(%rbp), %rbx
000000000000ae26	movl	$0x1513, (%rbx)
000000000000ae2c	movl	-0x2c(%rbp), %eax
000000000000ae2f	movl	%eax, 0x8(%rbx)
000000000000ae32	callq	_mig_get_reply_port
000000000000ae37	movl	%eax, 0xc(%rbx)
000000000000ae3a	movabsq	$0x96200000000, %rcx
000000000000ae44	movq	%rcx, 0x10(%rbx)
000000000000ae48	movl	$0x0, (%rsp)
000000000000ae4f	movl	$0x3, %esi
000000000000ae54	movl	$0x9cc, %ecx
000000000000ae59	xorl	%r9d, %r9d
000000000000ae5c	movq	%rbx, %rdi
000000000000ae5f	movl	%r14d, %edx
000000000000ae62	movl	%eax, %r8d
000000000000ae65	callq	_mach_msg
000000000000ae6a	movl	%eax, %r13d
000000000000ae6d	leal	-0x10000002(%r13), %eax
000000000000ae74	cmpl	$0xe, %eax
000000000000ae77	ja	0xae93
000000000000ae79	movl	$0x4003, %ecx
000000000000ae7e	btl	%eax, %ecx
000000000000ae81	jae	0xae93
000000000000ae83	movl	-0x9fc(%rbp), %edi
000000000000ae89	callq	_mig_put_reply_port
000000000000ae8e	jmp	0xaf7a
000000000000ae93	testl	%r13d, %r13d
000000000000ae96	jne	0xaeee
000000000000ae98	movl	-0x9f4(%rbp), %eax
000000000000ae9e	cmpl	$0x47, %eax
000000000000aea1	je	0xaefb
000000000000aea3	cmpl	$0x9c6, %eax
000000000000aea8	jne	0xaf03
000000000000aeaa	cmpl	$0x0, -0xa08(%rbp)
000000000000aeb1	js	0xaf68
000000000000aeb7	movl	-0xa04(%rbp), %eax
000000000000aebd	leal	-0x2c(%rax), %ecx
000000000000aec0	cmpl	$0x999, %ecx
000000000000aec6	jb	0xaf0b
000000000000aec8	movl	$0xfffffed4, %r13d
000000000000aece	cmpl	$0x24, %eax
000000000000aed1	jne	0xaf6e
000000000000aed7	movl	-0x9e8(%rbp), %eax
000000000000aedd	testl	%eax, %eax
000000000000aedf	movl	$0xfffffed4, %r13d
000000000000aee5	cmovnel	%eax, %r13d
000000000000aee9	jmp	0xaf6e
000000000000aeee	movl	-0x9fc(%rbp), %edi
000000000000aef4	callq	_mig_dealloc_reply_port
000000000000aef9	jmp	0xaf7a
000000000000aefb	movl	$0xfffffecc, %r13d
000000000000af01	jmp	0xaf6e
000000000000af03	movl	$0xfffffed3, %r13d
000000000000af09	jmp	0xaf6e
000000000000af0b	movl	-0x9e8(%rbp), %r13d
000000000000af12	testl	%r13d, %r13d
000000000000af15	jne	0xaf6e
000000000000af17	movl	-0x9e0(%rbp), %ebx
000000000000af1d	cmpl	$0x266, %ebx
000000000000af23	ja	0xaf68
000000000000af25	shrl	$0x2, %ecx
000000000000af28	cmpl	%ebx, %ecx
000000000000af2a	jb	0xaf68
000000000000af2c	leal	0x2c(,%rbx,4), %ecx
000000000000af33	movl	$0xfffffed4, %r13d
000000000000af39	cmpl	%ecx, %eax
000000000000af3b	jne	0xaf6e
000000000000af3d	movq	0x20(%rbp), %r14
000000000000af41	movq	0x18(%rbp), %rdi
000000000000af45	leal	(,%rbx,4), %eax
000000000000af4c	leaq	-0x9dc(%rbp), %rsi
000000000000af53	movl	-0x8(%rsi), %ecx
000000000000af56	movl	%ecx, (%r15)
000000000000af59	movl	%eax, %edx
000000000000af5b	callq	_memcpy
000000000000af60	movl	%ebx, (%r14)
000000000000af63	xorl	%r13d, %r13d
000000000000af66	jmp	0xaf7a
000000000000af68	movl	$0xfffffed4, %r13d
000000000000af6e	leaq	-0xa08(%rbp), %rdi
000000000000af75	callq	_mach_msg_destroy
000000000000af7a	movl	%r13d, %eax
000000000000af7d	addq	$0x9e8, %rsp
000000000000af84	popq	%rbx
000000000000af85	popq	%r12
000000000000af87	popq	%r13
000000000000af89	popq	%r14
000000000000af8b	popq	%r15
000000000000af8d	popq	%rbp
000000000000af8e	retq
_exception_raise_state_identity:
000000000000af8f	pushq	%rbp
000000000000af90	movq	%rsp, %rbp
000000000000af93	pushq	%r15
000000000000af95	pushq	%r14
000000000000af97	pushq	%r13
000000000000af99	pushq	%r12
000000000000af9b	pushq	%rbx
000000000000af9c	subq	$0x9f8, %rsp
000000000000afa3	movl	$0x2, %eax
000000000000afa8	movl	%eax, -0xa00(%rbp)
000000000000afae	movl	%esi, -0x9fc(%rbp)
000000000000afb4	movl	$0x130000, %esi
000000000000afb9	movl	%esi, -0x9f4(%rbp)
000000000000afbf	movl	%edx, -0x9f0(%rbp)
000000000000afc5	movl	%esi, -0x9e8(%rbp)
000000000000afcb	leaq	_NDR_record(%rip), %rdx
000000000000afd2	movq	(%rdx), %rdx
000000000000afd5	movq	%rdx, -0x9e4(%rbp)
000000000000afdc	movl	%ecx, -0x9dc(%rbp)
000000000000afe2	movl	$0xfffffecd, %r15d
000000000000afe8	cmpl	%eax, %r9d
000000000000afeb	ja	0xb1c1
000000000000aff1	movl	%r9d, %ebx
000000000000aff4	movl	%edi, -0x2c(%rbp)
000000000000aff7	movl	0x20(%rbp), %r14d
000000000000affb	leaq	-0x9d4(%rbp), %r13
000000000000b002	leal	(,%rbx,4), %r12d
000000000000b00a	movq	%r13, %rdi
000000000000b00d	movq	%r8, %rsi
000000000000b010	movq	%r12, %rdx
000000000000b013	callq	_memcpy
000000000000b018	movl	%ebx, -0x4(%r13)
000000000000b01c	movq	0x10(%rbp), %r13
000000000000b020	leaq	-0xa18(%rbp), %rax
000000000000b027	movl	(%r13), %ecx
000000000000b02b	movl	%ecx, 0x44(%r12,%rax)
000000000000b030	cmpl	$0x266, %r14d
000000000000b037	ja	0xb1c1
000000000000b03d	movq	%r14, %rcx
000000000000b040	movq	0x18(%rbp), %rsi
000000000000b044	leaq	-0x8(%r12,%rax), %rbx
000000000000b049	leaq	0x54(%rbx), %rdi
000000000000b04d	leal	(,%rcx,4), %edx
000000000000b054	callq	_memcpy
000000000000b059	movl	%r14d, 0x50(%rbx)
000000000000b05d	leal	0x4c(%r12,%r14,4), %r15d
000000000000b062	leaq	-0xa18(%rbp), %rbx
000000000000b069	movl	$0x80001513, (%rbx)
000000000000b06f	movl	-0x2c(%rbp), %eax
000000000000b072	movl	%eax, 0x8(%rbx)
000000000000b075	callq	_mig_get_reply_port
000000000000b07a	movl	%eax, 0xc(%rbx)
000000000000b07d	movabsq	$0x96300000000, %rcx
000000000000b087	movq	%rcx, 0x10(%rbx)
000000000000b08b	movl	$0x0, (%rsp)
000000000000b092	movl	$0x3, %esi
000000000000b097	movl	$0x9cc, %ecx
000000000000b09c	xorl	%r9d, %r9d
000000000000b09f	movq	%rbx, %rdi
000000000000b0a2	movl	%r15d, %edx
000000000000b0a5	movl	%eax, %r8d
000000000000b0a8	callq	_mach_msg
000000000000b0ad	movl	%eax, %r15d
000000000000b0b0	leal	-0x10000002(%r15), %eax
000000000000b0b7	cmpl	$0xe, %eax
000000000000b0ba	ja	0xb0d6
000000000000b0bc	movl	$0x4003, %ecx
000000000000b0c1	btl	%eax, %ecx
000000000000b0c4	jae	0xb0d6
000000000000b0c6	movl	-0xa0c(%rbp), %edi
000000000000b0cc	callq	_mig_put_reply_port
000000000000b0d1	jmp	0xb1c1
000000000000b0d6	testl	%r15d, %r15d
000000000000b0d9	jne	0xb131
000000000000b0db	movl	-0xa04(%rbp), %eax
000000000000b0e1	cmpl	$0x47, %eax
000000000000b0e4	je	0xb141
000000000000b0e6	cmpl	$0x9c7, %eax
000000000000b0eb	jne	0xb149
000000000000b0ed	cmpl	$0x0, -0xa18(%rbp)
000000000000b0f4	js	0xb1af
000000000000b0fa	movl	-0xa14(%rbp), %eax
000000000000b100	leal	-0x2c(%rax), %ecx
000000000000b103	cmpl	$0x999, %ecx
000000000000b109	jb	0xb151
000000000000b10b	movl	$0xfffffed4, %r15d
000000000000b111	cmpl	$0x24, %eax
000000000000b114	jne	0xb1b5
000000000000b11a	movl	-0x9f8(%rbp), %eax
000000000000b120	testl	%eax, %eax
000000000000b122	movl	$0xfffffed4, %r15d
000000000000b128	cmovnel	%eax, %r15d
000000000000b12c	jmp	0xb1b5
000000000000b131	movl	-0xa0c(%rbp), %edi
000000000000b137	callq	_mig_dealloc_reply_port
000000000000b13c	jmp	0xb1c1
000000000000b141	movl	$0xfffffecc, %r15d
000000000000b147	jmp	0xb1b5
000000000000b149	movl	$0xfffffed3, %r15d
000000000000b14f	jmp	0xb1b5
000000000000b151	movl	-0x9f8(%rbp), %r15d
000000000000b158	testl	%r15d, %r15d
000000000000b15b	jne	0xb1b5
000000000000b15d	movl	-0x9f0(%rbp), %ebx
000000000000b163	cmpl	$0x266, %ebx
000000000000b169	ja	0xb1af
000000000000b16b	shrl	$0x2, %ecx
000000000000b16e	cmpl	%ebx, %ecx
000000000000b170	jb	0xb1af
000000000000b172	leal	0x2c(,%rbx,4), %ecx
000000000000b179	movl	$0xfffffed4, %r15d
000000000000b17f	cmpl	%ecx, %eax
000000000000b181	jne	0xb1b5
000000000000b183	movq	0x30(%rbp), %r14
000000000000b187	movq	0x28(%rbp), %rdi
000000000000b18b	leal	(,%rbx,4), %eax
000000000000b192	leaq	-0x9ec(%rbp), %rsi
000000000000b199	movl	-0x8(%rsi), %ecx
000000000000b19c	movl	%ecx, (%r13)
000000000000b1a0	movl	%eax, %edx
000000000000b1a2	callq	_memcpy
000000000000b1a7	movl	%ebx, (%r14)
000000000000b1aa	xorl	%r15d, %r15d
000000000000b1ad	jmp	0xb1c1
000000000000b1af	movl	$0xfffffed4, %r15d
000000000000b1b5	leaq	-0xa18(%rbp), %rdi
000000000000b1bc	callq	_mach_msg_destroy
000000000000b1c1	movl	%r15d, %eax
000000000000b1c4	addq	$0x9f8, %rsp
000000000000b1cb	popq	%rbx
000000000000b1cc	popq	%r12
000000000000b1ce	popq	%r13
000000000000b1d0	popq	%r14
000000000000b1d2	popq	%r15
000000000000b1d4	popq	%rbp
000000000000b1d5	retq
_exc_server_routine:
000000000000b1d6	movslq	0x14(%rdi), %rax
000000000000b1da	addq	$-0x961, %rax
000000000000b1e0	cmpl	$0x2, %eax
000000000000b1e3	jbe	0xb1e8
000000000000b1e5	xorl	%eax, %eax
000000000000b1e7	retq
000000000000b1e8	leaq	(%rax,%rax,4), %rax
000000000000b1ec	leaq	_internal_catch_exc_subsystem(%rip), %rcx
000000000000b1f3	movq	0x28(%rcx,%rax,8), %rax
000000000000b1f8	retq
__Xexception_raise:
000000000000b1f9	pushq	%rbp
000000000000b1fa	movq	%rsp, %rbp
000000000000b1fd	pushq	%r14
000000000000b1ff	pushq	%rbx
000000000000b200	movq	%rsi, %r14
000000000000b203	cmpl	$0x0, (%rdi)
000000000000b206	js	0xb224
000000000000b208	movl	$0xfffffed0, %eax
000000000000b20d	movl	%eax, 0x20(%r14)
000000000000b211	leaq	_NDR_record(%rip), %rax
000000000000b218	movq	(%rax), %rax
000000000000b21b	movq	%rax, 0x18(%r14)
000000000000b21f	popq	%rbx
000000000000b220	popq	%r14
000000000000b222	popq	%rbp
000000000000b223	retq
000000000000b224	movq	%rdi, %rbx
000000000000b227	movl	0x4(%rdi), %ecx
000000000000b22a	leal	-0x44(%rcx), %edx
000000000000b22d	cmpl	$0x8, %edx
000000000000b230	ja	0xb208
000000000000b232	cmpl	$0x2, 0x18(%rbx)
000000000000b236	jne	0xb208
000000000000b238	movl	$0xffff0000, %esi
000000000000b23d	movl	0x24(%rbx), %edi
000000000000b240	andl	%esi, %edi
000000000000b242	movl	$0xfffffed4, %eax
000000000000b247	cmpl	$0x110000, %edi
000000000000b24d	jne	0xb20d
000000000000b24f	andl	0x30(%rbx), %esi
000000000000b252	cmpl	$0x110000, %esi
000000000000b258	jne	0xb20d
000000000000b25a	movl	0x40(%rbx), %r9d
000000000000b25e	cmpl	$0x2, %r9d
000000000000b262	ja	0xb208
000000000000b264	shrl	$0x2, %edx
000000000000b267	cmpl	%r9d, %edx
000000000000b26a	jb	0xb208
000000000000b26c	leal	0x44(,%r9,4), %edx
000000000000b274	movl	$0xfffffed0, %eax
000000000000b279	cmpl	%edx, %ecx
000000000000b27b	jne	0xb20d
000000000000b27d	movl	0xc(%rbx), %edi
000000000000b280	movl	0x1c(%rbx), %esi
000000000000b283	movl	0x28(%rbx), %edx
000000000000b286	movl	0x3c(%rbx), %ecx
000000000000b289	addq	$0x44, %rbx
000000000000b28d	movq	%rbx, %r8
000000000000b290	callq	_internal_catch_exception_raise
000000000000b295	jmp	0xb20d
__Xexception_raise_state:
000000000000b29a	pushq	%rbp
000000000000b29b	movq	%rsp, %rbp
000000000000b29e	pushq	%r15
000000000000b2a0	pushq	%r14
000000000000b2a2	pushq	%rbx
000000000000b2a3	pushq	%rax
000000000000b2a4	movq	%rsi, %rbx
000000000000b2a7	movl	0x4(%rdi), %edx
000000000000b2aa	leal	-0x30(%rdx), %esi
000000000000b2ad	cmpl	$0x9a0, %esi
000000000000b2b3	ja	0xb2c6
000000000000b2b5	movq	%rdi, %rax
000000000000b2b8	movl	(%rdi), %ecx
000000000000b2ba	testl	%ecx, %ecx
000000000000b2bc	js	0xb2c6
000000000000b2be	movl	0x24(%rax), %ecx
000000000000b2c1	cmpl	$0x2, %ecx
000000000000b2c4	jbe	0xb2e6
000000000000b2c6	movl	$0xfffffed0, 0x20(%rbx)
000000000000b2cd	leaq	_NDR_record(%rip), %rax
000000000000b2d4	movq	(%rax), %rax
000000000000b2d7	movq	%rax, 0x18(%rbx)
000000000000b2db	addq	$0x8, %rsp
000000000000b2df	popq	%rbx
000000000000b2e0	popq	%r14
000000000000b2e2	popq	%r15
000000000000b2e4	popq	%rbp
000000000000b2e5	retq
000000000000b2e6	shrl	$0x2, %esi
000000000000b2e9	cmpl	%ecx, %esi
000000000000b2eb	jb	0xb2c6
000000000000b2ed	leal	(,%rcx,4), %esi
000000000000b2f4	leal	0x30(%rsi), %edi
000000000000b2f7	cmpl	%edi, %edx
000000000000b2f9	jb	0xb2c6
000000000000b2fb	movl	%esi, %r8d
000000000000b2fe	movl	0x2c(%rax,%r8), %edi
000000000000b303	cmpl	$0x266, %edi
000000000000b309	ja	0xb2c6
000000000000b30b	subl	%esi, %edx
000000000000b30d	leal	-0x30(%rdx), %esi
000000000000b310	shrl	$0x2, %esi
000000000000b313	cmpl	%edi, %esi
000000000000b315	jb	0xb2c6
000000000000b317	leal	0x30(,%rdi,4), %esi
000000000000b31e	cmpl	%esi, %edx
000000000000b320	jne	0xb2c6
000000000000b322	leaq	-0x8(%rax,%r8), %rdx
000000000000b327	leaq	0x28(%rbx), %r10
000000000000b32b	movl	$0x266, 0x28(%rbx)
000000000000b332	movl	0xc(%rax), %edi
000000000000b335	movl	0x20(%rax), %esi
000000000000b338	addq	$0x28, %rax
000000000000b33c	movl	0x34(%rdx), %r11d
000000000000b340	leaq	0x30(%rdx), %r14
000000000000b344	leaq	0x38(%rdx), %r9
000000000000b348	leaq	0x2c(%rbx), %r15
000000000000b34c	subq	$0x8, %rsp
000000000000b350	movq	%rax, %rdx
000000000000b353	movq	%r14, %r8
000000000000b356	pushq	%r10
000000000000b358	pushq	%r15
000000000000b35a	pushq	%r11
000000000000b35c	callq	_internal_catch_exception_raise_state
000000000000b361	addq	$0x20, %rsp
000000000000b365	movl	%eax, 0x20(%rbx)
000000000000b368	testl	%eax, %eax
000000000000b36a	je	0xb374
000000000000b36c	movl	%eax, 0x20(%rbx)
000000000000b36f	jmp	0xb2cd
000000000000b374	leaq	_NDR_record(%rip), %rax
000000000000b37b	movq	(%rax), %rax
000000000000b37e	movq	%rax, 0x18(%rbx)
000000000000b382	movl	(%r14), %eax
000000000000b385	movl	%eax, 0x24(%rbx)
000000000000b388	movl	0x28(%rbx), %eax
000000000000b38b	leal	0x2c(,%rax,4), %eax
000000000000b392	movl	%eax, 0x4(%rbx)
000000000000b395	jmp	0xb2db
__Xexception_raise_state_identity:
000000000000b39a	pushq	%rbp
000000000000b39b	movq	%rsp, %rbp
000000000000b39e	pushq	%r15
000000000000b3a0	pushq	%r14
000000000000b3a2	pushq	%r12
000000000000b3a4	pushq	%rbx
000000000000b3a5	movq	%rsi, %rbx
000000000000b3a8	cmpl	$0x0, (%rdi)
000000000000b3ab	js	0xb3cc
000000000000b3ad	movl	$0xfffffed0, %edx
000000000000b3b2	movl	%edx, 0x20(%rbx)
000000000000b3b5	leaq	_NDR_record(%rip), %rax
000000000000b3bc	movq	(%rax), %rax
000000000000b3bf	movq	%rax, 0x18(%rbx)
000000000000b3c3	popq	%rbx
000000000000b3c4	popq	%r12
000000000000b3c6	popq	%r14
000000000000b3c8	popq	%r15
000000000000b3ca	popq	%rbp
000000000000b3cb	retq
000000000000b3cc	movq	%rdi, %rax
000000000000b3cf	movl	0x4(%rdi), %r8d
000000000000b3d3	leal	-0x4c(%r8), %esi
000000000000b3d7	cmpl	$0x9a0, %esi
000000000000b3dd	ja	0xb3ad
000000000000b3df	cmpl	$0x2, 0x18(%rax)
000000000000b3e3	jne	0xb3ad
000000000000b3e5	movl	$0xffff0000, %edi
000000000000b3ea	movl	0x24(%rax), %ecx
000000000000b3ed	andl	%edi, %ecx
000000000000b3ef	movl	$0xfffffed4, %edx
000000000000b3f4	cmpl	$0x110000, %ecx
000000000000b3fa	jne	0xb3b2
000000000000b3fc	andl	0x30(%rax), %edi
000000000000b3ff	cmpl	$0x110000, %edi
000000000000b405	jne	0xb3b2
000000000000b407	movl	0x40(%rax), %r9d
000000000000b40b	cmpl	$0x2, %r9d
000000000000b40f	ja	0xb3ad
000000000000b411	shrl	$0x2, %esi
000000000000b414	cmpl	%r9d, %esi
000000000000b417	jb	0xb3ad
000000000000b419	leal	(,%r9,4), %edi
000000000000b421	leal	0x4c(%rdi), %ecx
000000000000b424	cmpl	%ecx, %r8d
000000000000b427	jb	0xb3ad
000000000000b429	movl	%edi, %esi
000000000000b42b	movl	0x48(%rax,%rsi), %edx
000000000000b42f	cmpl	$0x266, %edx
000000000000b435	ja	0xb3ad
000000000000b43b	subl	%edi, %r8d
000000000000b43e	leal	-0x4c(%r8), %ecx
000000000000b442	shrl	$0x2, %ecx
000000000000b445	cmpl	%edx, %ecx
000000000000b447	jb	0xb3ad
000000000000b44d	leal	0x4c(,%rdx,4), %ecx
000000000000b454	movl	$0xfffffed0, %edx
000000000000b459	cmpl	%ecx, %r8d
000000000000b45c	jne	0xb3b2
000000000000b462	leaq	-0x8(%rax,%rsi), %r8
000000000000b467	leaq	0x28(%rbx), %r10
000000000000b46b	movl	$0x266, 0x28(%rbx)
000000000000b472	movl	0xc(%rax), %edi
000000000000b475	movl	0x1c(%rax), %esi
000000000000b478	movl	0x28(%rax), %edx
000000000000b47b	movl	0x3c(%rax), %ecx
000000000000b47e	addq	$0x44, %rax
000000000000b482	movl	0x50(%r8), %r11d
000000000000b486	leaq	0x4c(%r8), %r14
000000000000b48a	leaq	0x54(%r8), %r15
000000000000b48e	leaq	0x2c(%rbx), %r12
000000000000b492	subq	$0x8, %rsp
000000000000b496	movq	%rax, %r8
000000000000b499	pushq	%r10
000000000000b49b	pushq	%r12
000000000000b49d	pushq	%r11
000000000000b49f	pushq	%r15
000000000000b4a1	pushq	%r14
000000000000b4a3	callq	_internal_catch_exception_raise_state_identity
000000000000b4a8	addq	$0x30, %rsp
000000000000b4ac	movl	%eax, 0x20(%rbx)
000000000000b4af	testl	%eax, %eax
000000000000b4b1	je	0xb4bb
000000000000b4b3	movl	%eax, 0x20(%rbx)
000000000000b4b6	jmp	0xb3b5
000000000000b4bb	leaq	_NDR_record(%rip), %rax
000000000000b4c2	movq	(%rax), %rax
000000000000b4c5	movq	%rax, 0x18(%rbx)
000000000000b4c9	movl	(%r14), %eax
000000000000b4cc	movl	%eax, 0x24(%rbx)
000000000000b4cf	movl	0x28(%rbx), %eax
000000000000b4d2	leal	0x2c(,%rax,4), %eax
000000000000b4d9	movl	%eax, 0x4(%rbx)
000000000000b4dc	jmp	0xb3c3
_exc_server:
000000000000b4e1	movl	(%rdi), %eax
000000000000b4e3	andl	$0x1f, %eax
000000000000b4e6	movl	%eax, (%rsi)
000000000000b4e8	movl	0x8(%rdi), %eax
000000000000b4eb	movl	%eax, 0x8(%rsi)
000000000000b4ee	movl	$0x24, 0x4(%rsi)
000000000000b4f5	xorl	%eax, %eax
000000000000b4f7	movl	%eax, 0xc(%rsi)
000000000000b4fa	movl	0x14(%rdi), %ecx
000000000000b4fd	addl	$0x64, %ecx
000000000000b500	movl	%ecx, 0x14(%rsi)
000000000000b503	movl	%eax, 0x10(%rsi)
000000000000b506	movl	$0xfffff69f, %ecx
000000000000b50b	addl	0x14(%rdi), %ecx
000000000000b50e	cmpl	$0x2, %ecx
000000000000b511	ja	0xb538
000000000000b513	movslq	%ecx, %rcx
000000000000b516	leaq	(%rcx,%rcx,4), %rcx
000000000000b51a	leaq	_internal_catch_exc_subsystem(%rip), %rdx
000000000000b521	movq	0x28(%rdx,%rcx,8), %rcx
000000000000b526	testq	%rcx, %rcx
000000000000b529	je	0xb538
000000000000b52b	pushq	%rbp
000000000000b52c	movq	%rsp, %rbp
000000000000b52f	callq	*%rcx
000000000000b531	movl	$0x1, %eax
000000000000b536	popq	%rbp
000000000000b537	retq
000000000000b538	leaq	_NDR_record(%rip), %rcx
000000000000b53f	movq	(%rcx), %rcx
000000000000b542	movq	%rcx, 0x18(%rsi)
000000000000b546	movl	$0xfffffed1, 0x20(%rsi)
000000000000b54d	retq
_host_get_boot_info:
000000000000b54e	pushq	%rbp
000000000000b54f	movq	%rsp, %rbp
000000000000b552	pushq	%r14
000000000000b554	pushq	%rbx
000000000000b555	subq	$0x1040, %rsp
000000000000b55c	movq	%rsi, %r14
000000000000b55f	leaq	-0x1048(%rbp), %rbx
000000000000b566	movl	$0x1513, (%rbx)
000000000000b56c	movl	%edi, 0x8(%rbx)
000000000000b56f	callq	_mig_get_reply_port
000000000000b574	movl	%eax, 0xc(%rbx)
000000000000b577	movabsq	$0x19000000000, %rcx
000000000000b581	movq	%rcx, 0x10(%rbx)
000000000000b585	movl	$0x0, (%rsp)
000000000000b58c	movl	$0x3, %esi
000000000000b591	movl	$0x18, %edx
000000000000b596	movl	$0x1034, %ecx
000000000000b59b	xorl	%r9d, %r9d
000000000000b59e	movq	%rbx, %rdi
000000000000b5a1	movl	%eax, %r8d
000000000000b5a4	callq	_mach_msg
000000000000b5a9	movl	%eax, %ebx
000000000000b5ab	leal	-0x10000002(%rbx), %eax
000000000000b5b1	cmpl	$0xe, %eax
000000000000b5b4	ja	0xb5d0
000000000000b5b6	movl	$0x4003, %ecx
000000000000b5bb	btl	%eax, %ecx
000000000000b5be	jae	0xb5d0
000000000000b5c0	movl	-0x103c(%rbp), %edi
000000000000b5c6	callq	_mig_put_reply_port
000000000000b5cb	jmp	0xb68f
000000000000b5d0	testl	%ebx, %ebx
000000000000b5d2	jne	0xb620
000000000000b5d4	movl	-0x1034(%rbp), %eax
000000000000b5da	cmpl	$0x47, %eax
000000000000b5dd	je	0xb62d
000000000000b5df	cmpl	$0x1f4, %eax
000000000000b5e4	jne	0xb634
000000000000b5e6	cmpl	$0x0, -0x1048(%rbp)
000000000000b5ed	js	0xb67e
000000000000b5f3	movl	-0x1044(%rbp), %eax
000000000000b5f9	leal	-0x2c(%rax), %ecx
000000000000b5fc	cmpl	$0x1001, %ecx
000000000000b602	jb	0xb63b
000000000000b604	movl	$0xfffffed4, %ebx
000000000000b609	cmpl	$0x24, %eax
000000000000b60c	jne	0xb683
000000000000b60e	movl	-0x1028(%rbp), %eax
000000000000b614	testl	%eax, %eax
000000000000b616	movl	$0xfffffed4, %ebx
000000000000b61b	cmovnel	%eax, %ebx
000000000000b61e	jmp	0xb683
000000000000b620	movl	-0x103c(%rbp), %edi
000000000000b626	callq	_mig_dealloc_reply_port
000000000000b62b	jmp	0xb68f
000000000000b62d	movl	$0xfffffecc, %ebx
000000000000b632	jmp	0xb683
000000000000b634	movl	$0xfffffed3, %ebx
000000000000b639	jmp	0xb683
000000000000b63b	movl	-0x1028(%rbp), %ebx
000000000000b641	testl	%ebx, %ebx
000000000000b643	jne	0xb683
000000000000b645	movl	-0x1020(%rbp), %edx
000000000000b64b	cmpl	$0x1000, %edx
000000000000b651	ja	0xb67e
000000000000b653	cmpl	%edx, %ecx
000000000000b655	jb	0xb67e
000000000000b657	addl	$0x2f, %edx
000000000000b65a	andl	$-0x4, %edx
000000000000b65d	movl	$0xfffffed4, %ebx
000000000000b662	cmpl	%edx, %eax
000000000000b664	jne	0xb683
000000000000b666	leaq	-0x101c(%rbp), %rsi
000000000000b66d	movl	$0x1000, %edx
000000000000b672	movq	%r14, %rdi
000000000000b675	callq	_mig_strncpy
000000000000b67a	xorl	%ebx, %ebx
000000000000b67c	jmp	0xb68f
000000000000b67e	movl	$0xfffffed4, %ebx
000000000000b683	leaq	-0x1048(%rbp), %rdi
000000000000b68a	callq	_mach_msg_destroy
000000000000b68f	movl	%ebx, %eax
000000000000b691	addq	$0x1040, %rsp
000000000000b698	popq	%rbx
000000000000b699	popq	%r14
000000000000b69b	popq	%rbp
000000000000b69c	retq
_host_reboot:
000000000000b69d	pushq	%rbp
000000000000b69e	movq	%rsp, %rbp
000000000000b6a1	pushq	%rbx
000000000000b6a2	subq	$0x38, %rsp
000000000000b6a6	leaq	_NDR_record(%rip), %rax
000000000000b6ad	movq	(%rax), %rax
000000000000b6b0	leaq	-0x38(%rbp), %rbx
000000000000b6b4	movq	%rax, 0x18(%rbx)
000000000000b6b8	movl	%esi, 0x20(%rbx)
000000000000b6bb	movl	$0x1513, (%rbx)
000000000000b6c1	movl	%edi, 0x8(%rbx)
000000000000b6c4	callq	_mig_get_reply_port
000000000000b6c9	movl	%eax, 0xc(%rbx)
000000000000b6cc	movabsq	$0x19100000000, %rcx
000000000000b6d6	movq	%rcx, 0x10(%rbx)
000000000000b6da	movl	$0x0, (%rsp)
000000000000b6e1	movl	$0x3, %esi
000000000000b6e6	movl	$0x24, %edx
000000000000b6eb	movl	$0x2c, %ecx
000000000000b6f0	xorl	%r9d, %r9d
000000000000b6f3	movq	%rbx, %rdi
000000000000b6f6	movl	%eax, %r8d
000000000000b6f9	callq	_mach_msg
000000000000b6fe	movl	%eax, %ebx
000000000000b700	leal	-0x10000002(%rbx), %eax
000000000000b706	cmpl	$0xe, %eax
000000000000b709	ja	0xb71f
000000000000b70b	movl	$0x4003, %ecx
000000000000b710	btl	%eax, %ecx
000000000000b713	jae	0xb71f
000000000000b715	movl	-0x2c(%rbp), %edi
000000000000b718	callq	_mig_put_reply_port
000000000000b71d	jmp	0xb76d
000000000000b71f	testl	%ebx, %ebx
000000000000b721	jne	0xb74e
000000000000b723	movl	-0x24(%rbp), %eax
000000000000b726	cmpl	$0x47, %eax
000000000000b729	je	0xb758
000000000000b72b	cmpl	$0x1f5, %eax
000000000000b730	jne	0xb75f
000000000000b732	movl	$0xfffffed4, %ebx
000000000000b737	cmpl	$0x0, -0x38(%rbp)
000000000000b73b	js	0xb764
000000000000b73d	cmpl	$0x24, -0x34(%rbp)
000000000000b741	jne	0xb764
000000000000b743	movl	-0x18(%rbp), %ebx
000000000000b746	testl	%ebx, %ebx
000000000000b748	jne	0xb764
000000000000b74a	xorl	%ebx, %ebx
000000000000b74c	jmp	0xb76d
000000000000b74e	movl	-0x2c(%rbp), %edi
000000000000b751	callq	_mig_dealloc_reply_port
000000000000b756	jmp	0xb76d
000000000000b758	movl	$0xfffffecc, %ebx
000000000000b75d	jmp	0xb764
000000000000b75f	movl	$0xfffffed3, %ebx
000000000000b764	leaq	-0x38(%rbp), %rdi
000000000000b768	callq	_mach_msg_destroy
000000000000b76d	movl	%ebx, %eax
000000000000b76f	addq	$0x38, %rsp
000000000000b773	popq	%rbx
000000000000b774	popq	%rbp
000000000000b775	retq
_host_priv_statistics:
000000000000b776	pushq	%rbp
000000000000b777	movq	%rsp, %rbp
000000000000b77a	pushq	%r15
000000000000b77c	pushq	%r14
000000000000b77e	pushq	%r12
000000000000b780	pushq	%rbx
000000000000b781	subq	$0x150, %rsp
000000000000b788	movq	%rcx, %r15
000000000000b78b	leaq	_NDR_record(%rip), %rax
000000000000b792	movq	(%rax), %rax
000000000000b795	leaq	-0x160(%rbp), %rbx
000000000000b79c	movq	%rax, 0x18(%rbx)
000000000000b7a0	movl	%esi, 0x20(%rbx)
000000000000b7a3	movl	(%rcx), %eax
000000000000b7a5	movl	$0x44, %ecx
000000000000b7aa	cmpl	%ecx, %eax
000000000000b7ac	cmovbl	%eax, %ecx
000000000000b7af	movq	%rdx, %r14
000000000000b7b2	movl	%ecx, 0x24(%rbx)
000000000000b7b5	movl	$0x1513, (%rbx)
000000000000b7bb	movl	%edi, 0x8(%rbx)
000000000000b7be	callq	_mig_get_reply_port
000000000000b7c3	movl	%eax, 0xc(%rbx)
000000000000b7c6	movabsq	$0x19200000000, %rcx
000000000000b7d0	movq	%rcx, 0x10(%rbx)
000000000000b7d4	movl	$0x0, (%rsp)
000000000000b7db	movl	$0x3, %esi
000000000000b7e0	movl	$0x28, %edx
000000000000b7e5	movl	$0x140, %ecx
000000000000b7ea	xorl	%r9d, %r9d
000000000000b7ed	movq	%rbx, %rdi
000000000000b7f0	movl	%eax, %r8d
000000000000b7f3	callq	_mach_msg
000000000000b7f8	movl	%eax, %ebx
000000000000b7fa	leal	-0x10000002(%rbx), %eax
000000000000b800	cmpl	$0xe, %eax
000000000000b803	ja	0xb81f
000000000000b805	movl	$0x4003, %ecx
000000000000b80a	btl	%eax, %ecx
000000000000b80d	jae	0xb81f
000000000000b80f	movl	-0x154(%rbp), %edi
000000000000b815	callq	_mig_put_reply_port
000000000000b81a	jmp	0xb8f3
000000000000b81f	testl	%ebx, %ebx
000000000000b821	jne	0xb873
000000000000b823	movl	-0x14c(%rbp), %eax
000000000000b829	cmpl	$0x47, %eax
000000000000b82c	je	0xb880
000000000000b82e	cmpl	$0x1f6, %eax
000000000000b833	jne	0xb887
000000000000b835	cmpl	$0x0, -0x160(%rbp)
000000000000b83c	js	0xb8e2
000000000000b842	movl	-0x15c(%rbp), %eax
000000000000b848	leal	-0x28(%rax), %ecx
000000000000b84b	cmpl	$0x111, %ecx
000000000000b851	jb	0xb88e
000000000000b853	movl	$0xfffffed4, %ebx
000000000000b858	cmpl	$0x24, %eax
000000000000b85b	jne	0xb8e7
000000000000b861	movl	-0x140(%rbp), %eax
000000000000b867	testl	%eax, %eax
000000000000b869	movl	$0xfffffed4, %ebx
000000000000b86e	cmovnel	%eax, %ebx
000000000000b871	jmp	0xb8e7
000000000000b873	movl	-0x154(%rbp), %edi
000000000000b879	callq	_mig_dealloc_reply_port
000000000000b87e	jmp	0xb8f3
000000000000b880	movl	$0xfffffecc, %ebx
000000000000b885	jmp	0xb8e7
000000000000b887	movl	$0xfffffed3, %ebx
000000000000b88c	jmp	0xb8e7
000000000000b88e	movl	-0x140(%rbp), %ebx
000000000000b894	testl	%ebx, %ebx
000000000000b896	jne	0xb8e7
000000000000b898	movl	-0x13c(%rbp), %r12d
000000000000b89f	cmpl	$0x44, %r12d
000000000000b8a3	ja	0xb8e2
000000000000b8a5	shrl	$0x2, %ecx
000000000000b8a8	cmpl	%r12d, %ecx
000000000000b8ab	jb	0xb8e2
000000000000b8ad	leal	0x28(,%r12,4), %ecx
000000000000b8b5	movl	$0xfffffed4, %ebx
000000000000b8ba	cmpl	%ecx, %eax
000000000000b8bc	jne	0xb8e7
000000000000b8be	movl	(%r15), %edx
000000000000b8c1	leaq	-0x138(%rbp), %rsi
000000000000b8c8	cmpl	%edx, %r12d
000000000000b8cb	jbe	0xb905
000000000000b8cd	shll	$0x2, %edx
000000000000b8d0	movq	%r14, %rdi
000000000000b8d3	callq	_memcpy
000000000000b8d8	movl	%r12d, (%r15)
000000000000b8db	movl	$0xfffffecd, %ebx
000000000000b8e0	jmp	0xb8f3
000000000000b8e2	movl	$0xfffffed4, %ebx
000000000000b8e7	leaq	-0x160(%rbp), %rdi
000000000000b8ee	callq	_mach_msg_destroy
000000000000b8f3	movl	%ebx, %eax
000000000000b8f5	addq	$0x150, %rsp
000000000000b8fc	popq	%rbx
000000000000b8fd	popq	%r12
000000000000b8ff	popq	%r14
000000000000b901	popq	%r15
000000000000b903	popq	%rbp
000000000000b904	retq
000000000000b905	leal	(,%r12,4), %eax
000000000000b90d	movl	%eax, %edx
000000000000b90f	movq	%r14, %rdi
000000000000b912	callq	_memcpy
000000000000b917	movl	%r12d, (%r15)
000000000000b91a	xorl	%ebx, %ebx
000000000000b91c	jmp	0xb8f3
_host_default_memory_manager:
000000000000b91e	pushq	%rbp
000000000000b91f	movq	%rsp, %rbp
000000000000b922	pushq	%r14
000000000000b924	pushq	%rbx
000000000000b925	subq	$0x40, %rsp
000000000000b929	movq	%rsi, %r14
000000000000b92c	leaq	-0x48(%rbp), %rbx
000000000000b930	movl	$0x1, 0x18(%rbx)
000000000000b937	movl	(%rsi), %eax
000000000000b939	movl	%eax, 0x1c(%rbx)
000000000000b93c	movl	$0x140000, 0x24(%rbx)
000000000000b943	leaq	_NDR_record(%rip), %rax
000000000000b94a	movq	(%rax), %rax
000000000000b94d	movq	%rax, 0x28(%rbx)
000000000000b951	movl	%edx, 0x30(%rbx)
000000000000b954	movl	$0x80001513, (%rbx)
000000000000b95a	movl	%edi, 0x8(%rbx)
000000000000b95d	callq	_mig_get_reply_port
000000000000b962	movl	%eax, 0xc(%rbx)
000000000000b965	movabsq	$0x19300000000, %rcx
000000000000b96f	movq	%rcx, 0x10(%rbx)
000000000000b973	movl	$0x0, (%rsp)
000000000000b97a	movl	$0x3, %esi
000000000000b97f	movl	$0x34, %edx
000000000000b984	movl	$0x30, %ecx
000000000000b989	xorl	%r9d, %r9d
000000000000b98c	movq	%rbx, %rdi
000000000000b98f	movl	%eax, %r8d
000000000000b992	callq	_mach_msg
000000000000b997	movl	%eax, %ebx
000000000000b999	leal	-0x10000002(%rbx), %eax
000000000000b99f	cmpl	$0xe, %eax
000000000000b9a2	ja	0xb9b8
000000000000b9a4	movl	$0x4003, %ecx
000000000000b9a9	btl	%eax, %ecx
000000000000b9ac	jae	0xb9b8
000000000000b9ae	movl	-0x3c(%rbp), %edi
000000000000b9b1	callq	_mig_put_reply_port
000000000000b9b6	jmp	0xba0c
000000000000b9b8	testl	%ebx, %ebx
000000000000b9ba	jne	0xb9ed
000000000000b9bc	movl	-0x34(%rbp), %eax
000000000000b9bf	cmpl	$0x47, %eax
000000000000b9c2	je	0xb9f7
000000000000b9c4	cmpl	$0x1f7, %eax
000000000000b9c9	jne	0xb9fe
000000000000b9cb	cmpl	$0x0, -0x48(%rbp)
000000000000b9cf	movl	-0x44(%rbp), %eax
000000000000b9d2	movl	$0xfffffed4, %ebx
000000000000b9d7	js	0xba17
000000000000b9d9	cmpl	$0x24, %eax
000000000000b9dc	jne	0xba03
000000000000b9de	movl	-0x28(%rbp), %eax
000000000000b9e1	testl	%eax, %eax
000000000000b9e3	movl	$0xfffffed4, %ebx
000000000000b9e8	cmovnel	%eax, %ebx
000000000000b9eb	jmp	0xba03
000000000000b9ed	movl	-0x3c(%rbp), %edi
000000000000b9f0	callq	_mig_dealloc_reply_port
000000000000b9f5	jmp	0xba0c
000000000000b9f7	movl	$0xfffffecc, %ebx
000000000000b9fc	jmp	0xba03
000000000000b9fe	movl	$0xfffffed3, %ebx
000000000000ba03	leaq	-0x48(%rbp), %rdi
000000000000ba07	callq	_mach_msg_destroy
000000000000ba0c	movl	%ebx, %eax
000000000000ba0e	addq	$0x40, %rsp
000000000000ba12	popq	%rbx
000000000000ba13	popq	%r14
000000000000ba15	popq	%rbp
000000000000ba16	retq
000000000000ba17	cmpl	$0x28, %eax
000000000000ba1a	jne	0xba03
000000000000ba1c	cmpl	$0x1, -0x30(%rbp)
000000000000ba20	jne	0xba03
000000000000ba22	movl	$0xffff0000, %eax
000000000000ba27	andl	-0x24(%rbp), %eax
000000000000ba2a	cmpl	$0x110000, %eax
000000000000ba2f	jne	0xba03
000000000000ba31	movl	-0x2c(%rbp), %eax
000000000000ba34	movl	%eax, (%r14)
000000000000ba37	xorl	%ebx, %ebx
000000000000ba39	jmp	0xba0c
_vm_wire:
000000000000ba3b	pushq	%rbp
000000000000ba3c	movq	%rsp, %rbp
000000000000ba3f	pushq	%rbx
000000000000ba40	subq	$0x58, %rsp
000000000000ba44	leaq	-0x50(%rbp), %rbx
000000000000ba48	movl	$0x1, 0x18(%rbx)
000000000000ba4f	movl	%esi, 0x1c(%rbx)
000000000000ba52	movl	$0x130000, 0x24(%rbx)
000000000000ba59	leaq	_NDR_record(%rip), %rax
000000000000ba60	movq	(%rax), %rax
000000000000ba63	movq	%rax, 0x28(%rbx)
000000000000ba67	movq	%rdx, 0x30(%rbx)
000000000000ba6b	movq	%rcx, 0x38(%rbx)
000000000000ba6f	movl	%r8d, 0x40(%rbx)
000000000000ba73	movl	$0x80001513, (%rbx)
000000000000ba79	movl	%edi, 0x8(%rbx)
000000000000ba7c	callq	_mig_get_reply_port
000000000000ba81	movl	%eax, 0xc(%rbx)
000000000000ba84	movabsq	$0x19400000000, %rcx
000000000000ba8e	movq	%rcx, 0x10(%rbx)
000000000000ba92	movl	$0x0, (%rsp)
000000000000ba99	movl	$0x3, %esi
000000000000ba9e	movl	$0x44, %edx
000000000000baa3	movl	$0x2c, %ecx
000000000000baa8	xorl	%r9d, %r9d
000000000000baab	movq	%rbx, %rdi
000000000000baae	movl	%eax, %r8d
000000000000bab1	callq	_mach_msg
000000000000bab6	movl	%eax, %ebx
000000000000bab8	leal	-0x10000002(%rbx), %eax
000000000000babe	cmpl	$0xe, %eax
000000000000bac1	ja	0xbad7
000000000000bac3	movl	$0x4003, %ecx
000000000000bac8	btl	%eax, %ecx
000000000000bacb	jae	0xbad7
000000000000bacd	movl	-0x44(%rbp), %edi
000000000000bad0	callq	_mig_put_reply_port
000000000000bad5	jmp	0xbb25
000000000000bad7	testl	%ebx, %ebx
000000000000bad9	jne	0xbb06
000000000000badb	movl	-0x3c(%rbp), %eax
000000000000bade	cmpl	$0x47, %eax
000000000000bae1	je	0xbb10
000000000000bae3	cmpl	$0x1f8, %eax
000000000000bae8	jne	0xbb17
000000000000baea	movl	$0xfffffed4, %ebx
000000000000baef	cmpl	$0x0, -0x50(%rbp)
000000000000baf3	js	0xbb1c
000000000000baf5	cmpl	$0x24, -0x4c(%rbp)
000000000000baf9	jne	0xbb1c
000000000000bafb	movl	-0x30(%rbp), %ebx
000000000000bafe	testl	%ebx, %ebx
000000000000bb00	jne	0xbb1c
000000000000bb02	xorl	%ebx, %ebx
000000000000bb04	jmp	0xbb25
000000000000bb06	movl	-0x44(%rbp), %edi
000000000000bb09	callq	_mig_dealloc_reply_port
000000000000bb0e	jmp	0xbb25
000000000000bb10	movl	$0xfffffecc, %ebx
000000000000bb15	jmp	0xbb1c
000000000000bb17	movl	$0xfffffed3, %ebx
000000000000bb1c	leaq	-0x50(%rbp), %rdi
000000000000bb20	callq	_mach_msg_destroy
000000000000bb25	movl	%ebx, %eax
000000000000bb27	addq	$0x58, %rsp
000000000000bb2b	popq	%rbx
000000000000bb2c	popq	%rbp
000000000000bb2d	retq
_thread_wire:
000000000000bb2e	pushq	%rbp
000000000000bb2f	movq	%rsp, %rbp
000000000000bb32	pushq	%rbx
000000000000bb33	subq	$0x48, %rsp
000000000000bb37	leaq	-0x40(%rbp), %rbx
000000000000bb3b	movl	$0x1, 0x18(%rbx)
000000000000bb42	movl	%esi, 0x1c(%rbx)
000000000000bb45	movl	$0x130000, 0x24(%rbx)
000000000000bb4c	leaq	_NDR_record(%rip), %rax
000000000000bb53	movq	(%rax), %rax
000000000000bb56	movq	%rax, 0x28(%rbx)
000000000000bb5a	movl	%edx, 0x30(%rbx)
000000000000bb5d	movl	$0x80001513, (%rbx)
000000000000bb63	movl	%edi, 0x8(%rbx)
000000000000bb66	callq	_mig_get_reply_port
000000000000bb6b	movl	%eax, 0xc(%rbx)
000000000000bb6e	movabsq	$0x19500000000, %rcx
000000000000bb78	movq	%rcx, 0x10(%rbx)
000000000000bb7c	movl	$0x0, (%rsp)
000000000000bb83	movl	$0x3, %esi
000000000000bb88	movl	$0x34, %edx
000000000000bb8d	movl	$0x2c, %ecx
000000000000bb92	xorl	%r9d, %r9d
000000000000bb95	movq	%rbx, %rdi
000000000000bb98	movl	%eax, %r8d
000000000000bb9b	callq	_mach_msg
000000000000bba0	movl	%eax, %ebx
000000000000bba2	leal	-0x10000002(%rbx), %eax
000000000000bba8	cmpl	$0xe, %eax
000000000000bbab	ja	0xbbc1
000000000000bbad	movl	$0x4003, %ecx
000000000000bbb2	btl	%eax, %ecx
000000000000bbb5	jae	0xbbc1
000000000000bbb7	movl	-0x34(%rbp), %edi
000000000000bbba	callq	_mig_put_reply_port
000000000000bbbf	jmp	0xbc0f
000000000000bbc1	testl	%ebx, %ebx
000000000000bbc3	jne	0xbbf0
000000000000bbc5	movl	-0x2c(%rbp), %eax
000000000000bbc8	cmpl	$0x47, %eax
000000000000bbcb	je	0xbbfa
000000000000bbcd	cmpl	$0x1f9, %eax
000000000000bbd2	jne	0xbc01
000000000000bbd4	movl	$0xfffffed4, %ebx
000000000000bbd9	cmpl	$0x0, -0x40(%rbp)
000000000000bbdd	js	0xbc06
000000000000bbdf	cmpl	$0x24, -0x3c(%rbp)
000000000000bbe3	jne	0xbc06
000000000000bbe5	movl	-0x20(%rbp), %ebx
000000000000bbe8	testl	%ebx, %ebx
000000000000bbea	jne	0xbc06
000000000000bbec	xorl	%ebx, %ebx
000000000000bbee	jmp	0xbc0f
000000000000bbf0	movl	-0x34(%rbp), %edi
000000000000bbf3	callq	_mig_dealloc_reply_port
000000000000bbf8	jmp	0xbc0f
000000000000bbfa	movl	$0xfffffecc, %ebx
000000000000bbff	jmp	0xbc06
000000000000bc01	movl	$0xfffffed3, %ebx
000000000000bc06	leaq	-0x40(%rbp), %rdi
000000000000bc0a	callq	_mach_msg_destroy
000000000000bc0f	movl	%ebx, %eax
000000000000bc11	addq	$0x48, %rsp
000000000000bc15	popq	%rbx
000000000000bc16	popq	%rbp
000000000000bc17	retq
_vm_allocate_cpm:
000000000000bc18	pushq	%rbp
000000000000bc19	movq	%rsp, %rbp
000000000000bc1c	pushq	%r14
000000000000bc1e	pushq	%rbx
000000000000bc1f	subq	$0x50, %rsp
000000000000bc23	movq	%rdx, %r14
000000000000bc26	leaq	-0x58(%rbp), %rbx
000000000000bc2a	movl	$0x1, 0x18(%rbx)
000000000000bc31	movl	%esi, 0x1c(%rbx)
000000000000bc34	movl	$0x130000, 0x24(%rbx)
000000000000bc3b	leaq	_NDR_record(%rip), %rax
000000000000bc42	movq	(%rax), %rax
000000000000bc45	movq	%rax, 0x28(%rbx)
000000000000bc49	movq	(%rdx), %rax
000000000000bc4c	movq	%rax, 0x30(%rbx)
000000000000bc50	movq	%rcx, 0x38(%rbx)
000000000000bc54	movl	%r8d, 0x40(%rbx)
000000000000bc58	movl	$0x80001513, (%rbx)
000000000000bc5e	movl	%edi, 0x8(%rbx)
000000000000bc61	callq	_mig_get_reply_port
000000000000bc66	movl	%eax, 0xc(%rbx)
000000000000bc69	movabsq	$0x19600000000, %rcx
000000000000bc73	movq	%rcx, 0x10(%rbx)
000000000000bc77	movl	$0x0, (%rsp)
000000000000bc7e	movl	$0x3, %esi
000000000000bc83	movl	$0x44, %edx
000000000000bc88	movl	$0x34, %ecx
000000000000bc8d	xorl	%r9d, %r9d
000000000000bc90	movq	%rbx, %rdi
000000000000bc93	movl	%eax, %r8d
000000000000bc96	callq	_mach_msg
000000000000bc9b	movl	%eax, %ebx
000000000000bc9d	leal	-0x10000002(%rbx), %eax
000000000000bca3	cmpl	$0xe, %eax
000000000000bca6	ja	0xbcbc
000000000000bca8	movl	$0x4003, %ecx
000000000000bcad	btl	%eax, %ecx
000000000000bcb0	jae	0xbcbc
000000000000bcb2	movl	-0x4c(%rbp), %edi
000000000000bcb5	callq	_mig_put_reply_port
000000000000bcba	jmp	0xbd11
000000000000bcbc	testl	%ebx, %ebx
000000000000bcbe	jne	0xbcf0
000000000000bcc0	movl	-0x44(%rbp), %eax
000000000000bcc3	cmpl	$0x47, %eax
000000000000bcc6	je	0xbcfa
000000000000bcc8	cmpl	$0x1fa, %eax
000000000000bccd	jne	0xbd01
000000000000bccf	movl	$0xfffffed4, %eax
000000000000bcd4	cmpl	$0x0, -0x58(%rbp)
000000000000bcd8	js	0xbd06
000000000000bcda	movl	-0x54(%rbp), %ecx
000000000000bcdd	cmpl	$0x2c, %ecx
000000000000bce0	je	0xbd1c
000000000000bce2	cmpl	$0x24, %ecx
000000000000bce5	jne	0xbd06
000000000000bce7	movl	-0x38(%rbp), %ebx
000000000000bcea	testl	%ebx, %ebx
000000000000bcec	jne	0xbd08
000000000000bcee	jmp	0xbd06
000000000000bcf0	movl	-0x4c(%rbp), %edi
000000000000bcf3	callq	_mig_dealloc_reply_port
000000000000bcf8	jmp	0xbd11
000000000000bcfa	movl	$0xfffffecc, %eax
000000000000bcff	jmp	0xbd06
000000000000bd01	movl	$0xfffffed3, %eax
000000000000bd06	movl	%eax, %ebx
000000000000bd08	leaq	-0x58(%rbp), %rdi
000000000000bd0c	callq	_mach_msg_destroy
000000000000bd11	movl	%ebx, %eax
000000000000bd13	addq	$0x50, %rsp
000000000000bd17	popq	%rbx
000000000000bd18	popq	%r14
000000000000bd1a	popq	%rbp
000000000000bd1b	retq
000000000000bd1c	movl	-0x38(%rbp), %ebx
000000000000bd1f	testl	%ebx, %ebx
000000000000bd21	jne	0xbd08
000000000000bd23	movq	-0x34(%rbp), %rax
000000000000bd27	movq	%rax, (%r14)
000000000000bd2a	xorl	%ebx, %ebx
000000000000bd2c	jmp	0xbd11
_host_processors:
000000000000bd2e	pushq	%rbp
000000000000bd2f	movq	%rsp, %rbp
000000000000bd32	pushq	%r15
000000000000bd34	pushq	%r14
000000000000bd36	pushq	%rbx
000000000000bd37	subq	$0x48, %rsp
000000000000bd3b	movq	%rdx, %r14
000000000000bd3e	movq	%rsi, %r15
000000000000bd41	leaq	-0x58(%rbp), %rbx
000000000000bd45	movl	$0x1513, (%rbx)
000000000000bd4b	movl	%edi, 0x8(%rbx)
000000000000bd4e	callq	_mig_get_reply_port
000000000000bd53	movl	%eax, 0xc(%rbx)
000000000000bd56	movabsq	$0x19700000000, %rcx
000000000000bd60	movq	%rcx, 0x10(%rbx)
000000000000bd64	movl	$0x0, (%rsp)
000000000000bd6b	movl	$0x3, %esi
000000000000bd70	movl	$0x18, %edx
000000000000bd75	movl	$0x40, %ecx
000000000000bd7a	xorl	%r9d, %r9d
000000000000bd7d	movq	%rbx, %rdi
000000000000bd80	movl	%eax, %r8d
000000000000bd83	callq	_mach_msg
000000000000bd88	movl	%eax, %ebx
000000000000bd8a	leal	-0x10000002(%rbx), %eax
000000000000bd90	cmpl	$0xe, %eax
000000000000bd93	ja	0xbda9
000000000000bd95	movl	$0x4003, %ecx
000000000000bd9a	btl	%eax, %ecx
000000000000bd9d	jae	0xbda9
000000000000bd9f	movl	-0x4c(%rbp), %edi
000000000000bda2	callq	_mig_put_reply_port
000000000000bda7	jmp	0xbdfd
000000000000bda9	testl	%ebx, %ebx
000000000000bdab	jne	0xbdde
000000000000bdad	movl	-0x44(%rbp), %eax
000000000000bdb0	cmpl	$0x47, %eax
000000000000bdb3	je	0xbde8
000000000000bdb5	cmpl	$0x1fb, %eax
000000000000bdba	jne	0xbdef
000000000000bdbc	cmpl	$0x0, -0x58(%rbp)
000000000000bdc0	movl	-0x54(%rbp), %eax
000000000000bdc3	movl	$0xfffffed4, %ebx
000000000000bdc8	js	0xbe0a
000000000000bdca	cmpl	$0x24, %eax
000000000000bdcd	jne	0xbdf4
000000000000bdcf	movl	-0x38(%rbp), %eax
000000000000bdd2	testl	%eax, %eax
000000000000bdd4	movl	$0xfffffed4, %ebx
000000000000bdd9	cmovnel	%eax, %ebx
000000000000bddc	jmp	0xbdf4
000000000000bdde	movl	-0x4c(%rbp), %edi
000000000000bde1	callq	_mig_dealloc_reply_port
000000000000bde6	jmp	0xbdfd
000000000000bde8	movl	$0xfffffecc, %ebx
000000000000bded	jmp	0xbdf4
000000000000bdef	movl	$0xfffffed3, %ebx
000000000000bdf4	leaq	-0x58(%rbp), %rdi
000000000000bdf8	callq	_mach_msg_destroy
000000000000bdfd	movl	%ebx, %eax
000000000000bdff	addq	$0x48, %rsp
000000000000be03	popq	%rbx
000000000000be04	popq	%r14
000000000000be06	popq	%r15
000000000000be08	popq	%rbp
000000000000be09	retq
000000000000be0a	cmpl	$0x38, %eax
000000000000be0d	jne	0xbdf4
000000000000be0f	cmpl	$0x1, -0x40(%rbp)
000000000000be13	jne	0xbdf4
000000000000be15	movl	$0xffff0000, %eax
000000000000be1a	andl	-0x34(%rbp), %eax
000000000000be1d	cmpl	$0x2110000, %eax
000000000000be22	jne	0xbdf4
000000000000be24	movl	-0x30(%rbp), %eax
000000000000be27	cmpl	-0x24(%rbp), %eax
000000000000be2a	jne	0xbdf4
000000000000be2c	movq	-0x3c(%rbp), %rcx
000000000000be30	movq	%rcx, (%r15)
000000000000be33	movl	%eax, (%r14)
000000000000be36	xorl	%ebx, %ebx
000000000000be38	jmp	0xbdfd
_host_get_clock_control:
000000000000be3a	pushq	%rbp
000000000000be3b	movq	%rsp, %rbp
000000000000be3e	pushq	%r14
000000000000be40	pushq	%rbx
000000000000be41	subq	$0x40, %rsp
000000000000be45	movq	%rdx, %r14
000000000000be48	leaq	_NDR_record(%rip), %rax
000000000000be4f	movq	(%rax), %rax
000000000000be52	leaq	-0x40(%rbp), %rbx
000000000000be56	movq	%rax, 0x18(%rbx)
000000000000be5a	movl	%esi, 0x20(%rbx)
000000000000be5d	movl	$0x1513, (%rbx)
000000000000be63	movl	%edi, 0x8(%rbx)
000000000000be66	callq	_mig_get_reply_port
000000000000be6b	movl	%eax, 0xc(%rbx)
000000000000be6e	movabsq	$0x19800000000, %rcx
000000000000be78	movq	%rcx, 0x10(%rbx)
000000000000be7c	movl	$0x0, (%rsp)
000000000000be83	movl	$0x3, %esi
000000000000be88	movl	$0x24, %edx
000000000000be8d	movl	$0x30, %ecx
000000000000be92	xorl	%r9d, %r9d
000000000000be95	movq	%rbx, %rdi
000000000000be98	movl	%eax, %r8d
000000000000be9b	callq	_mach_msg
000000000000bea0	movl	%eax, %ebx
000000000000bea2	leal	-0x10000002(%rbx), %eax
000000000000bea8	cmpl	$0xe, %eax
000000000000beab	ja	0xbec1
000000000000bead	movl	$0x4003, %ecx
000000000000beb2	btl	%eax, %ecx
000000000000beb5	jae	0xbec1
000000000000beb7	movl	-0x34(%rbp), %edi
000000000000beba	callq	_mig_put_reply_port
000000000000bebf	jmp	0xbf15
000000000000bec1	testl	%ebx, %ebx
000000000000bec3	jne	0xbef6
000000000000bec5	movl	-0x2c(%rbp), %eax
000000000000bec8	cmpl	$0x47, %eax
000000000000becb	je	0xbf00
000000000000becd	cmpl	$0x1fc, %eax
000000000000bed2	jne	0xbf07
000000000000bed4	cmpl	$0x0, -0x40(%rbp)
000000000000bed8	movl	-0x3c(%rbp), %eax
000000000000bedb	movl	$0xfffffed4, %ebx
000000000000bee0	js	0xbf20
000000000000bee2	cmpl	$0x24, %eax
000000000000bee5	jne	0xbf0c
000000000000bee7	movl	-0x20(%rbp), %eax
000000000000beea	testl	%eax, %eax
000000000000beec	movl	$0xfffffed4, %ebx
000000000000bef1	cmovnel	%eax, %ebx
000000000000bef4	jmp	0xbf0c
000000000000bef6	movl	-0x34(%rbp), %edi
000000000000bef9	callq	_mig_dealloc_reply_port
000000000000befe	jmp	0xbf15
000000000000bf00	movl	$0xfffffecc, %ebx
000000000000bf05	jmp	0xbf0c
000000000000bf07	movl	$0xfffffed3, %ebx
000000000000bf0c	leaq	-0x40(%rbp), %rdi
000000000000bf10	callq	_mach_msg_destroy
000000000000bf15	movl	%ebx, %eax
000000000000bf17	addq	$0x40, %rsp
000000000000bf1b	popq	%rbx
000000000000bf1c	popq	%r14
000000000000bf1e	popq	%rbp
000000000000bf1f	retq
000000000000bf20	cmpl	$0x28, %eax
000000000000bf23	jne	0xbf0c
000000000000bf25	cmpl	$0x1, -0x28(%rbp)
000000000000bf29	jne	0xbf0c
000000000000bf2b	movl	$0xffff0000, %eax
000000000000bf30	andl	-0x1c(%rbp), %eax
000000000000bf33	cmpl	$0x110000, %eax
000000000000bf38	jne	0xbf0c
000000000000bf3a	movl	-0x24(%rbp), %eax
000000000000bf3d	movl	%eax, (%r14)
000000000000bf40	xorl	%ebx, %ebx
000000000000bf42	jmp	0xbf15
_kmod_create:
000000000000bf44	pushq	%rbp
000000000000bf45	movq	%rsp, %rbp
000000000000bf48	pushq	%r14
000000000000bf4a	pushq	%rbx
000000000000bf4b	subq	$0x40, %rsp
000000000000bf4f	movq	%rdx, %r14
000000000000bf52	leaq	_NDR_record(%rip), %rax
000000000000bf59	movq	(%rax), %rax
000000000000bf5c	leaq	-0x40(%rbp), %rbx
000000000000bf60	movq	%rax, 0x18(%rbx)
000000000000bf64	movq	%rsi, 0x20(%rbx)
000000000000bf68	movl	$0x1513, (%rbx)
000000000000bf6e	movl	%edi, 0x8(%rbx)
000000000000bf71	callq	_mig_get_reply_port
000000000000bf76	movl	%eax, 0xc(%rbx)
000000000000bf79	movabsq	$0x19900000000, %rcx
000000000000bf83	movq	%rcx, 0x10(%rbx)
000000000000bf87	movl	$0x0, (%rsp)
000000000000bf8e	movl	$0x3, %esi
000000000000bf93	movl	$0x28, %edx
000000000000bf98	movl	$0x30, %ecx
000000000000bf9d	xorl	%r9d, %r9d
000000000000bfa0	movq	%rbx, %rdi
000000000000bfa3	movl	%eax, %r8d
000000000000bfa6	callq	_mach_msg
000000000000bfab	movl	%eax, %ebx
000000000000bfad	leal	-0x10000002(%rbx), %eax
000000000000bfb3	cmpl	$0xe, %eax
000000000000bfb6	ja	0xbfcc
000000000000bfb8	movl	$0x4003, %ecx
000000000000bfbd	btl	%eax, %ecx
000000000000bfc0	jae	0xbfcc
000000000000bfc2	movl	-0x34(%rbp), %edi
000000000000bfc5	callq	_mig_put_reply_port
000000000000bfca	jmp	0xc021
000000000000bfcc	testl	%ebx, %ebx
000000000000bfce	jne	0xc000
000000000000bfd0	movl	-0x2c(%rbp), %eax
000000000000bfd3	cmpl	$0x47, %eax
000000000000bfd6	je	0xc00a
000000000000bfd8	cmpl	$0x1fd, %eax
000000000000bfdd	jne	0xc011
000000000000bfdf	movl	$0xfffffed4, %eax
000000000000bfe4	cmpl	$0x0, -0x40(%rbp)
000000000000bfe8	js	0xc016
000000000000bfea	movl	-0x3c(%rbp), %ecx
000000000000bfed	cmpl	$0x28, %ecx
000000000000bff0	je	0xc02c
000000000000bff2	cmpl	$0x24, %ecx
000000000000bff5	jne	0xc016
000000000000bff7	movl	-0x20(%rbp), %ebx
000000000000bffa	testl	%ebx, %ebx
000000000000bffc	jne	0xc018
000000000000bffe	jmp	0xc016
000000000000c000	movl	-0x34(%rbp), %edi
000000000000c003	callq	_mig_dealloc_reply_port
000000000000c008	jmp	0xc021
000000000000c00a	movl	$0xfffffecc, %eax
000000000000c00f	jmp	0xc016
000000000000c011	movl	$0xfffffed3, %eax
000000000000c016	movl	%eax, %ebx
000000000000c018	leaq	-0x40(%rbp), %rdi
000000000000c01c	callq	_mach_msg_destroy
000000000000c021	movl	%ebx, %eax
000000000000c023	addq	$0x40, %rsp
000000000000c027	popq	%rbx
000000000000c028	popq	%r14
000000000000c02a	popq	%rbp
000000000000c02b	retq
000000000000c02c	movl	-0x20(%rbp), %ebx
000000000000c02f	testl	%ebx, %ebx
000000000000c031	jne	0xc018
000000000000c033	movl	-0x1c(%rbp), %eax
000000000000c036	movl	%eax, (%r14)
000000000000c039	xorl	%ebx, %ebx
000000000000c03b	jmp	0xc021
_kmod_destroy:
000000000000c03d	pushq	%rbp
000000000000c03e	movq	%rsp, %rbp
000000000000c041	pushq	%rbx
000000000000c042	subq	$0x38, %rsp
000000000000c046	leaq	_NDR_record(%rip), %rax
000000000000c04d	movq	(%rax), %rax
000000000000c050	leaq	-0x38(%rbp), %rbx
000000000000c054	movq	%rax, 0x18(%rbx)
000000000000c058	movl	%esi, 0x20(%rbx)
000000000000c05b	movl	$0x1513, (%rbx)
000000000000c061	movl	%edi, 0x8(%rbx)
000000000000c064	callq	_mig_get_reply_port
000000000000c069	movl	%eax, 0xc(%rbx)
000000000000c06c	movabsq	$0x19a00000000, %rcx
000000000000c076	movq	%rcx, 0x10(%rbx)
000000000000c07a	movl	$0x0, (%rsp)
000000000000c081	movl	$0x3, %esi
000000000000c086	movl	$0x24, %edx
000000000000c08b	movl	$0x2c, %ecx
000000000000c090	xorl	%r9d, %r9d
000000000000c093	movq	%rbx, %rdi
000000000000c096	movl	%eax, %r8d
000000000000c099	callq	_mach_msg
000000000000c09e	movl	%eax, %ebx
000000000000c0a0	leal	-0x10000002(%rbx), %eax
000000000000c0a6	cmpl	$0xe, %eax
000000000000c0a9	ja	0xc0bf
000000000000c0ab	movl	$0x4003, %ecx
000000000000c0b0	btl	%eax, %ecx
000000000000c0b3	jae	0xc0bf
000000000000c0b5	movl	-0x2c(%rbp), %edi
000000000000c0b8	callq	_mig_put_reply_port
000000000000c0bd	jmp	0xc10d
000000000000c0bf	testl	%ebx, %ebx
000000000000c0c1	jne	0xc0ee
000000000000c0c3	movl	-0x24(%rbp), %eax
000000000000c0c6	cmpl	$0x47, %eax
000000000000c0c9	je	0xc0f8
000000000000c0cb	cmpl	$0x1fe, %eax
000000000000c0d0	jne	0xc0ff
000000000000c0d2	movl	$0xfffffed4, %ebx
000000000000c0d7	cmpl	$0x0, -0x38(%rbp)
000000000000c0db	js	0xc104
000000000000c0dd	cmpl	$0x24, -0x34(%rbp)
000000000000c0e1	jne	0xc104
000000000000c0e3	movl	-0x18(%rbp), %ebx
000000000000c0e6	testl	%ebx, %ebx
000000000000c0e8	jne	0xc104
000000000000c0ea	xorl	%ebx, %ebx
000000000000c0ec	jmp	0xc10d
000000000000c0ee	movl	-0x2c(%rbp), %edi
000000000000c0f1	callq	_mig_dealloc_reply_port
000000000000c0f6	jmp	0xc10d
000000000000c0f8	movl	$0xfffffecc, %ebx
000000000000c0fd	jmp	0xc104
000000000000c0ff	movl	$0xfffffed3, %ebx
000000000000c104	leaq	-0x38(%rbp), %rdi
000000000000c108	callq	_mach_msg_destroy
000000000000c10d	movl	%ebx, %eax
000000000000c10f	addq	$0x38, %rsp
000000000000c113	popq	%rbx
000000000000c114	popq	%rbp
000000000000c115	retq
_kmod_control:
000000000000c116	pushq	%rbp
000000000000c117	movq	%rsp, %rbp
000000000000c11a	pushq	%r15
000000000000c11c	pushq	%r14
000000000000c11e	pushq	%rbx
000000000000c11f	subq	$0x48, %rsp
000000000000c123	movq	%r8, %r14
000000000000c126	movq	%rcx, %r15
000000000000c129	leaq	-0x58(%rbp), %rbx
000000000000c12d	movl	$0x1, 0x18(%rbx)
000000000000c134	movq	(%rcx), %rax
000000000000c137	movq	%rax, 0x1c(%rbx)
000000000000c13b	movl	(%r8), %eax
000000000000c13e	movl	%eax, 0x28(%rbx)
000000000000c141	movl	$0x1000100, 0x24(%rbx)
000000000000c148	leaq	_NDR_record(%rip), %rcx
000000000000c14f	movq	(%rcx), %rcx
000000000000c152	movq	%rcx, 0x2c(%rbx)
000000000000c156	movl	%esi, 0x34(%rbx)
000000000000c159	movl	%edx, 0x38(%rbx)
000000000000c15c	movl	%eax, 0x3c(%rbx)
000000000000c15f	movl	$0x80001513, (%rbx)
000000000000c165	movl	%edi, 0x8(%rbx)
000000000000c168	callq	_mig_get_reply_port
000000000000c16d	movl	%eax, 0xc(%rbx)
000000000000c170	movabsq	$0x19b00000000, %rcx
000000000000c17a	movq	%rcx, 0x10(%rbx)
000000000000c17e	movl	$0x0, (%rsp)
000000000000c185	movl	$0x3, %esi
000000000000c18a	movl	$0x40, %edx
000000000000c18f	movl	$0x40, %ecx
000000000000c194	xorl	%r9d, %r9d
000000000000c197	movq	%rbx, %rdi
000000000000c19a	movl	%eax, %r8d
000000000000c19d	callq	_mach_msg
000000000000c1a2	movl	%eax, %ebx
000000000000c1a4	leal	-0x10000002(%rbx), %eax
000000000000c1aa	cmpl	$0xe, %eax
000000000000c1ad	ja	0xc1c3
000000000000c1af	movl	$0x4003, %ecx
000000000000c1b4	btl	%eax, %ecx
000000000000c1b7	jae	0xc1c3
000000000000c1b9	movl	-0x4c(%rbp), %edi
000000000000c1bc	callq	_mig_put_reply_port
000000000000c1c1	jmp	0xc217
000000000000c1c3	testl	%ebx, %ebx
000000000000c1c5	jne	0xc1f8
000000000000c1c7	movl	-0x44(%rbp), %eax
000000000000c1ca	cmpl	$0x47, %eax
000000000000c1cd	je	0xc202
000000000000c1cf	cmpl	$0x1ff, %eax
000000000000c1d4	jne	0xc209
000000000000c1d6	cmpl	$0x0, -0x58(%rbp)
000000000000c1da	movl	-0x54(%rbp), %eax
000000000000c1dd	movl	$0xfffffed4, %ebx
000000000000c1e2	js	0xc224
000000000000c1e4	cmpl	$0x24, %eax
000000000000c1e7	jne	0xc20e
000000000000c1e9	movl	-0x38(%rbp), %eax
000000000000c1ec	testl	%eax, %eax
000000000000c1ee	movl	$0xfffffed4, %ebx
000000000000c1f3	cmovnel	%eax, %ebx
000000000000c1f6	jmp	0xc20e
000000000000c1f8	movl	-0x4c(%rbp), %edi
000000000000c1fb	callq	_mig_dealloc_reply_port
000000000000c200	jmp	0xc217
000000000000c202	movl	$0xfffffecc, %ebx
000000000000c207	jmp	0xc20e
000000000000c209	movl	$0xfffffed3, %ebx
000000000000c20e	leaq	-0x58(%rbp), %rdi
000000000000c212	callq	_mach_msg_destroy
000000000000c217	movl	%ebx, %eax
000000000000c219	addq	$0x48, %rsp
000000000000c21d	popq	%rbx
000000000000c21e	popq	%r14
000000000000c220	popq	%r15
000000000000c222	popq	%rbp
000000000000c223	retq
000000000000c224	cmpl	$0x38, %eax
000000000000c227	jne	0xc20e
000000000000c229	cmpl	$0x1, -0x40(%rbp)
000000000000c22d	jne	0xc20e
000000000000c22f	movl	$0xff000000, %eax
000000000000c234	andl	-0x34(%rbp), %eax
000000000000c237	cmpl	$0x1000000, %eax
000000000000c23c	jne	0xc20e
000000000000c23e	movl	-0x30(%rbp), %eax
000000000000c241	cmpl	-0x24(%rbp), %eax
000000000000c244	jne	0xc20e
000000000000c246	movq	-0x3c(%rbp), %rcx
000000000000c24a	movq	%rcx, (%r15)
000000000000c24d	movl	%eax, (%r14)
000000000000c250	xorl	%ebx, %ebx
000000000000c252	jmp	0xc217
_host_set_special_port:
000000000000c254	pushq	%rbp
000000000000c255	movq	%rsp, %rbp
000000000000c258	pushq	%rbx
000000000000c259	subq	$0x48, %rsp
000000000000c25d	leaq	-0x40(%rbp), %rbx
000000000000c261	movl	$0x1, 0x18(%rbx)
000000000000c268	movl	%edx, 0x1c(%rbx)
000000000000c26b	movl	$0x130000, 0x24(%rbx)
000000000000c272	leaq	_NDR_record(%rip), %rax
000000000000c279	movq	(%rax), %rax
000000000000c27c	movq	%rax, 0x28(%rbx)
000000000000c280	movl	%esi, 0x30(%rbx)
000000000000c283	movl	$0x80001513, (%rbx)
000000000000c289	movl	%edi, 0x8(%rbx)
000000000000c28c	callq	_mig_get_reply_port
000000000000c291	movl	%eax, 0xc(%rbx)
000000000000c294	movabsq	$0x19d00000000, %rcx
000000000000c29e	movq	%rcx, 0x10(%rbx)
000000000000c2a2	movl	$0x0, (%rsp)
000000000000c2a9	movl	$0x3, %esi
000000000000c2ae	movl	$0x34, %edx
000000000000c2b3	movl	$0x2c, %ecx
000000000000c2b8	xorl	%r9d, %r9d
000000000000c2bb	movq	%rbx, %rdi
000000000000c2be	movl	%eax, %r8d
000000000000c2c1	callq	_mach_msg
000000000000c2c6	movl	%eax, %ebx
000000000000c2c8	leal	-0x10000002(%rbx), %eax
000000000000c2ce	cmpl	$0xe, %eax
000000000000c2d1	ja	0xc2e7
000000000000c2d3	movl	$0x4003, %ecx
000000000000c2d8	btl	%eax, %ecx
000000000000c2db	jae	0xc2e7
000000000000c2dd	movl	-0x34(%rbp), %edi
000000000000c2e0	callq	_mig_put_reply_port
000000000000c2e5	jmp	0xc335
000000000000c2e7	testl	%ebx, %ebx
000000000000c2e9	jne	0xc316
000000000000c2eb	movl	-0x2c(%rbp), %eax
000000000000c2ee	cmpl	$0x47, %eax
000000000000c2f1	je	0xc320
000000000000c2f3	cmpl	$0x201, %eax
000000000000c2f8	jne	0xc327
000000000000c2fa	movl	$0xfffffed4, %ebx
000000000000c2ff	cmpl	$0x0, -0x40(%rbp)
000000000000c303	js	0xc32c
000000000000c305	cmpl	$0x24, -0x3c(%rbp)
000000000000c309	jne	0xc32c
000000000000c30b	movl	-0x20(%rbp), %ebx
000000000000c30e	testl	%ebx, %ebx
000000000000c310	jne	0xc32c
000000000000c312	xorl	%ebx, %ebx
000000000000c314	jmp	0xc335
000000000000c316	movl	-0x34(%rbp), %edi
000000000000c319	callq	_mig_dealloc_reply_port
000000000000c31e	jmp	0xc335
000000000000c320	movl	$0xfffffecc, %ebx
000000000000c325	jmp	0xc32c
000000000000c327	movl	$0xfffffed3, %ebx
000000000000c32c	leaq	-0x40(%rbp), %rdi
000000000000c330	callq	_mach_msg_destroy
000000000000c335	movl	%ebx, %eax
000000000000c337	addq	$0x48, %rsp
000000000000c33b	popq	%rbx
000000000000c33c	popq	%rbp
000000000000c33d	retq
_host_set_exception_ports:
000000000000c33e	pushq	%rbp
000000000000c33f	movq	%rsp, %rbp
000000000000c342	pushq	%rbx
000000000000c343	subq	$0x48, %rsp
000000000000c347	leaq	-0x48(%rbp), %rbx
000000000000c34b	movl	$0x1, 0x18(%rbx)
000000000000c352	movl	%edx, 0x1c(%rbx)
000000000000c355	movl	$0x130000, 0x24(%rbx)
000000000000c35c	leaq	_NDR_record(%rip), %rax
000000000000c363	movq	(%rax), %rax
000000000000c366	movq	%rax, 0x28(%rbx)
000000000000c36a	movl	%esi, 0x30(%rbx)
000000000000c36d	movl	%ecx, 0x34(%rbx)
000000000000c370	movl	%r8d, 0x38(%rbx)
000000000000c374	movl	$0x80001513, (%rbx)
000000000000c37a	movl	%edi, 0x8(%rbx)
000000000000c37d	callq	_mig_get_reply_port
000000000000c382	movl	%eax, 0xc(%rbx)
000000000000c385	movabsq	$0x19e00000000, %rcx
000000000000c38f	movq	%rcx, 0x10(%rbx)
000000000000c393	movl	$0x0, (%rsp)
000000000000c39a	movl	$0x3, %esi
000000000000c39f	movl	$0x3c, %edx
000000000000c3a4	movl	$0x2c, %ecx
000000000000c3a9	xorl	%r9d, %r9d
000000000000c3ac	movq	%rbx, %rdi
000000000000c3af	movl	%eax, %r8d
000000000000c3b2	callq	_mach_msg
000000000000c3b7	movl	%eax, %ebx
000000000000c3b9	leal	-0x10000002(%rbx), %eax
000000000000c3bf	cmpl	$0xe, %eax
000000000000c3c2	ja	0xc3d8
000000000000c3c4	movl	$0x4003, %ecx
000000000000c3c9	btl	%eax, %ecx
000000000000c3cc	jae	0xc3d8
000000000000c3ce	movl	-0x3c(%rbp), %edi
000000000000c3d1	callq	_mig_put_reply_port
000000000000c3d6	jmp	0xc426
000000000000c3d8	testl	%ebx, %ebx
000000000000c3da	jne	0xc407
000000000000c3dc	movl	-0x34(%rbp), %eax
000000000000c3df	cmpl	$0x47, %eax
000000000000c3e2	je	0xc411
000000000000c3e4	cmpl	$0x202, %eax
000000000000c3e9	jne	0xc418
000000000000c3eb	movl	$0xfffffed4, %ebx
000000000000c3f0	cmpl	$0x0, -0x48(%rbp)
000000000000c3f4	js	0xc41d
000000000000c3f6	cmpl	$0x24, -0x44(%rbp)
000000000000c3fa	jne	0xc41d
000000000000c3fc	movl	-0x28(%rbp), %ebx
000000000000c3ff	testl	%ebx, %ebx
000000000000c401	jne	0xc41d
000000000000c403	xorl	%ebx, %ebx
000000000000c405	jmp	0xc426
000000000000c407	movl	-0x3c(%rbp), %edi
000000000000c40a	callq	_mig_dealloc_reply_port
000000000000c40f	jmp	0xc426
000000000000c411	movl	$0xfffffecc, %ebx
000000000000c416	jmp	0xc41d
000000000000c418	movl	$0xfffffed3, %ebx
000000000000c41d	leaq	-0x48(%rbp), %rdi
000000000000c421	callq	_mach_msg_destroy
000000000000c426	movl	%ebx, %eax
000000000000c428	addq	$0x48, %rsp
000000000000c42c	popq	%rbx
000000000000c42d	popq	%rbp
000000000000c42e	retq
_host_get_exception_ports:
000000000000c42f	pushq	%rbp
000000000000c430	movq	%rsp, %rbp
000000000000c433	pushq	%r15
000000000000c435	pushq	%r14
000000000000c437	pushq	%r13
000000000000c439	pushq	%r12
000000000000c43b	pushq	%rbx
000000000000c43c	subq	$0x348, %rsp
000000000000c443	movq	%r9, -0x38(%rbp)
000000000000c447	movq	%r8, %r15
000000000000c44a	movq	%rcx, %r12
000000000000c44d	movq	%rdx, %r13
000000000000c450	leaq	_NDR_record(%rip), %rax
000000000000c457	movq	(%rax), %rax
000000000000c45a	movq	%rax, -0x350(%rbp)
000000000000c461	movl	%esi, -0x348(%rbp)
000000000000c467	movl	$0x1513, -0x368(%rbp)
000000000000c471	movl	%edi, -0x360(%rbp)
000000000000c477	callq	_mig_get_reply_port
000000000000c47c	movl	%eax, -0x35c(%rbp)
000000000000c482	movabsq	$0x19f00000000, %rcx
000000000000c48c	movq	%rcx, -0x358(%rbp)
000000000000c493	movl	$0x0, (%rsp)
000000000000c49a	leaq	-0x368(%rbp), %r14
000000000000c4a1	movl	$0x3, %esi
000000000000c4a6	movl	$0x24, %edx
000000000000c4ab	movl	$0x330, %ecx
000000000000c4b0	xorl	%r9d, %r9d
000000000000c4b3	movl	%eax, %r8d
000000000000c4b6	movq	%r14, %rdi
000000000000c4b9	callq	_mach_msg
000000000000c4be	movl	%eax, %ebx
000000000000c4c0	leal	-0x10000002(%rbx), %eax
000000000000c4c6	cmpl	$0xe, %eax
000000000000c4c9	ja	0xc4e2
000000000000c4cb	movl	$0x4003, %ecx
000000000000c4d0	btl	%eax, %ecx
000000000000c4d3	jae	0xc4e2
000000000000c4d5	movl	-0x35c(%rbp), %edi
000000000000c4db	callq	_mig_put_reply_port
000000000000c4e0	jmp	0xc548
000000000000c4e2	testl	%ebx, %ebx
000000000000c4e4	jne	0xc523
000000000000c4e6	movl	-0x354(%rbp), %eax
000000000000c4ec	cmpl	$0x47, %eax
000000000000c4ef	je	0xc530
000000000000c4f1	cmpl	$0x203, %eax
000000000000c4f6	jne	0xc537
000000000000c4f8	cmpl	$0x0, -0x368(%rbp)
000000000000c4ff	movl	-0x364(%rbp), %eax
000000000000c505	js	0xc55c
000000000000c507	movl	$0xfffffed4, %ebx
000000000000c50c	cmpl	$0x24, %eax
000000000000c50f	jne	0xc53c
000000000000c511	movl	-0x348(%rbp), %eax
000000000000c517	testl	%eax, %eax
000000000000c519	movl	$0xfffffed4, %ebx
000000000000c51e	cmovnel	%eax, %ebx
000000000000c521	jmp	0xc53c
000000000000c523	movl	-0x35c(%rbp), %edi
000000000000c529	callq	_mig_dealloc_reply_port
000000000000c52e	jmp	0xc548
000000000000c530	movl	$0xfffffecc, %ebx
000000000000c535	jmp	0xc53c
000000000000c537	movl	$0xfffffed3, %ebx
000000000000c53c	leaq	-0x368(%rbp), %rdi
000000000000c543	callq	_mach_msg_destroy
000000000000c548	movl	%ebx, %eax
000000000000c54a	addq	$0x348, %rsp
000000000000c551	popq	%rbx
000000000000c552	popq	%r12
000000000000c554	popq	%r13
000000000000c556	popq	%r14
000000000000c558	popq	%r15
000000000000c55a	popq	%rbp
000000000000c55b	retq
000000000000c55c	leal	-0x1a8(%rax), %ecx
000000000000c562	movl	$0xfffffed4, %ebx
000000000000c567	cmpl	$0x180, %ecx
000000000000c56d	ja	0xc53c
000000000000c56f	cmpl	$0x20, -0x350(%rbp)
000000000000c576	jne	0xc53c
000000000000c578	leaq	-0x344(%rbp), %rdx
000000000000c57f	xorl	%esi, %esi
000000000000c581	cmpl	$0xffffff, (%rdx)
000000000000c587	ja	0xc53c
000000000000c589	incl	%esi
000000000000c58b	addq	$0xc, %rdx
000000000000c58f	cmpl	$0x20, %esi
000000000000c592	jb	0xc581
000000000000c594	movslq	-0x1c4(%rbp), %rdi
000000000000c59b	cmpq	$0x20, %rdi
000000000000c59f	ja	0xc53c
000000000000c5a1	shrl	$0x2, %ecx
000000000000c5a4	cmpl	%edi, %ecx
000000000000c5a6	jb	0xc53c
000000000000c5a8	leal	(,%rdi,4), %ecx
000000000000c5af	leal	0x1a8(%rcx), %edx
000000000000c5b5	cmpl	%edx, %eax
000000000000c5b7	jb	0xc53c
000000000000c5b9	subl	%ecx, %eax
000000000000c5bb	cmpl	%edx, %eax
000000000000c5bd	jb	0xc53c
000000000000c5c3	leal	-0x1a8(%rax), %esi
000000000000c5c9	shrl	$0x2, %esi
000000000000c5cc	cmpl	%edi, %esi
000000000000c5ce	jb	0xc53c
000000000000c5d4	subl	%ecx, %eax
000000000000c5d6	cmpl	%edx, %eax
000000000000c5d8	jne	0xc53c
000000000000c5de	addl	$0xfffffe58, %eax
000000000000c5e3	shrl	$0x2, %eax
000000000000c5e6	cmpl	%edi, %eax
000000000000c5e8	jb	0xc53c
000000000000c5ee	movl	%ecx, %eax
000000000000c5f0	leaq	-0x80(%rax), %rbx
000000000000c5f4	leaq	-0x80(%rax,%r14), %r14
000000000000c5f9	addq	%r14, %rbx
000000000000c5fc	leaq	-0x1c0(%rbp), %rsi
000000000000c603	movq	%rdi, -0x30(%rbp)
000000000000c607	movq	%r13, %rdi
000000000000c60a	movq	%rax, %r13
000000000000c60d	movq	%rax, %rdx
000000000000c610	callq	_memcpy
000000000000c615	movq	-0x30(%rbp), %rsi
000000000000c619	leaq	-0x34c(%rbp), %rdx
000000000000c620	movl	%esi, (%r12)
000000000000c624	testl	%esi, %esi
000000000000c626	je	0xc63c
000000000000c628	xorl	%eax, %eax
000000000000c62a	movl	(%rdx), %ecx
000000000000c62c	movl	%ecx, (%r15,%rax,4)
000000000000c630	addq	$0xc, %rdx
000000000000c634	incq	%rax
000000000000c637	cmpq	%rsi, %rax
000000000000c63a	jl	0xc62a
000000000000c63c	addq	$0x228, %r14
000000000000c643	movq	-0x38(%rbp), %rdi
000000000000c647	movq	%r14, %rsi
000000000000c64a	movq	%r13, %rdx
000000000000c64d	callq	_memcpy
000000000000c652	addq	$0x2a8, %rbx
000000000000c659	movq	0x10(%rbp), %rdi
000000000000c65d	movq	%rbx, %rsi
000000000000c660	movq	%r13, %rdx
000000000000c663	callq	_memcpy
000000000000c668	xorl	%ebx, %ebx
000000000000c66a	jmp	0xc548
_host_swap_exception_ports:
000000000000c66f	pushq	%rbp
000000000000c670	movq	%rsp, %rbp
000000000000c673	pushq	%r15
000000000000c675	pushq	%r14
000000000000c677	pushq	%r13
000000000000c679	pushq	%r12
000000000000c67b	pushq	%rbx
000000000000c67c	subq	$0x338, %rsp
000000000000c683	movq	%r9, %r14
000000000000c686	movl	$0x1, -0x340(%rbp)
000000000000c690	movl	%edx, -0x33c(%rbp)
000000000000c696	movl	$0x130000, -0x334(%rbp)
000000000000c6a0	leaq	_NDR_record(%rip), %rax
000000000000c6a7	movq	(%rax), %rax
000000000000c6aa	movq	%rax, -0x330(%rbp)
000000000000c6b1	movl	%esi, -0x328(%rbp)
000000000000c6b7	movl	%ecx, -0x324(%rbp)
000000000000c6bd	movl	%r8d, -0x320(%rbp)
000000000000c6c4	movl	$0x80001513, -0x358(%rbp)
000000000000c6ce	movl	%edi, -0x350(%rbp)
000000000000c6d4	callq	_mig_get_reply_port
000000000000c6d9	movl	%eax, -0x34c(%rbp)
000000000000c6df	movabsq	$0x1a000000000, %rcx
000000000000c6e9	movq	%rcx, -0x348(%rbp)
000000000000c6f0	movl	$0x0, (%rsp)
000000000000c6f7	leaq	-0x358(%rbp), %r15
000000000000c6fe	movl	$0x3, %esi
000000000000c703	movl	$0x3c, %edx
000000000000c708	movl	$0x330, %ecx
000000000000c70d	xorl	%r9d, %r9d
000000000000c710	movl	%eax, %r8d
000000000000c713	movq	%r15, %rdi
000000000000c716	callq	_mach_msg
000000000000c71b	movl	%eax, %ebx
000000000000c71d	leal	-0x10000002(%rbx), %eax
000000000000c723	cmpl	$0xe, %eax
000000000000c726	ja	0xc73f
000000000000c728	movl	$0x4003, %ecx
000000000000c72d	btl	%eax, %ecx
000000000000c730	jae	0xc73f
000000000000c732	movl	-0x34c(%rbp), %edi
000000000000c738	callq	_mig_put_reply_port
000000000000c73d	jmp	0xc7a5
000000000000c73f	testl	%ebx, %ebx
000000000000c741	jne	0xc780
000000000000c743	movl	-0x344(%rbp), %eax
000000000000c749	cmpl	$0x47, %eax
000000000000c74c	je	0xc78d
000000000000c74e	cmpl	$0x204, %eax
000000000000c753	jne	0xc794
000000000000c755	cmpl	$0x0, -0x358(%rbp)
000000000000c75c	movl	-0x354(%rbp), %eax
000000000000c762	js	0xc7b9
000000000000c764	movl	$0xfffffed4, %ebx
000000000000c769	cmpl	$0x24, %eax
000000000000c76c	jne	0xc799
000000000000c76e	movl	-0x338(%rbp), %eax
000000000000c774	testl	%eax, %eax
000000000000c776	movl	$0xfffffed4, %ebx
000000000000c77b	cmovnel	%eax, %ebx
000000000000c77e	jmp	0xc799
000000000000c780	movl	-0x34c(%rbp), %edi
000000000000c786	callq	_mig_dealloc_reply_port
000000000000c78b	jmp	0xc7a5
000000000000c78d	movl	$0xfffffecc, %ebx
000000000000c792	jmp	0xc799
000000000000c794	movl	$0xfffffed3, %ebx
000000000000c799	leaq	-0x358(%rbp), %rdi
000000000000c7a0	callq	_mach_msg_destroy
000000000000c7a5	movl	%ebx, %eax
000000000000c7a7	addq	$0x338, %rsp
000000000000c7ae	popq	%rbx
000000000000c7af	popq	%r12
000000000000c7b1	popq	%r13
000000000000c7b3	popq	%r14
000000000000c7b5	popq	%r15
000000000000c7b7	popq	%rbp
000000000000c7b8	retq
000000000000c7b9	leal	-0x1a8(%rax), %ecx
000000000000c7bf	movl	$0xfffffed4, %ebx
000000000000c7c4	cmpl	$0x180, %ecx
000000000000c7ca	ja	0xc799
000000000000c7cc	cmpl	$0x20, -0x340(%rbp)
000000000000c7d3	jne	0xc799
000000000000c7d5	leaq	-0x33c(%rbp), %r13
000000000000c7dc	leaq	-0x334(%rbp), %rdx
000000000000c7e3	xorl	%esi, %esi
000000000000c7e5	cmpl	$0xffffff, (%rdx)
000000000000c7eb	ja	0xc799
000000000000c7ed	incl	%esi
000000000000c7ef	addq	$0xc, %rdx
000000000000c7f3	cmpl	$0x20, %esi
000000000000c7f6	jb	0xc7e5
000000000000c7f8	movslq	-0x1b4(%rbp), %r12
000000000000c7ff	cmpq	$0x20, %r12
000000000000c803	ja	0xc799
000000000000c805	shrl	$0x2, %ecx
000000000000c808	cmpl	%r12d, %ecx
000000000000c80b	jb	0xc799
000000000000c80d	leal	(,%r12,4), %ecx
000000000000c815	leal	0x1a8(%rcx), %edx
000000000000c81b	cmpl	%edx, %eax
000000000000c81d	jb	0xc799
000000000000c823	subl	%ecx, %eax
000000000000c825	cmpl	%edx, %eax
000000000000c827	jb	0xc799
000000000000c82d	leal	-0x1a8(%rax), %esi
000000000000c833	shrl	$0x2, %esi
000000000000c836	cmpl	%r12d, %esi
000000000000c839	jb	0xc799
000000000000c83f	subl	%ecx, %eax
000000000000c841	cmpl	%edx, %eax
000000000000c843	jne	0xc799
000000000000c849	addl	$0xfffffe58, %eax
000000000000c84e	shrl	$0x2, %eax
000000000000c851	cmpl	%r12d, %eax
000000000000c854	jb	0xc799
000000000000c85a	movl	%ecx, %eax
000000000000c85c	leaq	-0x80(%rax), %rbx
000000000000c860	leaq	-0x80(%rax,%r15), %r15
000000000000c865	addq	%r15, %rbx
000000000000c868	leaq	-0x1b0(%rbp), %rsi
000000000000c86f	movq	%r14, %rdi
000000000000c872	movq	%rax, %r14
000000000000c875	movq	%rax, %rdx
000000000000c878	callq	_memcpy
000000000000c87d	movq	0x18(%rbp), %rdx
000000000000c881	movq	0x10(%rbp), %rax
000000000000c885	movl	%r12d, (%rax)
000000000000c888	testl	%r12d, %r12d
000000000000c88b	je	0xc8a2
000000000000c88d	xorl	%eax, %eax
000000000000c88f	movl	(%r13), %ecx
000000000000c893	movl	%ecx, (%rdx,%rax,4)
000000000000c896	addq	$0xc, %r13
000000000000c89a	incq	%rax
000000000000c89d	cmpq	%r12, %rax
000000000000c8a0	jl	0xc88f
000000000000c8a2	addq	$0x228, %r15
000000000000c8a9	movq	0x20(%rbp), %rdi
000000000000c8ad	movq	%r15, %rsi
000000000000c8b0	movq	%r14, %rdx
000000000000c8b3	callq	_memcpy
000000000000c8b8	addq	$0x2a8, %rbx
000000000000c8bf	movq	0x28(%rbp), %rdi
000000000000c8c3	movq	%rbx, %rsi
000000000000c8c6	movq	%r14, %rdx
000000000000c8c9	callq	_memcpy
000000000000c8ce	xorl	%ebx, %ebx
000000000000c8d0	jmp	0xc7a5
_mach_vm_wire:
000000000000c8d5	pushq	%rbp
000000000000c8d6	movq	%rsp, %rbp
000000000000c8d9	pushq	%rbx
000000000000c8da	subq	$0x58, %rsp
000000000000c8de	leaq	-0x50(%rbp), %rbx
000000000000c8e2	movl	$0x1, 0x18(%rbx)
000000000000c8e9	movl	%esi, 0x1c(%rbx)
000000000000c8ec	movl	$0x130000, 0x24(%rbx)
000000000000c8f3	leaq	_NDR_record(%rip), %rax
000000000000c8fa	movq	(%rax), %rax
000000000000c8fd	movq	%rax, 0x28(%rbx)
000000000000c901	movq	%rdx, 0x30(%rbx)
000000000000c905	movq	%rcx, 0x38(%rbx)
000000000000c909	movl	%r8d, 0x40(%rbx)
000000000000c90d	movl	$0x80001513, (%rbx)
000000000000c913	movl	%edi, 0x8(%rbx)
000000000000c916	callq	_mig_get_reply_port
000000000000c91b	movl	%eax, 0xc(%rbx)
000000000000c91e	movabsq	$0x1a200000000, %rcx
000000000000c928	movq	%rcx, 0x10(%rbx)
000000000000c92c	movl	$0x0, (%rsp)
000000000000c933	movl	$0x3, %esi
000000000000c938	movl	$0x44, %edx
000000000000c93d	movl	$0x2c, %ecx
000000000000c942	xorl	%r9d, %r9d
000000000000c945	movq	%rbx, %rdi
000000000000c948	movl	%eax, %r8d
000000000000c94b	callq	_mach_msg
000000000000c950	movl	%eax, %ebx
000000000000c952	leal	-0x10000002(%rbx), %eax
000000000000c958	cmpl	$0xe, %eax
000000000000c95b	ja	0xc971
000000000000c95d	movl	$0x4003, %ecx
000000000000c962	btl	%eax, %ecx
000000000000c965	jae	0xc971
000000000000c967	movl	-0x44(%rbp), %edi
000000000000c96a	callq	_mig_put_reply_port
000000000000c96f	jmp	0xc9bf
000000000000c971	testl	%ebx, %ebx
000000000000c973	jne	0xc9a0
000000000000c975	movl	-0x3c(%rbp), %eax
000000000000c978	cmpl	$0x47, %eax
000000000000c97b	je	0xc9aa
000000000000c97d	cmpl	$0x206, %eax
000000000000c982	jne	0xc9b1
000000000000c984	movl	$0xfffffed4, %ebx
000000000000c989	cmpl	$0x0, -0x50(%rbp)
000000000000c98d	js	0xc9b6
000000000000c98f	cmpl	$0x24, -0x4c(%rbp)
000000000000c993	jne	0xc9b6
000000000000c995	movl	-0x30(%rbp), %ebx
000000000000c998	testl	%ebx, %ebx
000000000000c99a	jne	0xc9b6
000000000000c99c	xorl	%ebx, %ebx
000000000000c99e	jmp	0xc9bf
000000000000c9a0	movl	-0x44(%rbp), %edi
000000000000c9a3	callq	_mig_dealloc_reply_port
000000000000c9a8	jmp	0xc9bf
000000000000c9aa	movl	$0xfffffecc, %ebx
000000000000c9af	jmp	0xc9b6
000000000000c9b1	movl	$0xfffffed3, %ebx
000000000000c9b6	leaq	-0x50(%rbp), %rdi
000000000000c9ba	callq	_mach_msg_destroy
000000000000c9bf	movl	%ebx, %eax
000000000000c9c1	addq	$0x58, %rsp
000000000000c9c5	popq	%rbx
000000000000c9c6	popq	%rbp
000000000000c9c7	retq
_host_processor_sets:
000000000000c9c8	pushq	%rbp
000000000000c9c9	movq	%rsp, %rbp
000000000000c9cc	pushq	%r15
000000000000c9ce	pushq	%r14
000000000000c9d0	pushq	%rbx
000000000000c9d1	subq	$0x48, %rsp
000000000000c9d5	movq	%rdx, %r14
000000000000c9d8	movq	%rsi, %r15
000000000000c9db	leaq	-0x58(%rbp), %rbx
000000000000c9df	movl	$0x1513, (%rbx)
000000000000c9e5	movl	%edi, 0x8(%rbx)
000000000000c9e8	callq	_mig_get_reply_port
000000000000c9ed	movl	%eax, 0xc(%rbx)
000000000000c9f0	movabsq	$0x1a300000000, %rcx
000000000000c9fa	movq	%rcx, 0x10(%rbx)
000000000000c9fe	movl	$0x0, (%rsp)
000000000000ca05	movl	$0x3, %esi
000000000000ca0a	movl	$0x18, %edx
000000000000ca0f	movl	$0x40, %ecx
000000000000ca14	xorl	%r9d, %r9d
000000000000ca17	movq	%rbx, %rdi
000000000000ca1a	movl	%eax, %r8d
000000000000ca1d	callq	_mach_msg
000000000000ca22	movl	%eax, %ebx
000000000000ca24	leal	-0x10000002(%rbx), %eax
000000000000ca2a	cmpl	$0xe, %eax
000000000000ca2d	ja	0xca43
000000000000ca2f	movl	$0x4003, %ecx
000000000000ca34	btl	%eax, %ecx
000000000000ca37	jae	0xca43
000000000000ca39	movl	-0x4c(%rbp), %edi
000000000000ca3c	callq	_mig_put_reply_port
000000000000ca41	jmp	0xca97
000000000000ca43	testl	%ebx, %ebx
000000000000ca45	jne	0xca78
000000000000ca47	movl	-0x44(%rbp), %eax
000000000000ca4a	cmpl	$0x47, %eax
000000000000ca4d	je	0xca82
000000000000ca4f	cmpl	$0x207, %eax
000000000000ca54	jne	0xca89
000000000000ca56	cmpl	$0x0, -0x58(%rbp)
000000000000ca5a	movl	-0x54(%rbp), %eax
000000000000ca5d	movl	$0xfffffed4, %ebx
000000000000ca62	js	0xcaa4
000000000000ca64	cmpl	$0x24, %eax
000000000000ca67	jne	0xca8e
000000000000ca69	movl	-0x38(%rbp), %eax
000000000000ca6c	testl	%eax, %eax
000000000000ca6e	movl	$0xfffffed4, %ebx
000000000000ca73	cmovnel	%eax, %ebx
000000000000ca76	jmp	0xca8e
000000000000ca78	movl	-0x4c(%rbp), %edi
000000000000ca7b	callq	_mig_dealloc_reply_port
000000000000ca80	jmp	0xca97
000000000000ca82	movl	$0xfffffecc, %ebx
000000000000ca87	jmp	0xca8e
000000000000ca89	movl	$0xfffffed3, %ebx
000000000000ca8e	leaq	-0x58(%rbp), %rdi
000000000000ca92	callq	_mach_msg_destroy
000000000000ca97	movl	%ebx, %eax
000000000000ca99	addq	$0x48, %rsp
000000000000ca9d	popq	%rbx
000000000000ca9e	popq	%r14
000000000000caa0	popq	%r15
000000000000caa2	popq	%rbp
000000000000caa3	retq
000000000000caa4	cmpl	$0x38, %eax
000000000000caa7	jne	0xca8e
000000000000caa9	cmpl	$0x1, -0x40(%rbp)
000000000000caad	jne	0xca8e
000000000000caaf	movl	$0xffff0000, %eax
000000000000cab4	andl	-0x34(%rbp), %eax
000000000000cab7	cmpl	$0x2110000, %eax
000000000000cabc	jne	0xca8e
000000000000cabe	movl	-0x30(%rbp), %eax
000000000000cac1	cmpl	-0x24(%rbp), %eax
000000000000cac4	jne	0xca8e
000000000000cac6	movq	-0x3c(%rbp), %rcx
000000000000caca	movq	%rcx, (%r15)
000000000000cacd	movl	%eax, (%r14)
000000000000cad0	xorl	%ebx, %ebx
000000000000cad2	jmp	0xca97
_host_processor_set_priv:
000000000000cad4	pushq	%rbp
000000000000cad5	movq	%rsp, %rbp
000000000000cad8	pushq	%r14
000000000000cada	pushq	%rbx
000000000000cadb	subq	$0x40, %rsp
000000000000cadf	movq	%rdx, %r14
000000000000cae2	leaq	-0x40(%rbp), %rbx
000000000000cae6	movl	$0x1, 0x18(%rbx)
000000000000caed	movl	%esi, 0x1c(%rbx)
000000000000caf0	movl	$0x130000, 0x24(%rbx)
000000000000caf7	movl	$0x80001513, (%rbx)
000000000000cafd	movl	%edi, 0x8(%rbx)
000000000000cb00	callq	_mig_get_reply_port
000000000000cb05	movl	%eax, 0xc(%rbx)
000000000000cb08	movabsq	$0x1a400000000, %rcx
000000000000cb12	movq	%rcx, 0x10(%rbx)
000000000000cb16	movl	$0x0, (%rsp)
000000000000cb1d	movl	$0x3, %esi
000000000000cb22	movl	$0x28, %edx
000000000000cb27	movl	$0x30, %ecx
000000000000cb2c	xorl	%r9d, %r9d
000000000000cb2f	movq	%rbx, %rdi
000000000000cb32	movl	%eax, %r8d
000000000000cb35	callq	_mach_msg
000000000000cb3a	movl	%eax, %ebx
000000000000cb3c	leal	-0x10000002(%rbx), %eax
000000000000cb42	cmpl	$0xe, %eax
000000000000cb45	ja	0xcb5b
000000000000cb47	movl	$0x4003, %ecx
000000000000cb4c	btl	%eax, %ecx
000000000000cb4f	jae	0xcb5b
000000000000cb51	movl	-0x34(%rbp), %edi
000000000000cb54	callq	_mig_put_reply_port
000000000000cb59	jmp	0xcbaf
000000000000cb5b	testl	%ebx, %ebx
000000000000cb5d	jne	0xcb90
000000000000cb5f	movl	-0x2c(%rbp), %eax
000000000000cb62	cmpl	$0x47, %eax
000000000000cb65	je	0xcb9a
000000000000cb67	cmpl	$0x208, %eax
000000000000cb6c	jne	0xcba1
000000000000cb6e	cmpl	$0x0, -0x40(%rbp)
000000000000cb72	movl	-0x3c(%rbp), %eax
000000000000cb75	movl	$0xfffffed4, %ebx
000000000000cb7a	js	0xcbba
000000000000cb7c	cmpl	$0x24, %eax
000000000000cb7f	jne	0xcba6
000000000000cb81	movl	-0x20(%rbp), %eax
000000000000cb84	testl	%eax, %eax
000000000000cb86	movl	$0xfffffed4, %ebx
000000000000cb8b	cmovnel	%eax, %ebx
000000000000cb8e	jmp	0xcba6
000000000000cb90	movl	-0x34(%rbp), %edi
000000000000cb93	callq	_mig_dealloc_reply_port
000000000000cb98	jmp	0xcbaf
000000000000cb9a	movl	$0xfffffecc, %ebx
000000000000cb9f	jmp	0xcba6
000000000000cba1	movl	$0xfffffed3, %ebx
000000000000cba6	leaq	-0x40(%rbp), %rdi
000000000000cbaa	callq	_mach_msg_destroy
000000000000cbaf	movl	%ebx, %eax
000000000000cbb1	addq	$0x40, %rsp
000000000000cbb5	popq	%rbx
000000000000cbb6	popq	%r14
000000000000cbb8	popq	%rbp
000000000000cbb9	retq
000000000000cbba	cmpl	$0x28, %eax
000000000000cbbd	jne	0xcba6
000000000000cbbf	cmpl	$0x1, -0x28(%rbp)
000000000000cbc3	jne	0xcba6
000000000000cbc5	movl	$0xffff0000, %eax
000000000000cbca	andl	-0x1c(%rbp), %eax
000000000000cbcd	cmpl	$0x110000, %eax
000000000000cbd2	jne	0xcba6
000000000000cbd4	movl	-0x24(%rbp), %eax
000000000000cbd7	movl	%eax, (%r14)
000000000000cbda	xorl	%ebx, %ebx
000000000000cbdc	jmp	0xcbaf
_host_set_UNDServer:
000000000000cbde	pushq	%rbp
000000000000cbdf	movq	%rsp, %rbp
000000000000cbe2	pushq	%rbx
000000000000cbe3	subq	$0x38, %rsp
000000000000cbe7	leaq	-0x38(%rbp), %rbx
000000000000cbeb	movl	$0x1, 0x18(%rbx)
000000000000cbf2	movl	%esi, 0x1c(%rbx)
000000000000cbf5	movl	$0x130000, 0x24(%rbx)
000000000000cbfc	movl	$0x80001513, (%rbx)
000000000000cc02	movl	%edi, 0x8(%rbx)
000000000000cc05	callq	_mig_get_reply_port
000000000000cc0a	movl	%eax, 0xc(%rbx)
000000000000cc0d	movabsq	$0x1a700000000, %rcx
000000000000cc17	movq	%rcx, 0x10(%rbx)
000000000000cc1b	movl	$0x0, (%rsp)
000000000000cc22	movl	$0x3, %esi
000000000000cc27	movl	$0x28, %edx
000000000000cc2c	movl	$0x2c, %ecx
000000000000cc31	xorl	%r9d, %r9d
000000000000cc34	movq	%rbx, %rdi
000000000000cc37	movl	%eax, %r8d
000000000000cc3a	callq	_mach_msg
000000000000cc3f	movl	%eax, %ebx
000000000000cc41	leal	-0x10000002(%rbx), %eax
000000000000cc47	cmpl	$0xe, %eax
000000000000cc4a	ja	0xcc60
000000000000cc4c	movl	$0x4003, %ecx
000000000000cc51	btl	%eax, %ecx
000000000000cc54	jae	0xcc60
000000000000cc56	movl	-0x2c(%rbp), %edi
000000000000cc59	callq	_mig_put_reply_port
000000000000cc5e	jmp	0xccae
000000000000cc60	testl	%ebx, %ebx
000000000000cc62	jne	0xcc8f
000000000000cc64	movl	-0x24(%rbp), %eax
000000000000cc67	cmpl	$0x47, %eax
000000000000cc6a	je	0xcc99
000000000000cc6c	cmpl	$0x20b, %eax
000000000000cc71	jne	0xcca0
000000000000cc73	movl	$0xfffffed4, %ebx
000000000000cc78	cmpl	$0x0, -0x38(%rbp)
000000000000cc7c	js	0xcca5
000000000000cc7e	cmpl	$0x24, -0x34(%rbp)
000000000000cc82	jne	0xcca5
000000000000cc84	movl	-0x18(%rbp), %ebx
000000000000cc87	testl	%ebx, %ebx
000000000000cc89	jne	0xcca5
000000000000cc8b	xorl	%ebx, %ebx
000000000000cc8d	jmp	0xccae
000000000000cc8f	movl	-0x2c(%rbp), %edi
000000000000cc92	callq	_mig_dealloc_reply_port
000000000000cc97	jmp	0xccae
000000000000cc99	movl	$0xfffffecc, %ebx
000000000000cc9e	jmp	0xcca5
000000000000cca0	movl	$0xfffffed3, %ebx
000000000000cca5	leaq	-0x38(%rbp), %rdi
000000000000cca9	callq	_mach_msg_destroy
000000000000ccae	movl	%ebx, %eax
000000000000ccb0	addq	$0x38, %rsp
000000000000ccb4	popq	%rbx
000000000000ccb5	popq	%rbp
000000000000ccb6	retq
_host_get_UNDServer:
000000000000ccb7	pushq	%rbp
000000000000ccb8	movq	%rsp, %rbp
000000000000ccbb	pushq	%r14
000000000000ccbd	pushq	%rbx
000000000000ccbe	subq	$0x40, %rsp
000000000000ccc2	movq	%rsi, %r14
000000000000ccc5	leaq	-0x40(%rbp), %rbx
000000000000ccc9	movl	$0x1513, (%rbx)
000000000000cccf	movl	%edi, 0x8(%rbx)
000000000000ccd2	callq	_mig_get_reply_port
000000000000ccd7	movl	%eax, 0xc(%rbx)
000000000000ccda	movabsq	$0x1a800000000, %rcx
000000000000cce4	movq	%rcx, 0x10(%rbx)
000000000000cce8	movl	$0x0, (%rsp)
000000000000ccef	movl	$0x3, %esi
000000000000ccf4	movl	$0x18, %edx
000000000000ccf9	movl	$0x30, %ecx
000000000000ccfe	xorl	%r9d, %r9d
000000000000cd01	movq	%rbx, %rdi
000000000000cd04	movl	%eax, %r8d
000000000000cd07	callq	_mach_msg
000000000000cd0c	movl	%eax, %ebx
000000000000cd0e	leal	-0x10000002(%rbx), %eax
000000000000cd14	cmpl	$0xe, %eax
000000000000cd17	ja	0xcd2d
000000000000cd19	movl	$0x4003, %ecx
000000000000cd1e	btl	%eax, %ecx
000000000000cd21	jae	0xcd2d
000000000000cd23	movl	-0x34(%rbp), %edi
000000000000cd26	callq	_mig_put_reply_port
000000000000cd2b	jmp	0xcd81
000000000000cd2d	testl	%ebx, %ebx
000000000000cd2f	jne	0xcd62
000000000000cd31	movl	-0x2c(%rbp), %eax
000000000000cd34	cmpl	$0x47, %eax
000000000000cd37	je	0xcd6c
000000000000cd39	cmpl	$0x20c, %eax
000000000000cd3e	jne	0xcd73
000000000000cd40	cmpl	$0x0, -0x40(%rbp)
000000000000cd44	movl	-0x3c(%rbp), %eax
000000000000cd47	movl	$0xfffffed4, %ebx
000000000000cd4c	js	0xcd8c
000000000000cd4e	cmpl	$0x24, %eax
000000000000cd51	jne	0xcd78
000000000000cd53	movl	-0x20(%rbp), %eax
000000000000cd56	testl	%eax, %eax
000000000000cd58	movl	$0xfffffed4, %ebx
000000000000cd5d	cmovnel	%eax, %ebx
000000000000cd60	jmp	0xcd78
000000000000cd62	movl	-0x34(%rbp), %edi
000000000000cd65	callq	_mig_dealloc_reply_port
000000000000cd6a	jmp	0xcd81
000000000000cd6c	movl	$0xfffffecc, %ebx
000000000000cd71	jmp	0xcd78
000000000000cd73	movl	$0xfffffed3, %ebx
000000000000cd78	leaq	-0x40(%rbp), %rdi
000000000000cd7c	callq	_mach_msg_destroy
000000000000cd81	movl	%ebx, %eax
000000000000cd83	addq	$0x40, %rsp
000000000000cd87	popq	%rbx
000000000000cd88	popq	%r14
000000000000cd8a	popq	%rbp
000000000000cd8b	retq
000000000000cd8c	cmpl	$0x28, %eax
000000000000cd8f	jne	0xcd78
000000000000cd91	cmpl	$0x1, -0x28(%rbp)
000000000000cd95	jne	0xcd78
000000000000cd97	movl	$0xffff0000, %eax
000000000000cd9c	andl	-0x1c(%rbp), %eax
000000000000cd9f	cmpl	$0x110000, %eax
000000000000cda4	jne	0xcd78
000000000000cda6	movl	-0x24(%rbp), %eax
000000000000cda9	movl	%eax, (%r14)
000000000000cdac	xorl	%ebx, %ebx
000000000000cdae	jmp	0xcd81
_kext_request:
000000000000cdb0	pushq	%rbp
000000000000cdb1	movq	%rsp, %rbp
000000000000cdb4	pushq	%r15
000000000000cdb6	pushq	%r14
000000000000cdb8	pushq	%rbx
000000000000cdb9	subq	$0x68, %rsp
000000000000cdbd	movq	%r9, %r14
000000000000cdc0	movq	%r8, %r15
000000000000cdc3	leaq	-0x70(%rbp), %rbx
000000000000cdc7	movl	$0x1, 0x18(%rbx)
000000000000cdce	movq	%rdx, 0x1c(%rbx)
000000000000cdd2	movl	%ecx, 0x28(%rbx)
000000000000cdd5	movl	$0x1000100, 0x24(%rbx)
000000000000cddc	leaq	_NDR_record(%rip), %rax
000000000000cde3	movq	(%rax), %rax
000000000000cde6	movq	%rax, 0x2c(%rbx)
000000000000cdea	movl	%esi, 0x34(%rbx)
000000000000cded	movl	%ecx, 0x38(%rbx)
000000000000cdf0	movl	$0x80001513, (%rbx)
000000000000cdf6	movl	%edi, 0x8(%rbx)
000000000000cdf9	callq	_mig_get_reply_port
000000000000cdfe	movl	%eax, 0xc(%rbx)
000000000000ce01	movabsq	$0x1a900000000, %rcx
000000000000ce0b	movq	%rcx, 0x10(%rbx)
000000000000ce0f	movl	$0x0, (%rsp)
000000000000ce16	movl	$0x3, %esi
000000000000ce1b	movl	$0x3c, %edx
000000000000ce20	movl	$0x58, %ecx
000000000000ce25	xorl	%r9d, %r9d
000000000000ce28	movq	%rbx, %rdi
000000000000ce2b	movl	%eax, %r8d
000000000000ce2e	callq	_mach_msg
000000000000ce33	movl	%eax, %ebx
000000000000ce35	leal	-0x10000002(%rbx), %eax
000000000000ce3b	cmpl	$0xe, %eax
000000000000ce3e	ja	0xce54
000000000000ce40	movl	$0x4003, %ecx
000000000000ce45	btl	%eax, %ecx
000000000000ce48	jae	0xce54
000000000000ce4a	movl	-0x64(%rbp), %edi
000000000000ce4d	callq	_mig_put_reply_port
000000000000ce52	jmp	0xcea8
000000000000ce54	testl	%ebx, %ebx
000000000000ce56	jne	0xce89
000000000000ce58	movl	-0x5c(%rbp), %eax
000000000000ce5b	cmpl	$0x47, %eax
000000000000ce5e	je	0xce93
000000000000ce60	cmpl	$0x20d, %eax
000000000000ce65	jne	0xce9a
000000000000ce67	cmpl	$0x0, -0x70(%rbp)
000000000000ce6b	movl	-0x6c(%rbp), %eax
000000000000ce6e	movl	$0xfffffed4, %ebx
000000000000ce73	js	0xceb5
000000000000ce75	cmpl	$0x24, %eax
000000000000ce78	jne	0xce9f
000000000000ce7a	movl	-0x50(%rbp), %eax
000000000000ce7d	testl	%eax, %eax
000000000000ce7f	movl	$0xfffffed4, %ebx
000000000000ce84	cmovnel	%eax, %ebx
000000000000ce87	jmp	0xce9f
000000000000ce89	movl	-0x64(%rbp), %edi
000000000000ce8c	callq	_mig_dealloc_reply_port
000000000000ce91	jmp	0xcea8
000000000000ce93	movl	$0xfffffecc, %ebx
000000000000ce98	jmp	0xce9f
000000000000ce9a	movl	$0xfffffed3, %ebx
000000000000ce9f	leaq	-0x70(%rbp), %rdi
000000000000cea3	callq	_mach_msg_destroy
000000000000cea8	movl	%ebx, %eax
000000000000ceaa	addq	$0x68, %rsp
000000000000ceae	popq	%rbx
000000000000ceaf	popq	%r14
000000000000ceb1	popq	%r15
000000000000ceb3	popq	%rbp
000000000000ceb4	retq
000000000000ceb5	cmpl	$0x50, %eax
000000000000ceb8	jne	0xce9f
000000000000ceba	cmpl	$0x2, -0x58(%rbp)
000000000000cebe	jne	0xce9f
000000000000cec0	movl	$0xff000000, %eax
000000000000cec5	movl	-0x4c(%rbp), %ecx
000000000000cec8	andl	%eax, %ecx
000000000000ceca	cmpl	$0x1000000, %ecx
000000000000ced0	jne	0xce9f
000000000000ced2	andl	-0x3c(%rbp), %eax
000000000000ced5	cmpl	$0x1000000, %eax
000000000000ceda	jne	0xce9f
000000000000cedc	movl	-0x48(%rbp), %eax
000000000000cedf	cmpl	-0x2c(%rbp), %eax
000000000000cee2	jne	0xce9f
000000000000cee4	movl	-0x38(%rbp), %ecx
000000000000cee7	cmpl	-0x28(%rbp), %ecx
000000000000ceea	jne	0xce9f
000000000000ceec	movq	0x20(%rbp), %rdx
000000000000cef0	movq	0x18(%rbp), %rsi
000000000000cef4	movq	0x10(%rbp), %rdi
000000000000cef8	movq	-0x54(%rbp), %rbx
000000000000cefc	movq	%rbx, (%r15)
000000000000ceff	movl	%eax, (%r14)
000000000000cf02	movq	-0x44(%rbp), %rax
000000000000cf06	movq	%rax, (%rdi)
000000000000cf09	movl	%ecx, (%rsi)
000000000000cf0b	movl	-0x24(%rbp), %eax
000000000000cf0e	movl	%eax, (%rdx)
000000000000cf10	xorl	%ebx, %ebx
000000000000cf12	jmp	0xcea8
_host_security_create_task_token:
000000000000cf14	pushq	%rbp
000000000000cf15	movq	%rsp, %rbp
000000000000cf18	pushq	%rbx
000000000000cf19	subq	$0x88, %rsp
000000000000cf20	movl	0x30(%rbp), %eax
000000000000cf23	leaq	-0x88(%rbp), %rbx
000000000000cf2a	movl	$0x3, 0x18(%rbx)
000000000000cf31	movl	%esi, 0x1c(%rbx)
000000000000cf34	movl	$0x130000, %esi
000000000000cf39	movl	%esi, 0x24(%rbx)
000000000000cf3c	movl	%ecx, 0x28(%rbx)
000000000000cf3f	movl	%esi, 0x30(%rbx)
000000000000cf42	movq	%r8, 0x34(%rbx)
000000000000cf46	movl	%r9d, 0x40(%rbx)
000000000000cf4a	movl	$0x2130000, 0x3c(%rbx)
000000000000cf51	leaq	_NDR_record(%rip), %rcx
000000000000cf58	movq	(%rcx), %rcx
000000000000cf5b	movq	%rcx, 0x44(%rbx)
000000000000cf5f	movq	%rdx, 0x4c(%rbx)
000000000000cf63	movq	0x10(%rbp), %rcx
000000000000cf67	movq	0x18(%rbp), %rdx
000000000000cf6b	movq	%rcx, 0x54(%rbx)
000000000000cf6f	movq	%rdx, 0x5c(%rbx)
000000000000cf73	movq	0x20(%rbp), %rcx
000000000000cf77	movq	%rcx, 0x64(%rbx)
000000000000cf7b	movq	0x28(%rbp), %rcx
000000000000cf7f	movq	%rcx, 0x6c(%rbx)
000000000000cf83	movl	%r9d, 0x74(%rbx)
000000000000cf87	movl	%eax, 0x78(%rbx)
000000000000cf8a	movl	$0x80001513, (%rbx)
000000000000cf90	movl	%edi, 0x8(%rbx)
000000000000cf93	callq	_mig_get_reply_port
000000000000cf98	movl	%eax, 0xc(%rbx)
000000000000cf9b	movabsq	$0x25800000000, %rcx
000000000000cfa5	movq	%rcx, 0x10(%rbx)
000000000000cfa9	movl	$0x0, (%rsp)
000000000000cfb0	movl	$0x3, %esi
000000000000cfb5	movl	$0x7c, %edx
000000000000cfba	movl	$0x30, %ecx
000000000000cfbf	xorl	%r9d, %r9d
000000000000cfc2	movq	%rbx, %rdi
000000000000cfc5	movl	%eax, %r8d
000000000000cfc8	callq	_mach_msg
000000000000cfcd	movl	%eax, %ebx
000000000000cfcf	leal	-0x10000002(%rbx), %eax
000000000000cfd5	cmpl	$0xe, %eax
000000000000cfd8	ja	0xcfee
000000000000cfda	movl	$0x4003, %ecx
000000000000cfdf	btl	%eax, %ecx
000000000000cfe2	jae	0xcfee
000000000000cfe4	movl	-0x7c(%rbp), %edi
000000000000cfe7	callq	_mig_put_reply_port
000000000000cfec	jmp	0xd04b
000000000000cfee	testl	%ebx, %ebx
000000000000cff0	jne	0xd029
000000000000cff2	movl	-0x74(%rbp), %eax
000000000000cff5	cmpl	$0x47, %eax
000000000000cff8	je	0xd033
000000000000cffa	cmpl	$0x2bc, %eax
000000000000cfff	jne	0xd03a
000000000000d001	cmpl	$0x0, -0x88(%rbp)
000000000000d008	movl	-0x84(%rbp), %eax
000000000000d00e	movl	$0xfffffed4, %ebx
000000000000d013	js	0xd057
000000000000d015	cmpl	$0x24, %eax
000000000000d018	jne	0xd03f
000000000000d01a	movl	-0x68(%rbp), %eax
000000000000d01d	testl	%eax, %eax
000000000000d01f	movl	$0xfffffed4, %ebx
000000000000d024	cmovnel	%eax, %ebx
000000000000d027	jmp	0xd03f
000000000000d029	movl	-0x7c(%rbp), %edi
000000000000d02c	callq	_mig_dealloc_reply_port
000000000000d031	jmp	0xd04b
000000000000d033	movl	$0xfffffecc, %ebx
000000000000d038	jmp	0xd03f
000000000000d03a	movl	$0xfffffed3, %ebx
000000000000d03f	leaq	-0x88(%rbp), %rdi
000000000000d046	callq	_mach_msg_destroy
000000000000d04b	movl	%ebx, %eax
000000000000d04d	addq	$0x88, %rsp
000000000000d054	popq	%rbx
000000000000d055	popq	%rbp
000000000000d056	retq
000000000000d057	cmpl	$0x28, %eax
000000000000d05a	jne	0xd03f
000000000000d05c	cmpl	$0x1, -0x70(%rbp)
000000000000d060	jne	0xd03f
000000000000d062	movl	$0xffff0000, %eax
000000000000d067	andl	-0x64(%rbp), %eax
000000000000d06a	cmpl	$0x110000, %eax
000000000000d06f	jne	0xd03f
000000000000d071	movq	0x38(%rbp), %rax
000000000000d075	movl	-0x6c(%rbp), %ecx
000000000000d078	movl	%ecx, (%rax)
000000000000d07a	xorl	%ebx, %ebx
000000000000d07c	jmp	0xd04b
_host_security_set_task_token:
000000000000d07e	pushq	%rbp
000000000000d07f	movq	%rsp, %rbp
000000000000d082	pushq	%rbx
000000000000d083	subq	$0x78, %rsp
000000000000d087	leaq	-0x70(%rbp), %rbx
000000000000d08b	movl	$0x2, 0x18(%rbx)
000000000000d092	movl	%esi, 0x1c(%rbx)
000000000000d095	movl	$0x130000, %eax
000000000000d09a	movl	%eax, 0x24(%rbx)
000000000000d09d	movl	%ecx, 0x28(%rbx)
000000000000d0a0	movl	%eax, 0x30(%rbx)
000000000000d0a3	leaq	_NDR_record(%rip), %rax
000000000000d0aa	movq	(%rax), %rax
000000000000d0ad	movq	%rax, 0x34(%rbx)
000000000000d0b1	movq	%rdx, 0x3c(%rbx)
000000000000d0b5	movq	0x10(%rbp), %rax
000000000000d0b9	movq	0x18(%rbp), %rcx
000000000000d0bd	movq	%rax, 0x44(%rbx)
000000000000d0c1	movq	%rcx, 0x4c(%rbx)
000000000000d0c5	movq	0x20(%rbp), %rax
000000000000d0c9	movq	%rax, 0x54(%rbx)
000000000000d0cd	movq	0x28(%rbp), %rax
000000000000d0d1	movq	%rax, 0x5c(%rbx)
000000000000d0d5	movl	$0x80001513, (%rbx)
000000000000d0db	movl	%edi, 0x8(%rbx)
000000000000d0de	callq	_mig_get_reply_port
000000000000d0e3	movl	%eax, 0xc(%rbx)
000000000000d0e6	movabsq	$0x25900000000, %rcx
000000000000d0f0	movq	%rcx, 0x10(%rbx)
000000000000d0f4	movl	$0x0, (%rsp)
000000000000d0fb	movl	$0x3, %esi
000000000000d100	movl	$0x64, %edx
000000000000d105	movl	$0x2c, %ecx
000000000000d10a	xorl	%r9d, %r9d
000000000000d10d	movq	%rbx, %rdi
000000000000d110	movl	%eax, %r8d
000000000000d113	callq	_mach_msg
000000000000d118	movl	%eax, %ebx
000000000000d11a	leal	-0x10000002(%rbx), %eax
000000000000d120	cmpl	$0xe, %eax
000000000000d123	ja	0xd139
000000000000d125	movl	$0x4003, %ecx
000000000000d12a	btl	%eax, %ecx
000000000000d12d	jae	0xd139
000000000000d12f	movl	-0x64(%rbp), %edi
000000000000d132	callq	_mig_put_reply_port
000000000000d137	jmp	0xd187
000000000000d139	testl	%ebx, %ebx
000000000000d13b	jne	0xd168
000000000000d13d	movl	-0x5c(%rbp), %eax
000000000000d140	cmpl	$0x47, %eax
000000000000d143	je	0xd172
000000000000d145	cmpl	$0x2bd, %eax
000000000000d14a	jne	0xd179
000000000000d14c	movl	$0xfffffed4, %ebx
000000000000d151	cmpl	$0x0, -0x70(%rbp)
000000000000d155	js	0xd17e
000000000000d157	cmpl	$0x24, -0x6c(%rbp)
000000000000d15b	jne	0xd17e
000000000000d15d	movl	-0x50(%rbp), %ebx
000000000000d160	testl	%ebx, %ebx
000000000000d162	jne	0xd17e
000000000000d164	xorl	%ebx, %ebx
000000000000d166	jmp	0xd187
000000000000d168	movl	-0x64(%rbp), %edi
000000000000d16b	callq	_mig_dealloc_reply_port
000000000000d170	jmp	0xd187
000000000000d172	movl	$0xfffffecc, %ebx
000000000000d177	jmp	0xd17e
000000000000d179	movl	$0xfffffed3, %ebx
000000000000d17e	leaq	-0x70(%rbp), %rdi
000000000000d182	callq	_mach_msg_destroy
000000000000d187	movl	%ebx, %eax
000000000000d189	addq	$0x78, %rsp
000000000000d18d	popq	%rbx
000000000000d18e	popq	%rbp
000000000000d18f	retq
_lock_acquire:
000000000000d190	pushq	%rbp
000000000000d191	movq	%rsp, %rbp
000000000000d194	pushq	%rbx
000000000000d195	subq	$0x38, %rsp
000000000000d199	leaq	_NDR_record(%rip), %rax
000000000000d1a0	movq	(%rax), %rax
000000000000d1a3	leaq	-0x38(%rbp), %rbx
000000000000d1a7	movq	%rax, 0x18(%rbx)
000000000000d1ab	movl	%esi, 0x20(%rbx)
000000000000d1ae	movl	$0x1513, (%rbx)
000000000000d1b4	movl	%edi, 0x8(%rbx)
000000000000d1b7	callq	_mig_get_reply_port
000000000000d1bc	movl	%eax, 0xc(%rbx)
000000000000d1bf	movabsq	$0x96a2800000000, %rcx
000000000000d1c9	movq	%rcx, 0x10(%rbx)
000000000000d1cd	movl	$0x0, (%rsp)
000000000000d1d4	movl	$0x3, %esi
000000000000d1d9	movl	$0x24, %edx
000000000000d1de	movl	$0x2c, %ecx
000000000000d1e3	xorl	%r9d, %r9d
000000000000d1e6	movq	%rbx, %rdi
000000000000d1e9	movl	%eax, %r8d
000000000000d1ec	callq	_mach_msg
000000000000d1f1	movl	%eax, %ebx
000000000000d1f3	leal	-0x10000002(%rbx), %eax
000000000000d1f9	cmpl	$0xe, %eax
000000000000d1fc	ja	0xd212
000000000000d1fe	movl	$0x4003, %ecx
000000000000d203	btl	%eax, %ecx
000000000000d206	jae	0xd212
000000000000d208	movl	-0x2c(%rbp), %edi
000000000000d20b	callq	_mig_put_reply_port
000000000000d210	jmp	0xd260
000000000000d212	testl	%ebx, %ebx
000000000000d214	jne	0xd241
000000000000d216	movl	-0x24(%rbp), %eax
000000000000d219	cmpl	$0x47, %eax
000000000000d21c	je	0xd24b
000000000000d21e	cmpl	$0x96a8c, %eax
000000000000d223	jne	0xd252
000000000000d225	movl	$0xfffffed4, %ebx
000000000000d22a	cmpl	$0x0, -0x38(%rbp)
000000000000d22e	js	0xd257
000000000000d230	cmpl	$0x24, -0x34(%rbp)
000000000000d234	jne	0xd257
000000000000d236	movl	-0x18(%rbp), %ebx
000000000000d239	testl	%ebx, %ebx
000000000000d23b	jne	0xd257
000000000000d23d	xorl	%ebx, %ebx
000000000000d23f	jmp	0xd260
000000000000d241	movl	-0x2c(%rbp), %edi
000000000000d244	callq	_mig_dealloc_reply_port
000000000000d249	jmp	0xd260
000000000000d24b	movl	$0xfffffecc, %ebx
000000000000d250	jmp	0xd257
000000000000d252	movl	$0xfffffed3, %ebx
000000000000d257	leaq	-0x38(%rbp), %rdi
000000000000d25b	callq	_mach_msg_destroy
000000000000d260	movl	%ebx, %eax
000000000000d262	addq	$0x38, %rsp
000000000000d266	popq	%rbx
000000000000d267	popq	%rbp
000000000000d268	retq
_lock_release:
000000000000d269	pushq	%rbp
000000000000d26a	movq	%rsp, %rbp
000000000000d26d	pushq	%rbx
000000000000d26e	subq	$0x38, %rsp
000000000000d272	leaq	_NDR_record(%rip), %rax
000000000000d279	movq	(%rax), %rax
000000000000d27c	leaq	-0x38(%rbp), %rbx
000000000000d280	movq	%rax, 0x18(%rbx)
000000000000d284	movl	%esi, 0x20(%rbx)
000000000000d287	movl	$0x1513, (%rbx)
000000000000d28d	movl	%edi, 0x8(%rbx)
000000000000d290	callq	_mig_get_reply_port
000000000000d295	movl	%eax, 0xc(%rbx)
000000000000d298	movabsq	$0x96a2900000000, %rcx
000000000000d2a2	movq	%rcx, 0x10(%rbx)
000000000000d2a6	movl	$0x0, (%rsp)
000000000000d2ad	movl	$0x3, %esi
000000000000d2b2	movl	$0x24, %edx
000000000000d2b7	movl	$0x2c, %ecx
000000000000d2bc	xorl	%r9d, %r9d
000000000000d2bf	movq	%rbx, %rdi
000000000000d2c2	movl	%eax, %r8d
000000000000d2c5	callq	_mach_msg
000000000000d2ca	movl	%eax, %ebx
000000000000d2cc	leal	-0x10000002(%rbx), %eax
000000000000d2d2	cmpl	$0xe, %eax
000000000000d2d5	ja	0xd2eb
000000000000d2d7	movl	$0x4003, %ecx
000000000000d2dc	btl	%eax, %ecx
000000000000d2df	jae	0xd2eb
000000000000d2e1	movl	-0x2c(%rbp), %edi
000000000000d2e4	callq	_mig_put_reply_port
000000000000d2e9	jmp	0xd339
000000000000d2eb	testl	%ebx, %ebx
000000000000d2ed	jne	0xd31a
000000000000d2ef	movl	-0x24(%rbp), %eax
000000000000d2f2	cmpl	$0x47, %eax
000000000000d2f5	je	0xd324
000000000000d2f7	cmpl	$0x96a8d, %eax
000000000000d2fc	jne	0xd32b
000000000000d2fe	movl	$0xfffffed4, %ebx
000000000000d303	cmpl	$0x0, -0x38(%rbp)
000000000000d307	js	0xd330
000000000000d309	cmpl	$0x24, -0x34(%rbp)
000000000000d30d	jne	0xd330
000000000000d30f	movl	-0x18(%rbp), %ebx
000000000000d312	testl	%ebx, %ebx
000000000000d314	jne	0xd330
000000000000d316	xorl	%ebx, %ebx
000000000000d318	jmp	0xd339
000000000000d31a	movl	-0x2c(%rbp), %edi
000000000000d31d	callq	_mig_dealloc_reply_port
000000000000d322	jmp	0xd339
000000000000d324	movl	$0xfffffecc, %ebx
000000000000d329	jmp	0xd330
000000000000d32b	movl	$0xfffffed3, %ebx
000000000000d330	leaq	-0x38(%rbp), %rdi
000000000000d334	callq	_mach_msg_destroy
000000000000d339	movl	%ebx, %eax
000000000000d33b	addq	$0x38, %rsp
000000000000d33f	popq	%rbx
000000000000d340	popq	%rbp
000000000000d341	retq
_lock_try:
000000000000d342	pushq	%rbp
000000000000d343	movq	%rsp, %rbp
000000000000d346	pushq	%rbx
000000000000d347	subq	$0x38, %rsp
000000000000d34b	leaq	_NDR_record(%rip), %rax
000000000000d352	movq	(%rax), %rax
000000000000d355	leaq	-0x38(%rbp), %rbx
000000000000d359	movq	%rax, 0x18(%rbx)
000000000000d35d	movl	%esi, 0x20(%rbx)
000000000000d360	movl	$0x1513, (%rbx)
000000000000d366	movl	%edi, 0x8(%rbx)
000000000000d369	callq	_mig_get_reply_port
000000000000d36e	movl	%eax, 0xc(%rbx)
000000000000d371	movabsq	$0x96a2a00000000, %rcx
000000000000d37b	movq	%rcx, 0x10(%rbx)
000000000000d37f	movl	$0x0, (%rsp)
000000000000d386	movl	$0x3, %esi
000000000000d38b	movl	$0x24, %edx
000000000000d390	movl	$0x2c, %ecx
000000000000d395	xorl	%r9d, %r9d
000000000000d398	movq	%rbx, %rdi
000000000000d39b	movl	%eax, %r8d
000000000000d39e	callq	_mach_msg
000000000000d3a3	movl	%eax, %ebx
000000000000d3a5	leal	-0x10000002(%rbx), %eax
000000000000d3ab	cmpl	$0xe, %eax
000000000000d3ae	ja	0xd3c4
000000000000d3b0	movl	$0x4003, %ecx
000000000000d3b5	btl	%eax, %ecx
000000000000d3b8	jae	0xd3c4
000000000000d3ba	movl	-0x2c(%rbp), %edi
000000000000d3bd	callq	_mig_put_reply_port
000000000000d3c2	jmp	0xd412
000000000000d3c4	testl	%ebx, %ebx
000000000000d3c6	jne	0xd3f3
000000000000d3c8	movl	-0x24(%rbp), %eax
000000000000d3cb	cmpl	$0x47, %eax
000000000000d3ce	je	0xd3fd
000000000000d3d0	cmpl	$0x96a8e, %eax
000000000000d3d5	jne	0xd404
000000000000d3d7	movl	$0xfffffed4, %ebx
000000000000d3dc	cmpl	$0x0, -0x38(%rbp)
000000000000d3e0	js	0xd409
000000000000d3e2	cmpl	$0x24, -0x34(%rbp)
000000000000d3e6	jne	0xd409
000000000000d3e8	movl	-0x18(%rbp), %ebx
000000000000d3eb	testl	%ebx, %ebx
000000000000d3ed	jne	0xd409
000000000000d3ef	xorl	%ebx, %ebx
000000000000d3f1	jmp	0xd412
000000000000d3f3	movl	-0x2c(%rbp), %edi
000000000000d3f6	callq	_mig_dealloc_reply_port
000000000000d3fb	jmp	0xd412
000000000000d3fd	movl	$0xfffffecc, %ebx
000000000000d402	jmp	0xd409
000000000000d404	movl	$0xfffffed3, %ebx
000000000000d409	leaq	-0x38(%rbp), %rdi
000000000000d40d	callq	_mach_msg_destroy
000000000000d412	movl	%ebx, %eax
000000000000d414	addq	$0x38, %rsp
000000000000d418	popq	%rbx
000000000000d419	popq	%rbp
000000000000d41a	retq
_lock_make_stable:
000000000000d41b	pushq	%rbp
000000000000d41c	movq	%rsp, %rbp
000000000000d41f	pushq	%rbx
000000000000d420	subq	$0x38, %rsp
000000000000d424	leaq	_NDR_record(%rip), %rax
000000000000d42b	movq	(%rax), %rax
000000000000d42e	leaq	-0x38(%rbp), %rbx
000000000000d432	movq	%rax, 0x18(%rbx)
000000000000d436	movl	%esi, 0x20(%rbx)
000000000000d439	movl	$0x1513, (%rbx)
000000000000d43f	movl	%edi, 0x8(%rbx)
000000000000d442	callq	_mig_get_reply_port
000000000000d447	movl	%eax, 0xc(%rbx)
000000000000d44a	movabsq	$0x96a2b00000000, %rcx
000000000000d454	movq	%rcx, 0x10(%rbx)
000000000000d458	movl	$0x0, (%rsp)
000000000000d45f	movl	$0x3, %esi
000000000000d464	movl	$0x24, %edx
000000000000d469	movl	$0x2c, %ecx
000000000000d46e	xorl	%r9d, %r9d
000000000000d471	movq	%rbx, %rdi
000000000000d474	movl	%eax, %r8d
000000000000d477	callq	_mach_msg
000000000000d47c	movl	%eax, %ebx
000000000000d47e	leal	-0x10000002(%rbx), %eax
000000000000d484	cmpl	$0xe, %eax
000000000000d487	ja	0xd49d
000000000000d489	movl	$0x4003, %ecx
000000000000d48e	btl	%eax, %ecx
000000000000d491	jae	0xd49d
000000000000d493	movl	-0x2c(%rbp), %edi
000000000000d496	callq	_mig_put_reply_port
000000000000d49b	jmp	0xd4eb
000000000000d49d	testl	%ebx, %ebx
000000000000d49f	jne	0xd4cc
000000000000d4a1	movl	-0x24(%rbp), %eax
000000000000d4a4	cmpl	$0x47, %eax
000000000000d4a7	je	0xd4d6
000000000000d4a9	cmpl	$0x96a8f, %eax
000000000000d4ae	jne	0xd4dd
000000000000d4b0	movl	$0xfffffed4, %ebx
000000000000d4b5	cmpl	$0x0, -0x38(%rbp)
000000000000d4b9	js	0xd4e2
000000000000d4bb	cmpl	$0x24, -0x34(%rbp)
000000000000d4bf	jne	0xd4e2
000000000000d4c1	movl	-0x18(%rbp), %ebx
000000000000d4c4	testl	%ebx, %ebx
000000000000d4c6	jne	0xd4e2
000000000000d4c8	xorl	%ebx, %ebx
000000000000d4ca	jmp	0xd4eb
000000000000d4cc	movl	-0x2c(%rbp), %edi
000000000000d4cf	callq	_mig_dealloc_reply_port
000000000000d4d4	jmp	0xd4eb
000000000000d4d6	movl	$0xfffffecc, %ebx
000000000000d4db	jmp	0xd4e2
000000000000d4dd	movl	$0xfffffed3, %ebx
000000000000d4e2	leaq	-0x38(%rbp), %rdi
000000000000d4e6	callq	_mach_msg_destroy
000000000000d4eb	movl	%ebx, %eax
000000000000d4ed	addq	$0x38, %rsp
000000000000d4f1	popq	%rbx
000000000000d4f2	popq	%rbp
000000000000d4f3	retq
_lock_handoff:
000000000000d4f4	pushq	%rbp
000000000000d4f5	movq	%rsp, %rbp
000000000000d4f8	pushq	%rbx
000000000000d4f9	subq	$0x38, %rsp
000000000000d4fd	leaq	_NDR_record(%rip), %rax
000000000000d504	movq	(%rax), %rax
000000000000d507	leaq	-0x38(%rbp), %rbx
000000000000d50b	movq	%rax, 0x18(%rbx)
000000000000d50f	movl	%esi, 0x20(%rbx)
000000000000d512	movl	$0x1513, (%rbx)
000000000000d518	movl	%edi, 0x8(%rbx)
000000000000d51b	callq	_mig_get_reply_port
000000000000d520	movl	%eax, 0xc(%rbx)
000000000000d523	movabsq	$0x96a2c00000000, %rcx
000000000000d52d	movq	%rcx, 0x10(%rbx)
000000000000d531	movl	$0x0, (%rsp)
000000000000d538	movl	$0x3, %esi
000000000000d53d	movl	$0x24, %edx
000000000000d542	movl	$0x2c, %ecx
000000000000d547	xorl	%r9d, %r9d
000000000000d54a	movq	%rbx, %rdi
000000000000d54d	movl	%eax, %r8d
000000000000d550	callq	_mach_msg
000000000000d555	movl	%eax, %ebx
000000000000d557	leal	-0x10000002(%rbx), %eax
000000000000d55d	cmpl	$0xe, %eax
000000000000d560	ja	0xd576
000000000000d562	movl	$0x4003, %ecx
000000000000d567	btl	%eax, %ecx
000000000000d56a	jae	0xd576
000000000000d56c	movl	-0x2c(%rbp), %edi
000000000000d56f	callq	_mig_put_reply_port
000000000000d574	jmp	0xd5c4
000000000000d576	testl	%ebx, %ebx
000000000000d578	jne	0xd5a5
000000000000d57a	movl	-0x24(%rbp), %eax
000000000000d57d	cmpl	$0x47, %eax
000000000000d580	je	0xd5af
000000000000d582	cmpl	$0x96a90, %eax
000000000000d587	jne	0xd5b6
000000000000d589	movl	$0xfffffed4, %ebx
000000000000d58e	cmpl	$0x0, -0x38(%rbp)
000000000000d592	js	0xd5bb
000000000000d594	cmpl	$0x24, -0x34(%rbp)
000000000000d598	jne	0xd5bb
000000000000d59a	movl	-0x18(%rbp), %ebx
000000000000d59d	testl	%ebx, %ebx
000000000000d59f	jne	0xd5bb
000000000000d5a1	xorl	%ebx, %ebx
000000000000d5a3	jmp	0xd5c4
000000000000d5a5	movl	-0x2c(%rbp), %edi
000000000000d5a8	callq	_mig_dealloc_reply_port
000000000000d5ad	jmp	0xd5c4
000000000000d5af	movl	$0xfffffecc, %ebx
000000000000d5b4	jmp	0xd5bb
000000000000d5b6	movl	$0xfffffed3, %ebx
000000000000d5bb	leaq	-0x38(%rbp), %rdi
000000000000d5bf	callq	_mach_msg_destroy
000000000000d5c4	movl	%ebx, %eax
000000000000d5c6	addq	$0x38, %rsp
000000000000d5ca	popq	%rbx
000000000000d5cb	popq	%rbp
000000000000d5cc	retq
_lock_handoff_accept:
000000000000d5cd	pushq	%rbp
000000000000d5ce	movq	%rsp, %rbp
000000000000d5d1	pushq	%rbx
000000000000d5d2	subq	$0x38, %rsp
000000000000d5d6	leaq	_NDR_record(%rip), %rax
000000000000d5dd	movq	(%rax), %rax
000000000000d5e0	leaq	-0x38(%rbp), %rbx
000000000000d5e4	movq	%rax, 0x18(%rbx)
000000000000d5e8	movl	%esi, 0x20(%rbx)
000000000000d5eb	movl	$0x1513, (%rbx)
000000000000d5f1	movl	%edi, 0x8(%rbx)
000000000000d5f4	callq	_mig_get_reply_port
000000000000d5f9	movl	%eax, 0xc(%rbx)
000000000000d5fc	movabsq	$0x96a2d00000000, %rcx
000000000000d606	movq	%rcx, 0x10(%rbx)
000000000000d60a	movl	$0x0, (%rsp)
000000000000d611	movl	$0x3, %esi
000000000000d616	movl	$0x24, %edx
000000000000d61b	movl	$0x2c, %ecx
000000000000d620	xorl	%r9d, %r9d
000000000000d623	movq	%rbx, %rdi
000000000000d626	movl	%eax, %r8d
000000000000d629	callq	_mach_msg
000000000000d62e	movl	%eax, %ebx
000000000000d630	leal	-0x10000002(%rbx), %eax
000000000000d636	cmpl	$0xe, %eax
000000000000d639	ja	0xd64f
000000000000d63b	movl	$0x4003, %ecx
000000000000d640	btl	%eax, %ecx
000000000000d643	jae	0xd64f
000000000000d645	movl	-0x2c(%rbp), %edi
000000000000d648	callq	_mig_put_reply_port
000000000000d64d	jmp	0xd69d
000000000000d64f	testl	%ebx, %ebx
000000000000d651	jne	0xd67e
000000000000d653	movl	-0x24(%rbp), %eax
000000000000d656	cmpl	$0x47, %eax
000000000000d659	je	0xd688
000000000000d65b	cmpl	$0x96a91, %eax
000000000000d660	jne	0xd68f
000000000000d662	movl	$0xfffffed4, %ebx
000000000000d667	cmpl	$0x0, -0x38(%rbp)
000000000000d66b	js	0xd694
000000000000d66d	cmpl	$0x24, -0x34(%rbp)
000000000000d671	jne	0xd694
000000000000d673	movl	-0x18(%rbp), %ebx
000000000000d676	testl	%ebx, %ebx
000000000000d678	jne	0xd694
000000000000d67a	xorl	%ebx, %ebx
000000000000d67c	jmp	0xd69d
000000000000d67e	movl	-0x2c(%rbp), %edi
000000000000d681	callq	_mig_dealloc_reply_port
000000000000d686	jmp	0xd69d
000000000000d688	movl	$0xfffffecc, %ebx
000000000000d68d	jmp	0xd694
000000000000d68f	movl	$0xfffffed3, %ebx
000000000000d694	leaq	-0x38(%rbp), %rdi
000000000000d698	callq	_mach_msg_destroy
000000000000d69d	movl	%ebx, %eax
000000000000d69f	addq	$0x38, %rsp
000000000000d6a3	popq	%rbx
000000000000d6a4	popq	%rbp
000000000000d6a5	retq
_host_kernel_version:
000000000000d6a6	pushq	%rbp
000000000000d6a7	movq	%rsp, %rbp
000000000000d6aa	pushq	%r14
000000000000d6ac	pushq	%rbx
000000000000d6ad	subq	$0x240, %rsp
000000000000d6b4	movq	%rsi, %r14
000000000000d6b7	leaq	-0x248(%rbp), %rbx
000000000000d6be	movl	$0x1513, (%rbx)
000000000000d6c4	movl	%edi, 0x8(%rbx)
000000000000d6c7	callq	_mig_get_reply_port
000000000000d6cc	movl	%eax, 0xc(%rbx)
000000000000d6cf	movabsq	$0xc900000000, %rcx
000000000000d6d9	movq	%rcx, 0x10(%rbx)
000000000000d6dd	movl	$0x0, (%rsp)
000000000000d6e4	movl	$0x3, %esi
000000000000d6e9	movl	$0x18, %edx
000000000000d6ee	movl	$0x234, %ecx
000000000000d6f3	xorl	%r9d, %r9d
000000000000d6f6	movq	%rbx, %rdi
000000000000d6f9	movl	%eax, %r8d
000000000000d6fc	callq	_mach_msg
000000000000d701	movl	%eax, %ebx
000000000000d703	leal	-0x10000002(%rbx), %eax
000000000000d709	cmpl	$0xe, %eax
000000000000d70c	ja	0xd728
000000000000d70e	movl	$0x4003, %ecx
000000000000d713	btl	%eax, %ecx
000000000000d716	jae	0xd728
000000000000d718	movl	-0x23c(%rbp), %edi
000000000000d71e	callq	_mig_put_reply_port
000000000000d723	jmp	0xd7e7
000000000000d728	testl	%ebx, %ebx
000000000000d72a	jne	0xd778
000000000000d72c	movl	-0x234(%rbp), %eax
000000000000d732	cmpl	$0x47, %eax
000000000000d735	je	0xd785
000000000000d737	cmpl	$0x12d, %eax
000000000000d73c	jne	0xd78c
000000000000d73e	cmpl	$0x0, -0x248(%rbp)
000000000000d745	js	0xd7d6
000000000000d74b	movl	-0x244(%rbp), %eax
000000000000d751	leal	-0x2c(%rax), %ecx
000000000000d754	cmpl	$0x201, %ecx
000000000000d75a	jb	0xd793
000000000000d75c	movl	$0xfffffed4, %ebx
000000000000d761	cmpl	$0x24, %eax
000000000000d764	jne	0xd7db
000000000000d766	movl	-0x228(%rbp), %eax
000000000000d76c	testl	%eax, %eax
000000000000d76e	movl	$0xfffffed4, %ebx
000000000000d773	cmovnel	%eax, %ebx
000000000000d776	jmp	0xd7db
000000000000d778	movl	-0x23c(%rbp), %edi
000000000000d77e	callq	_mig_dealloc_reply_port
000000000000d783	jmp	0xd7e7
000000000000d785	movl	$0xfffffecc, %ebx
000000000000d78a	jmp	0xd7db
000000000000d78c	movl	$0xfffffed3, %ebx
000000000000d791	jmp	0xd7db
000000000000d793	movl	-0x228(%rbp), %ebx
000000000000d799	testl	%ebx, %ebx
000000000000d79b	jne	0xd7db
000000000000d79d	movl	-0x220(%rbp), %edx
000000000000d7a3	cmpl	$0x200, %edx
000000000000d7a9	ja	0xd7d6
000000000000d7ab	cmpl	%edx, %ecx
000000000000d7ad	jb	0xd7d6
000000000000d7af	addl	$0x2f, %edx
000000000000d7b2	andl	$-0x4, %edx
000000000000d7b5	movl	$0xfffffed4, %ebx
000000000000d7ba	cmpl	%edx, %eax
000000000000d7bc	jne	0xd7db
000000000000d7be	leaq	-0x21c(%rbp), %rsi
000000000000d7c5	movl	$0x200, %edx
000000000000d7ca	movq	%r14, %rdi
000000000000d7cd	callq	_mig_strncpy
000000000000d7d2	xorl	%ebx, %ebx
000000000000d7d4	jmp	0xd7e7
000000000000d7d6	movl	$0xfffffed4, %ebx
000000000000d7db	leaq	-0x248(%rbp), %rdi
000000000000d7e2	callq	_mach_msg_destroy
000000000000d7e7	movl	%ebx, %eax
000000000000d7e9	addq	$0x240, %rsp
000000000000d7f0	popq	%rbx
000000000000d7f1	popq	%r14
000000000000d7f3	popq	%rbp
000000000000d7f4	retq
__host_page_size:
000000000000d7f5	pushq	%rbp
000000000000d7f6	movq	%rsp, %rbp
000000000000d7f9	pushq	%r14
000000000000d7fb	pushq	%rbx
000000000000d7fc	subq	$0x40, %rsp
000000000000d800	movq	%rsi, %r14
000000000000d803	leaq	-0x48(%rbp), %rbx
000000000000d807	movl	$0x1513, (%rbx)
000000000000d80d	movl	%edi, 0x8(%rbx)
000000000000d810	callq	_mig_get_reply_port
000000000000d815	movl	%eax, 0xc(%rbx)
000000000000d818	movabsq	$0xca00000000, %rcx
000000000000d822	movq	%rcx, 0x10(%rbx)
000000000000d826	movl	$0x0, (%rsp)
000000000000d82d	movl	$0x3, %esi
000000000000d832	movl	$0x18, %edx
000000000000d837	movl	$0x34, %ecx
000000000000d83c	xorl	%r9d, %r9d
000000000000d83f	movq	%rbx, %rdi
000000000000d842	movl	%eax, %r8d
000000000000d845	callq	_mach_msg
000000000000d84a	movl	%eax, %ebx
000000000000d84c	leal	-0x10000002(%rbx), %eax
000000000000d852	cmpl	$0xe, %eax
000000000000d855	ja	0xd86b
000000000000d857	movl	$0x4003, %ecx
000000000000d85c	btl	%eax, %ecx
000000000000d85f	jae	0xd86b
000000000000d861	movl	-0x3c(%rbp), %edi
000000000000d864	callq	_mig_put_reply_port
000000000000d869	jmp	0xd8c0
000000000000d86b	testl	%ebx, %ebx
000000000000d86d	jne	0xd89f
000000000000d86f	movl	-0x34(%rbp), %eax
000000000000d872	cmpl	$0x47, %eax
000000000000d875	je	0xd8a9
000000000000d877	cmpl	$0x12e, %eax
000000000000d87c	jne	0xd8b0
000000000000d87e	movl	$0xfffffed4, %eax
000000000000d883	cmpl	$0x0, -0x48(%rbp)
000000000000d887	js	0xd8b5
000000000000d889	movl	-0x44(%rbp), %ecx
000000000000d88c	cmpl	$0x2c, %ecx
000000000000d88f	je	0xd8cb
000000000000d891	cmpl	$0x24, %ecx
000000000000d894	jne	0xd8b5
000000000000d896	movl	-0x28(%rbp), %ebx
000000000000d899	testl	%ebx, %ebx
000000000000d89b	jne	0xd8b7
000000000000d89d	jmp	0xd8b5
000000000000d89f	movl	-0x3c(%rbp), %edi
000000000000d8a2	callq	_mig_dealloc_reply_port
000000000000d8a7	jmp	0xd8c0
000000000000d8a9	movl	$0xfffffecc, %eax
000000000000d8ae	jmp	0xd8b5
000000000000d8b0	movl	$0xfffffed3, %eax
000000000000d8b5	movl	%eax, %ebx
000000000000d8b7	leaq	-0x48(%rbp), %rdi
000000000000d8bb	callq	_mach_msg_destroy
000000000000d8c0	movl	%ebx, %eax
000000000000d8c2	addq	$0x40, %rsp
000000000000d8c6	popq	%rbx
000000000000d8c7	popq	%r14
000000000000d8c9	popq	%rbp
000000000000d8ca	retq
000000000000d8cb	movl	-0x28(%rbp), %ebx
000000000000d8ce	testl	%ebx, %ebx
000000000000d8d0	jne	0xd8b7
000000000000d8d2	movq	-0x24(%rbp), %rax
000000000000d8d6	movq	%rax, (%r14)
000000000000d8d9	xorl	%ebx, %ebx
000000000000d8db	jmp	0xd8c0
_mach_memory_object_memory_entry:
000000000000d8dd	pushq	%rbp
000000000000d8de	movq	%rsp, %rbp
000000000000d8e1	pushq	%r14
000000000000d8e3	pushq	%rbx
000000000000d8e4	subq	$0x50, %rsp
000000000000d8e8	movq	%r9, %r14
000000000000d8eb	leaq	-0x50(%rbp), %rbx
000000000000d8ef	movl	$0x1, 0x18(%rbx)
000000000000d8f6	movl	%r8d, 0x1c(%rbx)
000000000000d8fa	movl	$0x130000, 0x24(%rbx)
000000000000d901	leaq	_NDR_record(%rip), %rax
000000000000d908	movq	(%rax), %rax
000000000000d90b	movq	%rax, 0x28(%rbx)
000000000000d90f	movl	%esi, 0x30(%rbx)
000000000000d912	movq	%rdx, 0x34(%rbx)
000000000000d916	movl	%ecx, 0x3c(%rbx)
000000000000d919	movl	$0x80001513, (%rbx)
000000000000d91f	movl	%edi, 0x8(%rbx)
000000000000d922	callq	_mig_get_reply_port
000000000000d927	movl	%eax, 0xc(%rbx)
000000000000d92a	movabsq	$0xcb00000000, %rcx
000000000000d934	movq	%rcx, 0x10(%rbx)
000000000000d938	movl	$0x0, (%rsp)
000000000000d93f	movl	$0x3, %esi
000000000000d944	movl	$0x40, %edx
000000000000d949	movl	$0x30, %ecx
000000000000d94e	xorl	%r9d, %r9d
000000000000d951	movq	%rbx, %rdi
000000000000d954	movl	%eax, %r8d
000000000000d957	callq	_mach_msg
000000000000d95c	movl	%eax, %ebx
000000000000d95e	leal	-0x10000002(%rbx), %eax
000000000000d964	cmpl	$0xe, %eax
000000000000d967	ja	0xd97d
000000000000d969	movl	$0x4003, %ecx
000000000000d96e	btl	%eax, %ecx
000000000000d971	jae	0xd97d
000000000000d973	movl	-0x44(%rbp), %edi
000000000000d976	callq	_mig_put_reply_port
000000000000d97b	jmp	0xd9d1
000000000000d97d	testl	%ebx, %ebx
000000000000d97f	jne	0xd9b2
000000000000d981	movl	-0x3c(%rbp), %eax
000000000000d984	cmpl	$0x47, %eax
000000000000d987	je	0xd9bc
000000000000d989	cmpl	$0x12f, %eax
000000000000d98e	jne	0xd9c3
000000000000d990	cmpl	$0x0, -0x50(%rbp)
000000000000d994	movl	-0x4c(%rbp), %eax
000000000000d997	movl	$0xfffffed4, %ebx
000000000000d99c	js	0xd9dc
000000000000d99e	cmpl	$0x24, %eax
000000000000d9a1	jne	0xd9c8
000000000000d9a3	movl	-0x30(%rbp), %eax
000000000000d9a6	testl	%eax, %eax
000000000000d9a8	movl	$0xfffffed4, %ebx
000000000000d9ad	cmovnel	%eax, %ebx
000000000000d9b0	jmp	0xd9c8
000000000000d9b2	movl	-0x44(%rbp), %edi
000000000000d9b5	callq	_mig_dealloc_reply_port
000000000000d9ba	jmp	0xd9d1
000000000000d9bc	movl	$0xfffffecc, %ebx
000000000000d9c1	jmp	0xd9c8
000000000000d9c3	movl	$0xfffffed3, %ebx
000000000000d9c8	leaq	-0x50(%rbp), %rdi
000000000000d9cc	callq	_mach_msg_destroy
000000000000d9d1	movl	%ebx, %eax
000000000000d9d3	addq	$0x50, %rsp
000000000000d9d7	popq	%rbx
000000000000d9d8	popq	%r14
000000000000d9da	popq	%rbp
000000000000d9db	retq
000000000000d9dc	cmpl	$0x28, %eax
000000000000d9df	jne	0xd9c8
000000000000d9e1	cmpl	$0x1, -0x38(%rbp)
000000000000d9e5	jne	0xd9c8
000000000000d9e7	movl	$0xffff0000, %eax
000000000000d9ec	andl	-0x2c(%rbp), %eax
000000000000d9ef	cmpl	$0x110000, %eax
000000000000d9f4	jne	0xd9c8
000000000000d9f6	movl	-0x34(%rbp), %eax
000000000000d9f9	movl	%eax, (%r14)
000000000000d9fc	xorl	%ebx, %ebx
000000000000d9fe	jmp	0xd9d1
_host_processor_info:
000000000000da00	pushq	%rbp
000000000000da01	movq	%rsp, %rbp
000000000000da04	pushq	%r15
000000000000da06	pushq	%r14
000000000000da08	pushq	%r12
000000000000da0a	pushq	%rbx
000000000000da0b	subq	$0x50, %rsp
000000000000da0f	movq	%r8, %r14
000000000000da12	movq	%rcx, %r15
000000000000da15	movq	%rdx, %r12
000000000000da18	leaq	_NDR_record(%rip), %rax
000000000000da1f	movq	(%rax), %rax
000000000000da22	leaq	-0x68(%rbp), %rbx
000000000000da26	movq	%rax, 0x18(%rbx)
000000000000da2a	movl	%esi, 0x20(%rbx)
000000000000da2d	movl	$0x1513, (%rbx)
000000000000da33	movl	%edi, 0x8(%rbx)
000000000000da36	callq	_mig_get_reply_port
000000000000da3b	movl	%eax, 0xc(%rbx)
000000000000da3e	movabsq	$0xcc00000000, %rcx
000000000000da48	movq	%rcx, 0x10(%rbx)
000000000000da4c	movl	$0x0, (%rsp)
000000000000da53	movl	$0x3, %esi
000000000000da58	movl	$0x24, %edx
000000000000da5d	movl	$0x44, %ecx
000000000000da62	xorl	%r9d, %r9d
000000000000da65	movq	%rbx, %rdi
000000000000da68	movl	%eax, %r8d
000000000000da6b	callq	_mach_msg
000000000000da70	movl	%eax, %ebx
000000000000da72	leal	-0x10000002(%rbx), %eax
000000000000da78	cmpl	$0xe, %eax
000000000000da7b	ja	0xda91
000000000000da7d	movl	$0x4003, %ecx
000000000000da82	btl	%eax, %ecx
000000000000da85	jae	0xda91
000000000000da87	movl	-0x5c(%rbp), %edi
000000000000da8a	callq	_mig_put_reply_port
000000000000da8f	jmp	0xdae5
000000000000da91	testl	%ebx, %ebx
000000000000da93	jne	0xdac6
000000000000da95	movl	-0x54(%rbp), %eax
000000000000da98	cmpl	$0x47, %eax
000000000000da9b	je	0xdad0
000000000000da9d	cmpl	$0x130, %eax
000000000000daa2	jne	0xdad7
000000000000daa4	cmpl	$0x0, -0x68(%rbp)
000000000000daa8	movl	-0x64(%rbp), %eax
000000000000daab	movl	$0xfffffed4, %ebx
000000000000dab0	js	0xdaf4
000000000000dab2	cmpl	$0x24, %eax
000000000000dab5	jne	0xdadc
000000000000dab7	movl	-0x48(%rbp), %eax
000000000000daba	testl	%eax, %eax
000000000000dabc	movl	$0xfffffed4, %ebx
000000000000dac1	cmovnel	%eax, %ebx
000000000000dac4	jmp	0xdadc
000000000000dac6	movl	-0x5c(%rbp), %edi
000000000000dac9	callq	_mig_dealloc_reply_port
000000000000dace	jmp	0xdae5
000000000000dad0	movl	$0xfffffecc, %ebx
000000000000dad5	jmp	0xdadc
000000000000dad7	movl	$0xfffffed3, %ebx
000000000000dadc	leaq	-0x68(%rbp), %rdi
000000000000dae0	callq	_mach_msg_destroy
000000000000dae5	movl	%ebx, %eax
000000000000dae7	addq	$0x50, %rsp
000000000000daeb	popq	%rbx
000000000000daec	popq	%r12
000000000000daee	popq	%r14
000000000000daf0	popq	%r15
000000000000daf2	popq	%rbp
000000000000daf3	retq
000000000000daf4	cmpl	$0x3c, %eax
000000000000daf7	jne	0xdadc
000000000000daf9	cmpl	$0x1, -0x50(%rbp)
000000000000dafd	jne	0xdadc
000000000000daff	movl	$0xff000000, %eax
000000000000db04	andl	-0x44(%rbp), %eax
000000000000db07	cmpl	$0x1000000, %eax
000000000000db0c	jne	0xdadc
000000000000db0e	movl	-0x40(%rbp), %eax
000000000000db11	shrl	$0x2, %eax
000000000000db14	cmpl	-0x30(%rbp), %eax
000000000000db17	jne	0xdadc
000000000000db19	movl	-0x34(%rbp), %ecx
000000000000db1c	movl	%ecx, (%r12)
000000000000db20	movq	-0x4c(%rbp), %rcx
000000000000db24	movq	%rcx, (%r15)
000000000000db27	movl	%eax, (%r14)
000000000000db2a	xorl	%ebx, %ebx
000000000000db2c	jmp	0xdae5
_kmod_get_info:
000000000000db2e	pushq	%rbp
000000000000db2f	movq	%rsp, %rbp
000000000000db32	pushq	%r15
000000000000db34	pushq	%r14
000000000000db36	pushq	%rbx
000000000000db37	subq	$0x48, %rsp
000000000000db3b	movq	%rdx, %r14
000000000000db3e	movq	%rsi, %r15
000000000000db41	leaq	-0x58(%rbp), %rbx
000000000000db45	movl	$0x1513, (%rbx)
000000000000db4b	movl	%edi, 0x8(%rbx)
000000000000db4e	callq	_mig_get_reply_port
000000000000db53	movl	%eax, 0xc(%rbx)
000000000000db56	movabsq	$0xcf00000000, %rcx
000000000000db60	movq	%rcx, 0x10(%rbx)
000000000000db64	movl	$0x0, (%rsp)
000000000000db6b	movl	$0x3, %esi
000000000000db70	movl	$0x18, %edx
000000000000db75	movl	$0x40, %ecx
000000000000db7a	xorl	%r9d, %r9d
000000000000db7d	movq	%rbx, %rdi
000000000000db80	movl	%eax, %r8d
000000000000db83	callq	_mach_msg
000000000000db88	movl	%eax, %ebx
000000000000db8a	leal	-0x10000002(%rbx), %eax
000000000000db90	cmpl	$0xe, %eax
000000000000db93	ja	0xdba9
000000000000db95	movl	$0x4003, %ecx
000000000000db9a	btl	%eax, %ecx
000000000000db9d	jae	0xdba9
000000000000db9f	movl	-0x4c(%rbp), %edi
000000000000dba2	callq	_mig_put_reply_port
000000000000dba7	jmp	0xdbfd
000000000000dba9	testl	%ebx, %ebx
000000000000dbab	jne	0xdbde
000000000000dbad	movl	-0x44(%rbp), %eax
000000000000dbb0	cmpl	$0x47, %eax
000000000000dbb3	je	0xdbe8
000000000000dbb5	cmpl	$0x133, %eax
000000000000dbba	jne	0xdbef
000000000000dbbc	cmpl	$0x0, -0x58(%rbp)
000000000000dbc0	movl	-0x54(%rbp), %eax
000000000000dbc3	movl	$0xfffffed4, %ebx
000000000000dbc8	js	0xdc0a
000000000000dbca	cmpl	$0x24, %eax
000000000000dbcd	jne	0xdbf4
000000000000dbcf	movl	-0x38(%rbp), %eax
000000000000dbd2	testl	%eax, %eax
000000000000dbd4	movl	$0xfffffed4, %ebx
000000000000dbd9	cmovnel	%eax, %ebx
000000000000dbdc	jmp	0xdbf4
000000000000dbde	movl	-0x4c(%rbp), %edi
000000000000dbe1	callq	_mig_dealloc_reply_port
000000000000dbe6	jmp	0xdbfd
000000000000dbe8	movl	$0xfffffecc, %ebx
000000000000dbed	jmp	0xdbf4
000000000000dbef	movl	$0xfffffed3, %ebx
000000000000dbf4	leaq	-0x58(%rbp), %rdi
000000000000dbf8	callq	_mach_msg_destroy
000000000000dbfd	movl	%ebx, %eax
000000000000dbff	addq	$0x48, %rsp
000000000000dc03	popq	%rbx
000000000000dc04	popq	%r14
000000000000dc06	popq	%r15
000000000000dc08	popq	%rbp
000000000000dc09	retq
000000000000dc0a	cmpl	$0x38, %eax
000000000000dc0d	jne	0xdbf4
000000000000dc0f	cmpl	$0x1, -0x40(%rbp)
000000000000dc13	jne	0xdbf4
000000000000dc15	movl	$0xff000000, %eax
000000000000dc1a	andl	-0x34(%rbp), %eax
000000000000dc1d	cmpl	$0x1000000, %eax
000000000000dc22	jne	0xdbf4
000000000000dc24	movl	-0x30(%rbp), %eax
000000000000dc27	cmpl	-0x24(%rbp), %eax
000000000000dc2a	jne	0xdbf4
000000000000dc2c	movq	-0x3c(%rbp), %rcx
000000000000dc30	movq	%rcx, (%r15)
000000000000dc33	movl	%eax, (%r14)
000000000000dc36	xorl	%ebx, %ebx
000000000000dc38	jmp	0xdbfd
_host_virtual_physical_table_info:
000000000000dc3a	pushq	%rbp
000000000000dc3b	movq	%rsp, %rbp
000000000000dc3e	pushq	%r15
000000000000dc40	pushq	%r14
000000000000dc42	pushq	%rbx
000000000000dc43	subq	$0x48, %rsp
000000000000dc47	movq	%rdx, %r14
000000000000dc4a	movq	%rsi, %r15
000000000000dc4d	leaq	-0x58(%rbp), %rbx
000000000000dc51	movl	$0x1513, (%rbx)
000000000000dc57	movl	%edi, 0x8(%rbx)
000000000000dc5a	callq	_mig_get_reply_port
000000000000dc5f	movl	%eax, 0xc(%rbx)
000000000000dc62	movabsq	$0xd100000000, %rcx
000000000000dc6c	movq	%rcx, 0x10(%rbx)
000000000000dc70	movl	$0x0, (%rsp)
000000000000dc77	movl	$0x3, %esi
000000000000dc7c	movl	$0x18, %edx
000000000000dc81	movl	$0x40, %ecx
000000000000dc86	xorl	%r9d, %r9d
000000000000dc89	movq	%rbx, %rdi
000000000000dc8c	movl	%eax, %r8d
000000000000dc8f	callq	_mach_msg
000000000000dc94	movl	%eax, %ebx
000000000000dc96	leal	-0x10000002(%rbx), %eax
000000000000dc9c	cmpl	$0xe, %eax
000000000000dc9f	ja	0xdcb5
000000000000dca1	movl	$0x4003, %ecx
000000000000dca6	btl	%eax, %ecx
000000000000dca9	jae	0xdcb5
000000000000dcab	movl	-0x4c(%rbp), %edi
000000000000dcae	callq	_mig_put_reply_port
000000000000dcb3	jmp	0xdd09
000000000000dcb5	testl	%ebx, %ebx
000000000000dcb7	jne	0xdcea
000000000000dcb9	movl	-0x44(%rbp), %eax
000000000000dcbc	cmpl	$0x47, %eax
000000000000dcbf	je	0xdcf4
000000000000dcc1	cmpl	$0x135, %eax
000000000000dcc6	jne	0xdcfb
000000000000dcc8	cmpl	$0x0, -0x58(%rbp)
000000000000dccc	movl	-0x54(%rbp), %eax
000000000000dccf	movl	$0xfffffed4, %ebx
000000000000dcd4	js	0xdd16
000000000000dcd6	cmpl	$0x24, %eax
000000000000dcd9	jne	0xdd00
000000000000dcdb	movl	-0x38(%rbp), %eax
000000000000dcde	testl	%eax, %eax
000000000000dce0	movl	$0xfffffed4, %ebx
000000000000dce5	cmovnel	%eax, %ebx
000000000000dce8	jmp	0xdd00
000000000000dcea	movl	-0x4c(%rbp), %edi
000000000000dced	callq	_mig_dealloc_reply_port
000000000000dcf2	jmp	0xdd09
000000000000dcf4	movl	$0xfffffecc, %ebx
000000000000dcf9	jmp	0xdd00
000000000000dcfb	movl	$0xfffffed3, %ebx
000000000000dd00	leaq	-0x58(%rbp), %rdi
000000000000dd04	callq	_mach_msg_destroy
000000000000dd09	movl	%ebx, %eax
000000000000dd0b	addq	$0x48, %rsp
000000000000dd0f	popq	%rbx
000000000000dd10	popq	%r14
000000000000dd12	popq	%r15
000000000000dd14	popq	%rbp
000000000000dd15	retq
000000000000dd16	cmpl	$0x38, %eax
000000000000dd19	jne	0xdd00
000000000000dd1b	cmpl	$0x1, -0x40(%rbp)
000000000000dd1f	jne	0xdd00
000000000000dd21	movl	$0xff000000, %eax
000000000000dd26	andl	-0x34(%rbp), %eax
000000000000dd29	cmpl	$0x1000000, %eax
000000000000dd2e	jne	0xdd00
000000000000dd30	movl	-0x30(%rbp), %eax
000000000000dd33	shrl	$0x2, %eax
000000000000dd36	cmpl	-0x24(%rbp), %eax
000000000000dd39	jne	0xdd00
000000000000dd3b	movq	-0x3c(%rbp), %rcx
000000000000dd3f	movq	%rcx, (%r15)
000000000000dd42	movl	%eax, (%r14)
000000000000dd45	xorl	%ebx, %ebx
000000000000dd47	jmp	0xdd09
_processor_set_default:
000000000000dd49	pushq	%rbp
000000000000dd4a	movq	%rsp, %rbp
000000000000dd4d	pushq	%r14
000000000000dd4f	pushq	%rbx
000000000000dd50	subq	$0x40, %rsp
000000000000dd54	movq	%rsi, %r14
000000000000dd57	leaq	-0x40(%rbp), %rbx
000000000000dd5b	movl	$0x1513, (%rbx)
000000000000dd61	movl	%edi, 0x8(%rbx)
000000000000dd64	callq	_mig_get_reply_port
000000000000dd69	movl	%eax, 0xc(%rbx)
000000000000dd6c	movabsq	$0xd500000000, %rcx
000000000000dd76	movq	%rcx, 0x10(%rbx)
000000000000dd7a	movl	$0x0, (%rsp)
000000000000dd81	movl	$0x3, %esi
000000000000dd86	movl	$0x18, %edx
000000000000dd8b	movl	$0x30, %ecx
000000000000dd90	xorl	%r9d, %r9d
000000000000dd93	movq	%rbx, %rdi
000000000000dd96	movl	%eax, %r8d
000000000000dd99	callq	_mach_msg
000000000000dd9e	movl	%eax, %ebx
000000000000dda0	leal	-0x10000002(%rbx), %eax
000000000000dda6	cmpl	$0xe, %eax
000000000000dda9	ja	0xddbf
000000000000ddab	movl	$0x4003, %ecx
000000000000ddb0	btl	%eax, %ecx
000000000000ddb3	jae	0xddbf
000000000000ddb5	movl	-0x34(%rbp), %edi
000000000000ddb8	callq	_mig_put_reply_port
000000000000ddbd	jmp	0xde13
000000000000ddbf	testl	%ebx, %ebx
000000000000ddc1	jne	0xddf4
000000000000ddc3	movl	-0x2c(%rbp), %eax
000000000000ddc6	cmpl	$0x47, %eax
000000000000ddc9	je	0xddfe
000000000000ddcb	cmpl	$0x139, %eax
000000000000ddd0	jne	0xde05
000000000000ddd2	cmpl	$0x0, -0x40(%rbp)
000000000000ddd6	movl	-0x3c(%rbp), %eax
000000000000ddd9	movl	$0xfffffed4, %ebx
000000000000ddde	js	0xde1e
000000000000dde0	cmpl	$0x24, %eax
000000000000dde3	jne	0xde0a
000000000000dde5	movl	-0x20(%rbp), %eax
000000000000dde8	testl	%eax, %eax
000000000000ddea	movl	$0xfffffed4, %ebx
000000000000ddef	cmovnel	%eax, %ebx
000000000000ddf2	jmp	0xde0a
000000000000ddf4	movl	-0x34(%rbp), %edi
000000000000ddf7	callq	_mig_dealloc_reply_port
000000000000ddfc	jmp	0xde13
000000000000ddfe	movl	$0xfffffecc, %ebx
000000000000de03	jmp	0xde0a
000000000000de05	movl	$0xfffffed3, %ebx
000000000000de0a	leaq	-0x40(%rbp), %rdi
000000000000de0e	callq	_mach_msg_destroy
000000000000de13	movl	%ebx, %eax
000000000000de15	addq	$0x40, %rsp
000000000000de19	popq	%rbx
000000000000de1a	popq	%r14
000000000000de1c	popq	%rbp
000000000000de1d	retq
000000000000de1e	cmpl	$0x28, %eax
000000000000de21	jne	0xde0a
000000000000de23	cmpl	$0x1, -0x28(%rbp)
000000000000de27	jne	0xde0a
000000000000de29	movl	$0xffff0000, %eax
000000000000de2e	andl	-0x1c(%rbp), %eax
000000000000de31	cmpl	$0x110000, %eax
000000000000de36	jne	0xde0a
000000000000de38	movl	-0x24(%rbp), %eax
000000000000de3b	movl	%eax, (%r14)
000000000000de3e	xorl	%ebx, %ebx
000000000000de40	jmp	0xde13
_processor_set_create:
000000000000de42	pushq	%rbp
000000000000de43	movq	%rsp, %rbp
000000000000de46	pushq	%r15
000000000000de48	pushq	%r14
000000000000de4a	pushq	%rbx
000000000000de4b	subq	$0x48, %rsp
000000000000de4f	movq	%rdx, %r14
000000000000de52	movq	%rsi, %r15
000000000000de55	leaq	-0x58(%rbp), %rbx
000000000000de59	movl	$0x1513, (%rbx)
000000000000de5f	movl	%edi, 0x8(%rbx)
000000000000de62	callq	_mig_get_reply_port
000000000000de67	movl	%eax, 0xc(%rbx)
000000000000de6a	movabsq	$0xd600000000, %rcx
000000000000de74	movq	%rcx, 0x10(%rbx)
000000000000de78	movl	$0x0, (%rsp)
000000000000de7f	movl	$0x3, %esi
000000000000de84	movl	$0x18, %edx
000000000000de89	movl	$0x3c, %ecx
000000000000de8e	xorl	%r9d, %r9d
000000000000de91	movq	%rbx, %rdi
000000000000de94	movl	%eax, %r8d
000000000000de97	callq	_mach_msg
000000000000de9c	movl	%eax, %ebx
000000000000de9e	leal	-0x10000002(%rbx), %eax
000000000000dea4	cmpl	$0xe, %eax
000000000000dea7	ja	0xdebd
000000000000dea9	movl	$0x4003, %ecx
000000000000deae	btl	%eax, %ecx
000000000000deb1	jae	0xdebd
000000000000deb3	movl	-0x4c(%rbp), %edi
000000000000deb6	callq	_mig_put_reply_port
000000000000debb	jmp	0xdf11
000000000000debd	testl	%ebx, %ebx
000000000000debf	jne	0xdef2
000000000000dec1	movl	-0x44(%rbp), %eax
000000000000dec4	cmpl	$0x47, %eax
000000000000dec7	je	0xdefc
000000000000dec9	cmpl	$0x13a, %eax
000000000000dece	jne	0xdf03
000000000000ded0	cmpl	$0x0, -0x58(%rbp)
000000000000ded4	movl	-0x54(%rbp), %eax
000000000000ded7	movl	$0xfffffed4, %ebx
000000000000dedc	js	0xdf1e
000000000000dede	cmpl	$0x24, %eax
000000000000dee1	jne	0xdf08
000000000000dee3	movl	-0x38(%rbp), %eax
000000000000dee6	testl	%eax, %eax
000000000000dee8	movl	$0xfffffed4, %ebx
000000000000deed	cmovnel	%eax, %ebx
000000000000def0	jmp	0xdf08
000000000000def2	movl	-0x4c(%rbp), %edi
000000000000def5	callq	_mig_dealloc_reply_port
000000000000defa	jmp	0xdf11
000000000000defc	movl	$0xfffffecc, %ebx
000000000000df01	jmp	0xdf08
000000000000df03	movl	$0xfffffed3, %ebx
000000000000df08	leaq	-0x58(%rbp), %rdi
000000000000df0c	callq	_mach_msg_destroy
000000000000df11	movl	%ebx, %eax
000000000000df13	addq	$0x48, %rsp
000000000000df17	popq	%rbx
000000000000df18	popq	%r14
000000000000df1a	popq	%r15
000000000000df1c	popq	%rbp
000000000000df1d	retq
000000000000df1e	cmpl	$0x34, %eax
000000000000df21	jne	0xdf08
000000000000df23	cmpl	$0x2, -0x40(%rbp)
000000000000df27	jne	0xdf08
000000000000df29	movl	$0xffff0000, %eax
000000000000df2e	movl	-0x34(%rbp), %ecx
000000000000df31	andl	%eax, %ecx
000000000000df33	cmpl	$0x110000, %ecx
000000000000df39	jne	0xdf08
000000000000df3b	andl	-0x28(%rbp), %eax
000000000000df3e	cmpl	$0x110000, %eax
000000000000df43	jne	0xdf08
000000000000df45	movl	-0x3c(%rbp), %eax
000000000000df48	movl	%eax, (%r15)
000000000000df4b	movl	-0x30(%rbp), %eax
000000000000df4e	movl	%eax, (%r14)
000000000000df51	xorl	%ebx, %ebx
000000000000df53	jmp	0xdf11
_mach_memory_object_memory_entry_64:
000000000000df55	pushq	%rbp
000000000000df56	movq	%rsp, %rbp
000000000000df59	pushq	%r14
000000000000df5b	pushq	%rbx
000000000000df5c	subq	$0x50, %rsp
000000000000df60	movq	%r9, %r14
000000000000df63	leaq	-0x50(%rbp), %rbx
000000000000df67	movl	$0x1, 0x18(%rbx)
000000000000df6e	movl	%r8d, 0x1c(%rbx)
000000000000df72	movl	$0x130000, 0x24(%rbx)
000000000000df79	leaq	_NDR_record(%rip), %rax
000000000000df80	movq	(%rax), %rax
000000000000df83	movq	%rax, 0x28(%rbx)
000000000000df87	movl	%esi, 0x30(%rbx)
000000000000df8a	movq	%rdx, 0x34(%rbx)
000000000000df8e	movl	%ecx, 0x3c(%rbx)
000000000000df91	movl	$0x80001513, (%rbx)
000000000000df97	movl	%edi, 0x8(%rbx)
000000000000df9a	callq	_mig_get_reply_port
000000000000df9f	movl	%eax, 0xc(%rbx)
000000000000dfa2	movabsq	$0xd700000000, %rcx
000000000000dfac	movq	%rcx, 0x10(%rbx)
000000000000dfb0	movl	$0x0, (%rsp)
000000000000dfb7	movl	$0x3, %esi
000000000000dfbc	movl	$0x40, %edx
000000000000dfc1	movl	$0x30, %ecx
000000000000dfc6	xorl	%r9d, %r9d
000000000000dfc9	movq	%rbx, %rdi
000000000000dfcc	movl	%eax, %r8d
000000000000dfcf	callq	_mach_msg
000000000000dfd4	movl	%eax, %ebx
000000000000dfd6	leal	-0x10000002(%rbx), %eax
000000000000dfdc	cmpl	$0xe, %eax
000000000000dfdf	ja	0xdff5
000000000000dfe1	movl	$0x4003, %ecx
000000000000dfe6	btl	%eax, %ecx
000000000000dfe9	jae	0xdff5
000000000000dfeb	movl	-0x44(%rbp), %edi
000000000000dfee	callq	_mig_put_reply_port
000000000000dff3	jmp	0xe049
000000000000dff5	testl	%ebx, %ebx
000000000000dff7	jne	0xe02a
000000000000dff9	movl	-0x3c(%rbp), %eax
000000000000dffc	cmpl	$0x47, %eax
000000000000dfff	je	0xe034
000000000000e001	cmpl	$0x13b, %eax
000000000000e006	jne	0xe03b
000000000000e008	cmpl	$0x0, -0x50(%rbp)
000000000000e00c	movl	-0x4c(%rbp), %eax
000000000000e00f	movl	$0xfffffed4, %ebx
000000000000e014	js	0xe054
000000000000e016	cmpl	$0x24, %eax
000000000000e019	jne	0xe040
000000000000e01b	movl	-0x30(%rbp), %eax
000000000000e01e	testl	%eax, %eax
000000000000e020	movl	$0xfffffed4, %ebx
000000000000e025	cmovnel	%eax, %ebx
000000000000e028	jmp	0xe040
000000000000e02a	movl	-0x44(%rbp), %edi
000000000000e02d	callq	_mig_dealloc_reply_port
000000000000e032	jmp	0xe049
000000000000e034	movl	$0xfffffecc, %ebx
000000000000e039	jmp	0xe040
000000000000e03b	movl	$0xfffffed3, %ebx
000000000000e040	leaq	-0x50(%rbp), %rdi
000000000000e044	callq	_mach_msg_destroy
000000000000e049	movl	%ebx, %eax
000000000000e04b	addq	$0x50, %rsp
000000000000e04f	popq	%rbx
000000000000e050	popq	%r14
000000000000e052	popq	%rbp
000000000000e053	retq
000000000000e054	cmpl	$0x28, %eax
000000000000e057	jne	0xe040
000000000000e059	cmpl	$0x1, -0x38(%rbp)
000000000000e05d	jne	0xe040
000000000000e05f	movl	$0xffff0000, %eax
000000000000e064	andl	-0x2c(%rbp), %eax
000000000000e067	cmpl	$0x110000, %eax
000000000000e06c	jne	0xe040
000000000000e06e	movl	-0x34(%rbp), %eax
000000000000e071	movl	%eax, (%r14)
000000000000e074	xorl	%ebx, %ebx
000000000000e076	jmp	0xe049
_host_lockgroup_info:
000000000000e078	pushq	%rbp
000000000000e079	movq	%rsp, %rbp
000000000000e07c	pushq	%r15
000000000000e07e	pushq	%r14
000000000000e080	pushq	%rbx
000000000000e081	subq	$0x48, %rsp
000000000000e085	movq	%rdx, %r14
000000000000e088	movq	%rsi, %r15
000000000000e08b	leaq	-0x58(%rbp), %rbx
000000000000e08f	movl	$0x1513, (%rbx)
000000000000e095	movl	%edi, 0x8(%rbx)
000000000000e098	callq	_mig_get_reply_port
000000000000e09d	movl	%eax, 0xc(%rbx)
000000000000e0a0	movabsq	$0xda00000000, %rcx
000000000000e0aa	movq	%rcx, 0x10(%rbx)
000000000000e0ae	movl	$0x0, (%rsp)
000000000000e0b5	movl	$0x3, %esi
000000000000e0ba	movl	$0x18, %edx
000000000000e0bf	movl	$0x40, %ecx
000000000000e0c4	xorl	%r9d, %r9d
000000000000e0c7	movq	%rbx, %rdi
000000000000e0ca	movl	%eax, %r8d
000000000000e0cd	callq	_mach_msg
000000000000e0d2	movl	%eax, %ebx
000000000000e0d4	leal	-0x10000002(%rbx), %eax
000000000000e0da	cmpl	$0xe, %eax
000000000000e0dd	ja	0xe0f3
000000000000e0df	movl	$0x4003, %ecx
000000000000e0e4	btl	%eax, %ecx
000000000000e0e7	jae	0xe0f3
000000000000e0e9	movl	-0x4c(%rbp), %edi
000000000000e0ec	callq	_mig_put_reply_port
000000000000e0f1	jmp	0xe147
000000000000e0f3	testl	%ebx, %ebx
000000000000e0f5	jne	0xe128
000000000000e0f7	movl	-0x44(%rbp), %eax
000000000000e0fa	cmpl	$0x47, %eax
000000000000e0fd	je	0xe132
000000000000e0ff	cmpl	$0x13e, %eax
000000000000e104	jne	0xe139
000000000000e106	cmpl	$0x0, -0x58(%rbp)
000000000000e10a	movl	-0x54(%rbp), %eax
000000000000e10d	movl	$0xfffffed4, %ebx
000000000000e112	js	0xe154
000000000000e114	cmpl	$0x24, %eax
000000000000e117	jne	0xe13e
000000000000e119	movl	-0x38(%rbp), %eax
000000000000e11c	testl	%eax, %eax
000000000000e11e	movl	$0xfffffed4, %ebx
000000000000e123	cmovnel	%eax, %ebx
000000000000e126	jmp	0xe13e
000000000000e128	movl	-0x4c(%rbp), %edi
000000000000e12b	callq	_mig_dealloc_reply_port
000000000000e130	jmp	0xe147
000000000000e132	movl	$0xfffffecc, %ebx
000000000000e137	jmp	0xe13e
000000000000e139	movl	$0xfffffed3, %ebx
000000000000e13e	leaq	-0x58(%rbp), %rdi
000000000000e142	callq	_mach_msg_destroy
000000000000e147	movl	%ebx, %eax
000000000000e149	addq	$0x48, %rsp
000000000000e14d	popq	%rbx
000000000000e14e	popq	%r14
000000000000e150	popq	%r15
000000000000e152	popq	%rbp
000000000000e153	retq
000000000000e154	cmpl	$0x38, %eax
000000000000e157	jne	0xe13e
000000000000e159	cmpl	$0x1, -0x40(%rbp)
000000000000e15d	jne	0xe13e
000000000000e15f	movl	$0xff000000, %eax
000000000000e164	andl	-0x34(%rbp), %eax
000000000000e167	cmpl	$0x1000000, %eax
000000000000e16c	jne	0xe13e
000000000000e16e	movl	-0x30(%rbp), %eax
000000000000e171	imulq	$0x3e0f83e1, %rax, %rax
000000000000e178	shrq	$0x26, %rax
000000000000e17c	cmpl	-0x24(%rbp), %eax
000000000000e17f	jne	0xe13e
000000000000e181	movq	-0x3c(%rbp), %rcx
000000000000e185	movq	%rcx, (%r15)
000000000000e188	movl	%eax, (%r14)
000000000000e18b	xorl	%ebx, %ebx
000000000000e18d	jmp	0xe147
_mach_zone_info:
000000000000e18f	pushq	%rbp
000000000000e190	movq	%rsp, %rbp
000000000000e193	pushq	%r15
000000000000e195	pushq	%r14
000000000000e197	pushq	%r13
000000000000e199	pushq	%r12
000000000000e19b	pushq	%rbx
000000000000e19c	subq	$0x68, %rsp
000000000000e1a0	movq	%r8, %r14
000000000000e1a3	movq	%rcx, %r15
000000000000e1a6	movq	%rdx, %r12
000000000000e1a9	movq	%rsi, %r13
000000000000e1ac	leaq	-0x80(%rbp), %rbx
000000000000e1b0	movl	$0x1513, (%rbx)
000000000000e1b6	movl	%edi, 0x8(%rbx)
000000000000e1b9	callq	_mig_get_reply_port
000000000000e1be	movl	%eax, 0xc(%rbx)
000000000000e1c1	movabsq	$0xdc00000000, %rcx
000000000000e1cb	movq	%rcx, 0x10(%rbx)
000000000000e1cf	movl	$0x0, (%rsp)
000000000000e1d6	movl	$0x3, %esi
000000000000e1db	movl	$0x18, %edx
000000000000e1e0	movl	$0x54, %ecx
000000000000e1e5	xorl	%r9d, %r9d
000000000000e1e8	movq	%rbx, %rdi
000000000000e1eb	movl	%eax, %r8d
000000000000e1ee	callq	_mach_msg
000000000000e1f3	movl	%eax, %ebx
000000000000e1f5	leal	-0x10000002(%rbx), %eax
000000000000e1fb	cmpl	$0xe, %eax
000000000000e1fe	ja	0xe214
000000000000e200	movl	$0x4003, %ecx
000000000000e205	btl	%eax, %ecx
000000000000e208	jae	0xe214
000000000000e20a	movl	-0x74(%rbp), %edi
000000000000e20d	callq	_mig_put_reply_port
000000000000e212	jmp	0xe268
000000000000e214	testl	%ebx, %ebx
000000000000e216	jne	0xe249
000000000000e218	movl	-0x6c(%rbp), %eax
000000000000e21b	cmpl	$0x47, %eax
000000000000e21e	je	0xe253
000000000000e220	cmpl	$0x140, %eax
000000000000e225	jne	0xe25a
000000000000e227	cmpl	$0x0, -0x80(%rbp)
000000000000e22b	movl	-0x7c(%rbp), %eax
000000000000e22e	movl	$0xfffffed4, %ebx
000000000000e233	js	0xe279
000000000000e235	cmpl	$0x24, %eax
000000000000e238	jne	0xe25f
000000000000e23a	movl	-0x60(%rbp), %eax
000000000000e23d	testl	%eax, %eax
000000000000e23f	movl	$0xfffffed4, %ebx
000000000000e244	cmovnel	%eax, %ebx
000000000000e247	jmp	0xe25f
000000000000e249	movl	-0x74(%rbp), %edi
000000000000e24c	callq	_mig_dealloc_reply_port
000000000000e251	jmp	0xe268
000000000000e253	movl	$0xfffffecc, %ebx
000000000000e258	jmp	0xe25f
000000000000e25a	movl	$0xfffffed3, %ebx
000000000000e25f	leaq	-0x80(%rbp), %rdi
000000000000e263	callq	_mach_msg_destroy
000000000000e268	movl	%ebx, %eax
000000000000e26a	addq	$0x68, %rsp
000000000000e26e	popq	%rbx
000000000000e26f	popq	%r12
000000000000e271	popq	%r13
000000000000e273	popq	%r14
000000000000e275	popq	%r15
000000000000e277	popq	%rbp
000000000000e278	retq
000000000000e279	cmpl	$0x4c, %eax
000000000000e27c	jne	0xe25f
000000000000e27e	cmpl	$0x2, -0x68(%rbp)
000000000000e282	jne	0xe25f
000000000000e284	movl	$0xff000000, %eax
000000000000e289	movl	-0x5c(%rbp), %ecx
000000000000e28c	andl	%eax, %ecx
000000000000e28e	cmpl	$0x1000000, %ecx
000000000000e294	jne	0xe25f
000000000000e296	andl	-0x4c(%rbp), %eax
000000000000e299	cmpl	$0x1000000, %eax
000000000000e29e	jne	0xe25f
000000000000e2a0	movl	-0x58(%rbp), %ecx
000000000000e2a3	movl	$0xcccccccd, %eax
000000000000e2a8	imulq	%rcx, %rax
000000000000e2ac	shrq	$0x26, %rax
000000000000e2b0	cmpl	-0x3c(%rbp), %eax
000000000000e2b3	jne	0xe25f
000000000000e2b5	movl	-0x48(%rbp), %ecx
000000000000e2b8	shrl	$0x6, %ecx
000000000000e2bb	cmpl	-0x38(%rbp), %ecx
000000000000e2be	jne	0xe25f
000000000000e2c0	movq	-0x64(%rbp), %rdx
000000000000e2c4	movq	%rdx, (%r13)
000000000000e2c8	movl	%eax, (%r12)
000000000000e2cc	movq	-0x54(%rbp), %rax
000000000000e2d0	movq	%rax, (%r15)
000000000000e2d3	movl	%ecx, (%r14)
000000000000e2d6	xorl	%ebx, %ebx
000000000000e2d8	jmp	0xe268
_mach_zone_force_gc:
000000000000e2da	pushq	%rbp
000000000000e2db	movq	%rsp, %rbp
000000000000e2de	pushq	%rbx
000000000000e2df	subq	$0x38, %rsp
000000000000e2e3	leaq	-0x38(%rbp), %rbx
000000000000e2e7	movl	$0x1513, (%rbx)
000000000000e2ed	movl	%edi, 0x8(%rbx)
000000000000e2f0	callq	_mig_get_reply_port
000000000000e2f5	movl	%eax, 0xc(%rbx)
000000000000e2f8	movabsq	$0xdd00000000, %rcx
000000000000e302	movq	%rcx, 0x10(%rbx)
000000000000e306	movl	$0x0, (%rsp)
000000000000e30d	movl	$0x3, %esi
000000000000e312	movl	$0x18, %edx
000000000000e317	movl	$0x2c, %ecx
000000000000e31c	xorl	%r9d, %r9d
000000000000e31f	movq	%rbx, %rdi
000000000000e322	movl	%eax, %r8d
000000000000e325	callq	_mach_msg
000000000000e32a	movl	%eax, %ebx
000000000000e32c	leal	-0x10000002(%rbx), %eax
000000000000e332	cmpl	$0xe, %eax
000000000000e335	ja	0xe34b
000000000000e337	movl	$0x4003, %ecx
000000000000e33c	btl	%eax, %ecx
000000000000e33f	jae	0xe34b
000000000000e341	movl	-0x2c(%rbp), %edi
000000000000e344	callq	_mig_put_reply_port
000000000000e349	jmp	0xe399
000000000000e34b	testl	%ebx, %ebx
000000000000e34d	jne	0xe37a
000000000000e34f	movl	-0x24(%rbp), %eax
000000000000e352	cmpl	$0x47, %eax
000000000000e355	je	0xe384
000000000000e357	cmpl	$0x141, %eax
000000000000e35c	jne	0xe38b
000000000000e35e	movl	$0xfffffed4, %ebx
000000000000e363	cmpl	$0x0, -0x38(%rbp)
000000000000e367	js	0xe390
000000000000e369	cmpl	$0x24, -0x34(%rbp)
000000000000e36d	jne	0xe390
000000000000e36f	movl	-0x18(%rbp), %ebx
000000000000e372	testl	%ebx, %ebx
000000000000e374	jne	0xe390
000000000000e376	xorl	%ebx, %ebx
000000000000e378	jmp	0xe399
000000000000e37a	movl	-0x2c(%rbp), %edi
000000000000e37d	callq	_mig_dealloc_reply_port
000000000000e382	jmp	0xe399
000000000000e384	movl	$0xfffffecc, %ebx
000000000000e389	jmp	0xe390
000000000000e38b	movl	$0xfffffed3, %ebx
000000000000e390	leaq	-0x38(%rbp), %rdi
000000000000e394	callq	_mach_msg_destroy
000000000000e399	movl	%ebx, %eax
000000000000e39b	addq	$0x38, %rsp
000000000000e39f	popq	%rbx
000000000000e3a0	popq	%rbp
000000000000e3a1	retq
__kernelrpc_host_create_mach_voucher:
000000000000e3a2	pushq	%rbp
000000000000e3a3	movq	%rsp, %rbp
000000000000e3a6	pushq	%r15
000000000000e3a8	pushq	%r14
000000000000e3aa	pushq	%r12
000000000000e3ac	pushq	%rbx
000000000000e3ad	subq	$0x1430, %rsp
000000000000e3b4	leaq	_NDR_record(%rip), %rax
000000000000e3bb	movq	(%rax), %rax
000000000000e3be	movq	%rax, -0x1430(%rbp)
000000000000e3c5	movl	$0xfffffecd, %r15d
000000000000e3cb	cmpl	$0x1400, %edx
000000000000e3d1	ja	0xe4d4
000000000000e3d7	movq	%rcx, %r14
000000000000e3da	movl	%edx, %ebx
000000000000e3dc	movl	%edi, %r12d
000000000000e3df	leaq	-0x1424(%rbp), %r15
000000000000e3e6	movl	%edx, %edx
000000000000e3e8	movq	%r15, %rdi
000000000000e3eb	callq	_memcpy
000000000000e3f0	movl	%ebx, -0x4(%r15)
000000000000e3f4	addl	$0x27, %ebx
000000000000e3f7	andl	$-0x4, %ebx
000000000000e3fa	movl	$0x1513, -0x24(%r15)
000000000000e402	movl	%r12d, -0x1c(%r15)
000000000000e406	callq	_mig_get_reply_port
000000000000e40b	movl	%eax, -0x18(%r15)
000000000000e40f	movabsq	$0xde00000000, %rcx
000000000000e419	movq	%rcx, -0x14(%r15)
000000000000e41d	movl	$0x0, (%rsp)
000000000000e424	leaq	-0x1448(%rbp), %rdi
000000000000e42b	movl	$0x3, %esi
000000000000e430	movl	$0x30, %ecx
000000000000e435	xorl	%r9d, %r9d
000000000000e438	movl	%eax, %r8d
000000000000e43b	movl	%ebx, %edx
000000000000e43d	callq	_mach_msg
000000000000e442	movl	%eax, %r15d
000000000000e445	leal	-0x10000002(%r15), %eax
000000000000e44c	cmpl	$0xe, %eax
000000000000e44f	ja	0xe468
000000000000e451	movl	$0x4003, %ecx
000000000000e456	btl	%eax, %ecx
000000000000e459	jae	0xe468
000000000000e45b	movl	-0x143c(%rbp), %edi
000000000000e461	callq	_mig_put_reply_port
000000000000e466	jmp	0xe4d4
000000000000e468	testl	%r15d, %r15d
000000000000e46b	jne	0xe4ad
000000000000e46d	movl	-0x1434(%rbp), %eax
000000000000e473	cmpl	$0x47, %eax
000000000000e476	je	0xe4ba
000000000000e478	cmpl	$0x142, %eax
000000000000e47d	jne	0xe4c2
000000000000e47f	cmpl	$0x0, -0x1448(%rbp)
000000000000e486	movl	-0x1444(%rbp), %eax
000000000000e48c	movl	$0xfffffed4, %r15d
000000000000e492	js	0xe4e7
000000000000e494	cmpl	$0x24, %eax
000000000000e497	jne	0xe4c8
000000000000e499	movl	-0x1428(%rbp), %eax
000000000000e49f	testl	%eax, %eax
000000000000e4a1	movl	$0xfffffed4, %r15d
000000000000e4a7	cmovnel	%eax, %r15d
000000000000e4ab	jmp	0xe4c8
000000000000e4ad	movl	-0x143c(%rbp), %edi
000000000000e4b3	callq	_mig_dealloc_reply_port
000000000000e4b8	jmp	0xe4d4
000000000000e4ba	movl	$0xfffffecc, %r15d
000000000000e4c0	jmp	0xe4c8
000000000000e4c2	movl	$0xfffffed3, %r15d
000000000000e4c8	leaq	-0x1448(%rbp), %rdi
000000000000e4cf	callq	_mach_msg_destroy
000000000000e4d4	movl	%r15d, %eax
000000000000e4d7	addq	$0x1430, %rsp
000000000000e4de	popq	%rbx
000000000000e4df	popq	%r12
000000000000e4e1	popq	%r14
000000000000e4e3	popq	%r15
000000000000e4e5	popq	%rbp
000000000000e4e6	retq
000000000000e4e7	cmpl	$0x28, %eax
000000000000e4ea	jne	0xe4c8
000000000000e4ec	cmpl	$0x1, -0x1430(%rbp)
000000000000e4f3	jne	0xe4c8
000000000000e4f5	movl	$0xffff0000, %eax
000000000000e4fa	andl	-0x1424(%rbp), %eax
000000000000e500	cmpl	$0x110000, %eax
000000000000e505	jne	0xe4c8
000000000000e507	movl	-0x142c(%rbp), %eax
000000000000e50d	movl	%eax, (%r14)
000000000000e510	xorl	%r15d, %r15d
000000000000e513	jmp	0xe4d4
_host_register_mach_voucher_attr_manager:
000000000000e515	pushq	%rbp
000000000000e516	movq	%rsp, %rbp
000000000000e519	pushq	%r15
000000000000e51b	pushq	%r14
000000000000e51d	pushq	%rbx
000000000000e51e	subq	$0x48, %rsp
000000000000e522	movq	%r8, %r14
000000000000e525	movq	%rcx, %r15
000000000000e528	leaq	-0x58(%rbp), %rbx
000000000000e52c	movl	$0x1, 0x18(%rbx)
000000000000e533	movl	%esi, 0x1c(%rbx)
000000000000e536	movl	$0x130000, 0x24(%rbx)
000000000000e53d	leaq	_NDR_record(%rip), %rax
000000000000e544	movq	(%rax), %rax
000000000000e547	movq	%rax, 0x28(%rbx)
000000000000e54b	movq	%rdx, 0x30(%rbx)
000000000000e54f	movl	$0x80001513, (%rbx)
000000000000e555	movl	%edi, 0x8(%rbx)
000000000000e558	callq	_mig_get_reply_port
000000000000e55d	movl	%eax, 0xc(%rbx)
000000000000e560	movabsq	$0xdf00000000, %rcx
000000000000e56a	movq	%rcx, 0x10(%rbx)
000000000000e56e	movl	$0x0, (%rsp)
000000000000e575	movl	$0x3, %esi
000000000000e57a	movl	$0x38, %edx
000000000000e57f	movl	$0x3c, %ecx
000000000000e584	xorl	%r9d, %r9d
000000000000e587	movq	%rbx, %rdi
000000000000e58a	movl	%eax, %r8d
000000000000e58d	callq	_mach_msg
000000000000e592	movl	%eax, %ebx
000000000000e594	leal	-0x10000002(%rbx), %eax
000000000000e59a	cmpl	$0xe, %eax
000000000000e59d	ja	0xe5b3
000000000000e59f	movl	$0x4003, %ecx
000000000000e5a4	btl	%eax, %ecx
000000000000e5a7	jae	0xe5b3
000000000000e5a9	movl	-0x4c(%rbp), %edi
000000000000e5ac	callq	_mig_put_reply_port
000000000000e5b1	jmp	0xe607
000000000000e5b3	testl	%ebx, %ebx
000000000000e5b5	jne	0xe5e8
000000000000e5b7	movl	-0x44(%rbp), %eax
000000000000e5ba	cmpl	$0x47, %eax
000000000000e5bd	je	0xe5f2
000000000000e5bf	cmpl	$0x143, %eax
000000000000e5c4	jne	0xe5f9
000000000000e5c6	cmpl	$0x0, -0x58(%rbp)
000000000000e5ca	movl	-0x54(%rbp), %eax
000000000000e5cd	movl	$0xfffffed4, %ebx
000000000000e5d2	js	0xe614
000000000000e5d4	cmpl	$0x24, %eax
000000000000e5d7	jne	0xe5fe
000000000000e5d9	movl	-0x38(%rbp), %eax
000000000000e5dc	testl	%eax, %eax
000000000000e5de	movl	$0xfffffed4, %ebx
000000000000e5e3	cmovnel	%eax, %ebx
000000000000e5e6	jmp	0xe5fe
000000000000e5e8	movl	-0x4c(%rbp), %edi
000000000000e5eb	callq	_mig_dealloc_reply_port
000000000000e5f0	jmp	0xe607
000000000000e5f2	movl	$0xfffffecc, %ebx
000000000000e5f7	jmp	0xe5fe
000000000000e5f9	movl	$0xfffffed3, %ebx
000000000000e5fe	leaq	-0x58(%rbp), %rdi
000000000000e602	callq	_mach_msg_destroy
000000000000e607	movl	%ebx, %eax
000000000000e609	addq	$0x48, %rsp
000000000000e60d	popq	%rbx
000000000000e60e	popq	%r14
000000000000e610	popq	%r15
000000000000e612	popq	%rbp
000000000000e613	retq
000000000000e614	cmpl	$0x34, %eax
000000000000e617	jne	0xe5fe
000000000000e619	cmpl	$0x1, -0x40(%rbp)
000000000000e61d	jne	0xe5fe
000000000000e61f	movl	$0xffff0000, %eax
000000000000e624	andl	-0x34(%rbp), %eax
000000000000e627	cmpl	$0x110000, %eax
000000000000e62c	jne	0xe5fe
000000000000e62e	movl	-0x28(%rbp), %eax
000000000000e631	movl	%eax, (%r15)
000000000000e634	movl	-0x3c(%rbp), %eax
000000000000e637	movl	%eax, (%r14)
000000000000e63a	xorl	%ebx, %ebx
000000000000e63c	jmp	0xe607
_host_register_well_known_mach_voucher_attr_manager:
000000000000e63e	pushq	%rbp
000000000000e63f	movq	%rsp, %rbp
000000000000e642	pushq	%r14
000000000000e644	pushq	%rbx
000000000000e645	subq	$0x50, %rsp
000000000000e649	movq	%r8, %r14
000000000000e64c	leaq	-0x50(%rbp), %rbx
000000000000e650	movl	$0x1, 0x18(%rbx)
000000000000e657	movl	%esi, 0x1c(%rbx)
000000000000e65a	movl	$0x130000, 0x24(%rbx)
000000000000e661	leaq	_NDR_record(%rip), %rax
000000000000e668	movq	(%rax), %rax
000000000000e66b	movq	%rax, 0x28(%rbx)
000000000000e66f	movq	%rdx, 0x30(%rbx)
000000000000e673	movl	%ecx, 0x38(%rbx)
000000000000e676	movl	$0x80001513, (%rbx)
000000000000e67c	movl	%edi, 0x8(%rbx)
000000000000e67f	callq	_mig_get_reply_port
000000000000e684	movl	%eax, 0xc(%rbx)
000000000000e687	movabsq	$0xe000000000, %rcx
000000000000e691	movq	%rcx, 0x10(%rbx)
000000000000e695	movl	$0x0, (%rsp)
000000000000e69c	movl	$0x3, %esi
000000000000e6a1	movl	$0x3c, %edx
000000000000e6a6	movl	$0x30, %ecx
000000000000e6ab	xorl	%r9d, %r9d
000000000000e6ae	movq	%rbx, %rdi
000000000000e6b1	movl	%eax, %r8d
000000000000e6b4	callq	_mach_msg
000000000000e6b9	movl	%eax, %ebx
000000000000e6bb	leal	-0x10000002(%rbx), %eax
000000000000e6c1	cmpl	$0xe, %eax
000000000000e6c4	ja	0xe6da
000000000000e6c6	movl	$0x4003, %ecx
000000000000e6cb	btl	%eax, %ecx
000000000000e6ce	jae	0xe6da
000000000000e6d0	movl	-0x44(%rbp), %edi
000000000000e6d3	callq	_mig_put_reply_port
000000000000e6d8	jmp	0xe72e
000000000000e6da	testl	%ebx, %ebx
000000000000e6dc	jne	0xe70f
000000000000e6de	movl	-0x3c(%rbp), %eax
000000000000e6e1	cmpl	$0x47, %eax
000000000000e6e4	je	0xe719
000000000000e6e6	cmpl	$0x144, %eax
000000000000e6eb	jne	0xe720
000000000000e6ed	cmpl	$0x0, -0x50(%rbp)
000000000000e6f1	movl	-0x4c(%rbp), %eax
000000000000e6f4	movl	$0xfffffed4, %ebx
000000000000e6f9	js	0xe739
000000000000e6fb	cmpl	$0x24, %eax
000000000000e6fe	jne	0xe725
000000000000e700	movl	-0x30(%rbp), %eax
000000000000e703	testl	%eax, %eax
000000000000e705	movl	$0xfffffed4, %ebx
000000000000e70a	cmovnel	%eax, %ebx
000000000000e70d	jmp	0xe725
000000000000e70f	movl	-0x44(%rbp), %edi
000000000000e712	callq	_mig_dealloc_reply_port
000000000000e717	jmp	0xe72e
000000000000e719	movl	$0xfffffecc, %ebx
000000000000e71e	jmp	0xe725
000000000000e720	movl	$0xfffffed3, %ebx
000000000000e725	leaq	-0x50(%rbp), %rdi
000000000000e729	callq	_mach_msg_destroy
000000000000e72e	movl	%ebx, %eax
000000000000e730	addq	$0x50, %rsp
000000000000e734	popq	%rbx
000000000000e735	popq	%r14
000000000000e737	popq	%rbp
000000000000e738	retq
000000000000e739	cmpl	$0x28, %eax
000000000000e73c	jne	0xe725
000000000000e73e	cmpl	$0x1, -0x38(%rbp)
000000000000e742	jne	0xe725
000000000000e744	movl	$0xffff0000, %eax
000000000000e749	andl	-0x2c(%rbp), %eax
000000000000e74c	cmpl	$0x110000, %eax
000000000000e751	jne	0xe725
000000000000e753	movl	-0x34(%rbp), %eax
000000000000e756	movl	%eax, (%r14)
000000000000e759	xorl	%ebx, %ebx
000000000000e75b	jmp	0xe72e
_host_set_atm_diagnostic_flag:
000000000000e75d	pushq	%rbp
000000000000e75e	movq	%rsp, %rbp
000000000000e761	pushq	%rbx
000000000000e762	subq	$0x38, %rsp
000000000000e766	leaq	_NDR_record(%rip), %rax
000000000000e76d	movq	(%rax), %rax
000000000000e770	leaq	-0x38(%rbp), %rbx
000000000000e774	movq	%rax, 0x18(%rbx)
000000000000e778	movl	%esi, 0x20(%rbx)
000000000000e77b	movl	$0x1513, (%rbx)
000000000000e781	movl	%edi, 0x8(%rbx)
000000000000e784	callq	_mig_get_reply_port
000000000000e789	movl	%eax, 0xc(%rbx)
000000000000e78c	movabsq	$0xe100000000, %rcx
000000000000e796	movq	%rcx, 0x10(%rbx)
000000000000e79a	movl	$0x0, (%rsp)
000000000000e7a1	movl	$0x3, %esi
000000000000e7a6	movl	$0x24, %edx
000000000000e7ab	movl	$0x2c, %ecx
000000000000e7b0	xorl	%r9d, %r9d
000000000000e7b3	movq	%rbx, %rdi
000000000000e7b6	movl	%eax, %r8d
000000000000e7b9	callq	_mach_msg
000000000000e7be	movl	%eax, %ebx
000000000000e7c0	leal	-0x10000002(%rbx), %eax
000000000000e7c6	cmpl	$0xe, %eax
000000000000e7c9	ja	0xe7df
000000000000e7cb	movl	$0x4003, %ecx
000000000000e7d0	btl	%eax, %ecx
000000000000e7d3	jae	0xe7df
000000000000e7d5	movl	-0x2c(%rbp), %edi
000000000000e7d8	callq	_mig_put_reply_port
000000000000e7dd	jmp	0xe82d
000000000000e7df	testl	%ebx, %ebx
000000000000e7e1	jne	0xe80e
000000000000e7e3	movl	-0x24(%rbp), %eax
000000000000e7e6	cmpl	$0x47, %eax
000000000000e7e9	je	0xe818
000000000000e7eb	cmpl	$0x145, %eax
000000000000e7f0	jne	0xe81f
000000000000e7f2	movl	$0xfffffed4, %ebx
000000000000e7f7	cmpl	$0x0, -0x38(%rbp)
000000000000e7fb	js	0xe824
000000000000e7fd	cmpl	$0x24, -0x34(%rbp)
000000000000e801	jne	0xe824
000000000000e803	movl	-0x18(%rbp), %ebx
000000000000e806	testl	%ebx, %ebx
000000000000e808	jne	0xe824
000000000000e80a	xorl	%ebx, %ebx
000000000000e80c	jmp	0xe82d
000000000000e80e	movl	-0x2c(%rbp), %edi
000000000000e811	callq	_mig_dealloc_reply_port
000000000000e816	jmp	0xe82d
000000000000e818	movl	$0xfffffecc, %ebx
000000000000e81d	jmp	0xe824
000000000000e81f	movl	$0xfffffed3, %ebx
000000000000e824	leaq	-0x38(%rbp), %rdi
000000000000e828	callq	_mach_msg_destroy
000000000000e82d	movl	%ebx, %eax
000000000000e82f	addq	$0x38, %rsp
000000000000e833	popq	%rbx
000000000000e834	popq	%rbp
000000000000e835	retq
_mach_memory_info:
000000000000e836	pushq	%rbp
000000000000e837	movq	%rsp, %rbp
000000000000e83a	pushq	%r15
000000000000e83c	pushq	%r14
000000000000e83e	pushq	%r13
000000000000e840	pushq	%r12
000000000000e842	pushq	%rbx
000000000000e843	subq	$0x78, %rsp
000000000000e847	movq	%r9, -0x30(%rbp)
000000000000e84b	movq	%r8, %r15
000000000000e84e	movq	%rcx, %r12
000000000000e851	movq	%rdx, %r13
000000000000e854	movq	%rsi, %r14
000000000000e857	leaq	-0x98(%rbp), %rbx
000000000000e85e	movl	$0x1513, (%rbx)
000000000000e864	movl	%edi, 0x8(%rbx)
000000000000e867	callq	_mig_get_reply_port
000000000000e86c	movl	%eax, 0xc(%rbx)
000000000000e86f	movabsq	$0xe300000000, %rcx
000000000000e879	movq	%rcx, 0x10(%rbx)
000000000000e87d	movl	$0x0, (%rsp)
000000000000e884	movl	$0x3, %esi
000000000000e889	movl	$0x18, %edx
000000000000e88e	movl	$0x68, %ecx
000000000000e893	xorl	%r9d, %r9d
000000000000e896	movq	%rbx, %rdi
000000000000e899	movl	%eax, %r8d
000000000000e89c	callq	_mach_msg
000000000000e8a1	movl	%eax, %ebx
000000000000e8a3	leal	-0x10000002(%rbx), %eax
000000000000e8a9	cmpl	$0xe, %eax
000000000000e8ac	ja	0xe8c5
000000000000e8ae	movl	$0x4003, %ecx
000000000000e8b3	btl	%eax, %ecx
000000000000e8b6	jae	0xe8c5
000000000000e8b8	movl	-0x8c(%rbp), %edi
000000000000e8be	callq	_mig_put_reply_port
000000000000e8c3	jmp	0xe928
000000000000e8c5	testl	%ebx, %ebx
000000000000e8c7	jne	0xe903
000000000000e8c9	movl	-0x84(%rbp), %eax
000000000000e8cf	cmpl	$0x47, %eax
000000000000e8d2	je	0xe910
000000000000e8d4	cmpl	$0x147, %eax
000000000000e8d9	jne	0xe917
000000000000e8db	cmpl	$0x0, -0x98(%rbp)
000000000000e8e2	movl	-0x94(%rbp), %eax
000000000000e8e8	movl	$0xfffffed4, %ebx
000000000000e8ed	js	0xe939
000000000000e8ef	cmpl	$0x24, %eax
000000000000e8f2	jne	0xe91c
000000000000e8f4	movl	-0x78(%rbp), %eax
000000000000e8f7	testl	%eax, %eax
000000000000e8f9	movl	$0xfffffed4, %ebx
000000000000e8fe	cmovnel	%eax, %ebx
000000000000e901	jmp	0xe91c
000000000000e903	movl	-0x8c(%rbp), %edi
000000000000e909	callq	_mig_dealloc_reply_port
000000000000e90e	jmp	0xe928
000000000000e910	movl	$0xfffffecc, %ebx
000000000000e915	jmp	0xe91c
000000000000e917	movl	$0xfffffed3, %ebx
000000000000e91c	leaq	-0x98(%rbp), %rdi
000000000000e923	callq	_mach_msg_destroy
000000000000e928	movl	%ebx, %eax
000000000000e92a	addq	$0x78, %rsp
000000000000e92e	popq	%rbx
000000000000e92f	popq	%r12
000000000000e931	popq	%r13
000000000000e933	popq	%r14
000000000000e935	popq	%r15
000000000000e937	popq	%rbp
000000000000e938	retq
000000000000e939	cmpl	$0x60, %eax
000000000000e93c	jne	0xe91c
000000000000e93e	cmpl	$0x3, -0x80(%rbp)
000000000000e942	jne	0xe91c
000000000000e944	movl	$0xff000000, %eax
000000000000e949	movl	-0x74(%rbp), %ecx
000000000000e94c	andl	%eax, %ecx
000000000000e94e	cmpl	$0x1000000, %ecx
000000000000e954	jne	0xe91c
000000000000e956	andl	-0x64(%rbp), %eax
000000000000e959	cmpl	$0x1000000, %eax
000000000000e95e	jne	0xe91c
000000000000e960	movl	$0xff000000, %eax
000000000000e965	andl	-0x54(%rbp), %eax
000000000000e968	cmpl	$0x1000000, %eax
000000000000e96d	jne	0xe91c
000000000000e96f	movl	-0x70(%rbp), %ecx
000000000000e972	movl	$0xcccccccd, %eax
000000000000e977	imulq	%rcx, %rax
000000000000e97b	shrq	$0x26, %rax
000000000000e97f	cmpl	-0x44(%rbp), %eax
000000000000e982	jne	0xe91c
000000000000e984	movl	-0x60(%rbp), %ecx
000000000000e987	shrl	$0x6, %ecx
000000000000e98a	cmpl	-0x40(%rbp), %ecx
000000000000e98d	jne	0xe91c
000000000000e98f	movl	-0x50(%rbp), %esi
000000000000e992	movl	$0xba2e8ba3, %edx
000000000000e997	imulq	%rsi, %rdx
000000000000e99b	shrq	$0x27, %rdx
000000000000e99f	cmpl	-0x3c(%rbp), %edx
000000000000e9a2	jne	0xe91c
000000000000e9a8	movq	0x10(%rbp), %rsi
000000000000e9ac	movq	-0x7c(%rbp), %rdi
000000000000e9b0	movq	%rdi, (%r14)
000000000000e9b3	movl	%eax, (%r13)
000000000000e9b7	movq	-0x6c(%rbp), %rax
000000000000e9bb	movq	%rax, (%r12)
000000000000e9bf	movl	%ecx, (%r15)
000000000000e9c2	movq	-0x5c(%rbp), %rax
000000000000e9c6	movq	-0x30(%rbp), %rcx
000000000000e9ca	movq	%rax, (%rcx)
000000000000e9cd	movl	%edx, (%rsi)
000000000000e9cf	xorl	%ebx, %ebx
000000000000e9d1	jmp	0xe928
_host_set_multiuser_config_flags:
000000000000e9d6	pushq	%rbp
000000000000e9d7	movq	%rsp, %rbp
000000000000e9da	pushq	%rbx
000000000000e9db	subq	$0x38, %rsp
000000000000e9df	leaq	_NDR_record(%rip), %rax
000000000000e9e6	movq	(%rax), %rax
000000000000e9e9	leaq	-0x38(%rbp), %rbx
000000000000e9ed	movq	%rax, 0x18(%rbx)
000000000000e9f1	movl	%esi, 0x20(%rbx)
000000000000e9f4	movl	$0x1513, (%rbx)
000000000000e9fa	movl	%edi, 0x8(%rbx)
000000000000e9fd	callq	_mig_get_reply_port
000000000000ea02	movl	%eax, 0xc(%rbx)
000000000000ea05	movabsq	$0xe400000000, %rcx
000000000000ea0f	movq	%rcx, 0x10(%rbx)
000000000000ea13	movl	$0x0, (%rsp)
000000000000ea1a	movl	$0x3, %esi
000000000000ea1f	movl	$0x24, %edx
000000000000ea24	movl	$0x2c, %ecx
000000000000ea29	xorl	%r9d, %r9d
000000000000ea2c	movq	%rbx, %rdi
000000000000ea2f	movl	%eax, %r8d
000000000000ea32	callq	_mach_msg
000000000000ea37	movl	%eax, %ebx
000000000000ea39	leal	-0x10000002(%rbx), %eax
000000000000ea3f	cmpl	$0xe, %eax
000000000000ea42	ja	0xea58
000000000000ea44	movl	$0x4003, %ecx
000000000000ea49	btl	%eax, %ecx
000000000000ea4c	jae	0xea58
000000000000ea4e	movl	-0x2c(%rbp), %edi
000000000000ea51	callq	_mig_put_reply_port
000000000000ea56	jmp	0xeaa6
000000000000ea58	testl	%ebx, %ebx
000000000000ea5a	jne	0xea87
000000000000ea5c	movl	-0x24(%rbp), %eax
000000000000ea5f	cmpl	$0x47, %eax
000000000000ea62	je	0xea91
000000000000ea64	cmpl	$0x148, %eax
000000000000ea69	jne	0xea98
000000000000ea6b	movl	$0xfffffed4, %ebx
000000000000ea70	cmpl	$0x0, -0x38(%rbp)
000000000000ea74	js	0xea9d
000000000000ea76	cmpl	$0x24, -0x34(%rbp)
000000000000ea7a	jne	0xea9d
000000000000ea7c	movl	-0x18(%rbp), %ebx
000000000000ea7f	testl	%ebx, %ebx
000000000000ea81	jne	0xea9d
000000000000ea83	xorl	%ebx, %ebx
000000000000ea85	jmp	0xeaa6
000000000000ea87	movl	-0x2c(%rbp), %edi
000000000000ea8a	callq	_mig_dealloc_reply_port
000000000000ea8f	jmp	0xeaa6
000000000000ea91	movl	$0xfffffecc, %ebx
000000000000ea96	jmp	0xea9d
000000000000ea98	movl	$0xfffffed3, %ebx
000000000000ea9d	leaq	-0x38(%rbp), %rdi
000000000000eaa1	callq	_mach_msg_destroy
000000000000eaa6	movl	%ebx, %eax
000000000000eaa8	addq	$0x38, %rsp
000000000000eaac	popq	%rbx
000000000000eaad	popq	%rbp
000000000000eaae	retq
_mach_zone_info_for_zone:
000000000000eaaf	pushq	%rbp
000000000000eab0	movq	%rsp, %rbp
000000000000eab3	pushq	%r14
000000000000eab5	pushq	%rbx
000000000000eab6	subq	$0x80, %rsp
000000000000eabd	movq	%rsi, %r14
000000000000eac0	movl	%edi, %eax
000000000000eac2	leaq	_NDR_record(%rip), %rcx
000000000000eac9	movq	(%rcx), %rcx
000000000000eacc	leaq	-0x60(%rbp), %rbx
000000000000ead0	movq	%rcx, -0x8(%rbx)
000000000000ead4	leaq	0x10(%rbp), %rsi
000000000000ead8	movl	$0x14, %ecx
000000000000eadd	movq	%rbx, %rdi
000000000000eae0	rep		movsl	(%rsi), %es:(%rdi)
000000000000eae2	movl	$0x1513, -0x20(%rbx)
000000000000eae9	movl	%eax, -0x18(%rbx)
000000000000eaec	callq	_mig_get_reply_port
000000000000eaf1	movl	%eax, -0x14(%rbx)
000000000000eaf4	movabsq	$0xe700000000, %rcx
000000000000eafe	movq	%rcx, -0x10(%rbx)
000000000000eb02	movl	$0x0, (%rsp)
000000000000eb09	leaq	-0x80(%rbp), %rdi
000000000000eb0d	movl	$0x3, %esi
000000000000eb12	movl	$0x70, %edx
000000000000eb17	movl	$0x6c, %ecx
000000000000eb1c	xorl	%r9d, %r9d
000000000000eb1f	movl	%eax, %r8d
000000000000eb22	callq	_mach_msg
000000000000eb27	movl	%eax, %ebx
000000000000eb29	leal	-0x10000002(%rbx), %eax
000000000000eb2f	cmpl	$0xe, %eax
000000000000eb32	ja	0xeb48
000000000000eb34	movl	$0x4003, %ecx
000000000000eb39	btl	%eax, %ecx
000000000000eb3c	jae	0xeb48
000000000000eb3e	movl	-0x74(%rbp), %edi
000000000000eb41	callq	_mig_put_reply_port
000000000000eb46	jmp	0xeb9d
000000000000eb48	testl	%ebx, %ebx
000000000000eb4a	jne	0xeb7c
000000000000eb4c	movl	-0x6c(%rbp), %eax
000000000000eb4f	cmpl	$0x47, %eax
000000000000eb52	je	0xeb86
000000000000eb54	cmpl	$0x14b, %eax
000000000000eb59	jne	0xeb8d
000000000000eb5b	movl	$0xfffffed4, %eax
000000000000eb60	cmpl	$0x0, -0x80(%rbp)
000000000000eb64	js	0xeb92
000000000000eb66	movl	-0x7c(%rbp), %ecx
000000000000eb69	cmpl	$0x64, %ecx
000000000000eb6c	je	0xebab
000000000000eb6e	cmpl	$0x24, %ecx
000000000000eb71	jne	0xeb92
000000000000eb73	movl	-0x60(%rbp), %ebx
000000000000eb76	testl	%ebx, %ebx
000000000000eb78	jne	0xeb94
000000000000eb7a	jmp	0xeb92
000000000000eb7c	movl	-0x74(%rbp), %edi
000000000000eb7f	callq	_mig_dealloc_reply_port
000000000000eb84	jmp	0xeb9d
000000000000eb86	movl	$0xfffffecc, %eax
000000000000eb8b	jmp	0xeb92
000000000000eb8d	movl	$0xfffffed3, %eax
000000000000eb92	movl	%eax, %ebx
000000000000eb94	leaq	-0x80(%rbp), %rdi
000000000000eb98	callq	_mach_msg_destroy
000000000000eb9d	movl	%ebx, %eax
000000000000eb9f	addq	$0x80, %rsp
000000000000eba6	popq	%rbx
000000000000eba7	popq	%r14
000000000000eba9	popq	%rbp
000000000000ebaa	retq
000000000000ebab	movl	-0x60(%rbp), %ebx
000000000000ebae	testl	%ebx, %ebx
000000000000ebb0	jne	0xeb94
000000000000ebb2	movq	-0x24(%rbp), %rax
000000000000ebb6	movq	%rax, 0x38(%r14)
000000000000ebba	movq	-0x2c(%rbp), %rax
000000000000ebbe	movq	%rax, 0x30(%r14)
000000000000ebc2	movq	-0x34(%rbp), %rax
000000000000ebc6	movq	%rax, 0x28(%r14)
000000000000ebca	movq	-0x3c(%rbp), %rax
000000000000ebce	movq	%rax, 0x20(%r14)
000000000000ebd2	movq	-0x44(%rbp), %rax
000000000000ebd6	movq	%rax, 0x18(%r14)
000000000000ebda	movq	-0x4c(%rbp), %rax
000000000000ebde	movq	%rax, 0x10(%r14)
000000000000ebe2	movq	-0x5c(%rbp), %rax
000000000000ebe6	movq	-0x54(%rbp), %rcx
000000000000ebea	movq	%rcx, 0x8(%r14)
000000000000ebee	movq	%rax, (%r14)
000000000000ebf1	xorl	%ebx, %ebx
000000000000ebf3	jmp	0xeb9d
_mach_zone_info_for_largest_zone:
000000000000ebf5	pushq	%rbp
000000000000ebf6	movq	%rsp, %rbp
000000000000ebf9	pushq	%r15
000000000000ebfb	pushq	%r14
000000000000ebfd	pushq	%rbx
000000000000ebfe	subq	$0xc8, %rsp
000000000000ec05	movq	%rdx, %r14
000000000000ec08	movq	%rsi, %r15
000000000000ec0b	leaq	-0xd8(%rbp), %rbx
000000000000ec12	movl	$0x1513, (%rbx)
000000000000ec18	movl	%edi, 0x8(%rbx)
000000000000ec1b	callq	_mig_get_reply_port
000000000000ec20	movl	%eax, 0xc(%rbx)
000000000000ec23	movabsq	$0xe800000000, %rcx
000000000000ec2d	movq	%rcx, 0x10(%rbx)
000000000000ec31	movl	$0x0, (%rsp)
000000000000ec38	movl	$0x3, %esi
000000000000ec3d	movl	$0x18, %edx
000000000000ec42	movl	$0xbc, %ecx
000000000000ec47	xorl	%r9d, %r9d
000000000000ec4a	movq	%rbx, %rdi
000000000000ec4d	movl	%eax, %r8d
000000000000ec50	callq	_mach_msg
000000000000ec55	movl	%eax, %ebx
000000000000ec57	leal	-0x10000002(%rbx), %eax
000000000000ec5d	cmpl	$0xe, %eax
000000000000ec60	ja	0xec79
000000000000ec62	movl	$0x4003, %ecx
000000000000ec67	btl	%eax, %ecx
000000000000ec6a	jae	0xec79
000000000000ec6c	movl	-0xcc(%rbp), %edi
000000000000ec72	callq	_mig_put_reply_port
000000000000ec77	jmp	0xece3
000000000000ec79	testl	%ebx, %ebx
000000000000ec7b	jne	0xecbc
000000000000ec7d	movl	-0xc4(%rbp), %eax
000000000000ec83	cmpl	$0x47, %eax
000000000000ec86	je	0xecc9
000000000000ec88	cmpl	$0x14c, %eax
000000000000ec8d	jne	0xecd0
000000000000ec8f	movl	$0xfffffed4, %eax
000000000000ec94	cmpl	$0x0, -0xd8(%rbp)
000000000000ec9b	js	0xecd5
000000000000ec9d	movl	-0xd4(%rbp), %ecx
000000000000eca3	cmpl	$0xb4, %ecx
000000000000eca9	je	0xecf3
000000000000ecab	cmpl	$0x24, %ecx
000000000000ecae	jne	0xecd5
000000000000ecb0	movl	-0xb8(%rbp), %ebx
000000000000ecb6	testl	%ebx, %ebx
000000000000ecb8	jne	0xecd7
000000000000ecba	jmp	0xecd5
000000000000ecbc	movl	-0xcc(%rbp), %edi
000000000000ecc2	callq	_mig_dealloc_reply_port
000000000000ecc7	jmp	0xece3
000000000000ecc9	movl	$0xfffffecc, %eax
000000000000ecce	jmp	0xecd5
000000000000ecd0	movl	$0xfffffed3, %eax
000000000000ecd5	movl	%eax, %ebx
000000000000ecd7	leaq	-0xd8(%rbp), %rdi
000000000000ecde	callq	_mach_msg_destroy
000000000000ece3	movl	%ebx, %eax
000000000000ece5	addq	$0xc8, %rsp
000000000000ecec	popq	%rbx
000000000000eced	popq	%r14
000000000000ecef	popq	%r15
000000000000ecf1	popq	%rbp
000000000000ecf2	retq
000000000000ecf3	movl	-0xb8(%rbp), %ebx
000000000000ecf9	testl	%ebx, %ebx
000000000000ecfb	jne	0xecd7
000000000000ecfd	leaq	-0xb4(%rbp), %rbx
000000000000ed04	movl	$0x50, %edx
000000000000ed09	movq	%r15, %rdi
000000000000ed0c	movq	%rbx, %rsi
000000000000ed0f	callq	_memcpy
000000000000ed14	movq	0x50(%rbx), %rax
000000000000ed18	movq	0x58(%rbx), %rcx
000000000000ed1c	movq	%rax, (%r14)
000000000000ed1f	movq	%rcx, 0x8(%r14)
000000000000ed23	movq	0x60(%rbx), %rax
000000000000ed27	movq	%rax, 0x10(%r14)
000000000000ed2b	movq	0x68(%rbx), %rax
000000000000ed2f	movq	%rax, 0x18(%r14)
000000000000ed33	movq	0x70(%rbx), %rax
000000000000ed37	movq	%rax, 0x20(%r14)
000000000000ed3b	movq	0x78(%rbx), %rax
000000000000ed3f	movq	%rax, 0x28(%r14)
000000000000ed43	movq	0x80(%rbx), %rax
000000000000ed4a	movq	%rax, 0x30(%r14)
000000000000ed4e	movq	0x88(%rbx), %rax
000000000000ed55	movq	%rax, 0x38(%r14)
000000000000ed59	xorl	%ebx, %ebx
000000000000ed5b	jmp	0xece3
_mach_zone_get_zlog_zones:
000000000000ed5d	pushq	%rbp
000000000000ed5e	movq	%rsp, %rbp
000000000000ed61	pushq	%r15
000000000000ed63	pushq	%r14
000000000000ed65	pushq	%rbx
000000000000ed66	subq	$0x48, %rsp
000000000000ed6a	movq	%rdx, %r14
000000000000ed6d	movq	%rsi, %r15
000000000000ed70	leaq	-0x58(%rbp), %rbx
000000000000ed74	movl	$0x1513, (%rbx)
000000000000ed7a	movl	%edi, 0x8(%rbx)
000000000000ed7d	callq	_mig_get_reply_port
000000000000ed82	movl	%eax, 0xc(%rbx)
000000000000ed85	movabsq	$0xe900000000, %rcx
000000000000ed8f	movq	%rcx, 0x10(%rbx)
000000000000ed93	movl	$0x0, (%rsp)
000000000000ed9a	movl	$0x3, %esi
000000000000ed9f	movl	$0x18, %edx
000000000000eda4	movl	$0x40, %ecx
000000000000eda9	xorl	%r9d, %r9d
000000000000edac	movq	%rbx, %rdi
000000000000edaf	movl	%eax, %r8d
000000000000edb2	callq	_mach_msg
000000000000edb7	movl	%eax, %ebx
000000000000edb9	leal	-0x10000002(%rbx), %eax
000000000000edbf	cmpl	$0xe, %eax
000000000000edc2	ja	0xedd8
000000000000edc4	movl	$0x4003, %ecx
000000000000edc9	btl	%eax, %ecx
000000000000edcc	jae	0xedd8
000000000000edce	movl	-0x4c(%rbp), %edi
000000000000edd1	callq	_mig_put_reply_port
000000000000edd6	jmp	0xee2c
000000000000edd8	testl	%ebx, %ebx
000000000000edda	jne	0xee0d
000000000000eddc	movl	-0x44(%rbp), %eax
000000000000eddf	cmpl	$0x47, %eax
000000000000ede2	je	0xee17
000000000000ede4	cmpl	$0x14d, %eax
000000000000ede9	jne	0xee1e
000000000000edeb	cmpl	$0x0, -0x58(%rbp)
000000000000edef	movl	-0x54(%rbp), %eax
000000000000edf2	movl	$0xfffffed4, %ebx
000000000000edf7	js	0xee39
000000000000edf9	cmpl	$0x24, %eax
000000000000edfc	jne	0xee23
000000000000edfe	movl	-0x38(%rbp), %eax
000000000000ee01	testl	%eax, %eax
000000000000ee03	movl	$0xfffffed4, %ebx
000000000000ee08	cmovnel	%eax, %ebx
000000000000ee0b	jmp	0xee23
000000000000ee0d	movl	-0x4c(%rbp), %edi
000000000000ee10	callq	_mig_dealloc_reply_port
000000000000ee15	jmp	0xee2c
000000000000ee17	movl	$0xfffffecc, %ebx
000000000000ee1c	jmp	0xee23
000000000000ee1e	movl	$0xfffffed3, %ebx
000000000000ee23	leaq	-0x58(%rbp), %rdi
000000000000ee27	callq	_mach_msg_destroy
000000000000ee2c	movl	%ebx, %eax
000000000000ee2e	addq	$0x48, %rsp
000000000000ee32	popq	%rbx
000000000000ee33	popq	%r14
000000000000ee35	popq	%r15
000000000000ee37	popq	%rbp
000000000000ee38	retq
000000000000ee39	cmpl	$0x38, %eax
000000000000ee3c	jne	0xee23
000000000000ee3e	cmpl	$0x1, -0x40(%rbp)
000000000000ee42	jne	0xee23
000000000000ee44	movl	$0xff000000, %eax
000000000000ee49	andl	-0x34(%rbp), %eax
000000000000ee4c	cmpl	$0x1000000, %eax
000000000000ee51	jne	0xee23
000000000000ee53	movl	-0x30(%rbp), %ecx
000000000000ee56	movl	$0xcccccccd, %eax
000000000000ee5b	imulq	%rcx, %rax
000000000000ee5f	shrq	$0x26, %rax
000000000000ee63	cmpl	-0x24(%rbp), %eax
000000000000ee66	jne	0xee23
000000000000ee68	movq	-0x3c(%rbp), %rcx
000000000000ee6c	movq	%rcx, (%r15)
000000000000ee6f	movl	%eax, (%r14)
000000000000ee72	xorl	%ebx, %ebx
000000000000ee74	jmp	0xee2c
_mach_zone_get_btlog_records:
000000000000ee76	pushq	%rbp
000000000000ee77	movq	%rsp, %rbp
000000000000ee7a	pushq	%r15
000000000000ee7c	pushq	%r14
000000000000ee7e	pushq	%rbx
000000000000ee7f	subq	$0x78, %rsp
000000000000ee83	movq	%rdx, %r14
000000000000ee86	movq	%rsi, %r15
000000000000ee89	movl	%edi, %eax
000000000000ee8b	leaq	_NDR_record(%rip), %rcx
000000000000ee92	movq	(%rcx), %rcx
000000000000ee95	leaq	-0x68(%rbp), %rbx
000000000000ee99	movq	%rcx, -0x8(%rbx)
000000000000ee9d	leaq	0x10(%rbp), %rsi
000000000000eea1	movl	$0x14, %ecx
000000000000eea6	movq	%rbx, %rdi
000000000000eea9	rep		movsl	(%rsi), %es:(%rdi)
000000000000eeab	movl	$0x1513, -0x20(%rbx)
000000000000eeb2	movl	%eax, -0x18(%rbx)
000000000000eeb5	callq	_mig_get_reply_port
000000000000eeba	movl	%eax, -0x14(%rbx)
000000000000eebd	movabsq	$0xea00000000, %rcx
000000000000eec7	movq	%rcx, -0x10(%rbx)
000000000000eecb	movl	$0x0, (%rsp)
000000000000eed2	leaq	-0x88(%rbp), %rdi
000000000000eed9	movl	$0x3, %esi
000000000000eede	movl	$0x70, %edx
000000000000eee3	movl	$0x40, %ecx
000000000000eee8	xorl	%r9d, %r9d
000000000000eeeb	movl	%eax, %r8d
000000000000eeee	callq	_mach_msg
000000000000eef3	movl	%eax, %ebx
000000000000eef5	leal	-0x10000002(%rbx), %eax
000000000000eefb	cmpl	$0xe, %eax
000000000000eefe	ja	0xef14
000000000000ef00	movl	$0x4003, %ecx
000000000000ef05	btl	%eax, %ecx
000000000000ef08	jae	0xef14
000000000000ef0a	movl	-0x7c(%rbp), %edi
000000000000ef0d	callq	_mig_put_reply_port
000000000000ef12	jmp	0xef71
000000000000ef14	testl	%ebx, %ebx
000000000000ef16	jne	0xef4f
000000000000ef18	movl	-0x74(%rbp), %eax
000000000000ef1b	cmpl	$0x47, %eax
000000000000ef1e	je	0xef59
000000000000ef20	cmpl	$0x14e, %eax
000000000000ef25	jne	0xef60
000000000000ef27	cmpl	$0x0, -0x88(%rbp)
000000000000ef2e	movl	-0x84(%rbp), %eax
000000000000ef34	movl	$0xfffffed4, %ebx
000000000000ef39	js	0xef7e
000000000000ef3b	cmpl	$0x24, %eax
000000000000ef3e	jne	0xef65
000000000000ef40	movl	-0x68(%rbp), %eax
000000000000ef43	testl	%eax, %eax
000000000000ef45	movl	$0xfffffed4, %ebx
000000000000ef4a	cmovnel	%eax, %ebx
000000000000ef4d	jmp	0xef65
000000000000ef4f	movl	-0x7c(%rbp), %edi
000000000000ef52	callq	_mig_dealloc_reply_port
000000000000ef57	jmp	0xef71
000000000000ef59	movl	$0xfffffecc, %ebx
000000000000ef5e	jmp	0xef65
000000000000ef60	movl	$0xfffffed3, %ebx
000000000000ef65	leaq	-0x88(%rbp), %rdi
000000000000ef6c	callq	_mach_msg_destroy
000000000000ef71	movl	%ebx, %eax
000000000000ef73	addq	$0x78, %rsp
000000000000ef77	popq	%rbx
000000000000ef78	popq	%r14
000000000000ef7a	popq	%r15
000000000000ef7c	popq	%rbp
000000000000ef7d	retq
000000000000ef7e	cmpl	$0x38, %eax
000000000000ef81	jne	0xef65
000000000000ef83	cmpl	$0x1, -0x70(%rbp)
000000000000ef87	jne	0xef65
000000000000ef89	movl	$0xff000000, %eax
000000000000ef8e	andl	-0x64(%rbp), %eax
000000000000ef91	cmpl	$0x1000000, %eax
000000000000ef96	jne	0xef65
000000000000ef98	movl	-0x60(%rbp), %eax
000000000000ef9b	shrl	$0x7, %eax
000000000000ef9e	cmpl	-0x54(%rbp), %eax
000000000000efa1	jne	0xef65
000000000000efa3	movq	-0x6c(%rbp), %rcx
000000000000efa7	movq	%rcx, (%r15)
000000000000efaa	movl	%eax, (%r14)
000000000000efad	xorl	%ebx, %ebx
000000000000efaf	jmp	0xef71
__kernelrpc_mach_port_names:
000000000000efb1	pushq	%rbp
000000000000efb2	movq	%rsp, %rbp
000000000000efb5	pushq	%r15
000000000000efb7	pushq	%r14
000000000000efb9	pushq	%r13
000000000000efbb	pushq	%r12
000000000000efbd	pushq	%rbx
000000000000efbe	subq	$0x68, %rsp
000000000000efc2	movq	%r8, %r14
000000000000efc5	movq	%rcx, %r15
000000000000efc8	movq	%rdx, %r12
000000000000efcb	movq	%rsi, %r13
000000000000efce	leaq	-0x80(%rbp), %rbx
000000000000efd2	movl	$0x1513, (%rbx)
000000000000efd8	movl	%edi, 0x8(%rbx)
000000000000efdb	callq	_mig_get_reply_port
000000000000efe0	movl	%eax, 0xc(%rbx)
000000000000efe3	movabsq	$0xc8000000000, %rcx
000000000000efed	movq	%rcx, 0x10(%rbx)
000000000000eff1	movl	$0x0, (%rsp)
000000000000eff8	movl	$0x3, %esi
000000000000effd	movl	$0x18, %edx
000000000000f002	movl	$0x54, %ecx
000000000000f007	xorl	%r9d, %r9d
000000000000f00a	movq	%rbx, %rdi
000000000000f00d	movl	%eax, %r8d
000000000000f010	callq	_mach_msg
000000000000f015	movl	%eax, %ebx
000000000000f017	leal	-0x10000002(%rbx), %eax
000000000000f01d	cmpl	$0xe, %eax
000000000000f020	ja	0xf036
000000000000f022	movl	$0x4003, %ecx
000000000000f027	btl	%eax, %ecx
000000000000f02a	jae	0xf036
000000000000f02c	movl	-0x74(%rbp), %edi
000000000000f02f	callq	_mig_put_reply_port
000000000000f034	jmp	0xf08a
000000000000f036	testl	%ebx, %ebx
000000000000f038	jne	0xf06b
000000000000f03a	movl	-0x6c(%rbp), %eax
000000000000f03d	cmpl	$0x47, %eax
000000000000f040	je	0xf075
000000000000f042	cmpl	$0xce4, %eax
000000000000f047	jne	0xf07c
000000000000f049	cmpl	$0x0, -0x80(%rbp)
000000000000f04d	movl	-0x7c(%rbp), %eax
000000000000f050	movl	$0xfffffed4, %ebx
000000000000f055	js	0xf09b
000000000000f057	cmpl	$0x24, %eax
000000000000f05a	jne	0xf081
000000000000f05c	movl	-0x60(%rbp), %eax
000000000000f05f	testl	%eax, %eax
000000000000f061	movl	$0xfffffed4, %ebx
000000000000f066	cmovnel	%eax, %ebx
000000000000f069	jmp	0xf081
000000000000f06b	movl	-0x74(%rbp), %edi
000000000000f06e	callq	_mig_dealloc_reply_port
000000000000f073	jmp	0xf08a
000000000000f075	movl	$0xfffffecc, %ebx
000000000000f07a	jmp	0xf081
000000000000f07c	movl	$0xfffffed3, %ebx
000000000000f081	leaq	-0x80(%rbp), %rdi
000000000000f085	callq	_mach_msg_destroy
000000000000f08a	movl	%ebx, %eax
000000000000f08c	addq	$0x68, %rsp
000000000000f090	popq	%rbx
000000000000f091	popq	%r12
000000000000f093	popq	%r13
000000000000f095	popq	%r14
000000000000f097	popq	%r15
000000000000f099	popq	%rbp
000000000000f09a	retq
000000000000f09b	cmpl	$0x4c, %eax
000000000000f09e	jne	0xf081
000000000000f0a0	cmpl	$0x2, -0x68(%rbp)
000000000000f0a4	jne	0xf081
000000000000f0a6	movl	$0xff000000, %eax
000000000000f0ab	movl	-0x5c(%rbp), %ecx
000000000000f0ae	andl	%eax, %ecx
000000000000f0b0	cmpl	$0x1000000, %ecx
000000000000f0b6	jne	0xf081
000000000000f0b8	andl	-0x4c(%rbp), %eax
000000000000f0bb	cmpl	$0x1000000, %eax
000000000000f0c0	jne	0xf081
000000000000f0c2	movl	-0x58(%rbp), %eax
000000000000f0c5	shrl	$0x2, %eax
000000000000f0c8	cmpl	-0x3c(%rbp), %eax
000000000000f0cb	jne	0xf081
000000000000f0cd	movl	-0x48(%rbp), %ecx
000000000000f0d0	shrl	$0x2, %ecx
000000000000f0d3	cmpl	-0x38(%rbp), %ecx
000000000000f0d6	jne	0xf081
000000000000f0d8	movq	-0x64(%rbp), %rdx
000000000000f0dc	movq	%rdx, (%r13)
000000000000f0e0	movl	%eax, (%r12)
000000000000f0e4	movq	-0x54(%rbp), %rax
000000000000f0e8	movq	%rax, (%r15)
000000000000f0eb	movl	%ecx, (%r14)
000000000000f0ee	xorl	%ebx, %ebx
000000000000f0f0	jmp	0xf08a
__kernelrpc_mach_port_rename:
000000000000f0f2	pushq	%rbp
000000000000f0f3	movq	%rsp, %rbp
000000000000f0f6	pushq	%rbx
000000000000f0f7	subq	$0x38, %rsp
000000000000f0fb	leaq	_NDR_record(%rip), %rax
000000000000f102	movq	(%rax), %rax
000000000000f105	leaq	-0x38(%rbp), %rbx
000000000000f109	movq	%rax, 0x18(%rbx)
000000000000f10d	movl	%esi, 0x20(%rbx)
000000000000f110	movl	%edx, 0x24(%rbx)
000000000000f113	movl	$0x1513, (%rbx)
000000000000f119	movl	%edi, 0x8(%rbx)
000000000000f11c	callq	_mig_get_reply_port
000000000000f121	movl	%eax, 0xc(%rbx)
000000000000f124	movabsq	$0xc8200000000, %rcx
000000000000f12e	movq	%rcx, 0x10(%rbx)
000000000000f132	movl	$0x0, (%rsp)
000000000000f139	movl	$0x3, %esi
000000000000f13e	movl	$0x28, %edx
000000000000f143	movl	$0x2c, %ecx
000000000000f148	xorl	%r9d, %r9d
000000000000f14b	movq	%rbx, %rdi
000000000000f14e	movl	%eax, %r8d
000000000000f151	callq	_mach_msg
000000000000f156	movl	%eax, %ebx
000000000000f158	leal	-0x10000002(%rbx), %eax
000000000000f15e	cmpl	$0xe, %eax
000000000000f161	ja	0xf177
000000000000f163	movl	$0x4003, %ecx
000000000000f168	btl	%eax, %ecx
000000000000f16b	jae	0xf177
000000000000f16d	movl	-0x2c(%rbp), %edi
000000000000f170	callq	_mig_put_reply_port
000000000000f175	jmp	0xf1c5
000000000000f177	testl	%ebx, %ebx
000000000000f179	jne	0xf1a6
000000000000f17b	movl	-0x24(%rbp), %eax
000000000000f17e	cmpl	$0x47, %eax
000000000000f181	je	0xf1b0
000000000000f183	cmpl	$0xce6, %eax
000000000000f188	jne	0xf1b7
000000000000f18a	movl	$0xfffffed4, %ebx
000000000000f18f	cmpl	$0x0, -0x38(%rbp)
000000000000f193	js	0xf1bc
000000000000f195	cmpl	$0x24, -0x34(%rbp)
000000000000f199	jne	0xf1bc
000000000000f19b	movl	-0x18(%rbp), %ebx
000000000000f19e	testl	%ebx, %ebx
000000000000f1a0	jne	0xf1bc
000000000000f1a2	xorl	%ebx, %ebx
000000000000f1a4	jmp	0xf1c5
000000000000f1a6	movl	-0x2c(%rbp), %edi
000000000000f1a9	callq	_mig_dealloc_reply_port
000000000000f1ae	jmp	0xf1c5
000000000000f1b0	movl	$0xfffffecc, %ebx
000000000000f1b5	jmp	0xf1bc
000000000000f1b7	movl	$0xfffffed3, %ebx
000000000000f1bc	leaq	-0x38(%rbp), %rdi
000000000000f1c0	callq	_mach_msg_destroy
000000000000f1c5	movl	%ebx, %eax
000000000000f1c7	addq	$0x38, %rsp
000000000000f1cb	popq	%rbx
000000000000f1cc	popq	%rbp
000000000000f1cd	retq
__kernelrpc_mach_port_allocate_name:
000000000000f1ce	pushq	%rbp
000000000000f1cf	movq	%rsp, %rbp
000000000000f1d2	pushq	%rbx
000000000000f1d3	subq	$0x38, %rsp
000000000000f1d7	leaq	_NDR_record(%rip), %rax
000000000000f1de	movq	(%rax), %rax
000000000000f1e1	leaq	-0x38(%rbp), %rbx
000000000000f1e5	movq	%rax, 0x18(%rbx)
000000000000f1e9	movl	%esi, 0x20(%rbx)
000000000000f1ec	movl	%edx, 0x24(%rbx)
000000000000f1ef	movl	$0x1513, (%rbx)
000000000000f1f5	movl	%edi, 0x8(%rbx)
000000000000f1f8	callq	_mig_get_reply_port
000000000000f1fd	movl	%eax, 0xc(%rbx)
000000000000f200	movabsq	$0xc8300000000, %rcx
000000000000f20a	movq	%rcx, 0x10(%rbx)
000000000000f20e	movl	$0x0, (%rsp)
000000000000f215	movl	$0x3, %esi
000000000000f21a	movl	$0x28, %edx
000000000000f21f	movl	$0x2c, %ecx
000000000000f224	xorl	%r9d, %r9d
000000000000f227	movq	%rbx, %rdi
000000000000f22a	movl	%eax, %r8d
000000000000f22d	callq	_mach_msg
000000000000f232	movl	%eax, %ebx
000000000000f234	leal	-0x10000002(%rbx), %eax
000000000000f23a	cmpl	$0xe, %eax
000000000000f23d	ja	0xf253
000000000000f23f	movl	$0x4003, %ecx
000000000000f244	btl	%eax, %ecx
000000000000f247	jae	0xf253
000000000000f249	movl	-0x2c(%rbp), %edi
000000000000f24c	callq	_mig_put_reply_port
000000000000f251	jmp	0xf2a1
000000000000f253	testl	%ebx, %ebx
000000000000f255	jne	0xf282
000000000000f257	movl	-0x24(%rbp), %eax
000000000000f25a	cmpl	$0x47, %eax
000000000000f25d	je	0xf28c
000000000000f25f	cmpl	$0xce7, %eax
000000000000f264	jne	0xf293
000000000000f266	movl	$0xfffffed4, %ebx
000000000000f26b	cmpl	$0x0, -0x38(%rbp)
000000000000f26f	js	0xf298
000000000000f271	cmpl	$0x24, -0x34(%rbp)
000000000000f275	jne	0xf298
000000000000f277	movl	-0x18(%rbp), %ebx
000000000000f27a	testl	%ebx, %ebx
000000000000f27c	jne	0xf298
000000000000f27e	xorl	%ebx, %ebx
000000000000f280	jmp	0xf2a1
000000000000f282	movl	-0x2c(%rbp), %edi
000000000000f285	callq	_mig_dealloc_reply_port
000000000000f28a	jmp	0xf2a1
000000000000f28c	movl	$0xfffffecc, %ebx
000000000000f291	jmp	0xf298
000000000000f293	movl	$0xfffffed3, %ebx
000000000000f298	leaq	-0x38(%rbp), %rdi
000000000000f29c	callq	_mach_msg_destroy
000000000000f2a1	movl	%ebx, %eax
000000000000f2a3	addq	$0x38, %rsp
000000000000f2a7	popq	%rbx
000000000000f2a8	popq	%rbp
000000000000f2a9	retq
__kernelrpc_mach_port_allocate:
000000000000f2aa	pushq	%rbp
000000000000f2ab	movq	%rsp, %rbp
000000000000f2ae	pushq	%r14
000000000000f2b0	pushq	%rbx
000000000000f2b1	subq	$0x40, %rsp
000000000000f2b5	movq	%rdx, %r14
000000000000f2b8	leaq	_NDR_record(%rip), %rax
000000000000f2bf	movq	(%rax), %rax
000000000000f2c2	leaq	-0x40(%rbp), %rbx
000000000000f2c6	movq	%rax, 0x18(%rbx)
000000000000f2ca	movl	%esi, 0x20(%rbx)
000000000000f2cd	movl	$0x1513, (%rbx)
000000000000f2d3	movl	%edi, 0x8(%rbx)
000000000000f2d6	callq	_mig_get_reply_port
000000000000f2db	movl	%eax, 0xc(%rbx)
000000000000f2de	movabsq	$0xc8400000000, %rcx
000000000000f2e8	movq	%rcx, 0x10(%rbx)
000000000000f2ec	movl	$0x0, (%rsp)
000000000000f2f3	movl	$0x3, %esi
000000000000f2f8	movl	$0x24, %edx
000000000000f2fd	movl	$0x30, %ecx
000000000000f302	xorl	%r9d, %r9d
000000000000f305	movq	%rbx, %rdi
000000000000f308	movl	%eax, %r8d
000000000000f30b	callq	_mach_msg
000000000000f310	movl	%eax, %ebx
000000000000f312	leal	-0x10000002(%rbx), %eax
000000000000f318	cmpl	$0xe, %eax
000000000000f31b	ja	0xf331
000000000000f31d	movl	$0x4003, %ecx
000000000000f322	btl	%eax, %ecx
000000000000f325	jae	0xf331
000000000000f327	movl	-0x34(%rbp), %edi
000000000000f32a	callq	_mig_put_reply_port
000000000000f32f	jmp	0xf386
000000000000f331	testl	%ebx, %ebx
000000000000f333	jne	0xf365
000000000000f335	movl	-0x2c(%rbp), %eax
000000000000f338	cmpl	$0x47, %eax
000000000000f33b	je	0xf36f
000000000000f33d	cmpl	$0xce8, %eax
000000000000f342	jne	0xf376
000000000000f344	movl	$0xfffffed4, %eax
000000000000f349	cmpl	$0x0, -0x40(%rbp)
000000000000f34d	js	0xf37b
000000000000f34f	movl	-0x3c(%rbp), %ecx
000000000000f352	cmpl	$0x28, %ecx
000000000000f355	je	0xf391
000000000000f357	cmpl	$0x24, %ecx
000000000000f35a	jne	0xf37b
000000000000f35c	movl	-0x20(%rbp), %ebx
000000000000f35f	testl	%ebx, %ebx
000000000000f361	jne	0xf37d
000000000000f363	jmp	0xf37b
000000000000f365	movl	-0x34(%rbp), %edi
000000000000f368	callq	_mig_dealloc_reply_port
000000000000f36d	jmp	0xf386
000000000000f36f	movl	$0xfffffecc, %eax
000000000000f374	jmp	0xf37b
000000000000f376	movl	$0xfffffed3, %eax
000000000000f37b	movl	%eax, %ebx
000000000000f37d	leaq	-0x40(%rbp), %rdi
000000000000f381	callq	_mach_msg_destroy
000000000000f386	movl	%ebx, %eax
000000000000f388	addq	$0x40, %rsp
000000000000f38c	popq	%rbx
000000000000f38d	popq	%r14
000000000000f38f	popq	%rbp
000000000000f390	retq
000000000000f391	movl	-0x20(%rbp), %ebx
000000000000f394	testl	%ebx, %ebx
000000000000f396	jne	0xf37d
000000000000f398	movl	-0x1c(%rbp), %eax
000000000000f39b	movl	%eax, (%r14)
000000000000f39e	xorl	%ebx, %ebx
000000000000f3a0	jmp	0xf386
__kernelrpc_mach_port_destroy:
000000000000f3a2	pushq	%rbp
000000000000f3a3	movq	%rsp, %rbp
000000000000f3a6	pushq	%rbx
000000000000f3a7	subq	$0x38, %rsp
000000000000f3ab	leaq	_NDR_record(%rip), %rax
000000000000f3b2	movq	(%rax), %rax
000000000000f3b5	leaq	-0x38(%rbp), %rbx
000000000000f3b9	movq	%rax, 0x18(%rbx)
000000000000f3bd	movl	%esi, 0x20(%rbx)
000000000000f3c0	movl	$0x1513, (%rbx)
000000000000f3c6	movl	%edi, 0x8(%rbx)
000000000000f3c9	callq	_mig_get_reply_port
000000000000f3ce	movl	%eax, 0xc(%rbx)
000000000000f3d1	movabsq	$0xc8500000000, %rcx
000000000000f3db	movq	%rcx, 0x10(%rbx)
000000000000f3df	movl	$0x0, (%rsp)
000000000000f3e6	movl	$0x3, %esi
000000000000f3eb	movl	$0x24, %edx
000000000000f3f0	movl	$0x2c, %ecx
000000000000f3f5	xorl	%r9d, %r9d
000000000000f3f8	movq	%rbx, %rdi
000000000000f3fb	movl	%eax, %r8d
000000000000f3fe	callq	_mach_msg
000000000000f403	movl	%eax, %ebx
000000000000f405	leal	-0x10000002(%rbx), %eax
000000000000f40b	cmpl	$0xe, %eax
000000000000f40e	ja	0xf424
000000000000f410	movl	$0x4003, %ecx
000000000000f415	btl	%eax, %ecx
000000000000f418	jae	0xf424
000000000000f41a	movl	-0x2c(%rbp), %edi
000000000000f41d	callq	_mig_put_reply_port
000000000000f422	jmp	0xf472
000000000000f424	testl	%ebx, %ebx
000000000000f426	jne	0xf453
000000000000f428	movl	-0x24(%rbp), %eax
000000000000f42b	cmpl	$0x47, %eax
000000000000f42e	je	0xf45d
000000000000f430	cmpl	$0xce9, %eax
000000000000f435	jne	0xf464
000000000000f437	movl	$0xfffffed4, %ebx
000000000000f43c	cmpl	$0x0, -0x38(%rbp)
000000000000f440	js	0xf469
000000000000f442	cmpl	$0x24, -0x34(%rbp)
000000000000f446	jne	0xf469
000000000000f448	movl	-0x18(%rbp), %ebx
000000000000f44b	testl	%ebx, %ebx
000000000000f44d	jne	0xf469
000000000000f44f	xorl	%ebx, %ebx
000000000000f451	jmp	0xf472
000000000000f453	movl	-0x2c(%rbp), %edi
000000000000f456	callq	_mig_dealloc_reply_port
000000000000f45b	jmp	0xf472
000000000000f45d	movl	$0xfffffecc, %ebx
000000000000f462	jmp	0xf469
000000000000f464	movl	$0xfffffed3, %ebx
000000000000f469	leaq	-0x38(%rbp), %rdi
000000000000f46d	callq	_mach_msg_destroy
000000000000f472	movl	%ebx, %eax
000000000000f474	addq	$0x38, %rsp
000000000000f478	popq	%rbx
000000000000f479	popq	%rbp
000000000000f47a	retq
__kernelrpc_mach_port_deallocate:
000000000000f47b	pushq	%rbp
000000000000f47c	movq	%rsp, %rbp
000000000000f47f	pushq	%rbx
000000000000f480	subq	$0x38, %rsp
000000000000f484	leaq	_NDR_record(%rip), %rax
000000000000f48b	movq	(%rax), %rax
000000000000f48e	leaq	-0x38(%rbp), %rbx
000000000000f492	movq	%rax, 0x18(%rbx)
000000000000f496	movl	%esi, 0x20(%rbx)
000000000000f499	movl	$0x1513, (%rbx)
000000000000f49f	movl	%edi, 0x8(%rbx)
000000000000f4a2	callq	_mig_get_reply_port
000000000000f4a7	movl	%eax, 0xc(%rbx)
000000000000f4aa	movabsq	$0xc8600000000, %rcx
000000000000f4b4	movq	%rcx, 0x10(%rbx)
000000000000f4b8	movl	$0x0, (%rsp)
000000000000f4bf	movl	$0x3, %esi
000000000000f4c4	movl	$0x24, %edx
000000000000f4c9	movl	$0x2c, %ecx
000000000000f4ce	xorl	%r9d, %r9d
000000000000f4d1	movq	%rbx, %rdi
000000000000f4d4	movl	%eax, %r8d
000000000000f4d7	callq	_mach_msg
000000000000f4dc	movl	%eax, %ebx
000000000000f4de	leal	-0x10000002(%rbx), %eax
000000000000f4e4	cmpl	$0xe, %eax
000000000000f4e7	ja	0xf4fd
000000000000f4e9	movl	$0x4003, %ecx
000000000000f4ee	btl	%eax, %ecx
000000000000f4f1	jae	0xf4fd
000000000000f4f3	movl	-0x2c(%rbp), %edi
000000000000f4f6	callq	_mig_put_reply_port
000000000000f4fb	jmp	0xf54b
000000000000f4fd	testl	%ebx, %ebx
000000000000f4ff	jne	0xf52c
000000000000f501	movl	-0x24(%rbp), %eax
000000000000f504	cmpl	$0x47, %eax
000000000000f507	je	0xf536
000000000000f509	cmpl	$0xcea, %eax
000000000000f50e	jne	0xf53d
000000000000f510	movl	$0xfffffed4, %ebx
000000000000f515	cmpl	$0x0, -0x38(%rbp)
000000000000f519	js	0xf542
000000000000f51b	cmpl	$0x24, -0x34(%rbp)
000000000000f51f	jne	0xf542
000000000000f521	movl	-0x18(%rbp), %ebx
000000000000f524	testl	%ebx, %ebx
000000000000f526	jne	0xf542
000000000000f528	xorl	%ebx, %ebx
000000000000f52a	jmp	0xf54b
000000000000f52c	movl	-0x2c(%rbp), %edi
000000000000f52f	callq	_mig_dealloc_reply_port
000000000000f534	jmp	0xf54b
000000000000f536	movl	$0xfffffecc, %ebx
000000000000f53b	jmp	0xf542
000000000000f53d	movl	$0xfffffed3, %ebx
000000000000f542	leaq	-0x38(%rbp), %rdi
000000000000f546	callq	_mach_msg_destroy
000000000000f54b	movl	%ebx, %eax
000000000000f54d	addq	$0x38, %rsp
000000000000f551	popq	%rbx
000000000000f552	popq	%rbp
000000000000f553	retq
__kernelrpc_mach_port_mod_refs:
000000000000f554	pushq	%rbp
000000000000f555	movq	%rsp, %rbp
000000000000f558	pushq	%rbx
000000000000f559	subq	$0x38, %rsp
000000000000f55d	leaq	_NDR_record(%rip), %rax
000000000000f564	movq	(%rax), %rax
000000000000f567	leaq	-0x38(%rbp), %rbx
000000000000f56b	movq	%rax, 0x18(%rbx)
000000000000f56f	movl	%esi, 0x20(%rbx)
000000000000f572	movl	%edx, 0x24(%rbx)
000000000000f575	movl	%ecx, 0x28(%rbx)
000000000000f578	movl	$0x1513, (%rbx)
000000000000f57e	movl	%edi, 0x8(%rbx)
000000000000f581	callq	_mig_get_reply_port
000000000000f586	movl	%eax, 0xc(%rbx)
000000000000f589	movabsq	$0xc8800000000, %rcx
000000000000f593	movq	%rcx, 0x10(%rbx)
000000000000f597	movl	$0x0, (%rsp)
000000000000f59e	movl	$0x3, %esi
000000000000f5a3	movl	$0x2c, %edx
000000000000f5a8	movl	$0x2c, %ecx
000000000000f5ad	xorl	%r9d, %r9d
000000000000f5b0	movq	%rbx, %rdi
000000000000f5b3	movl	%eax, %r8d
000000000000f5b6	callq	_mach_msg
000000000000f5bb	movl	%eax, %ebx
000000000000f5bd	leal	-0x10000002(%rbx), %eax
000000000000f5c3	cmpl	$0xe, %eax
000000000000f5c6	ja	0xf5dc
000000000000f5c8	movl	$0x4003, %ecx
000000000000f5cd	btl	%eax, %ecx
000000000000f5d0	jae	0xf5dc
000000000000f5d2	movl	-0x2c(%rbp), %edi
000000000000f5d5	callq	_mig_put_reply_port
000000000000f5da	jmp	0xf62a
000000000000f5dc	testl	%ebx, %ebx
000000000000f5de	jne	0xf60b
000000000000f5e0	movl	-0x24(%rbp), %eax
000000000000f5e3	cmpl	$0x47, %eax
000000000000f5e6	je	0xf615
000000000000f5e8	cmpl	$0xcec, %eax
000000000000f5ed	jne	0xf61c
000000000000f5ef	movl	$0xfffffed4, %ebx
000000000000f5f4	cmpl	$0x0, -0x38(%rbp)
000000000000f5f8	js	0xf621
000000000000f5fa	cmpl	$0x24, -0x34(%rbp)
000000000000f5fe	jne	0xf621
000000000000f600	movl	-0x18(%rbp), %ebx
000000000000f603	testl	%ebx, %ebx
000000000000f605	jne	0xf621
000000000000f607	xorl	%ebx, %ebx
000000000000f609	jmp	0xf62a
000000000000f60b	movl	-0x2c(%rbp), %edi
000000000000f60e	callq	_mig_dealloc_reply_port
000000000000f613	jmp	0xf62a
000000000000f615	movl	$0xfffffecc, %ebx
000000000000f61a	jmp	0xf621
000000000000f61c	movl	$0xfffffed3, %ebx
000000000000f621	leaq	-0x38(%rbp), %rdi
000000000000f625	callq	_mach_msg_destroy
000000000000f62a	movl	%ebx, %eax
000000000000f62c	addq	$0x38, %rsp
000000000000f630	popq	%rbx
000000000000f631	popq	%rbp
000000000000f632	retq
__kernelrpc_mach_port_peek:
000000000000f633	pushq	%rbp
000000000000f634	movq	%rsp, %rbp
000000000000f637	pushq	%r15
000000000000f639	pushq	%r14
000000000000f63b	pushq	%r13
000000000000f63d	pushq	%r12
000000000000f63f	pushq	%rbx
000000000000f640	subq	$0x88, %rsp
000000000000f647	movq	%rcx, %r12
000000000000f64a	movq	0x18(%rbp), %r13
000000000000f64e	leaq	_NDR_record(%rip), %rax
000000000000f655	movq	(%rax), %rax
000000000000f658	leaq	-0xa8(%rbp), %rbx
000000000000f65f	movq	%rax, 0x18(%rbx)
000000000000f663	movl	%esi, 0x20(%rbx)
000000000000f666	movl	%edx, 0x24(%rbx)
000000000000f669	movl	(%rcx), %eax
000000000000f66b	movl	%eax, 0x28(%rbx)
000000000000f66e	movl	(%r13), %eax
000000000000f672	movl	$0x44, %ecx
000000000000f677	cmpl	%ecx, %eax
000000000000f679	cmovbl	%eax, %ecx
000000000000f67c	movq	%r9, %r14
000000000000f67f	movq	%r8, %r15
000000000000f682	movl	%ecx, 0x2c(%rbx)
000000000000f685	movl	$0x1513, (%rbx)
000000000000f68b	movl	%edi, 0x8(%rbx)
000000000000f68e	callq	_mig_get_reply_port
000000000000f693	movl	%eax, 0xc(%rbx)
000000000000f696	movabsq	$0xc8900000000, %rcx
000000000000f6a0	movq	%rcx, 0x10(%rbx)
000000000000f6a4	movl	$0x0, (%rsp)
000000000000f6ab	movl	$0x3, %esi
000000000000f6b0	movl	$0x30, %edx
000000000000f6b5	movl	$0x80, %ecx
000000000000f6ba	xorl	%r9d, %r9d
000000000000f6bd	movq	%rbx, %rdi
000000000000f6c0	movl	%eax, %r8d
000000000000f6c3	callq	_mach_msg
000000000000f6c8	movl	%eax, %ebx
000000000000f6ca	leal	-0x10000002(%rbx), %eax
000000000000f6d0	cmpl	$0xe, %eax
000000000000f6d3	ja	0xf6ef
000000000000f6d5	movl	$0x4003, %ecx
000000000000f6da	btl	%eax, %ecx
000000000000f6dd	jae	0xf6ef
000000000000f6df	movl	-0x9c(%rbp), %edi
000000000000f6e5	callq	_mig_put_reply_port
000000000000f6ea	jmp	0xf7cf
000000000000f6ef	testl	%ebx, %ebx
000000000000f6f1	jne	0xf743
000000000000f6f3	movl	-0x94(%rbp), %eax
000000000000f6f9	cmpl	$0x47, %eax
000000000000f6fc	je	0xf750
000000000000f6fe	cmpl	$0xced, %eax
000000000000f703	jne	0xf757
000000000000f705	cmpl	$0x0, -0xa8(%rbp)
000000000000f70c	js	0xf7be
000000000000f712	movl	-0xa4(%rbp), %eax
000000000000f718	leal	-0x34(%rax), %ecx
000000000000f71b	cmpl	$0x45, %ecx
000000000000f71e	jb	0xf75e
000000000000f720	movl	$0xfffffed4, %ebx
000000000000f725	cmpl	$0x24, %eax
000000000000f728	jne	0xf7c3
000000000000f72e	movl	-0x88(%rbp), %eax
000000000000f734	testl	%eax, %eax
000000000000f736	movl	$0xfffffed4, %ebx
000000000000f73b	cmovnel	%eax, %ebx
000000000000f73e	jmp	0xf7c3
000000000000f743	movl	-0x9c(%rbp), %edi
000000000000f749	callq	_mig_dealloc_reply_port
000000000000f74e	jmp	0xf7cf
000000000000f750	movl	$0xfffffecc, %ebx
000000000000f755	jmp	0xf7c3
000000000000f757	movl	$0xfffffed3, %ebx
000000000000f75c	jmp	0xf7c3
000000000000f75e	movl	-0x88(%rbp), %ebx
000000000000f764	testl	%ebx, %ebx
000000000000f766	jne	0xf7c3
000000000000f768	movl	-0x78(%rbp), %r8d
000000000000f76c	cmpq	$0x44, %r8
000000000000f770	ja	0xf7be
000000000000f772	cmpl	%r8d, %ecx
000000000000f775	jb	0xf7be
000000000000f777	leal	0x37(%r8), %ecx
000000000000f77b	andl	$-0x4, %ecx
000000000000f77e	movl	$0xfffffed4, %ebx
000000000000f783	cmpl	%ecx, %eax
000000000000f785	jne	0xf7c3
000000000000f787	movq	0x10(%rbp), %rdi
000000000000f78b	leaq	-0x74(%rbp), %rsi
000000000000f78f	movl	-0x10(%rsi), %eax
000000000000f792	movl	%eax, (%r12)
000000000000f796	movl	-0xc(%rsi), %eax
000000000000f799	movl	%eax, (%r15)
000000000000f79c	movl	-0x8(%rsi), %eax
000000000000f79f	movl	%eax, (%r14)
000000000000f7a2	movl	(%r13), %edx
000000000000f7a6	cmpl	%edx, %r8d
000000000000f7a9	jbe	0xf7e3
000000000000f7ab	movq	%r8, %rbx
000000000000f7ae	callq	_memcpy
000000000000f7b3	movl	%ebx, (%r13)
000000000000f7b7	movl	$0xfffffecd, %ebx
000000000000f7bc	jmp	0xf7cf
000000000000f7be	movl	$0xfffffed4, %ebx
000000000000f7c3	leaq	-0xa8(%rbp), %rdi
000000000000f7ca	callq	_mach_msg_destroy
000000000000f7cf	movl	%ebx, %eax
000000000000f7d1	addq	$0x88, %rsp
000000000000f7d8	popq	%rbx
000000000000f7d9	popq	%r12
000000000000f7db	popq	%r13
000000000000f7dd	popq	%r14
000000000000f7df	popq	%r15
000000000000f7e1	popq	%rbp
000000000000f7e2	retq
000000000000f7e3	movq	%r8, %rdx
000000000000f7e6	movq	%r8, %rbx
000000000000f7e9	callq	_memcpy
000000000000f7ee	movl	%ebx, (%r13)
000000000000f7f2	xorl	%ebx, %ebx
000000000000f7f4	jmp	0xf7cf
__kernelrpc_mach_port_set_mscount:
000000000000f7f6	pushq	%rbp
000000000000f7f7	movq	%rsp, %rbp
000000000000f7fa	pushq	%rbx
000000000000f7fb	subq	$0x38, %rsp
000000000000f7ff	leaq	_NDR_record(%rip), %rax
000000000000f806	movq	(%rax), %rax
000000000000f809	leaq	-0x38(%rbp), %rbx
000000000000f80d	movq	%rax, 0x18(%rbx)
000000000000f811	movl	%esi, 0x20(%rbx)
000000000000f814	movl	%edx, 0x24(%rbx)
000000000000f817	movl	$0x1513, (%rbx)
000000000000f81d	movl	%edi, 0x8(%rbx)
000000000000f820	callq	_mig_get_reply_port
000000000000f825	movl	%eax, 0xc(%rbx)
000000000000f828	movabsq	$0xc8a00000000, %rcx
000000000000f832	movq	%rcx, 0x10(%rbx)
000000000000f836	movl	$0x0, (%rsp)
000000000000f83d	movl	$0x3, %esi
000000000000f842	movl	$0x28, %edx
000000000000f847	movl	$0x2c, %ecx
000000000000f84c	xorl	%r9d, %r9d
000000000000f84f	movq	%rbx, %rdi
000000000000f852	movl	%eax, %r8d
000000000000f855	callq	_mach_msg
000000000000f85a	movl	%eax, %ebx
000000000000f85c	leal	-0x10000002(%rbx), %eax
000000000000f862	cmpl	$0xe, %eax
000000000000f865	ja	0xf87b
000000000000f867	movl	$0x4003, %ecx
000000000000f86c	btl	%eax, %ecx
000000000000f86f	jae	0xf87b
000000000000f871	movl	-0x2c(%rbp), %edi
000000000000f874	callq	_mig_put_reply_port
000000000000f879	jmp	0xf8c9
000000000000f87b	testl	%ebx, %ebx
000000000000f87d	jne	0xf8aa
000000000000f87f	movl	-0x24(%rbp), %eax
000000000000f882	cmpl	$0x47, %eax
000000000000f885	je	0xf8b4
000000000000f887	cmpl	$0xcee, %eax
000000000000f88c	jne	0xf8bb
000000000000f88e	movl	$0xfffffed4, %ebx
000000000000f893	cmpl	$0x0, -0x38(%rbp)
000000000000f897	js	0xf8c0
000000000000f899	cmpl	$0x24, -0x34(%rbp)
000000000000f89d	jne	0xf8c0
000000000000f89f	movl	-0x18(%rbp), %ebx
000000000000f8a2	testl	%ebx, %ebx
000000000000f8a4	jne	0xf8c0
000000000000f8a6	xorl	%ebx, %ebx
000000000000f8a8	jmp	0xf8c9
000000000000f8aa	movl	-0x2c(%rbp), %edi
000000000000f8ad	callq	_mig_dealloc_reply_port
000000000000f8b2	jmp	0xf8c9
000000000000f8b4	movl	$0xfffffecc, %ebx
000000000000f8b9	jmp	0xf8c0
000000000000f8bb	movl	$0xfffffed3, %ebx
000000000000f8c0	leaq	-0x38(%rbp), %rdi
000000000000f8c4	callq	_mach_msg_destroy
000000000000f8c9	movl	%ebx, %eax
000000000000f8cb	addq	$0x38, %rsp
000000000000f8cf	popq	%rbx
000000000000f8d0	popq	%rbp
000000000000f8d1	retq
__kernelrpc_mach_port_move_member:
000000000000f8d2	pushq	%rbp
000000000000f8d3	movq	%rsp, %rbp
000000000000f8d6	pushq	%rbx
000000000000f8d7	subq	$0x38, %rsp
000000000000f8db	leaq	_NDR_record(%rip), %rax
000000000000f8e2	movq	(%rax), %rax
000000000000f8e5	leaq	-0x38(%rbp), %rbx
000000000000f8e9	movq	%rax, 0x18(%rbx)
000000000000f8ed	movl	%esi, 0x20(%rbx)
000000000000f8f0	movl	%edx, 0x24(%rbx)
000000000000f8f3	movl	$0x1513, (%rbx)
000000000000f8f9	movl	%edi, 0x8(%rbx)
000000000000f8fc	callq	_mig_get_reply_port
000000000000f901	movl	%eax, 0xc(%rbx)
000000000000f904	movabsq	$0xc8c00000000, %rcx
000000000000f90e	movq	%rcx, 0x10(%rbx)
000000000000f912	movl	$0x0, (%rsp)
000000000000f919	movl	$0x3, %esi
000000000000f91e	movl	$0x28, %edx
000000000000f923	movl	$0x2c, %ecx
000000000000f928	xorl	%r9d, %r9d
000000000000f92b	movq	%rbx, %rdi
000000000000f92e	movl	%eax, %r8d
000000000000f931	callq	_mach_msg
000000000000f936	movl	%eax, %ebx
000000000000f938	leal	-0x10000002(%rbx), %eax
000000000000f93e	cmpl	$0xe, %eax
000000000000f941	ja	0xf957
000000000000f943	movl	$0x4003, %ecx
000000000000f948	btl	%eax, %ecx
000000000000f94b	jae	0xf957
000000000000f94d	movl	-0x2c(%rbp), %edi
000000000000f950	callq	_mig_put_reply_port
000000000000f955	jmp	0xf9a5
000000000000f957	testl	%ebx, %ebx
000000000000f959	jne	0xf986
000000000000f95b	movl	-0x24(%rbp), %eax
000000000000f95e	cmpl	$0x47, %eax
000000000000f961	je	0xf990
000000000000f963	cmpl	$0xcf0, %eax
000000000000f968	jne	0xf997
000000000000f96a	movl	$0xfffffed4, %ebx
000000000000f96f	cmpl	$0x0, -0x38(%rbp)
000000000000f973	js	0xf99c
000000000000f975	cmpl	$0x24, -0x34(%rbp)
000000000000f979	jne	0xf99c
000000000000f97b	movl	-0x18(%rbp), %ebx
000000000000f97e	testl	%ebx, %ebx
000000000000f980	jne	0xf99c
000000000000f982	xorl	%ebx, %ebx
000000000000f984	jmp	0xf9a5
000000000000f986	movl	-0x2c(%rbp), %edi
000000000000f989	callq	_mig_dealloc_reply_port
000000000000f98e	jmp	0xf9a5
000000000000f990	movl	$0xfffffecc, %ebx
000000000000f995	jmp	0xf99c
000000000000f997	movl	$0xfffffed3, %ebx
000000000000f99c	leaq	-0x38(%rbp), %rdi
000000000000f9a0	callq	_mach_msg_destroy
000000000000f9a5	movl	%ebx, %eax
000000000000f9a7	addq	$0x38, %rsp
000000000000f9ab	popq	%rbx
000000000000f9ac	popq	%rbp
000000000000f9ad	retq
__kernelrpc_mach_port_insert_right:
000000000000f9ae	pushq	%rbp
000000000000f9af	movq	%rsp, %rbp
000000000000f9b2	pushq	%rbx
000000000000f9b3	subq	$0x48, %rsp
000000000000f9b7	leaq	-0x40(%rbp), %rbx
000000000000f9bb	movl	$0x1, 0x18(%rbx)
000000000000f9c2	movl	%edx, 0x1c(%rbx)
000000000000f9c5	shll	$0x10, %ecx
000000000000f9c8	andl	$0xff0000, %ecx
000000000000f9ce	movl	%ecx, 0x24(%rbx)
000000000000f9d1	leaq	_NDR_record(%rip), %rax
000000000000f9d8	movq	(%rax), %rax
000000000000f9db	movq	%rax, 0x28(%rbx)
000000000000f9df	movl	%esi, 0x30(%rbx)
000000000000f9e2	movl	$0x80001513, (%rbx)
000000000000f9e8	movl	%edi, 0x8(%rbx)
000000000000f9eb	callq	_mig_get_reply_port
000000000000f9f0	movl	%eax, 0xc(%rbx)
000000000000f9f3	movabsq	$0xc8e00000000, %rcx
000000000000f9fd	movq	%rcx, 0x10(%rbx)
000000000000fa01	movl	$0x0, (%rsp)
000000000000fa08	movl	$0x3, %esi
000000000000fa0d	movl	$0x34, %edx
000000000000fa12	movl	$0x2c, %ecx
000000000000fa17	xorl	%r9d, %r9d
000000000000fa1a	movq	%rbx, %rdi
000000000000fa1d	movl	%eax, %r8d
000000000000fa20	callq	_mach_msg
000000000000fa25	movl	%eax, %ebx
000000000000fa27	leal	-0x10000002(%rbx), %eax
000000000000fa2d	cmpl	$0xe, %eax
000000000000fa30	ja	0xfa46
000000000000fa32	movl	$0x4003, %ecx
000000000000fa37	btl	%eax, %ecx
000000000000fa3a	jae	0xfa46
000000000000fa3c	movl	-0x34(%rbp), %edi
000000000000fa3f	callq	_mig_put_reply_port
000000000000fa44	jmp	0xfa94
000000000000fa46	testl	%ebx, %ebx
000000000000fa48	jne	0xfa75
000000000000fa4a	movl	-0x2c(%rbp), %eax
000000000000fa4d	cmpl	$0x47, %eax
000000000000fa50	je	0xfa7f
000000000000fa52	cmpl	$0xcf2, %eax
000000000000fa57	jne	0xfa86
000000000000fa59	movl	$0xfffffed4, %ebx
000000000000fa5e	cmpl	$0x0, -0x40(%rbp)
000000000000fa62	js	0xfa8b
000000000000fa64	cmpl	$0x24, -0x3c(%rbp)
000000000000fa68	jne	0xfa8b
000000000000fa6a	movl	-0x20(%rbp), %ebx
000000000000fa6d	testl	%ebx, %ebx
000000000000fa6f	jne	0xfa8b
000000000000fa71	xorl	%ebx, %ebx
000000000000fa73	jmp	0xfa94
000000000000fa75	movl	-0x34(%rbp), %edi
000000000000fa78	callq	_mig_dealloc_reply_port
000000000000fa7d	jmp	0xfa94
000000000000fa7f	movl	$0xfffffecc, %ebx
000000000000fa84	jmp	0xfa8b
000000000000fa86	movl	$0xfffffed3, %ebx
000000000000fa8b	leaq	-0x40(%rbp), %rdi
000000000000fa8f	callq	_mach_msg_destroy
000000000000fa94	movl	%ebx, %eax
000000000000fa96	addq	$0x48, %rsp
000000000000fa9a	popq	%rbx
000000000000fa9b	popq	%rbp
000000000000fa9c	retq
__kernelrpc_mach_port_set_seqno:
000000000000fa9d	pushq	%rbp
000000000000fa9e	movq	%rsp, %rbp
000000000000faa1	pushq	%rbx
000000000000faa2	subq	$0x38, %rsp
000000000000faa6	leaq	_NDR_record(%rip), %rax
000000000000faad	movq	(%rax), %rax
000000000000fab0	leaq	-0x38(%rbp), %rbx
000000000000fab4	movq	%rax, 0x18(%rbx)
000000000000fab8	movl	%esi, 0x20(%rbx)
000000000000fabb	movl	%edx, 0x24(%rbx)
000000000000fabe	movl	$0x1513, (%rbx)
000000000000fac4	movl	%edi, 0x8(%rbx)
000000000000fac7	callq	_mig_get_reply_port
000000000000facc	movl	%eax, 0xc(%rbx)
000000000000facf	movabsq	$0xc9000000000, %rcx
000000000000fad9	movq	%rcx, 0x10(%rbx)
000000000000fadd	movl	$0x0, (%rsp)
000000000000fae4	movl	$0x3, %esi
000000000000fae9	movl	$0x28, %edx
000000000000faee	movl	$0x2c, %ecx
000000000000faf3	xorl	%r9d, %r9d
000000000000faf6	movq	%rbx, %rdi
000000000000faf9	movl	%eax, %r8d
000000000000fafc	callq	_mach_msg
000000000000fb01	movl	%eax, %ebx
000000000000fb03	leal	-0x10000002(%rbx), %eax
000000000000fb09	cmpl	$0xe, %eax
000000000000fb0c	ja	0xfb22
000000000000fb0e	movl	$0x4003, %ecx
000000000000fb13	btl	%eax, %ecx
000000000000fb16	jae	0xfb22
000000000000fb18	movl	-0x2c(%rbp), %edi
000000000000fb1b	callq	_mig_put_reply_port
000000000000fb20	jmp	0xfb70
000000000000fb22	testl	%ebx, %ebx
000000000000fb24	jne	0xfb51
000000000000fb26	movl	-0x24(%rbp), %eax
000000000000fb29	cmpl	$0x47, %eax
000000000000fb2c	je	0xfb5b
000000000000fb2e	cmpl	$0xcf4, %eax
000000000000fb33	jne	0xfb62
000000000000fb35	movl	$0xfffffed4, %ebx
000000000000fb3a	cmpl	$0x0, -0x38(%rbp)
000000000000fb3e	js	0xfb67
000000000000fb40	cmpl	$0x24, -0x34(%rbp)
000000000000fb44	jne	0xfb67
000000000000fb46	movl	-0x18(%rbp), %ebx
000000000000fb49	testl	%ebx, %ebx
000000000000fb4b	jne	0xfb67
000000000000fb4d	xorl	%ebx, %ebx
000000000000fb4f	jmp	0xfb70
000000000000fb51	movl	-0x2c(%rbp), %edi
000000000000fb54	callq	_mig_dealloc_reply_port
000000000000fb59	jmp	0xfb70
000000000000fb5b	movl	$0xfffffecc, %ebx
000000000000fb60	jmp	0xfb67
000000000000fb62	movl	$0xfffffed3, %ebx
000000000000fb67	leaq	-0x38(%rbp), %rdi
000000000000fb6b	callq	_mach_msg_destroy
000000000000fb70	movl	%ebx, %eax
000000000000fb72	addq	$0x38, %rsp
000000000000fb76	popq	%rbx
000000000000fb77	popq	%rbp
000000000000fb78	retq
__kernelrpc_mach_port_allocate_qos:
000000000000fb79	pushq	%rbp
000000000000fb7a	movq	%rsp, %rbp
000000000000fb7d	pushq	%r15
000000000000fb7f	pushq	%r14
000000000000fb81	pushq	%rbx
000000000000fb82	subq	$0x48, %rsp
000000000000fb86	movq	%rcx, %r14
000000000000fb89	movq	%rdx, %r15
000000000000fb8c	leaq	_NDR_record(%rip), %rax
000000000000fb93	movq	(%rax), %rax
000000000000fb96	leaq	-0x50(%rbp), %rbx
000000000000fb9a	movq	%rax, 0x18(%rbx)
000000000000fb9e	movl	%esi, 0x20(%rbx)
000000000000fba1	movq	(%rdx), %rax
000000000000fba4	movq	%rax, 0x24(%rbx)
000000000000fba8	movl	$0x1513, (%rbx)
000000000000fbae	movl	%edi, 0x8(%rbx)
000000000000fbb1	callq	_mig_get_reply_port
000000000000fbb6	movl	%eax, 0xc(%rbx)
000000000000fbb9	movabsq	$0xc9300000000, %rcx
000000000000fbc3	movq	%rcx, 0x10(%rbx)
000000000000fbc7	movl	$0x0, (%rsp)
000000000000fbce	movl	$0x3, %esi
000000000000fbd3	movl	$0x2c, %edx
000000000000fbd8	movl	$0x38, %ecx
000000000000fbdd	xorl	%r9d, %r9d
000000000000fbe0	movq	%rbx, %rdi
000000000000fbe3	movl	%eax, %r8d
000000000000fbe6	callq	_mach_msg
000000000000fbeb	movl	%eax, %ebx
000000000000fbed	leal	-0x10000002(%rbx), %eax
000000000000fbf3	cmpl	$0xe, %eax
000000000000fbf6	ja	0xfc0c
000000000000fbf8	movl	$0x4003, %ecx
000000000000fbfd	btl	%eax, %ecx
000000000000fc00	jae	0xfc0c
000000000000fc02	movl	-0x44(%rbp), %edi
000000000000fc05	callq	_mig_put_reply_port
000000000000fc0a	jmp	0xfc61
000000000000fc0c	testl	%ebx, %ebx
000000000000fc0e	jne	0xfc40
000000000000fc10	movl	-0x3c(%rbp), %eax
000000000000fc13	cmpl	$0x47, %eax
000000000000fc16	je	0xfc4a
000000000000fc18	cmpl	$0xcf7, %eax
000000000000fc1d	jne	0xfc51
000000000000fc1f	movl	$0xfffffed4, %eax
000000000000fc24	cmpl	$0x0, -0x50(%rbp)
000000000000fc28	js	0xfc56
000000000000fc2a	movl	-0x4c(%rbp), %ecx
000000000000fc2d	cmpl	$0x30, %ecx
000000000000fc30	je	0xfc6e
000000000000fc32	cmpl	$0x24, %ecx
000000000000fc35	jne	0xfc56
000000000000fc37	movl	-0x30(%rbp), %ebx
000000000000fc3a	testl	%ebx, %ebx
000000000000fc3c	jne	0xfc58
000000000000fc3e	jmp	0xfc56
000000000000fc40	movl	-0x44(%rbp), %edi
000000000000fc43	callq	_mig_dealloc_reply_port
000000000000fc48	jmp	0xfc61
000000000000fc4a	movl	$0xfffffecc, %eax
000000000000fc4f	jmp	0xfc56
000000000000fc51	movl	$0xfffffed3, %eax
000000000000fc56	movl	%eax, %ebx
000000000000fc58	leaq	-0x50(%rbp), %rdi
000000000000fc5c	callq	_mach_msg_destroy
000000000000fc61	movl	%ebx, %eax
000000000000fc63	addq	$0x48, %rsp
000000000000fc67	popq	%rbx
000000000000fc68	popq	%r14
000000000000fc6a	popq	%r15
000000000000fc6c	popq	%rbp
000000000000fc6d	retq
000000000000fc6e	movl	-0x30(%rbp), %ebx
000000000000fc71	testl	%ebx, %ebx
000000000000fc73	jne	0xfc58
000000000000fc75	movq	-0x2c(%rbp), %rax
000000000000fc79	movq	%rax, (%r15)
000000000000fc7c	movl	-0x24(%rbp), %eax
000000000000fc7f	movl	%eax, (%r14)
000000000000fc82	xorl	%ebx, %ebx
000000000000fc84	jmp	0xfc61
__kernelrpc_mach_port_allocate_full:
000000000000fc86	pushq	%rbp
000000000000fc87	movq	%rsp, %rbp
000000000000fc8a	pushq	%r15
000000000000fc8c	pushq	%r14
000000000000fc8e	pushq	%rbx
000000000000fc8f	subq	$0x48, %rsp
000000000000fc93	movq	%r8, %r14
000000000000fc96	movq	%rcx, %r15
000000000000fc99	leaq	-0x58(%rbp), %rbx
000000000000fc9d	movl	$0x1, 0x18(%rbx)
000000000000fca4	movl	%edx, 0x1c(%rbx)
000000000000fca7	movl	$0x130000, 0x24(%rbx)
000000000000fcae	leaq	_NDR_record(%rip), %rax
000000000000fcb5	movq	(%rax), %rax
000000000000fcb8	movq	%rax, 0x28(%rbx)
000000000000fcbc	movl	%esi, 0x30(%rbx)
000000000000fcbf	movq	(%rcx), %rax
000000000000fcc2	movq	%rax, 0x34(%rbx)
000000000000fcc6	movl	(%r8), %eax
000000000000fcc9	movl	%eax, 0x3c(%rbx)
000000000000fccc	movl	$0x80001513, (%rbx)
000000000000fcd2	movl	%edi, 0x8(%rbx)
000000000000fcd5	callq	_mig_get_reply_port
000000000000fcda	movl	%eax, 0xc(%rbx)
000000000000fcdd	movabsq	$0xc9400000000, %rcx
000000000000fce7	movq	%rcx, 0x10(%rbx)
000000000000fceb	movl	$0x0, (%rsp)
000000000000fcf2	movl	$0x3, %esi
000000000000fcf7	movl	$0x40, %edx
000000000000fcfc	movl	$0x38, %ecx
000000000000fd01	xorl	%r9d, %r9d
000000000000fd04	movq	%rbx, %rdi
000000000000fd07	movl	%eax, %r8d
000000000000fd0a	callq	_mach_msg
000000000000fd0f	movl	%eax, %ebx
000000000000fd11	leal	-0x10000002(%rbx), %eax
000000000000fd17	cmpl	$0xe, %eax
000000000000fd1a	ja	0xfd30
000000000000fd1c	movl	$0x4003, %ecx
000000000000fd21	btl	%eax, %ecx
000000000000fd24	jae	0xfd30
000000000000fd26	movl	-0x4c(%rbp), %edi
000000000000fd29	callq	_mig_put_reply_port
000000000000fd2e	jmp	0xfd85
000000000000fd30	testl	%ebx, %ebx
000000000000fd32	jne	0xfd64
000000000000fd34	movl	-0x44(%rbp), %eax
000000000000fd37	cmpl	$0x47, %eax
000000000000fd3a	je	0xfd6e
000000000000fd3c	cmpl	$0xcf8, %eax
000000000000fd41	jne	0xfd75
000000000000fd43	movl	$0xfffffed4, %eax
000000000000fd48	cmpl	$0x0, -0x58(%rbp)
000000000000fd4c	js	0xfd7a
000000000000fd4e	movl	-0x54(%rbp), %ecx
000000000000fd51	cmpl	$0x30, %ecx
000000000000fd54	je	0xfd92
000000000000fd56	cmpl	$0x24, %ecx
000000000000fd59	jne	0xfd7a
000000000000fd5b	movl	-0x38(%rbp), %ebx
000000000000fd5e	testl	%ebx, %ebx
000000000000fd60	jne	0xfd7c
000000000000fd62	jmp	0xfd7a
000000000000fd64	movl	-0x4c(%rbp), %edi
000000000000fd67	callq	_mig_dealloc_reply_port
000000000000fd6c	jmp	0xfd85
000000000000fd6e	movl	$0xfffffecc, %eax
000000000000fd73	jmp	0xfd7a
000000000000fd75	movl	$0xfffffed3, %eax
000000000000fd7a	movl	%eax, %ebx
000000000000fd7c	leaq	-0x58(%rbp), %rdi
000000000000fd80	callq	_mach_msg_destroy
000000000000fd85	movl	%ebx, %eax
000000000000fd87	addq	$0x48, %rsp
000000000000fd8b	popq	%rbx
000000000000fd8c	popq	%r14
000000000000fd8e	popq	%r15
000000000000fd90	popq	%rbp
000000000000fd91	retq
000000000000fd92	movl	-0x38(%rbp), %ebx
000000000000fd95	testl	%ebx, %ebx
000000000000fd97	jne	0xfd7c
000000000000fd99	movq	-0x34(%rbp), %rax
000000000000fd9d	movq	%rax, (%r15)
000000000000fda0	movl	-0x2c(%rbp), %eax
000000000000fda3	movl	%eax, (%r14)
000000000000fda6	xorl	%ebx, %ebx
000000000000fda8	jmp	0xfd85
__kernelrpc_task_set_port_space:
000000000000fdaa	pushq	%rbp
000000000000fdab	movq	%rsp, %rbp
000000000000fdae	pushq	%rbx
000000000000fdaf	subq	$0x38, %rsp
000000000000fdb3	leaq	_NDR_record(%rip), %rax
000000000000fdba	movq	(%rax), %rax
000000000000fdbd	leaq	-0x38(%rbp), %rbx
000000000000fdc1	movq	%rax, 0x18(%rbx)
000000000000fdc5	movl	%esi, 0x20(%rbx)
000000000000fdc8	movl	$0x1513, (%rbx)
000000000000fdce	movl	%edi, 0x8(%rbx)
000000000000fdd1	callq	_mig_get_reply_port
000000000000fdd6	movl	%eax, 0xc(%rbx)
000000000000fdd9	movabsq	$0xc9500000000, %rcx
000000000000fde3	movq	%rcx, 0x10(%rbx)
000000000000fde7	movl	$0x0, (%rsp)
000000000000fdee	movl	$0x3, %esi
000000000000fdf3	movl	$0x24, %edx
000000000000fdf8	movl	$0x2c, %ecx
000000000000fdfd	xorl	%r9d, %r9d
000000000000fe00	movq	%rbx, %rdi
000000000000fe03	movl	%eax, %r8d
000000000000fe06	callq	_mach_msg
000000000000fe0b	movl	%eax, %ebx
000000000000fe0d	leal	-0x10000002(%rbx), %eax
000000000000fe13	cmpl	$0xe, %eax
000000000000fe16	ja	0xfe2c
000000000000fe18	movl	$0x4003, %ecx
000000000000fe1d	btl	%eax, %ecx
000000000000fe20	jae	0xfe2c
000000000000fe22	movl	-0x2c(%rbp), %edi
000000000000fe25	callq	_mig_put_reply_port
000000000000fe2a	jmp	0xfe7a
000000000000fe2c	testl	%ebx, %ebx
000000000000fe2e	jne	0xfe5b
000000000000fe30	movl	-0x24(%rbp), %eax
000000000000fe33	cmpl	$0x47, %eax
000000000000fe36	je	0xfe65
000000000000fe38	cmpl	$0xcf9, %eax
000000000000fe3d	jne	0xfe6c
000000000000fe3f	movl	$0xfffffed4, %ebx
000000000000fe44	cmpl	$0x0, -0x38(%rbp)
000000000000fe48	js	0xfe71
000000000000fe4a	cmpl	$0x24, -0x34(%rbp)
000000000000fe4e	jne	0xfe71
000000000000fe50	movl	-0x18(%rbp), %ebx
000000000000fe53	testl	%ebx, %ebx
000000000000fe55	jne	0xfe71
000000000000fe57	xorl	%ebx, %ebx
000000000000fe59	jmp	0xfe7a
000000000000fe5b	movl	-0x2c(%rbp), %edi
000000000000fe5e	callq	_mig_dealloc_reply_port
000000000000fe63	jmp	0xfe7a
000000000000fe65	movl	$0xfffffecc, %ebx
000000000000fe6a	jmp	0xfe71
000000000000fe6c	movl	$0xfffffed3, %ebx
000000000000fe71	leaq	-0x38(%rbp), %rdi
000000000000fe75	callq	_mach_msg_destroy
000000000000fe7a	movl	%ebx, %eax
000000000000fe7c	addq	$0x38, %rsp
000000000000fe80	popq	%rbx
000000000000fe81	popq	%rbp
000000000000fe82	retq
__kernelrpc_mach_port_get_srights:
000000000000fe83	pushq	%rbp
000000000000fe84	movq	%rsp, %rbp
000000000000fe87	pushq	%r14
000000000000fe89	pushq	%rbx
000000000000fe8a	subq	$0x40, %rsp
000000000000fe8e	movq	%rdx, %r14
000000000000fe91	leaq	_NDR_record(%rip), %rax
000000000000fe98	movq	(%rax), %rax
000000000000fe9b	leaq	-0x40(%rbp), %rbx
000000000000fe9f	movq	%rax, 0x18(%rbx)
000000000000fea3	movl	%esi, 0x20(%rbx)
000000000000fea6	movl	$0x1513, (%rbx)
000000000000feac	movl	%edi, 0x8(%rbx)
000000000000feaf	callq	_mig_get_reply_port
000000000000feb4	movl	%eax, 0xc(%rbx)
000000000000feb7	movabsq	$0xc9600000000, %rcx
000000000000fec1	movq	%rcx, 0x10(%rbx)
000000000000fec5	movl	$0x0, (%rsp)
000000000000fecc	movl	$0x3, %esi
000000000000fed1	movl	$0x24, %edx
000000000000fed6	movl	$0x30, %ecx
000000000000fedb	xorl	%r9d, %r9d
000000000000fede	movq	%rbx, %rdi
000000000000fee1	movl	%eax, %r8d
000000000000fee4	callq	_mach_msg
000000000000fee9	movl	%eax, %ebx
000000000000feeb	leal	-0x10000002(%rbx), %eax
000000000000fef1	cmpl	$0xe, %eax
000000000000fef4	ja	0xff0a
000000000000fef6	movl	$0x4003, %ecx
000000000000fefb	btl	%eax, %ecx
000000000000fefe	jae	0xff0a
000000000000ff00	movl	-0x34(%rbp), %edi
000000000000ff03	callq	_mig_put_reply_port
000000000000ff08	jmp	0xff5f
000000000000ff0a	testl	%ebx, %ebx
000000000000ff0c	jne	0xff3e
000000000000ff0e	movl	-0x2c(%rbp), %eax
000000000000ff11	cmpl	$0x47, %eax
000000000000ff14	je	0xff48
000000000000ff16	cmpl	$0xcfa, %eax
000000000000ff1b	jne	0xff4f
000000000000ff1d	movl	$0xfffffed4, %eax
000000000000ff22	cmpl	$0x0, -0x40(%rbp)
000000000000ff26	js	0xff54
000000000000ff28	movl	-0x3c(%rbp), %ecx
000000000000ff2b	cmpl	$0x28, %ecx
000000000000ff2e	je	0xff6a
000000000000ff30	cmpl	$0x24, %ecx
000000000000ff33	jne	0xff54
000000000000ff35	movl	-0x20(%rbp), %ebx
000000000000ff38	testl	%ebx, %ebx
000000000000ff3a	jne	0xff56
000000000000ff3c	jmp	0xff54
000000000000ff3e	movl	-0x34(%rbp), %edi
000000000000ff41	callq	_mig_dealloc_reply_port
000000000000ff46	jmp	0xff5f
000000000000ff48	movl	$0xfffffecc, %eax
000000000000ff4d	jmp	0xff54
000000000000ff4f	movl	$0xfffffed3, %eax
000000000000ff54	movl	%eax, %ebx
000000000000ff56	leaq	-0x40(%rbp), %rdi
000000000000ff5a	callq	_mach_msg_destroy
000000000000ff5f	movl	%ebx, %eax
000000000000ff61	addq	$0x40, %rsp
000000000000ff65	popq	%rbx
000000000000ff66	popq	%r14
000000000000ff68	popq	%rbp
000000000000ff69	retq
000000000000ff6a	movl	-0x20(%rbp), %ebx
000000000000ff6d	testl	%ebx, %ebx
000000000000ff6f	jne	0xff56
000000000000ff71	movl	-0x1c(%rbp), %eax
000000000000ff74	movl	%eax, (%r14)
000000000000ff77	xorl	%ebx, %ebx
000000000000ff79	jmp	0xff5f
__kernelrpc_mach_port_space_info:
000000000000ff7b	pushq	%rbp
000000000000ff7c	movq	%rsp, %rbp
000000000000ff7f	pushq	%r15
000000000000ff81	pushq	%r14
000000000000ff83	pushq	%r13
000000000000ff85	pushq	%r12
000000000000ff87	pushq	%rbx
000000000000ff88	subq	$0x88, %rsp
000000000000ff8f	movq	%r9, -0x30(%rbp)
000000000000ff93	movq	%r8, %r15
000000000000ff96	movq	%rcx, %r12
000000000000ff99	movq	%rdx, %r13
000000000000ff9c	movq	%rsi, %r14
000000000000ff9f	leaq	-0xa0(%rbp), %rbx
000000000000ffa6	movl	$0x1513, (%rbx)
000000000000ffac	movl	%edi, 0x8(%rbx)
000000000000ffaf	callq	_mig_get_reply_port
000000000000ffb4	movl	%eax, 0xc(%rbx)
000000000000ffb7	movabsq	$0xc9700000000, %rcx
000000000000ffc1	movq	%rcx, 0x10(%rbx)
000000000000ffc5	movl	$0x0, (%rsp)
000000000000ffcc	movl	$0x3, %esi
000000000000ffd1	movl	$0x18, %edx
000000000000ffd6	movl	$0x6c, %ecx
000000000000ffdb	xorl	%r9d, %r9d
000000000000ffde	movq	%rbx, %rdi
000000000000ffe1	movl	%eax, %r8d
000000000000ffe4	callq	_mach_msg
000000000000ffe9	movl	%eax, %ebx
000000000000ffeb	leal	-0x10000002(%rbx), %eax
000000000000fff1	cmpl	$0xe, %eax
000000000000fff4	ja	0x1000d
000000000000fff6	movl	$0x4003, %ecx
000000000000fffb	btl	%eax, %ecx
000000000000fffe	jae	0x1000d
0000000000010000	movl	-0x94(%rbp), %edi
0000000000010006	callq	_mig_put_reply_port
000000000001000b	jmp	0x10070
000000000001000d	testl	%ebx, %ebx
000000000001000f	jne	0x1004b
0000000000010011	movl	-0x8c(%rbp), %eax
0000000000010017	cmpl	$0x47, %eax
000000000001001a	je	0x10058
000000000001001c	cmpl	$0xcfb, %eax
0000000000010021	jne	0x1005f
0000000000010023	cmpl	$0x0, -0xa0(%rbp)
000000000001002a	movl	-0x9c(%rbp), %eax
0000000000010030	movl	$0xfffffed4, %ebx
0000000000010035	js	0x10084
0000000000010037	cmpl	$0x24, %eax
000000000001003a	jne	0x10064
000000000001003c	movl	-0x80(%rbp), %eax
000000000001003f	testl	%eax, %eax
0000000000010041	movl	$0xfffffed4, %ebx
0000000000010046	cmovnel	%eax, %ebx
0000000000010049	jmp	0x10064
000000000001004b	movl	-0x94(%rbp), %edi
0000000000010051	callq	_mig_dealloc_reply_port
0000000000010056	jmp	0x10070
0000000000010058	movl	$0xfffffecc, %ebx
000000000001005d	jmp	0x10064
000000000001005f	movl	$0xfffffed3, %ebx
0000000000010064	leaq	-0xa0(%rbp), %rdi
000000000001006b	callq	_mach_msg_destroy
0000000000010070	movl	%ebx, %eax
0000000000010072	addq	$0x88, %rsp
0000000000010079	popq	%rbx
000000000001007a	popq	%r12
000000000001007c	popq	%r13
000000000001007e	popq	%r14
0000000000010080	popq	%r15
0000000000010082	popq	%rbp
0000000000010083	retq
0000000000010084	cmpl	$0x64, %eax
0000000000010087	jne	0x10064
0000000000010089	cmpl	$0x2, -0x88(%rbp)
0000000000010090	jne	0x10064
0000000000010092	movl	$0xff000000, %eax
0000000000010097	movl	-0x7c(%rbp), %ecx
000000000001009a	andl	%eax, %ecx
000000000001009c	cmpl	$0x1000000, %ecx
00000000000100a2	jne	0x10064
00000000000100a4	andl	-0x6c(%rbp), %eax
00000000000100a7	cmpl	$0x1000000, %eax
00000000000100ac	jne	0x10064
00000000000100ae	movl	-0x78(%rbp), %eax
00000000000100b1	shrl	$0x2, %eax
00000000000100b4	imulq	$0x24924925, %rax, %rax
00000000000100bb	shrq	$0x20, %rax
00000000000100bf	cmpl	-0x44(%rbp), %eax
00000000000100c2	jne	0x10064
00000000000100c4	movl	-0x68(%rbp), %ecx
00000000000100c7	imulq	$0x38e38e39, %rcx, %rcx
00000000000100ce	shrq	$0x23, %rcx
00000000000100d2	cmpl	-0x40(%rbp), %ecx
00000000000100d5	jne	0x10064
00000000000100d7	movq	-0x4c(%rbp), %rdx
00000000000100db	movq	%rdx, 0x10(%r14)
00000000000100df	movq	-0x5c(%rbp), %rdx
00000000000100e3	movq	-0x54(%rbp), %rsi
00000000000100e7	movq	%rsi, 0x8(%r14)
00000000000100eb	movq	%rdx, (%r14)
00000000000100ee	movq	-0x84(%rbp), %rdx
00000000000100f5	movq	%rdx, (%r13)
00000000000100f9	movl	%eax, (%r12)
00000000000100fd	movq	-0x74(%rbp), %rax
0000000000010101	movq	%rax, (%r15)
0000000000010104	movq	-0x30(%rbp), %rax
0000000000010108	movl	%ecx, (%rax)
000000000001010a	xorl	%ebx, %ebx
000000000001010c	jmp	0x10070
__kernelrpc_mach_port_dnrequest_info:
0000000000010111	pushq	%rbp
0000000000010112	movq	%rsp, %rbp
0000000000010115	pushq	%r15
0000000000010117	pushq	%r14
0000000000010119	pushq	%rbx
000000000001011a	subq	$0x48, %rsp
000000000001011e	movq	%rcx, %r14
0000000000010121	movq	%rdx, %r15
0000000000010124	leaq	_NDR_record(%rip), %rax
000000000001012b	movq	(%rax), %rax
000000000001012e	leaq	-0x50(%rbp), %rbx
0000000000010132	movq	%rax, 0x18(%rbx)
0000000000010136	movl	%esi, 0x20(%rbx)
0000000000010139	movl	$0x1513, (%rbx)
000000000001013f	movl	%edi, 0x8(%rbx)
0000000000010142	callq	_mig_get_reply_port
0000000000010147	movl	%eax, 0xc(%rbx)
000000000001014a	movabsq	$0xc9800000000, %rcx
0000000000010154	movq	%rcx, 0x10(%rbx)
0000000000010158	movl	$0x0, (%rsp)
000000000001015f	movl	$0x3, %esi
0000000000010164	movl	$0x24, %edx
0000000000010169	movl	$0x34, %ecx
000000000001016e	xorl	%r9d, %r9d
0000000000010171	movq	%rbx, %rdi
0000000000010174	movl	%eax, %r8d
0000000000010177	callq	_mach_msg
000000000001017c	movl	%eax, %ebx
000000000001017e	leal	-0x10000002(%rbx), %eax
0000000000010184	cmpl	$0xe, %eax
0000000000010187	ja	0x1019d
0000000000010189	movl	$0x4003, %ecx
000000000001018e	btl	%eax, %ecx
0000000000010191	jae	0x1019d
0000000000010193	movl	-0x44(%rbp), %edi
0000000000010196	callq	_mig_put_reply_port
000000000001019b	jmp	0x101f2
000000000001019d	testl	%ebx, %ebx
000000000001019f	jne	0x101d1
00000000000101a1	movl	-0x3c(%rbp), %eax
00000000000101a4	cmpl	$0x47, %eax
00000000000101a7	je	0x101db
00000000000101a9	cmpl	$0xcfc, %eax
00000000000101ae	jne	0x101e2
00000000000101b0	movl	$0xfffffed4, %eax
00000000000101b5	cmpl	$0x0, -0x50(%rbp)
00000000000101b9	js	0x101e7
00000000000101bb	movl	-0x4c(%rbp), %ecx
00000000000101be	cmpl	$0x2c, %ecx
00000000000101c1	je	0x101ff
00000000000101c3	cmpl	$0x24, %ecx
00000000000101c6	jne	0x101e7
00000000000101c8	movl	-0x30(%rbp), %ebx
00000000000101cb	testl	%ebx, %ebx
00000000000101cd	jne	0x101e9
00000000000101cf	jmp	0x101e7
00000000000101d1	movl	-0x44(%rbp), %edi
00000000000101d4	callq	_mig_dealloc_reply_port
00000000000101d9	jmp	0x101f2
00000000000101db	movl	$0xfffffecc, %eax
00000000000101e0	jmp	0x101e7
00000000000101e2	movl	$0xfffffed3, %eax
00000000000101e7	movl	%eax, %ebx
00000000000101e9	leaq	-0x50(%rbp), %rdi
00000000000101ed	callq	_mach_msg_destroy
00000000000101f2	movl	%ebx, %eax
00000000000101f4	addq	$0x48, %rsp
00000000000101f8	popq	%rbx
00000000000101f9	popq	%r14
00000000000101fb	popq	%r15
00000000000101fd	popq	%rbp
00000000000101fe	retq
00000000000101ff	movl	-0x30(%rbp), %ebx
0000000000010202	testl	%ebx, %ebx
0000000000010204	jne	0x101e9
0000000000010206	movl	-0x2c(%rbp), %eax
0000000000010209	movl	%eax, (%r15)
000000000001020c	movl	-0x28(%rbp), %eax
000000000001020f	movl	%eax, (%r14)
0000000000010212	xorl	%ebx, %ebx
0000000000010214	jmp	0x101f2
__kernelrpc_mach_port_kernel_object:
0000000000010216	pushq	%rbp
0000000000010217	movq	%rsp, %rbp
000000000001021a	pushq	%r15
000000000001021c	pushq	%r14
000000000001021e	pushq	%rbx
000000000001021f	subq	$0x48, %rsp
0000000000010223	movq	%rcx, %r14
0000000000010226	movq	%rdx, %r15
0000000000010229	leaq	_NDR_record(%rip), %rax
0000000000010230	movq	(%rax), %rax
0000000000010233	leaq	-0x50(%rbp), %rbx
0000000000010237	movq	%rax, 0x18(%rbx)
000000000001023b	movl	%esi, 0x20(%rbx)
000000000001023e	movl	$0x1513, (%rbx)
0000000000010244	movl	%edi, 0x8(%rbx)
0000000000010247	callq	_mig_get_reply_port
000000000001024c	movl	%eax, 0xc(%rbx)
000000000001024f	movabsq	$0xc9900000000, %rcx
0000000000010259	movq	%rcx, 0x10(%rbx)
000000000001025d	movl	$0x0, (%rsp)
0000000000010264	movl	$0x3, %esi
0000000000010269	movl	$0x24, %edx
000000000001026e	movl	$0x34, %ecx
0000000000010273	xorl	%r9d, %r9d
0000000000010276	movq	%rbx, %rdi
0000000000010279	movl	%eax, %r8d
000000000001027c	callq	_mach_msg
0000000000010281	movl	%eax, %ebx
0000000000010283	leal	-0x10000002(%rbx), %eax
0000000000010289	cmpl	$0xe, %eax
000000000001028c	ja	0x102a2
000000000001028e	movl	$0x4003, %ecx
0000000000010293	btl	%eax, %ecx
0000000000010296	jae	0x102a2
0000000000010298	movl	-0x44(%rbp), %edi
000000000001029b	callq	_mig_put_reply_port
00000000000102a0	jmp	0x102f7
00000000000102a2	testl	%ebx, %ebx
00000000000102a4	jne	0x102d6
00000000000102a6	movl	-0x3c(%rbp), %eax
00000000000102a9	cmpl	$0x47, %eax
00000000000102ac	je	0x102e0
00000000000102ae	cmpl	$0xcfd, %eax
00000000000102b3	jne	0x102e7
00000000000102b5	movl	$0xfffffed4, %eax
00000000000102ba	cmpl	$0x0, -0x50(%rbp)
00000000000102be	js	0x102ec
00000000000102c0	movl	-0x4c(%rbp), %ecx
00000000000102c3	cmpl	$0x2c, %ecx
00000000000102c6	je	0x10304
00000000000102c8	cmpl	$0x24, %ecx
00000000000102cb	jne	0x102ec
00000000000102cd	movl	-0x30(%rbp), %ebx
00000000000102d0	testl	%ebx, %ebx
00000000000102d2	jne	0x102ee
00000000000102d4	jmp	0x102ec
00000000000102d6	movl	-0x44(%rbp), %edi
00000000000102d9	callq	_mig_dealloc_reply_port
00000000000102de	jmp	0x102f7
00000000000102e0	movl	$0xfffffecc, %eax
00000000000102e5	jmp	0x102ec
00000000000102e7	movl	$0xfffffed3, %eax
00000000000102ec	movl	%eax, %ebx
00000000000102ee	leaq	-0x50(%rbp), %rdi
00000000000102f2	callq	_mach_msg_destroy
00000000000102f7	movl	%ebx, %eax
00000000000102f9	addq	$0x48, %rsp
00000000000102fd	popq	%rbx
00000000000102fe	popq	%r14
0000000000010300	popq	%r15
0000000000010302	popq	%rbp
0000000000010303	retq
0000000000010304	movl	-0x30(%rbp), %ebx
0000000000010307	testl	%ebx, %ebx
0000000000010309	jne	0x102ee
000000000001030b	movl	-0x2c(%rbp), %eax
000000000001030e	movl	%eax, (%r15)
0000000000010311	movl	-0x28(%rbp), %eax
0000000000010314	movl	%eax, (%r14)
0000000000010317	xorl	%ebx, %ebx
0000000000010319	jmp	0x102f7
__kernelrpc_mach_port_insert_member:
000000000001031b	pushq	%rbp
000000000001031c	movq	%rsp, %rbp
000000000001031f	pushq	%rbx
0000000000010320	subq	$0x38, %rsp
0000000000010324	leaq	_NDR_record(%rip), %rax
000000000001032b	movq	(%rax), %rax
000000000001032e	leaq	-0x38(%rbp), %rbx
0000000000010332	movq	%rax, 0x18(%rbx)
0000000000010336	movl	%esi, 0x20(%rbx)
0000000000010339	movl	%edx, 0x24(%rbx)
000000000001033c	movl	$0x1513, (%rbx)
0000000000010342	movl	%edi, 0x8(%rbx)
0000000000010345	callq	_mig_get_reply_port
000000000001034a	movl	%eax, 0xc(%rbx)
000000000001034d	movabsq	$0xc9a00000000, %rcx
0000000000010357	movq	%rcx, 0x10(%rbx)
000000000001035b	movl	$0x0, (%rsp)
0000000000010362	movl	$0x3, %esi
0000000000010367	movl	$0x28, %edx
000000000001036c	movl	$0x2c, %ecx
0000000000010371	xorl	%r9d, %r9d
0000000000010374	movq	%rbx, %rdi
0000000000010377	movl	%eax, %r8d
000000000001037a	callq	_mach_msg
000000000001037f	movl	%eax, %ebx
0000000000010381	leal	-0x10000002(%rbx), %eax
0000000000010387	cmpl	$0xe, %eax
000000000001038a	ja	0x103a0
000000000001038c	movl	$0x4003, %ecx
0000000000010391	btl	%eax, %ecx
0000000000010394	jae	0x103a0
0000000000010396	movl	-0x2c(%rbp), %edi
0000000000010399	callq	_mig_put_reply_port
000000000001039e	jmp	0x103ee
00000000000103a0	testl	%ebx, %ebx
00000000000103a2	jne	0x103cf
00000000000103a4	movl	-0x24(%rbp), %eax
00000000000103a7	cmpl	$0x47, %eax
00000000000103aa	je	0x103d9
00000000000103ac	cmpl	$0xcfe, %eax
00000000000103b1	jne	0x103e0
00000000000103b3	movl	$0xfffffed4, %ebx
00000000000103b8	cmpl	$0x0, -0x38(%rbp)
00000000000103bc	js	0x103e5
00000000000103be	cmpl	$0x24, -0x34(%rbp)
00000000000103c2	jne	0x103e5
00000000000103c4	movl	-0x18(%rbp), %ebx
00000000000103c7	testl	%ebx, %ebx
00000000000103c9	jne	0x103e5
00000000000103cb	xorl	%ebx, %ebx
00000000000103cd	jmp	0x103ee
00000000000103cf	movl	-0x2c(%rbp), %edi
00000000000103d2	callq	_mig_dealloc_reply_port
00000000000103d7	jmp	0x103ee
00000000000103d9	movl	$0xfffffecc, %ebx
00000000000103de	jmp	0x103e5
00000000000103e0	movl	$0xfffffed3, %ebx
00000000000103e5	leaq	-0x38(%rbp), %rdi
00000000000103e9	callq	_mach_msg_destroy
00000000000103ee	movl	%ebx, %eax
00000000000103f0	addq	$0x38, %rsp
00000000000103f4	popq	%rbx
00000000000103f5	popq	%rbp
00000000000103f6	retq
__kernelrpc_mach_port_extract_member:
00000000000103f7	pushq	%rbp
00000000000103f8	movq	%rsp, %rbp
00000000000103fb	pushq	%rbx
00000000000103fc	subq	$0x38, %rsp
0000000000010400	leaq	_NDR_record(%rip), %rax
0000000000010407	movq	(%rax), %rax
000000000001040a	leaq	-0x38(%rbp), %rbx
000000000001040e	movq	%rax, 0x18(%rbx)
0000000000010412	movl	%esi, 0x20(%rbx)
0000000000010415	movl	%edx, 0x24(%rbx)
0000000000010418	movl	$0x1513, (%rbx)
000000000001041e	movl	%edi, 0x8(%rbx)
0000000000010421	callq	_mig_get_reply_port
0000000000010426	movl	%eax, 0xc(%rbx)
0000000000010429	movabsq	$0xc9b00000000, %rcx
0000000000010433	movq	%rcx, 0x10(%rbx)
0000000000010437	movl	$0x0, (%rsp)
000000000001043e	movl	$0x3, %esi
0000000000010443	movl	$0x28, %edx
0000000000010448	movl	$0x2c, %ecx
000000000001044d	xorl	%r9d, %r9d
0000000000010450	movq	%rbx, %rdi
0000000000010453	movl	%eax, %r8d
0000000000010456	callq	_mach_msg
000000000001045b	movl	%eax, %ebx
000000000001045d	leal	-0x10000002(%rbx), %eax
0000000000010463	cmpl	$0xe, %eax
0000000000010466	ja	0x1047c
0000000000010468	movl	$0x4003, %ecx
000000000001046d	btl	%eax, %ecx
0000000000010470	jae	0x1047c
0000000000010472	movl	-0x2c(%rbp), %edi
0000000000010475	callq	_mig_put_reply_port
000000000001047a	jmp	0x104ca
000000000001047c	testl	%ebx, %ebx
000000000001047e	jne	0x104ab
0000000000010480	movl	-0x24(%rbp), %eax
0000000000010483	cmpl	$0x47, %eax
0000000000010486	je	0x104b5
0000000000010488	cmpl	$0xcff, %eax
000000000001048d	jne	0x104bc
000000000001048f	movl	$0xfffffed4, %ebx
0000000000010494	cmpl	$0x0, -0x38(%rbp)
0000000000010498	js	0x104c1
000000000001049a	cmpl	$0x24, -0x34(%rbp)
000000000001049e	jne	0x104c1
00000000000104a0	movl	-0x18(%rbp), %ebx
00000000000104a3	testl	%ebx, %ebx
00000000000104a5	jne	0x104c1
00000000000104a7	xorl	%ebx, %ebx
00000000000104a9	jmp	0x104ca
00000000000104ab	movl	-0x2c(%rbp), %edi
00000000000104ae	callq	_mig_dealloc_reply_port
00000000000104b3	jmp	0x104ca
00000000000104b5	movl	$0xfffffecc, %ebx
00000000000104ba	jmp	0x104c1
00000000000104bc	movl	$0xfffffed3, %ebx
00000000000104c1	leaq	-0x38(%rbp), %rdi
00000000000104c5	callq	_mach_msg_destroy
00000000000104ca	movl	%ebx, %eax
00000000000104cc	addq	$0x38, %rsp
00000000000104d0	popq	%rbx
00000000000104d1	popq	%rbp
00000000000104d2	retq
__kernelrpc_mach_port_kobject:
00000000000104d3	pushq	%rbp
00000000000104d4	movq	%rsp, %rbp
00000000000104d7	pushq	%r15
00000000000104d9	pushq	%r14
00000000000104db	pushq	%rbx
00000000000104dc	subq	$0x48, %rsp
00000000000104e0	movq	%rcx, %r14
00000000000104e3	movq	%rdx, %r15
00000000000104e6	leaq	_NDR_record(%rip), %rax
00000000000104ed	movq	(%rax), %rax
00000000000104f0	leaq	-0x50(%rbp), %rbx
00000000000104f4	movq	%rax, 0x18(%rbx)
00000000000104f8	movl	%esi, 0x20(%rbx)
00000000000104fb	movl	$0x1513, (%rbx)
0000000000010501	movl	%edi, 0x8(%rbx)
0000000000010504	callq	_mig_get_reply_port
0000000000010509	movl	%eax, 0xc(%rbx)
000000000001050c	movabsq	$0xc9e00000000, %rcx
0000000000010516	movq	%rcx, 0x10(%rbx)
000000000001051a	movl	$0x0, (%rsp)
0000000000010521	movl	$0x3, %esi
0000000000010526	movl	$0x24, %edx
000000000001052b	movl	$0x38, %ecx
0000000000010530	xorl	%r9d, %r9d
0000000000010533	movq	%rbx, %rdi
0000000000010536	movl	%eax, %r8d
0000000000010539	callq	_mach_msg
000000000001053e	movl	%eax, %ebx
0000000000010540	leal	-0x10000002(%rbx), %eax
0000000000010546	cmpl	$0xe, %eax
0000000000010549	ja	0x1055f
000000000001054b	movl	$0x4003, %ecx
0000000000010550	btl	%eax, %ecx
0000000000010553	jae	0x1055f
0000000000010555	movl	-0x44(%rbp), %edi
0000000000010558	callq	_mig_put_reply_port
000000000001055d	jmp	0x105b4
000000000001055f	testl	%ebx, %ebx
0000000000010561	jne	0x10593
0000000000010563	movl	-0x3c(%rbp), %eax
0000000000010566	cmpl	$0x47, %eax
0000000000010569	je	0x1059d
000000000001056b	cmpl	$0xd02, %eax
0000000000010570	jne	0x105a4
0000000000010572	movl	$0xfffffed4, %eax
0000000000010577	cmpl	$0x0, -0x50(%rbp)
000000000001057b	js	0x105a9
000000000001057d	movl	-0x4c(%rbp), %ecx
0000000000010580	cmpl	$0x30, %ecx
0000000000010583	je	0x105c1
0000000000010585	cmpl	$0x24, %ecx
0000000000010588	jne	0x105a9
000000000001058a	movl	-0x30(%rbp), %ebx
000000000001058d	testl	%ebx, %ebx
000000000001058f	jne	0x105ab
0000000000010591	jmp	0x105a9
0000000000010593	movl	-0x44(%rbp), %edi
0000000000010596	callq	_mig_dealloc_reply_port
000000000001059b	jmp	0x105b4
000000000001059d	movl	$0xfffffecc, %eax
00000000000105a2	jmp	0x105a9
00000000000105a4	movl	$0xfffffed3, %eax
00000000000105a9	movl	%eax, %ebx
00000000000105ab	leaq	-0x50(%rbp), %rdi
00000000000105af	callq	_mach_msg_destroy
00000000000105b4	movl	%ebx, %eax
00000000000105b6	addq	$0x48, %rsp
00000000000105ba	popq	%rbx
00000000000105bb	popq	%r14
00000000000105bd	popq	%r15
00000000000105bf	popq	%rbp
00000000000105c0	retq
00000000000105c1	movl	-0x30(%rbp), %ebx
00000000000105c4	testl	%ebx, %ebx
00000000000105c6	jne	0x105ab
00000000000105c8	movl	-0x2c(%rbp), %eax
00000000000105cb	movl	%eax, (%r15)
00000000000105ce	movq	-0x28(%rbp), %rax
00000000000105d2	movq	%rax, (%r14)
00000000000105d5	xorl	%ebx, %ebx
00000000000105d7	jmp	0x105b4
__kernelrpc_mach_port_construct:
00000000000105d9	pushq	%rbp
00000000000105da	movq	%rsp, %rbp
00000000000105dd	pushq	%r14
00000000000105df	pushq	%rbx
00000000000105e0	subq	$0x50, %rsp
00000000000105e4	movq	%rcx, %r14
00000000000105e7	leaq	-0x50(%rbp), %rbx
00000000000105eb	movl	$0x1, 0x18(%rbx)
00000000000105f2	movq	%rsi, 0x1c(%rbx)
00000000000105f6	movabsq	$0x1801000100, %rax
0000000000010600	movq	%rax, 0x24(%rbx)
0000000000010604	leaq	_NDR_record(%rip), %rax
000000000001060b	movq	(%rax), %rax
000000000001060e	movq	%rax, 0x2c(%rbx)
0000000000010612	movq	%rdx, 0x34(%rbx)
0000000000010616	movl	$0x80001513, (%rbx)
000000000001061c	movl	%edi, 0x8(%rbx)
000000000001061f	callq	_mig_get_reply_port
0000000000010624	movl	%eax, 0xc(%rbx)
0000000000010627	movabsq	$0xc9f00000000, %rcx
0000000000010631	movq	%rcx, 0x10(%rbx)
0000000000010635	movl	$0x0, (%rsp)
000000000001063c	movl	$0x3, %esi
0000000000010641	movl	$0x3c, %edx
0000000000010646	movl	$0x30, %ecx
000000000001064b	xorl	%r9d, %r9d
000000000001064e	movq	%rbx, %rdi
0000000000010651	movl	%eax, %r8d
0000000000010654	callq	_mach_msg
0000000000010659	movl	%eax, %ebx
000000000001065b	leal	-0x10000002(%rbx), %eax
0000000000010661	cmpl	$0xe, %eax
0000000000010664	ja	0x1067a
0000000000010666	movl	$0x4003, %ecx
000000000001066b	btl	%eax, %ecx
000000000001066e	jae	0x1067a
0000000000010670	movl	-0x44(%rbp), %edi
0000000000010673	callq	_mig_put_reply_port
0000000000010678	jmp	0x106cf
000000000001067a	testl	%ebx, %ebx
000000000001067c	jne	0x106ae
000000000001067e	movl	-0x3c(%rbp), %eax
0000000000010681	cmpl	$0x47, %eax
0000000000010684	je	0x106b8
0000000000010686	cmpl	$0xd03, %eax
000000000001068b	jne	0x106bf
000000000001068d	movl	$0xfffffed4, %eax
0000000000010692	cmpl	$0x0, -0x50(%rbp)
0000000000010696	js	0x106c4
0000000000010698	movl	-0x4c(%rbp), %ecx
000000000001069b	cmpl	$0x28, %ecx
000000000001069e	je	0x106da
00000000000106a0	cmpl	$0x24, %ecx
00000000000106a3	jne	0x106c4
00000000000106a5	movl	-0x30(%rbp), %ebx
00000000000106a8	testl	%ebx, %ebx
00000000000106aa	jne	0x106c6
00000000000106ac	jmp	0x106c4
00000000000106ae	movl	-0x44(%rbp), %edi
00000000000106b1	callq	_mig_dealloc_reply_port
00000000000106b6	jmp	0x106cf
00000000000106b8	movl	$0xfffffecc, %eax
00000000000106bd	jmp	0x106c4
00000000000106bf	movl	$0xfffffed3, %eax
00000000000106c4	movl	%eax, %ebx
00000000000106c6	leaq	-0x50(%rbp), %rdi
00000000000106ca	callq	_mach_msg_destroy
00000000000106cf	movl	%ebx, %eax
00000000000106d1	addq	$0x50, %rsp
00000000000106d5	popq	%rbx
00000000000106d6	popq	%r14
00000000000106d8	popq	%rbp
00000000000106d9	retq
00000000000106da	movl	-0x30(%rbp), %ebx
00000000000106dd	testl	%ebx, %ebx
00000000000106df	jne	0x106c6
00000000000106e1	movl	-0x2c(%rbp), %eax
00000000000106e4	movl	%eax, (%r14)
00000000000106e7	xorl	%ebx, %ebx
00000000000106e9	jmp	0x106cf
__kernelrpc_mach_port_destruct:
00000000000106eb	pushq	%rbp
00000000000106ec	movq	%rsp, %rbp
00000000000106ef	pushq	%rbx
00000000000106f0	subq	$0x38, %rsp
00000000000106f4	leaq	_NDR_record(%rip), %rax
00000000000106fb	movq	(%rax), %rax
00000000000106fe	leaq	-0x38(%rbp), %rbx
0000000000010702	movq	%rax, 0x18(%rbx)
0000000000010706	movl	%esi, 0x20(%rbx)
0000000000010709	movl	%edx, 0x24(%rbx)
000000000001070c	movq	%rcx, 0x28(%rbx)
0000000000010710	movl	$0x1513, (%rbx)
0000000000010716	movl	%edi, 0x8(%rbx)
0000000000010719	callq	_mig_get_reply_port
000000000001071e	movl	%eax, 0xc(%rbx)
0000000000010721	movabsq	$0xca000000000, %rcx
000000000001072b	movq	%rcx, 0x10(%rbx)
000000000001072f	movl	$0x0, (%rsp)
0000000000010736	movl	$0x3, %esi
000000000001073b	movl	$0x30, %edx
0000000000010740	movl	$0x2c, %ecx
0000000000010745	xorl	%r9d, %r9d
0000000000010748	movq	%rbx, %rdi
000000000001074b	movl	%eax, %r8d
000000000001074e	callq	_mach_msg
0000000000010753	movl	%eax, %ebx
0000000000010755	leal	-0x10000002(%rbx), %eax
000000000001075b	cmpl	$0xe, %eax
000000000001075e	ja	0x10774
0000000000010760	movl	$0x4003, %ecx
0000000000010765	btl	%eax, %ecx
0000000000010768	jae	0x10774
000000000001076a	movl	-0x2c(%rbp), %edi
000000000001076d	callq	_mig_put_reply_port
0000000000010772	jmp	0x107c2
0000000000010774	testl	%ebx, %ebx
0000000000010776	jne	0x107a3
0000000000010778	movl	-0x24(%rbp), %eax
000000000001077b	cmpl	$0x47, %eax
000000000001077e	je	0x107ad
0000000000010780	cmpl	$0xd04, %eax
0000000000010785	jne	0x107b4
0000000000010787	movl	$0xfffffed4, %ebx
000000000001078c	cmpl	$0x0, -0x38(%rbp)
0000000000010790	js	0x107b9
0000000000010792	cmpl	$0x24, -0x34(%rbp)
0000000000010796	jne	0x107b9
0000000000010798	movl	-0x18(%rbp), %ebx
000000000001079b	testl	%ebx, %ebx
000000000001079d	jne	0x107b9
000000000001079f	xorl	%ebx, %ebx
00000000000107a1	jmp	0x107c2
00000000000107a3	movl	-0x2c(%rbp), %edi
00000000000107a6	callq	_mig_dealloc_reply_port
00000000000107ab	jmp	0x107c2
00000000000107ad	movl	$0xfffffecc, %ebx
00000000000107b2	jmp	0x107b9
00000000000107b4	movl	$0xfffffed3, %ebx
00000000000107b9	leaq	-0x38(%rbp), %rdi
00000000000107bd	callq	_mach_msg_destroy
00000000000107c2	movl	%ebx, %eax
00000000000107c4	addq	$0x38, %rsp
00000000000107c8	popq	%rbx
00000000000107c9	popq	%rbp
00000000000107ca	retq
__kernelrpc_mach_port_guard:
00000000000107cb	pushq	%rbp
00000000000107cc	movq	%rsp, %rbp
00000000000107cf	pushq	%rbx
00000000000107d0	subq	$0x38, %rsp
00000000000107d4	leaq	_NDR_record(%rip), %rax
00000000000107db	movq	(%rax), %rax
00000000000107de	leaq	-0x38(%rbp), %rbx
00000000000107e2	movq	%rax, 0x18(%rbx)
00000000000107e6	movl	%esi, 0x20(%rbx)
00000000000107e9	movq	%rdx, 0x24(%rbx)
00000000000107ed	movl	%ecx, 0x2c(%rbx)
00000000000107f0	movl	$0x1513, (%rbx)
00000000000107f6	movl	%edi, 0x8(%rbx)
00000000000107f9	callq	_mig_get_reply_port
00000000000107fe	movl	%eax, 0xc(%rbx)
0000000000010801	movabsq	$0xca100000000, %rcx
000000000001080b	movq	%rcx, 0x10(%rbx)
000000000001080f	movl	$0x0, (%rsp)
0000000000010816	movl	$0x3, %esi
000000000001081b	movl	$0x30, %edx
0000000000010820	movl	$0x2c, %ecx
0000000000010825	xorl	%r9d, %r9d
0000000000010828	movq	%rbx, %rdi
000000000001082b	movl	%eax, %r8d
000000000001082e	callq	_mach_msg
0000000000010833	movl	%eax, %ebx
0000000000010835	leal	-0x10000002(%rbx), %eax
000000000001083b	cmpl	$0xe, %eax
000000000001083e	ja	0x10854
0000000000010840	movl	$0x4003, %ecx
0000000000010845	btl	%eax, %ecx
0000000000010848	jae	0x10854
000000000001084a	movl	-0x2c(%rbp), %edi
000000000001084d	callq	_mig_put_reply_port
0000000000010852	jmp	0x108a2
0000000000010854	testl	%ebx, %ebx
0000000000010856	jne	0x10883
0000000000010858	movl	-0x24(%rbp), %eax
000000000001085b	cmpl	$0x47, %eax
000000000001085e	je	0x1088d
0000000000010860	cmpl	$0xd05, %eax
0000000000010865	jne	0x10894
0000000000010867	movl	$0xfffffed4, %ebx
000000000001086c	cmpl	$0x0, -0x38(%rbp)
0000000000010870	js	0x10899
0000000000010872	cmpl	$0x24, -0x34(%rbp)
0000000000010876	jne	0x10899
0000000000010878	movl	-0x18(%rbp), %ebx
000000000001087b	testl	%ebx, %ebx
000000000001087d	jne	0x10899
000000000001087f	xorl	%ebx, %ebx
0000000000010881	jmp	0x108a2
0000000000010883	movl	-0x2c(%rbp), %edi
0000000000010886	callq	_mig_dealloc_reply_port
000000000001088b	jmp	0x108a2
000000000001088d	movl	$0xfffffecc, %ebx
0000000000010892	jmp	0x10899
0000000000010894	movl	$0xfffffed3, %ebx
0000000000010899	leaq	-0x38(%rbp), %rdi
000000000001089d	callq	_mach_msg_destroy
00000000000108a2	movl	%ebx, %eax
00000000000108a4	addq	$0x38, %rsp
00000000000108a8	popq	%rbx
00000000000108a9	popq	%rbp
00000000000108aa	retq
__kernelrpc_mach_port_unguard:
00000000000108ab	pushq	%rbp
00000000000108ac	movq	%rsp, %rbp
00000000000108af	pushq	%rbx
00000000000108b0	subq	$0x38, %rsp
00000000000108b4	leaq	_NDR_record(%rip), %rax
00000000000108bb	movq	(%rax), %rax
00000000000108be	leaq	-0x38(%rbp), %rbx
00000000000108c2	movq	%rax, 0x18(%rbx)
00000000000108c6	movl	%esi, 0x20(%rbx)
00000000000108c9	movq	%rdx, 0x24(%rbx)
00000000000108cd	movl	$0x1513, (%rbx)
00000000000108d3	movl	%edi, 0x8(%rbx)
00000000000108d6	callq	_mig_get_reply_port
00000000000108db	movl	%eax, 0xc(%rbx)
00000000000108de	movabsq	$0xca200000000, %rcx
00000000000108e8	movq	%rcx, 0x10(%rbx)
00000000000108ec	movl	$0x0, (%rsp)
00000000000108f3	movl	$0x3, %esi
00000000000108f8	movl	$0x2c, %edx
00000000000108fd	movl	$0x2c, %ecx
0000000000010902	xorl	%r9d, %r9d
0000000000010905	movq	%rbx, %rdi
0000000000010908	movl	%eax, %r8d
000000000001090b	callq	_mach_msg
0000000000010910	movl	%eax, %ebx
0000000000010912	leal	-0x10000002(%rbx), %eax
0000000000010918	cmpl	$0xe, %eax
000000000001091b	ja	0x10931
000000000001091d	movl	$0x4003, %ecx
0000000000010922	btl	%eax, %ecx
0000000000010925	jae	0x10931
0000000000010927	movl	-0x2c(%rbp), %edi
000000000001092a	callq	_mig_put_reply_port
000000000001092f	jmp	0x1097f
0000000000010931	testl	%ebx, %ebx
0000000000010933	jne	0x10960
0000000000010935	movl	-0x24(%rbp), %eax
0000000000010938	cmpl	$0x47, %eax
000000000001093b	je	0x1096a
000000000001093d	cmpl	$0xd06, %eax
0000000000010942	jne	0x10971
0000000000010944	movl	$0xfffffed4, %ebx
0000000000010949	cmpl	$0x0, -0x38(%rbp)
000000000001094d	js	0x10976
000000000001094f	cmpl	$0x24, -0x34(%rbp)
0000000000010953	jne	0x10976
0000000000010955	movl	-0x18(%rbp), %ebx
0000000000010958	testl	%ebx, %ebx
000000000001095a	jne	0x10976
000000000001095c	xorl	%ebx, %ebx
000000000001095e	jmp	0x1097f
0000000000010960	movl	-0x2c(%rbp), %edi
0000000000010963	callq	_mig_dealloc_reply_port
0000000000010968	jmp	0x1097f
000000000001096a	movl	$0xfffffecc, %ebx
000000000001096f	jmp	0x10976
0000000000010971	movl	$0xfffffed3, %ebx
0000000000010976	leaq	-0x38(%rbp), %rdi
000000000001097a	callq	_mach_msg_destroy
000000000001097f	movl	%ebx, %eax
0000000000010981	addq	$0x38, %rsp
0000000000010985	popq	%rbx
0000000000010986	popq	%rbp
0000000000010987	retq
__kernelrpc_mach_port_space_basic_info:
0000000000010988	pushq	%rbp
0000000000010989	movq	%rsp, %rbp
000000000001098c	pushq	%r14
000000000001098e	pushq	%rbx
000000000001098f	subq	$0x50, %rsp
0000000000010993	movq	%rsi, %r14
0000000000010996	leaq	-0x58(%rbp), %rbx
000000000001099a	movl	$0x1513, (%rbx)
00000000000109a0	movl	%edi, 0x8(%rbx)
00000000000109a3	callq	_mig_get_reply_port
00000000000109a8	movl	%eax, 0xc(%rbx)
00000000000109ab	movabsq	$0xca300000000, %rcx
00000000000109b5	movq	%rcx, 0x10(%rbx)
00000000000109b9	movl	$0x0, (%rsp)
00000000000109c0	movl	$0x3, %esi
00000000000109c5	movl	$0x18, %edx
00000000000109ca	movl	$0x44, %ecx
00000000000109cf	xorl	%r9d, %r9d
00000000000109d2	movq	%rbx, %rdi
00000000000109d5	movl	%eax, %r8d
00000000000109d8	callq	_mach_msg
00000000000109dd	movl	%eax, %ebx
00000000000109df	leal	-0x10000002(%rbx), %eax
00000000000109e5	cmpl	$0xe, %eax
00000000000109e8	ja	0x109fe
00000000000109ea	movl	$0x4003, %ecx
00000000000109ef	btl	%eax, %ecx
00000000000109f2	jae	0x109fe
00000000000109f4	movl	-0x4c(%rbp), %edi
00000000000109f7	callq	_mig_put_reply_port
00000000000109fc	jmp	0x10a53
00000000000109fe	testl	%ebx, %ebx
0000000000010a00	jne	0x10a32
0000000000010a02	movl	-0x44(%rbp), %eax
0000000000010a05	cmpl	$0x47, %eax
0000000000010a08	je	0x10a3c
0000000000010a0a	cmpl	$0xd07, %eax
0000000000010a0f	jne	0x10a43
0000000000010a11	movl	$0xfffffed4, %eax
0000000000010a16	cmpl	$0x0, -0x58(%rbp)
0000000000010a1a	js	0x10a48
0000000000010a1c	movl	-0x54(%rbp), %ecx
0000000000010a1f	cmpl	$0x3c, %ecx
0000000000010a22	je	0x10a5e
0000000000010a24	cmpl	$0x24, %ecx
0000000000010a27	jne	0x10a48
0000000000010a29	movl	-0x38(%rbp), %ebx
0000000000010a2c	testl	%ebx, %ebx
0000000000010a2e	jne	0x10a4a
0000000000010a30	jmp	0x10a48
0000000000010a32	movl	-0x4c(%rbp), %edi
0000000000010a35	callq	_mig_dealloc_reply_port
0000000000010a3a	jmp	0x10a53
0000000000010a3c	movl	$0xfffffecc, %eax
0000000000010a41	jmp	0x10a48
0000000000010a43	movl	$0xfffffed3, %eax
0000000000010a48	movl	%eax, %ebx
0000000000010a4a	leaq	-0x58(%rbp), %rdi
0000000000010a4e	callq	_mach_msg_destroy
0000000000010a53	movl	%ebx, %eax
0000000000010a55	addq	$0x50, %rsp
0000000000010a59	popq	%rbx
0000000000010a5a	popq	%r14
0000000000010a5c	popq	%rbp
0000000000010a5d	retq
0000000000010a5e	movl	-0x38(%rbp), %ebx
0000000000010a61	testl	%ebx, %ebx
0000000000010a63	jne	0x10a4a
0000000000010a65	movq	-0x24(%rbp), %rax
0000000000010a69	movq	%rax, 0x10(%r14)
0000000000010a6d	movq	-0x34(%rbp), %rax
0000000000010a71	movq	-0x2c(%rbp), %rcx
0000000000010a75	movq	%rcx, 0x8(%r14)
0000000000010a79	movq	%rax, (%r14)
0000000000010a7c	xorl	%ebx, %ebx
0000000000010a7e	jmp	0x10a53
__kernelrpc_mach_port_special_reply_port_reset_link:
0000000000010a80	pushq	%rbp
0000000000010a81	movq	%rsp, %rbp
0000000000010a84	pushq	%r14
0000000000010a86	pushq	%rbx
0000000000010a87	subq	$0x40, %rsp
0000000000010a8b	movq	%rdx, %r14
0000000000010a8e	leaq	_NDR_record(%rip), %rax
0000000000010a95	movq	(%rax), %rax
0000000000010a98	leaq	-0x40(%rbp), %rbx
0000000000010a9c	movq	%rax, 0x18(%rbx)
0000000000010aa0	movl	%esi, 0x20(%rbx)
0000000000010aa3	movl	$0x1513, (%rbx)
0000000000010aa9	movl	%edi, 0x8(%rbx)
0000000000010aac	callq	_mig_get_reply_port
0000000000010ab1	movl	%eax, 0xc(%rbx)
0000000000010ab4	movabsq	$0xca400000000, %rcx
0000000000010abe	movq	%rcx, 0x10(%rbx)
0000000000010ac2	movl	$0x0, (%rsp)
0000000000010ac9	movl	$0x3, %esi
0000000000010ace	movl	$0x24, %edx
0000000000010ad3	movl	$0x30, %ecx
0000000000010ad8	xorl	%r9d, %r9d
0000000000010adb	movq	%rbx, %rdi
0000000000010ade	movl	%eax, %r8d
0000000000010ae1	callq	_mach_msg
0000000000010ae6	movl	%eax, %ebx
0000000000010ae8	leal	-0x10000002(%rbx), %eax
0000000000010aee	cmpl	$0xe, %eax
0000000000010af1	ja	0x10b07
0000000000010af3	movl	$0x4003, %ecx
0000000000010af8	btl	%eax, %ecx
0000000000010afb	jae	0x10b07
0000000000010afd	movl	-0x34(%rbp), %edi
0000000000010b00	callq	_mig_put_reply_port
0000000000010b05	jmp	0x10b5c
0000000000010b07	testl	%ebx, %ebx
0000000000010b09	jne	0x10b3b
0000000000010b0b	movl	-0x2c(%rbp), %eax
0000000000010b0e	cmpl	$0x47, %eax
0000000000010b11	je	0x10b45
0000000000010b13	cmpl	$0xd08, %eax
0000000000010b18	jne	0x10b4c
0000000000010b1a	movl	$0xfffffed4, %eax
0000000000010b1f	cmpl	$0x0, -0x40(%rbp)
0000000000010b23	js	0x10b51
0000000000010b25	movl	-0x3c(%rbp), %ecx
0000000000010b28	cmpl	$0x28, %ecx
0000000000010b2b	je	0x10b67
0000000000010b2d	cmpl	$0x24, %ecx
0000000000010b30	jne	0x10b51
0000000000010b32	movl	-0x20(%rbp), %ebx
0000000000010b35	testl	%ebx, %ebx
0000000000010b37	jne	0x10b53
0000000000010b39	jmp	0x10b51
0000000000010b3b	movl	-0x34(%rbp), %edi
0000000000010b3e	callq	_mig_dealloc_reply_port
0000000000010b43	jmp	0x10b5c
0000000000010b45	movl	$0xfffffecc, %eax
0000000000010b4a	jmp	0x10b51
0000000000010b4c	movl	$0xfffffed3, %eax
0000000000010b51	movl	%eax, %ebx
0000000000010b53	leaq	-0x40(%rbp), %rdi
0000000000010b57	callq	_mach_msg_destroy
0000000000010b5c	movl	%ebx, %eax
0000000000010b5e	addq	$0x40, %rsp
0000000000010b62	popq	%rbx
0000000000010b63	popq	%r14
0000000000010b65	popq	%rbp
0000000000010b66	retq
0000000000010b67	movl	-0x20(%rbp), %ebx
0000000000010b6a	testl	%ebx, %ebx
0000000000010b6c	jne	0x10b53
0000000000010b6e	movl	-0x1c(%rbp), %eax
0000000000010b71	movl	%eax, (%r14)
0000000000010b74	xorl	%ebx, %ebx
0000000000010b76	jmp	0x10b5c
__kernelrpc_mach_vm_allocate:
0000000000010b78	pushq	%rbp
0000000000010b79	movq	%rsp, %rbp
0000000000010b7c	pushq	%r14
0000000000010b7e	pushq	%rbx
0000000000010b7f	subq	$0x40, %rsp
0000000000010b83	movq	%rsi, %r14
0000000000010b86	leaq	_NDR_record(%rip), %rax
0000000000010b8d	movq	(%rax), %rax
0000000000010b90	leaq	-0x48(%rbp), %rbx
0000000000010b94	movq	%rax, 0x18(%rbx)
0000000000010b98	movq	(%rsi), %rax
0000000000010b9b	movq	%rax, 0x20(%rbx)
0000000000010b9f	movq	%rdx, 0x28(%rbx)
0000000000010ba3	movl	%ecx, 0x30(%rbx)
0000000000010ba6	movl	$0x1513, (%rbx)
0000000000010bac	movl	%edi, 0x8(%rbx)
0000000000010baf	callq	_mig_get_reply_port
0000000000010bb4	movl	%eax, 0xc(%rbx)
0000000000010bb7	movabsq	$0x12c000000000, %rcx
0000000000010bc1	movq	%rcx, 0x10(%rbx)
0000000000010bc5	movl	$0x0, (%rsp)
0000000000010bcc	movl	$0x3, %esi
0000000000010bd1	movl	$0x34, %edx
0000000000010bd6	movl	$0x34, %ecx
0000000000010bdb	xorl	%r9d, %r9d
0000000000010bde	movq	%rbx, %rdi
0000000000010be1	movl	%eax, %r8d
0000000000010be4	callq	_mach_msg
0000000000010be9	movl	%eax, %ebx
0000000000010beb	leal	-0x10000002(%rbx), %eax
0000000000010bf1	cmpl	$0xe, %eax
0000000000010bf4	ja	0x10c0a
0000000000010bf6	movl	$0x4003, %ecx
0000000000010bfb	btl	%eax, %ecx
0000000000010bfe	jae	0x10c0a
0000000000010c00	movl	-0x3c(%rbp), %edi
0000000000010c03	callq	_mig_put_reply_port
0000000000010c08	jmp	0x10c5f
0000000000010c0a	testl	%ebx, %ebx
0000000000010c0c	jne	0x10c3e
0000000000010c0e	movl	-0x34(%rbp), %eax
0000000000010c11	cmpl	$0x47, %eax
0000000000010c14	je	0x10c48
0000000000010c16	cmpl	$0x1324, %eax
0000000000010c1b	jne	0x10c4f
0000000000010c1d	movl	$0xfffffed4, %eax
0000000000010c22	cmpl	$0x0, -0x48(%rbp)
0000000000010c26	js	0x10c54
0000000000010c28	movl	-0x44(%rbp), %ecx
0000000000010c2b	cmpl	$0x2c, %ecx
0000000000010c2e	je	0x10c6a
0000000000010c30	cmpl	$0x24, %ecx
0000000000010c33	jne	0x10c54
0000000000010c35	movl	-0x28(%rbp), %ebx
0000000000010c38	testl	%ebx, %ebx
0000000000010c3a	jne	0x10c56
0000000000010c3c	jmp	0x10c54
0000000000010c3e	movl	-0x3c(%rbp), %edi
0000000000010c41	callq	_mig_dealloc_reply_port
0000000000010c46	jmp	0x10c5f
0000000000010c48	movl	$0xfffffecc, %eax
0000000000010c4d	jmp	0x10c54
0000000000010c4f	movl	$0xfffffed3, %eax
0000000000010c54	movl	%eax, %ebx
0000000000010c56	leaq	-0x48(%rbp), %rdi
0000000000010c5a	callq	_mach_msg_destroy
0000000000010c5f	movl	%ebx, %eax
0000000000010c61	addq	$0x40, %rsp
0000000000010c65	popq	%rbx
0000000000010c66	popq	%r14
0000000000010c68	popq	%rbp
0000000000010c69	retq
0000000000010c6a	movl	-0x28(%rbp), %ebx
0000000000010c6d	testl	%ebx, %ebx
0000000000010c6f	jne	0x10c56
0000000000010c71	movq	-0x24(%rbp), %rax
0000000000010c75	movq	%rax, (%r14)
0000000000010c78	xorl	%ebx, %ebx
0000000000010c7a	jmp	0x10c5f
__kernelrpc_mach_vm_deallocate:
0000000000010c7c	pushq	%rbp
0000000000010c7d	movq	%rsp, %rbp
0000000000010c80	pushq	%rbx
0000000000010c81	subq	$0x38, %rsp
0000000000010c85	leaq	_NDR_record(%rip), %rax
0000000000010c8c	movq	(%rax), %rax
0000000000010c8f	leaq	-0x38(%rbp), %rbx
0000000000010c93	movq	%rax, 0x18(%rbx)
0000000000010c97	movq	%rsi, 0x20(%rbx)
0000000000010c9b	movq	%rdx, 0x28(%rbx)
0000000000010c9f	movl	$0x1513, (%rbx)
0000000000010ca5	movl	%edi, 0x8(%rbx)
0000000000010ca8	callq	_mig_get_reply_port
0000000000010cad	movl	%eax, 0xc(%rbx)
0000000000010cb0	movabsq	$0x12c100000000, %rcx
0000000000010cba	movq	%rcx, 0x10(%rbx)
0000000000010cbe	movl	$0x0, (%rsp)
0000000000010cc5	movl	$0x3, %esi
0000000000010cca	movl	$0x30, %edx
0000000000010ccf	movl	$0x2c, %ecx
0000000000010cd4	xorl	%r9d, %r9d
0000000000010cd7	movq	%rbx, %rdi
0000000000010cda	movl	%eax, %r8d
0000000000010cdd	callq	_mach_msg
0000000000010ce2	movl	%eax, %ebx
0000000000010ce4	leal	-0x10000002(%rbx), %eax
0000000000010cea	cmpl	$0xe, %eax
0000000000010ced	ja	0x10d03
0000000000010cef	movl	$0x4003, %ecx
0000000000010cf4	btl	%eax, %ecx
0000000000010cf7	jae	0x10d03
0000000000010cf9	movl	-0x2c(%rbp), %edi
0000000000010cfc	callq	_mig_put_reply_port
0000000000010d01	jmp	0x10d51
0000000000010d03	testl	%ebx, %ebx
0000000000010d05	jne	0x10d32
0000000000010d07	movl	-0x24(%rbp), %eax
0000000000010d0a	cmpl	$0x47, %eax
0000000000010d0d	je	0x10d3c
0000000000010d0f	cmpl	$0x1325, %eax
0000000000010d14	jne	0x10d43
0000000000010d16	movl	$0xfffffed4, %ebx
0000000000010d1b	cmpl	$0x0, -0x38(%rbp)
0000000000010d1f	js	0x10d48
0000000000010d21	cmpl	$0x24, -0x34(%rbp)
0000000000010d25	jne	0x10d48
0000000000010d27	movl	-0x18(%rbp), %ebx
0000000000010d2a	testl	%ebx, %ebx
0000000000010d2c	jne	0x10d48
0000000000010d2e	xorl	%ebx, %ebx
0000000000010d30	jmp	0x10d51
0000000000010d32	movl	-0x2c(%rbp), %edi
0000000000010d35	callq	_mig_dealloc_reply_port
0000000000010d3a	jmp	0x10d51
0000000000010d3c	movl	$0xfffffecc, %ebx
0000000000010d41	jmp	0x10d48
0000000000010d43	movl	$0xfffffed3, %ebx
0000000000010d48	leaq	-0x38(%rbp), %rdi
0000000000010d4c	callq	_mach_msg_destroy
0000000000010d51	movl	%ebx, %eax
0000000000010d53	addq	$0x38, %rsp
0000000000010d57	popq	%rbx
0000000000010d58	popq	%rbp
0000000000010d59	retq
__kernelrpc_mach_vm_protect:
0000000000010d5a	pushq	%rbp
0000000000010d5b	movq	%rsp, %rbp
0000000000010d5e	pushq	%rbx
0000000000010d5f	subq	$0x48, %rsp
0000000000010d63	leaq	_NDR_record(%rip), %rax
0000000000010d6a	movq	(%rax), %rax
0000000000010d6d	leaq	-0x40(%rbp), %rbx
0000000000010d71	movq	%rax, 0x18(%rbx)
0000000000010d75	movq	%rsi, 0x20(%rbx)
0000000000010d79	movq	%rdx, 0x28(%rbx)
0000000000010d7d	movl	%ecx, 0x30(%rbx)
0000000000010d80	movl	%r8d, 0x34(%rbx)
0000000000010d84	movl	$0x1513, (%rbx)
0000000000010d8a	movl	%edi, 0x8(%rbx)
0000000000010d8d	callq	_mig_get_reply_port
0000000000010d92	movl	%eax, 0xc(%rbx)
0000000000010d95	movabsq	$0x12c200000000, %rcx
0000000000010d9f	movq	%rcx, 0x10(%rbx)
0000000000010da3	movl	$0x0, (%rsp)
0000000000010daa	movl	$0x3, %esi
0000000000010daf	movl	$0x38, %edx
0000000000010db4	movl	$0x2c, %ecx
0000000000010db9	xorl	%r9d, %r9d
0000000000010dbc	movq	%rbx, %rdi
0000000000010dbf	movl	%eax, %r8d
0000000000010dc2	callq	_mach_msg
0000000000010dc7	movl	%eax, %ebx
0000000000010dc9	leal	-0x10000002(%rbx), %eax
0000000000010dcf	cmpl	$0xe, %eax
0000000000010dd2	ja	0x10de8
0000000000010dd4	movl	$0x4003, %ecx
0000000000010dd9	btl	%eax, %ecx
0000000000010ddc	jae	0x10de8
0000000000010dde	movl	-0x34(%rbp), %edi
0000000000010de1	callq	_mig_put_reply_port
0000000000010de6	jmp	0x10e36
0000000000010de8	testl	%ebx, %ebx
0000000000010dea	jne	0x10e17
0000000000010dec	movl	-0x2c(%rbp), %eax
0000000000010def	cmpl	$0x47, %eax
0000000000010df2	je	0x10e21
0000000000010df4	cmpl	$0x1326, %eax
0000000000010df9	jne	0x10e28
0000000000010dfb	movl	$0xfffffed4, %ebx
0000000000010e00	cmpl	$0x0, -0x40(%rbp)
0000000000010e04	js	0x10e2d
0000000000010e06	cmpl	$0x24, -0x3c(%rbp)
0000000000010e0a	jne	0x10e2d
0000000000010e0c	movl	-0x20(%rbp), %ebx
0000000000010e0f	testl	%ebx, %ebx
0000000000010e11	jne	0x10e2d
0000000000010e13	xorl	%ebx, %ebx
0000000000010e15	jmp	0x10e36
0000000000010e17	movl	-0x34(%rbp), %edi
0000000000010e1a	callq	_mig_dealloc_reply_port
0000000000010e1f	jmp	0x10e36
0000000000010e21	movl	$0xfffffecc, %ebx
0000000000010e26	jmp	0x10e2d
0000000000010e28	movl	$0xfffffed3, %ebx
0000000000010e2d	leaq	-0x40(%rbp), %rdi
0000000000010e31	callq	_mach_msg_destroy
0000000000010e36	movl	%ebx, %eax
0000000000010e38	addq	$0x48, %rsp
0000000000010e3c	popq	%rbx
0000000000010e3d	popq	%rbp
0000000000010e3e	retq
_mach_vm_inherit:
0000000000010e3f	pushq	%rbp
0000000000010e40	movq	%rsp, %rbp
0000000000010e43	pushq	%rbx
0000000000010e44	subq	$0x48, %rsp
0000000000010e48	leaq	_NDR_record(%rip), %rax
0000000000010e4f	movq	(%rax), %rax
0000000000010e52	leaq	-0x40(%rbp), %rbx
0000000000010e56	movq	%rax, 0x18(%rbx)
0000000000010e5a	movq	%rsi, 0x20(%rbx)
0000000000010e5e	movq	%rdx, 0x28(%rbx)
0000000000010e62	movl	%ecx, 0x30(%rbx)
0000000000010e65	movl	$0x1513, (%rbx)
0000000000010e6b	movl	%edi, 0x8(%rbx)
0000000000010e6e	callq	_mig_get_reply_port
0000000000010e73	movl	%eax, 0xc(%rbx)
0000000000010e76	movabsq	$0x12c300000000, %rcx
0000000000010e80	movq	%rcx, 0x10(%rbx)
0000000000010e84	movl	$0x0, (%rsp)
0000000000010e8b	movl	$0x3, %esi
0000000000010e90	movl	$0x34, %edx
0000000000010e95	movl	$0x2c, %ecx
0000000000010e9a	xorl	%r9d, %r9d
0000000000010e9d	movq	%rbx, %rdi
0000000000010ea0	movl	%eax, %r8d
0000000000010ea3	callq	_mach_msg
0000000000010ea8	movl	%eax, %ebx
0000000000010eaa	leal	-0x10000002(%rbx), %eax
0000000000010eb0	cmpl	$0xe, %eax
0000000000010eb3	ja	0x10ec9
0000000000010eb5	movl	$0x4003, %ecx
0000000000010eba	btl	%eax, %ecx
0000000000010ebd	jae	0x10ec9
0000000000010ebf	movl	-0x34(%rbp), %edi
0000000000010ec2	callq	_mig_put_reply_port
0000000000010ec7	jmp	0x10f17
0000000000010ec9	testl	%ebx, %ebx
0000000000010ecb	jne	0x10ef8
0000000000010ecd	movl	-0x2c(%rbp), %eax
0000000000010ed0	cmpl	$0x47, %eax
0000000000010ed3	je	0x10f02
0000000000010ed5	cmpl	$0x1327, %eax
0000000000010eda	jne	0x10f09
0000000000010edc	movl	$0xfffffed4, %ebx
0000000000010ee1	cmpl	$0x0, -0x40(%rbp)
0000000000010ee5	js	0x10f0e
0000000000010ee7	cmpl	$0x24, -0x3c(%rbp)
0000000000010eeb	jne	0x10f0e
0000000000010eed	movl	-0x20(%rbp), %ebx
0000000000010ef0	testl	%ebx, %ebx
0000000000010ef2	jne	0x10f0e
0000000000010ef4	xorl	%ebx, %ebx
0000000000010ef6	jmp	0x10f17
0000000000010ef8	movl	-0x34(%rbp), %edi
0000000000010efb	callq	_mig_dealloc_reply_port
0000000000010f00	jmp	0x10f17
0000000000010f02	movl	$0xfffffecc, %ebx
0000000000010f07	jmp	0x10f0e
0000000000010f09	movl	$0xfffffed3, %ebx
0000000000010f0e	leaq	-0x40(%rbp), %rdi
0000000000010f12	callq	_mach_msg_destroy
0000000000010f17	movl	%ebx, %eax
0000000000010f19	addq	$0x48, %rsp
0000000000010f1d	popq	%rbx
0000000000010f1e	popq	%rbp
0000000000010f1f	retq
__kernelrpc_mach_vm_read:
0000000000010f20	pushq	%rbp
0000000000010f21	movq	%rsp, %rbp
0000000000010f24	pushq	%r15
0000000000010f26	pushq	%r14
0000000000010f28	pushq	%rbx
0000000000010f29	subq	$0x48, %rsp
0000000000010f2d	movq	%r8, %r14
0000000000010f30	movq	%rcx, %r15
0000000000010f33	leaq	_NDR_record(%rip), %rax
0000000000010f3a	movq	(%rax), %rax
0000000000010f3d	leaq	-0x58(%rbp), %rbx
0000000000010f41	movq	%rax, 0x18(%rbx)
0000000000010f45	movq	%rsi, 0x20(%rbx)
0000000000010f49	movq	%rdx, 0x28(%rbx)
0000000000010f4d	movl	$0x1513, (%rbx)
0000000000010f53	movl	%edi, 0x8(%rbx)
0000000000010f56	callq	_mig_get_reply_port
0000000000010f5b	movl	%eax, 0xc(%rbx)
0000000000010f5e	movabsq	$0x12c400000000, %rcx
0000000000010f68	movq	%rcx, 0x10(%rbx)
0000000000010f6c	movl	$0x0, (%rsp)
0000000000010f73	movl	$0x3, %esi
0000000000010f78	movl	$0x30, %edx
0000000000010f7d	movl	$0x40, %ecx
0000000000010f82	xorl	%r9d, %r9d
0000000000010f85	movq	%rbx, %rdi
0000000000010f88	movl	%eax, %r8d
0000000000010f8b	callq	_mach_msg
0000000000010f90	movl	%eax, %ebx
0000000000010f92	leal	-0x10000002(%rbx), %eax
0000000000010f98	cmpl	$0xe, %eax
0000000000010f9b	ja	0x10fb1
0000000000010f9d	movl	$0x4003, %ecx
0000000000010fa2	btl	%eax, %ecx
0000000000010fa5	jae	0x10fb1
0000000000010fa7	movl	-0x4c(%rbp), %edi
0000000000010faa	callq	_mig_put_reply_port
0000000000010faf	jmp	0x11005
0000000000010fb1	testl	%ebx, %ebx
0000000000010fb3	jne	0x10fe6
0000000000010fb5	movl	-0x44(%rbp), %eax
0000000000010fb8	cmpl	$0x47, %eax
0000000000010fbb	je	0x10ff0
0000000000010fbd	cmpl	$_swtch_pri, %eax
0000000000010fc2	jne	0x10ff7
0000000000010fc4	cmpl	$0x0, -0x58(%rbp)
0000000000010fc8	movl	-0x54(%rbp), %eax
0000000000010fcb	movl	$0xfffffed4, %ebx
0000000000010fd0	js	0x11012
0000000000010fd2	cmpl	$0x24, %eax
0000000000010fd5	jne	0x10ffc
0000000000010fd7	movl	-0x38(%rbp), %eax
0000000000010fda	testl	%eax, %eax
0000000000010fdc	movl	$0xfffffed4, %ebx
0000000000010fe1	cmovnel	%eax, %ebx
0000000000010fe4	jmp	0x10ffc
0000000000010fe6	movl	-0x4c(%rbp), %edi
0000000000010fe9	callq	_mig_dealloc_reply_port
0000000000010fee	jmp	0x11005
0000000000010ff0	movl	$0xfffffecc, %ebx
0000000000010ff5	jmp	0x10ffc
0000000000010ff7	movl	$0xfffffed3, %ebx
0000000000010ffc	leaq	-0x58(%rbp), %rdi
0000000000011000	callq	_mach_msg_destroy
0000000000011005	movl	%ebx, %eax
0000000000011007	addq	$0x48, %rsp
000000000001100b	popq	%rbx
000000000001100c	popq	%r14
000000000001100e	popq	%r15
0000000000011010	popq	%rbp
0000000000011011	retq
0000000000011012	cmpl	$0x38, %eax
0000000000011015	jne	0x10ffc
0000000000011017	cmpl	$0x1, -0x40(%rbp)
000000000001101b	jne	0x10ffc
000000000001101d	movl	$0xff000000, %eax
0000000000011022	andl	-0x34(%rbp), %eax
0000000000011025	cmpl	$0x1000000, %eax
000000000001102a	jne	0x10ffc
000000000001102c	movl	-0x30(%rbp), %eax
000000000001102f	cmpl	-0x24(%rbp), %eax
0000000000011032	jne	0x10ffc
0000000000011034	movq	-0x3c(%rbp), %rcx
0000000000011038	movq	%rcx, (%r15)
000000000001103b	movl	%eax, (%r14)
000000000001103e	xorl	%ebx, %ebx
0000000000011040	jmp	0x11005
_mach_vm_read_list:
0000000000011042	pushq	%rbp
0000000000011043	movq	%rsp, %rbp
0000000000011046	pushq	%r15
0000000000011048	pushq	%r14
000000000001104a	pushq	%r12
000000000001104c	pushq	%rbx
000000000001104d	subq	$0x1040, %rsp
0000000000011054	movl	%edx, %r12d
0000000000011057	movq	%rsi, %r14
000000000001105a	movl	%edi, %r15d
000000000001105d	leaq	_NDR_record(%rip), %rax
0000000000011064	movq	(%rax), %rax
0000000000011067	leaq	-0x1030(%rbp), %rbx
000000000001106e	movq	%rax, -0x8(%rbx)
0000000000011072	movl	$0x1000, %edx
0000000000011077	movq	%rbx, %rdi
000000000001107a	callq	_memcpy
000000000001107f	movl	%r12d, 0x1000(%rbx)
0000000000011086	movl	$0x1513, -0x20(%rbx)
000000000001108d	movl	%r15d, -0x18(%rbx)
0000000000011091	callq	_mig_get_reply_port
0000000000011096	movl	%eax, -0x14(%rbx)
0000000000011099	movabsq	$0x12c500000000, %rcx
00000000000110a3	movq	%rcx, -0x10(%rbx)
00000000000110a7	movl	$0x0, (%rsp)
00000000000110ae	leaq	-0x1050(%rbp), %rdi
00000000000110b5	movl	$0x3, %esi
00000000000110ba	movl	$0x1024, %edx
00000000000110bf	movl	$0x102c, %ecx
00000000000110c4	xorl	%r9d, %r9d
00000000000110c7	movl	%eax, %r8d
00000000000110ca	callq	_mach_msg
00000000000110cf	movl	%eax, %ebx
00000000000110d1	leal	-0x10000002(%rbx), %eax
00000000000110d7	cmpl	$0xe, %eax
00000000000110da	ja	0x110f3
00000000000110dc	movl	$0x4003, %ecx
00000000000110e1	btl	%eax, %ecx
00000000000110e4	jae	0x110f3
00000000000110e6	movl	-0x1044(%rbp), %edi
00000000000110ec	callq	_mig_put_reply_port
00000000000110f1	jmp	0x1115d
00000000000110f3	testl	%ebx, %ebx
00000000000110f5	jne	0x11136
00000000000110f7	movl	-0x103c(%rbp), %eax
00000000000110fd	cmpl	$0x47, %eax
0000000000011100	je	0x11143
0000000000011102	cmpl	$0x1329, %eax
0000000000011107	jne	0x1114a
0000000000011109	movl	$0xfffffed4, %eax
000000000001110e	cmpl	$0x0, -0x1050(%rbp)
0000000000011115	js	0x1114f
0000000000011117	movl	-0x104c(%rbp), %ecx
000000000001111d	cmpl	$0x1024, %ecx
0000000000011123	je	0x1116f
0000000000011125	cmpl	$0x24, %ecx
0000000000011128	jne	0x1114f
000000000001112a	movl	-0x1030(%rbp), %ebx
0000000000011130	testl	%ebx, %ebx
0000000000011132	jne	0x11151
0000000000011134	jmp	0x1114f
0000000000011136	movl	-0x1044(%rbp), %edi
000000000001113c	callq	_mig_dealloc_reply_port
0000000000011141	jmp	0x1115d
0000000000011143	movl	$0xfffffecc, %eax
0000000000011148	jmp	0x1114f
000000000001114a	movl	$0xfffffed3, %eax
000000000001114f	movl	%eax, %ebx
0000000000011151	leaq	-0x1050(%rbp), %rdi
0000000000011158	callq	_mach_msg_destroy
000000000001115d	movl	%ebx, %eax
000000000001115f	addq	$0x1040, %rsp
0000000000011166	popq	%rbx
0000000000011167	popq	%r12
0000000000011169	popq	%r14
000000000001116b	popq	%r15
000000000001116d	popq	%rbp
000000000001116e	retq
000000000001116f	movl	-0x1030(%rbp), %ebx
0000000000011175	testl	%ebx, %ebx
0000000000011177	jne	0x11151
0000000000011179	leaq	-0x102c(%rbp), %rsi
0000000000011180	movl	$0x1000, %edx
0000000000011185	movq	%r14, %rdi
0000000000011188	callq	_memcpy
000000000001118d	xorl	%ebx, %ebx
000000000001118f	jmp	0x1115d
_mach_vm_write:
0000000000011191	pushq	%rbp
0000000000011192	movq	%rsp, %rbp
0000000000011195	pushq	%rbx
0000000000011196	subq	$0x48, %rsp
000000000001119a	leaq	-0x48(%rbp), %rbx
000000000001119e	movl	$0x1, 0x18(%rbx)
00000000000111a5	movq	%rdx, 0x1c(%rbx)
00000000000111a9	movl	%ecx, 0x28(%rbx)
00000000000111ac	movl	$0x1000100, 0x24(%rbx)
00000000000111b3	leaq	_NDR_record(%rip), %rax
00000000000111ba	movq	(%rax), %rax
00000000000111bd	movq	%rax, 0x2c(%rbx)
00000000000111c1	movq	%rsi, 0x34(%rbx)
00000000000111c5	movl	%ecx, 0x3c(%rbx)
00000000000111c8	movl	$0x80001513, (%rbx)
00000000000111ce	movl	%edi, 0x8(%rbx)
00000000000111d1	callq	_mig_get_reply_port
00000000000111d6	movl	%eax, 0xc(%rbx)
00000000000111d9	movabsq	$0x12c600000000, %rcx
00000000000111e3	movq	%rcx, 0x10(%rbx)
00000000000111e7	movl	$0x0, (%rsp)
00000000000111ee	movl	$0x3, %esi
00000000000111f3	movl	$0x40, %edx
00000000000111f8	movl	$0x2c, %ecx
00000000000111fd	xorl	%r9d, %r9d
0000000000011200	movq	%rbx, %rdi
0000000000011203	movl	%eax, %r8d
0000000000011206	callq	_mach_msg
000000000001120b	movl	%eax, %ebx
000000000001120d	leal	-0x10000002(%rbx), %eax
0000000000011213	cmpl	$0xe, %eax
0000000000011216	ja	0x1122c
0000000000011218	movl	$0x4003, %ecx
000000000001121d	btl	%eax, %ecx
0000000000011220	jae	0x1122c
0000000000011222	movl	-0x3c(%rbp), %edi
0000000000011225	callq	_mig_put_reply_port
000000000001122a	jmp	0x1127a
000000000001122c	testl	%ebx, %ebx
000000000001122e	jne	0x1125b
0000000000011230	movl	-0x34(%rbp), %eax
0000000000011233	cmpl	$0x47, %eax
0000000000011236	je	0x11265
0000000000011238	cmpl	$0x132a, %eax
000000000001123d	jne	0x1126c
000000000001123f	movl	$0xfffffed4, %ebx
0000000000011244	cmpl	$0x0, -0x48(%rbp)
0000000000011248	js	0x11271
000000000001124a	cmpl	$0x24, -0x44(%rbp)
000000000001124e	jne	0x11271
0000000000011250	movl	-0x28(%rbp), %ebx
0000000000011253	testl	%ebx, %ebx
0000000000011255	jne	0x11271
0000000000011257	xorl	%ebx, %ebx
0000000000011259	jmp	0x1127a
000000000001125b	movl	-0x3c(%rbp), %edi
000000000001125e	callq	_mig_dealloc_reply_port
0000000000011263	jmp	0x1127a
0000000000011265	movl	$0xfffffecc, %ebx
000000000001126a	jmp	0x11271
000000000001126c	movl	$0xfffffed3, %ebx
0000000000011271	leaq	-0x48(%rbp), %rdi
0000000000011275	callq	_mach_msg_destroy
000000000001127a	movl	%ebx, %eax
000000000001127c	addq	$0x48, %rsp
0000000000011280	popq	%rbx
0000000000011281	popq	%rbp
0000000000011282	retq
_mach_vm_copy:
0000000000011283	pushq	%rbp
0000000000011284	movq	%rsp, %rbp
0000000000011287	pushq	%rbx
0000000000011288	subq	$0x48, %rsp
000000000001128c	leaq	_NDR_record(%rip), %rax
0000000000011293	movq	(%rax), %rax
0000000000011296	leaq	-0x40(%rbp), %rbx
000000000001129a	movq	%rax, 0x18(%rbx)
000000000001129e	movq	%rsi, 0x20(%rbx)
00000000000112a2	movq	%rdx, 0x28(%rbx)
00000000000112a6	movq	%rcx, 0x30(%rbx)
00000000000112aa	movl	$0x1513, (%rbx)
00000000000112b0	movl	%edi, 0x8(%rbx)
00000000000112b3	callq	_mig_get_reply_port
00000000000112b8	movl	%eax, 0xc(%rbx)
00000000000112bb	movabsq	$0x12c700000000, %rcx
00000000000112c5	movq	%rcx, 0x10(%rbx)
00000000000112c9	movl	$0x0, (%rsp)
00000000000112d0	movl	$0x3, %esi
00000000000112d5	movl	$0x38, %edx
00000000000112da	movl	$0x2c, %ecx
00000000000112df	xorl	%r9d, %r9d
00000000000112e2	movq	%rbx, %rdi
00000000000112e5	movl	%eax, %r8d
00000000000112e8	callq	_mach_msg
00000000000112ed	movl	%eax, %ebx
00000000000112ef	leal	-0x10000002(%rbx), %eax
00000000000112f5	cmpl	$0xe, %eax
00000000000112f8	ja	0x1130e
00000000000112fa	movl	$0x4003, %ecx
00000000000112ff	btl	%eax, %ecx
0000000000011302	jae	0x1130e
0000000000011304	movl	-0x34(%rbp), %edi
0000000000011307	callq	_mig_put_reply_port
000000000001130c	jmp	0x1135c
000000000001130e	testl	%ebx, %ebx
0000000000011310	jne	0x1133d
0000000000011312	movl	-0x2c(%rbp), %eax
0000000000011315	cmpl	$0x47, %eax
0000000000011318	je	0x11347
000000000001131a	cmpl	$0x132b, %eax
000000000001131f	jne	0x1134e
0000000000011321	movl	$0xfffffed4, %ebx
0000000000011326	cmpl	$0x0, -0x40(%rbp)
000000000001132a	js	0x11353
000000000001132c	cmpl	$0x24, -0x3c(%rbp)
0000000000011330	jne	0x11353
0000000000011332	movl	-0x20(%rbp), %ebx
0000000000011335	testl	%ebx, %ebx
0000000000011337	jne	0x11353
0000000000011339	xorl	%ebx, %ebx
000000000001133b	jmp	0x1135c
000000000001133d	movl	-0x34(%rbp), %edi
0000000000011340	callq	_mig_dealloc_reply_port
0000000000011345	jmp	0x1135c
0000000000011347	movl	$0xfffffecc, %ebx
000000000001134c	jmp	0x11353
000000000001134e	movl	$0xfffffed3, %ebx
0000000000011353	leaq	-0x40(%rbp), %rdi
0000000000011357	callq	_mach_msg_destroy
000000000001135c	movl	%ebx, %eax
000000000001135e	addq	$0x48, %rsp
0000000000011362	popq	%rbx
0000000000011363	popq	%rbp
0000000000011364	retq
_mach_vm_msync:
0000000000011365	pushq	%rbp
0000000000011366	movq	%rsp, %rbp
0000000000011369	pushq	%rbx
000000000001136a	subq	$0x48, %rsp
000000000001136e	leaq	_NDR_record(%rip), %rax
0000000000011375	movq	(%rax), %rax
0000000000011378	leaq	-0x40(%rbp), %rbx
000000000001137c	movq	%rax, 0x18(%rbx)
0000000000011380	movq	%rsi, 0x20(%rbx)
0000000000011384	movq	%rdx, 0x28(%rbx)
0000000000011388	movl	%ecx, 0x30(%rbx)
000000000001138b	movl	$0x1513, (%rbx)
0000000000011391	movl	%edi, 0x8(%rbx)
0000000000011394	callq	_mig_get_reply_port
0000000000011399	movl	%eax, 0xc(%rbx)
000000000001139c	movabsq	$0x12c900000000, %rcx
00000000000113a6	movq	%rcx, 0x10(%rbx)
00000000000113aa	movl	$0x0, (%rsp)
00000000000113b1	movl	$0x3, %esi
00000000000113b6	movl	$0x34, %edx
00000000000113bb	movl	$0x2c, %ecx
00000000000113c0	xorl	%r9d, %r9d
00000000000113c3	movq	%rbx, %rdi
00000000000113c6	movl	%eax, %r8d
00000000000113c9	callq	_mach_msg
00000000000113ce	movl	%eax, %ebx
00000000000113d0	leal	-0x10000002(%rbx), %eax
00000000000113d6	cmpl	$0xe, %eax
00000000000113d9	ja	0x113ef
00000000000113db	movl	$0x4003, %ecx
00000000000113e0	btl	%eax, %ecx
00000000000113e3	jae	0x113ef
00000000000113e5	movl	-0x34(%rbp), %edi
00000000000113e8	callq	_mig_put_reply_port
00000000000113ed	jmp	0x1143d
00000000000113ef	testl	%ebx, %ebx
00000000000113f1	jne	0x1141e
00000000000113f3	movl	-0x2c(%rbp), %eax
00000000000113f6	cmpl	$0x47, %eax
00000000000113f9	je	0x11428
00000000000113fb	cmpl	$0x132d, %eax
0000000000011400	jne	0x1142f
0000000000011402	movl	$0xfffffed4, %ebx
0000000000011407	cmpl	$0x0, -0x40(%rbp)
000000000001140b	js	0x11434
000000000001140d	cmpl	$0x24, -0x3c(%rbp)
0000000000011411	jne	0x11434
0000000000011413	movl	-0x20(%rbp), %ebx
0000000000011416	testl	%ebx, %ebx
0000000000011418	jne	0x11434
000000000001141a	xorl	%ebx, %ebx
000000000001141c	jmp	0x1143d
000000000001141e	movl	-0x34(%rbp), %edi
0000000000011421	callq	_mig_dealloc_reply_port
0000000000011426	jmp	0x1143d
0000000000011428	movl	$0xfffffecc, %ebx
000000000001142d	jmp	0x11434
000000000001142f	movl	$0xfffffed3, %ebx
0000000000011434	leaq	-0x40(%rbp), %rdi
0000000000011438	callq	_mach_msg_destroy
000000000001143d	movl	%ebx, %eax
000000000001143f	addq	$0x48, %rsp
0000000000011443	popq	%rbx
0000000000011444	popq	%rbp
0000000000011445	retq
_mach_vm_behavior_set:
0000000000011446	pushq	%rbp
0000000000011447	movq	%rsp, %rbp
000000000001144a	pushq	%rbx
000000000001144b	subq	$0x48, %rsp
000000000001144f	leaq	_NDR_record(%rip), %rax
0000000000011456	movq	(%rax), %rax
0000000000011459	leaq	-0x40(%rbp), %rbx
000000000001145d	movq	%rax, 0x18(%rbx)
0000000000011461	movq	%rsi, 0x20(%rbx)
0000000000011465	movq	%rdx, 0x28(%rbx)
0000000000011469	movl	%ecx, 0x30(%rbx)
000000000001146c	movl	$0x1513, (%rbx)
0000000000011472	movl	%edi, 0x8(%rbx)
0000000000011475	callq	_mig_get_reply_port
000000000001147a	movl	%eax, 0xc(%rbx)
000000000001147d	movabsq	$0x12ca00000000, %rcx
0000000000011487	movq	%rcx, 0x10(%rbx)
000000000001148b	movl	$0x0, (%rsp)
0000000000011492	movl	$0x3, %esi
0000000000011497	movl	$0x34, %edx
000000000001149c	movl	$0x2c, %ecx
00000000000114a1	xorl	%r9d, %r9d
00000000000114a4	movq	%rbx, %rdi
00000000000114a7	movl	%eax, %r8d
00000000000114aa	callq	_mach_msg
00000000000114af	movl	%eax, %ebx
00000000000114b1	leal	-0x10000002(%rbx), %eax
00000000000114b7	cmpl	$0xe, %eax
00000000000114ba	ja	0x114d0
00000000000114bc	movl	$0x4003, %ecx
00000000000114c1	btl	%eax, %ecx
00000000000114c4	jae	0x114d0
00000000000114c6	movl	-0x34(%rbp), %edi
00000000000114c9	callq	_mig_put_reply_port
00000000000114ce	jmp	0x1151e
00000000000114d0	testl	%ebx, %ebx
00000000000114d2	jne	0x114ff
00000000000114d4	movl	-0x2c(%rbp), %eax
00000000000114d7	cmpl	$0x47, %eax
00000000000114da	je	0x11509
00000000000114dc	cmpl	$0x132e, %eax
00000000000114e1	jne	0x11510
00000000000114e3	movl	$0xfffffed4, %ebx
00000000000114e8	cmpl	$0x0, -0x40(%rbp)
00000000000114ec	js	0x11515
00000000000114ee	cmpl	$0x24, -0x3c(%rbp)
00000000000114f2	jne	0x11515
00000000000114f4	movl	-0x20(%rbp), %ebx
00000000000114f7	testl	%ebx, %ebx
00000000000114f9	jne	0x11515
00000000000114fb	xorl	%ebx, %ebx
00000000000114fd	jmp	0x1151e
00000000000114ff	movl	-0x34(%rbp), %edi
0000000000011502	callq	_mig_dealloc_reply_port
0000000000011507	jmp	0x1151e
0000000000011509	movl	$0xfffffecc, %ebx
000000000001150e	jmp	0x11515
0000000000011510	movl	$0xfffffed3, %ebx
0000000000011515	leaq	-0x40(%rbp), %rdi
0000000000011519	callq	_mach_msg_destroy
000000000001151e	movl	%ebx, %eax
0000000000011520	addq	$0x48, %rsp
0000000000011524	popq	%rbx
0000000000011525	popq	%rbp
0000000000011526	retq
_mach_vm_machine_attribute:
0000000000011527	pushq	%rbp
0000000000011528	movq	%rsp, %rbp
000000000001152b	pushq	%r14
000000000001152d	pushq	%rbx
000000000001152e	subq	$0x40, %rsp
0000000000011532	movq	%r8, %r14
0000000000011535	leaq	_NDR_record(%rip), %rax
000000000001153c	movq	(%rax), %rax
000000000001153f	leaq	-0x48(%rbp), %rbx
0000000000011543	movq	%rax, 0x18(%rbx)
0000000000011547	movq	%rsi, 0x20(%rbx)
000000000001154b	movq	%rdx, 0x28(%rbx)
000000000001154f	movl	%ecx, 0x30(%rbx)
0000000000011552	movl	(%r8), %eax
0000000000011555	movl	%eax, 0x34(%rbx)
0000000000011558	movl	$0x1513, (%rbx)
000000000001155e	movl	%edi, 0x8(%rbx)
0000000000011561	callq	_mig_get_reply_port
0000000000011566	movl	%eax, 0xc(%rbx)
0000000000011569	movabsq	$0x12cc00000000, %rcx
0000000000011573	movq	%rcx, 0x10(%rbx)
0000000000011577	movl	$0x0, (%rsp)
000000000001157e	movl	$0x3, %esi
0000000000011583	movl	$0x38, %edx
0000000000011588	movl	$0x30, %ecx
000000000001158d	xorl	%r9d, %r9d
0000000000011590	movq	%rbx, %rdi
0000000000011593	movl	%eax, %r8d
0000000000011596	callq	_mach_msg
000000000001159b	movl	%eax, %ebx
000000000001159d	leal	-0x10000002(%rbx), %eax
00000000000115a3	cmpl	$0xe, %eax
00000000000115a6	ja	0x115bc
00000000000115a8	movl	$0x4003, %ecx
00000000000115ad	btl	%eax, %ecx
00000000000115b0	jae	0x115bc
00000000000115b2	movl	-0x3c(%rbp), %edi
00000000000115b5	callq	_mig_put_reply_port
00000000000115ba	jmp	0x11611
00000000000115bc	testl	%ebx, %ebx
00000000000115be	jne	0x115f0
00000000000115c0	movl	-0x34(%rbp), %eax
00000000000115c3	cmpl	$0x47, %eax
00000000000115c6	je	0x115fa
00000000000115c8	cmpl	$0x1330, %eax
00000000000115cd	jne	0x11601
00000000000115cf	movl	$0xfffffed4, %eax
00000000000115d4	cmpl	$0x0, -0x48(%rbp)
00000000000115d8	js	0x11606
00000000000115da	movl	-0x44(%rbp), %ecx
00000000000115dd	cmpl	$0x28, %ecx
00000000000115e0	je	0x1161c
00000000000115e2	cmpl	$0x24, %ecx
00000000000115e5	jne	0x11606
00000000000115e7	movl	-0x28(%rbp), %ebx
00000000000115ea	testl	%ebx, %ebx
00000000000115ec	jne	0x11608
00000000000115ee	jmp	0x11606
00000000000115f0	movl	-0x3c(%rbp), %edi
00000000000115f3	callq	_mig_dealloc_reply_port
00000000000115f8	jmp	0x11611
00000000000115fa	movl	$0xfffffecc, %eax
00000000000115ff	jmp	0x11606
0000000000011601	movl	$0xfffffed3, %eax
0000000000011606	movl	%eax, %ebx
0000000000011608	leaq	-0x48(%rbp), %rdi
000000000001160c	callq	_mach_msg_destroy
0000000000011611	movl	%ebx, %eax
0000000000011613	addq	$0x40, %rsp
0000000000011617	popq	%rbx
0000000000011618	popq	%r14
000000000001161a	popq	%rbp
000000000001161b	retq
000000000001161c	movl	-0x28(%rbp), %ebx
000000000001161f	testl	%ebx, %ebx
0000000000011621	jne	0x11608
0000000000011623	movl	-0x24(%rbp), %eax
0000000000011626	movl	%eax, (%r14)
0000000000011629	xorl	%ebx, %ebx
000000000001162b	jmp	0x11611
__kernelrpc_mach_vm_remap:
000000000001162d	pushq	%rbp
000000000001162e	movq	%rsp, %rbp
0000000000011631	pushq	%r14
0000000000011633	pushq	%rbx
0000000000011634	subq	$0x70, %rsp
0000000000011638	movq	%rsi, %r14
000000000001163b	movl	0x30(%rbp), %r10d
000000000001163f	movl	0x18(%rbp), %r11d
0000000000011643	movq	0x10(%rbp), %rax
0000000000011647	leaq	-0x70(%rbp), %rbx
000000000001164b	movl	$0x1, 0x18(%rbx)
0000000000011652	movl	%r9d, 0x1c(%rbx)
0000000000011656	movl	$0x130000, 0x24(%rbx)
000000000001165d	leaq	_NDR_record(%rip), %rsi
0000000000011664	movq	(%rsi), %rsi
0000000000011667	movq	%rsi, 0x28(%rbx)
000000000001166b	movq	(%r14), %rsi
000000000001166e	movq	%rsi, 0x30(%rbx)
0000000000011672	movq	%rdx, 0x38(%rbx)
0000000000011676	movq	%rcx, 0x40(%rbx)
000000000001167a	movl	%r8d, 0x48(%rbx)
000000000001167e	movq	%rax, 0x4c(%rbx)
0000000000011682	movl	%r11d, 0x54(%rbx)
0000000000011686	movl	%r10d, 0x58(%rbx)
000000000001168a	movl	$0x80001513, (%rbx)
0000000000011690	movl	%edi, 0x8(%rbx)
0000000000011693	callq	_mig_get_reply_port
0000000000011698	movl	%eax, 0xc(%rbx)
000000000001169b	movabsq	$0x12cd00000000, %rcx
00000000000116a5	movq	%rcx, 0x10(%rbx)
00000000000116a9	movl	$0x0, (%rsp)
00000000000116b0	movl	$0x3, %esi
00000000000116b5	movl	$0x5c, %edx
00000000000116ba	movl	$0x3c, %ecx
00000000000116bf	xorl	%r9d, %r9d
00000000000116c2	movq	%rbx, %rdi
00000000000116c5	movl	%eax, %r8d
00000000000116c8	callq	_mach_msg
00000000000116cd	movl	%eax, %ebx
00000000000116cf	leal	-0x10000002(%rbx), %eax
00000000000116d5	cmpl	$0xe, %eax
00000000000116d8	ja	0x116ee
00000000000116da	movl	$0x4003, %ecx
00000000000116df	btl	%eax, %ecx
00000000000116e2	jae	0x116ee
00000000000116e4	movl	-0x64(%rbp), %edi
00000000000116e7	callq	_mig_put_reply_port
00000000000116ec	jmp	0x11743
00000000000116ee	testl	%ebx, %ebx
00000000000116f0	jne	0x11722
00000000000116f2	movl	-0x5c(%rbp), %eax
00000000000116f5	cmpl	$0x47, %eax
00000000000116f8	je	0x1172c
00000000000116fa	cmpl	$0x1331, %eax
00000000000116ff	jne	0x11733
0000000000011701	movl	$0xfffffed4, %eax
0000000000011706	cmpl	$0x0, -0x70(%rbp)
000000000001170a	js	0x11738
000000000001170c	movl	-0x6c(%rbp), %ecx
000000000001170f	cmpl	$0x34, %ecx
0000000000011712	je	0x1174e
0000000000011714	cmpl	$0x24, %ecx
0000000000011717	jne	0x11738
0000000000011719	movl	-0x50(%rbp), %ebx
000000000001171c	testl	%ebx, %ebx
000000000001171e	jne	0x1173a
0000000000011720	jmp	0x11738
0000000000011722	movl	-0x64(%rbp), %edi
0000000000011725	callq	_mig_dealloc_reply_port
000000000001172a	jmp	0x11743
000000000001172c	movl	$0xfffffecc, %eax
0000000000011731	jmp	0x11738
0000000000011733	movl	$0xfffffed3, %eax
0000000000011738	movl	%eax, %ebx
000000000001173a	leaq	-0x70(%rbp), %rdi
000000000001173e	callq	_mach_msg_destroy
0000000000011743	movl	%ebx, %eax
0000000000011745	addq	$0x70, %rsp
0000000000011749	popq	%rbx
000000000001174a	popq	%r14
000000000001174c	popq	%rbp
000000000001174d	retq
000000000001174e	movl	-0x50(%rbp), %ebx
0000000000011751	testl	%ebx, %ebx
0000000000011753	jne	0x1173a
0000000000011755	movq	0x28(%rbp), %rax
0000000000011759	movq	0x20(%rbp), %rcx
000000000001175d	movq	-0x4c(%rbp), %rdx
0000000000011761	movq	%rdx, (%r14)
0000000000011764	movl	-0x44(%rbp), %edx
0000000000011767	movl	%edx, (%rcx)
0000000000011769	movl	-0x40(%rbp), %ecx
000000000001176c	movl	%ecx, (%rax)
000000000001176e	xorl	%ebx, %ebx
0000000000011770	jmp	0x11743
_mach_vm_page_query:
0000000000011772	pushq	%rbp
0000000000011773	movq	%rsp, %rbp
0000000000011776	pushq	%r15
0000000000011778	pushq	%r14
000000000001177a	pushq	%rbx
000000000001177b	subq	$0x48, %rsp
000000000001177f	movq	%rcx, %r14
0000000000011782	movq	%rdx, %r15
0000000000011785	leaq	_NDR_record(%rip), %rax
000000000001178c	movq	(%rax), %rax
000000000001178f	leaq	-0x50(%rbp), %rbx
0000000000011793	movq	%rax, 0x18(%rbx)
0000000000011797	movq	%rsi, 0x20(%rbx)
000000000001179b	movl	$0x1513, (%rbx)
00000000000117a1	movl	%edi, 0x8(%rbx)
00000000000117a4	callq	_mig_get_reply_port
00000000000117a9	movl	%eax, 0xc(%rbx)
00000000000117ac	movabsq	$0x12ce00000000, %rcx
00000000000117b6	movq	%rcx, 0x10(%rbx)
00000000000117ba	movl	$0x0, (%rsp)
00000000000117c1	movl	$0x3, %esi
00000000000117c6	movl	$0x28, %edx
00000000000117cb	movl	$0x34, %ecx
00000000000117d0	xorl	%r9d, %r9d
00000000000117d3	movq	%rbx, %rdi
00000000000117d6	movl	%eax, %r8d
00000000000117d9	callq	_mach_msg
00000000000117de	movl	%eax, %ebx
00000000000117e0	leal	-0x10000002(%rbx), %eax
00000000000117e6	cmpl	$0xe, %eax
00000000000117e9	ja	0x117ff
00000000000117eb	movl	$0x4003, %ecx
00000000000117f0	btl	%eax, %ecx
00000000000117f3	jae	0x117ff
00000000000117f5	movl	-0x44(%rbp), %edi
00000000000117f8	callq	_mig_put_reply_port
00000000000117fd	jmp	0x11854
00000000000117ff	testl	%ebx, %ebx
0000000000011801	jne	0x11833
0000000000011803	movl	-0x3c(%rbp), %eax
0000000000011806	cmpl	$0x47, %eax
0000000000011809	je	0x1183d
000000000001180b	cmpl	$0x1332, %eax
0000000000011810	jne	0x11844
0000000000011812	movl	$0xfffffed4, %eax
0000000000011817	cmpl	$0x0, -0x50(%rbp)
000000000001181b	js	0x11849
000000000001181d	movl	-0x4c(%rbp), %ecx
0000000000011820	cmpl	$0x2c, %ecx
0000000000011823	je	0x11861
0000000000011825	cmpl	$0x24, %ecx
0000000000011828	jne	0x11849
000000000001182a	movl	-0x30(%rbp), %ebx
000000000001182d	testl	%ebx, %ebx
000000000001182f	jne	0x1184b
0000000000011831	jmp	0x11849
0000000000011833	movl	-0x44(%rbp), %edi
0000000000011836	callq	_mig_dealloc_reply_port
000000000001183b	jmp	0x11854
000000000001183d	movl	$0xfffffecc, %eax
0000000000011842	jmp	0x11849
0000000000011844	movl	$0xfffffed3, %eax
0000000000011849	movl	%eax, %ebx
000000000001184b	leaq	-0x50(%rbp), %rdi
000000000001184f	callq	_mach_msg_destroy
0000000000011854	movl	%ebx, %eax
0000000000011856	addq	$0x48, %rsp
000000000001185a	popq	%rbx
000000000001185b	popq	%r14
000000000001185d	popq	%r15
000000000001185f	popq	%rbp
0000000000011860	retq
0000000000011861	movl	-0x30(%rbp), %ebx
0000000000011864	testl	%ebx, %ebx
0000000000011866	jne	0x1184b
0000000000011868	movl	-0x2c(%rbp), %eax
000000000001186b	movl	%eax, (%r15)
000000000001186e	movl	-0x28(%rbp), %eax
0000000000011871	movl	%eax, (%r14)
0000000000011874	xorl	%ebx, %ebx
0000000000011876	jmp	0x11854
_mach_make_memory_entry:
0000000000011878	pushq	%rbp
0000000000011879	movq	%rsp, %rbp
000000000001187c	pushq	%r15
000000000001187e	pushq	%r14
0000000000011880	pushq	%rbx
0000000000011881	subq	$0x58, %rsp
0000000000011885	movq	%r8, %r14
0000000000011888	movq	%rsi, %r15
000000000001188b	leaq	-0x60(%rbp), %rbx
000000000001188f	movl	$0x1, 0x18(%rbx)
0000000000011896	movl	%r9d, 0x1c(%rbx)
000000000001189a	movl	$0x130000, 0x24(%rbx)
00000000000118a1	leaq	_NDR_record(%rip), %rax
00000000000118a8	movq	(%rax), %rax
00000000000118ab	movq	%rax, 0x28(%rbx)
00000000000118af	movq	(%rsi), %rax
00000000000118b2	movq	%rax, 0x30(%rbx)
00000000000118b6	movq	%rdx, 0x38(%rbx)
00000000000118ba	movl	%ecx, 0x40(%rbx)
00000000000118bd	movl	$0x80001513, (%rbx)
00000000000118c3	movl	%edi, 0x8(%rbx)
00000000000118c6	callq	_mig_get_reply_port
00000000000118cb	movl	%eax, 0xc(%rbx)
00000000000118ce	movabsq	$0x12d100000000, %rcx
00000000000118d8	movq	%rcx, 0x10(%rbx)
00000000000118dc	movl	$0x0, (%rsp)
00000000000118e3	movl	$0x3, %esi
00000000000118e8	movl	$0x44, %edx
00000000000118ed	movl	$0x40, %ecx
00000000000118f2	xorl	%r9d, %r9d
00000000000118f5	movq	%rbx, %rdi
00000000000118f8	movl	%eax, %r8d
00000000000118fb	callq	_mach_msg
0000000000011900	movl	%eax, %ebx
0000000000011902	leal	-0x10000002(%rbx), %eax
0000000000011908	cmpl	$0xe, %eax
000000000001190b	ja	0x11921
000000000001190d	movl	$0x4003, %ecx
0000000000011912	btl	%eax, %ecx
0000000000011915	jae	0x11921
0000000000011917	movl	-0x54(%rbp), %edi
000000000001191a	callq	_mig_put_reply_port
000000000001191f	jmp	0x11975
0000000000011921	testl	%ebx, %ebx
0000000000011923	jne	0x11956
0000000000011925	movl	-0x4c(%rbp), %eax
0000000000011928	cmpl	$0x47, %eax
000000000001192b	je	0x11960
000000000001192d	cmpl	$0x1335, %eax
0000000000011932	jne	0x11967
0000000000011934	cmpl	$0x0, -0x60(%rbp)
0000000000011938	movl	-0x5c(%rbp), %eax
000000000001193b	movl	$0xfffffed4, %ebx
0000000000011940	js	0x11982
0000000000011942	cmpl	$0x24, %eax
0000000000011945	jne	0x1196c
0000000000011947	movl	-0x40(%rbp), %eax
000000000001194a	testl	%eax, %eax
000000000001194c	movl	$0xfffffed4, %ebx
0000000000011951	cmovnel	%eax, %ebx
0000000000011954	jmp	0x1196c
0000000000011956	movl	-0x54(%rbp), %edi
0000000000011959	callq	_mig_dealloc_reply_port
000000000001195e	jmp	0x11975
0000000000011960	movl	$0xfffffecc, %ebx
0000000000011965	jmp	0x1196c
0000000000011967	movl	$0xfffffed3, %ebx
000000000001196c	leaq	-0x60(%rbp), %rdi
0000000000011970	callq	_mach_msg_destroy
0000000000011975	movl	%ebx, %eax
0000000000011977	addq	$0x58, %rsp
000000000001197b	popq	%rbx
000000000001197c	popq	%r14
000000000001197e	popq	%r15
0000000000011980	popq	%rbp
0000000000011981	retq
0000000000011982	cmpl	$0x38, %eax
0000000000011985	jne	0x1196c
0000000000011987	cmpl	$0x1, -0x48(%rbp)
000000000001198b	jne	0x1196c
000000000001198d	movl	$0xffff0000, %eax
0000000000011992	andl	-0x3c(%rbp), %eax
0000000000011995	cmpl	$0x110000, %eax
000000000001199a	jne	0x1196c
000000000001199c	movq	-0x30(%rbp), %rax
00000000000119a0	movq	%rax, (%r15)
00000000000119a3	movl	-0x44(%rbp), %eax
00000000000119a6	movl	%eax, (%r14)
00000000000119a9	xorl	%ebx, %ebx
00000000000119ab	jmp	0x11975
__kernelrpc_mach_vm_purgable_control:
00000000000119ad	pushq	%rbp
00000000000119ae	movq	%rsp, %rbp
00000000000119b1	pushq	%r14
00000000000119b3	pushq	%rbx
00000000000119b4	subq	$0x40, %rsp
00000000000119b8	movq	%rcx, %r14
00000000000119bb	leaq	_NDR_record(%rip), %rax
00000000000119c2	movq	(%rax), %rax
00000000000119c5	leaq	-0x40(%rbp), %rbx
00000000000119c9	movq	%rax, 0x18(%rbx)
00000000000119cd	movq	%rsi, 0x20(%rbx)
00000000000119d1	movl	%edx, 0x28(%rbx)
00000000000119d4	movl	(%rcx), %eax
00000000000119d6	movl	%eax, 0x2c(%rbx)
00000000000119d9	movl	$0x1513, (%rbx)
00000000000119df	movl	%edi, 0x8(%rbx)
00000000000119e2	callq	_mig_get_reply_port
00000000000119e7	movl	%eax, 0xc(%rbx)
00000000000119ea	movabsq	$0x12d200000000, %rcx
00000000000119f4	movq	%rcx, 0x10(%rbx)
00000000000119f8	movl	$0x0, (%rsp)
00000000000119ff	movl	$0x3, %esi
0000000000011a04	movl	$0x30, %edx
0000000000011a09	movl	$0x30, %ecx
0000000000011a0e	xorl	%r9d, %r9d
0000000000011a11	movq	%rbx, %rdi
0000000000011a14	movl	%eax, %r8d
0000000000011a17	callq	_mach_msg
0000000000011a1c	movl	%eax, %ebx
0000000000011a1e	leal	-0x10000002(%rbx), %eax
0000000000011a24	cmpl	$0xe, %eax
0000000000011a27	ja	0x11a3d
0000000000011a29	movl	$0x4003, %ecx
0000000000011a2e	btl	%eax, %ecx
0000000000011a31	jae	0x11a3d
0000000000011a33	movl	-0x34(%rbp), %edi
0000000000011a36	callq	_mig_put_reply_port
0000000000011a3b	jmp	0x11a92
0000000000011a3d	testl	%ebx, %ebx
0000000000011a3f	jne	0x11a71
0000000000011a41	movl	-0x2c(%rbp), %eax
0000000000011a44	cmpl	$0x47, %eax
0000000000011a47	je	0x11a7b
0000000000011a49	cmpl	$0x1336, %eax
0000000000011a4e	jne	0x11a82
0000000000011a50	movl	$0xfffffed4, %eax
0000000000011a55	cmpl	$0x0, -0x40(%rbp)
0000000000011a59	js	0x11a87
0000000000011a5b	movl	-0x3c(%rbp), %ecx
0000000000011a5e	cmpl	$0x28, %ecx
0000000000011a61	je	0x11a9d
0000000000011a63	cmpl	$0x24, %ecx
0000000000011a66	jne	0x11a87
0000000000011a68	movl	-0x20(%rbp), %ebx
0000000000011a6b	testl	%ebx, %ebx
0000000000011a6d	jne	0x11a89
0000000000011a6f	jmp	0x11a87
0000000000011a71	movl	-0x34(%rbp), %edi
0000000000011a74	callq	_mig_dealloc_reply_port
0000000000011a79	jmp	0x11a92
0000000000011a7b	movl	$0xfffffecc, %eax
0000000000011a80	jmp	0x11a87
0000000000011a82	movl	$0xfffffed3, %eax
0000000000011a87	movl	%eax, %ebx
0000000000011a89	leaq	-0x40(%rbp), %rdi
0000000000011a8d	callq	_mach_msg_destroy
0000000000011a92	movl	%ebx, %eax
0000000000011a94	addq	$0x40, %rsp
0000000000011a98	popq	%rbx
0000000000011a99	popq	%r14
0000000000011a9b	popq	%rbp
0000000000011a9c	retq
0000000000011a9d	movl	-0x20(%rbp), %ebx
0000000000011aa0	testl	%ebx, %ebx
0000000000011aa2	jne	0x11a89
0000000000011aa4	movl	-0x1c(%rbp), %eax
0000000000011aa7	movl	%eax, (%r14)
0000000000011aaa	xorl	%ebx, %ebx
0000000000011aac	jmp	0x11a92
_mach_vm_page_info:
0000000000011aae	pushq	%rbp
0000000000011aaf	movq	%rsp, %rbp
0000000000011ab2	pushq	%r15
0000000000011ab4	pushq	%r14
0000000000011ab6	pushq	%r12
0000000000011ab8	pushq	%rbx
0000000000011ab9	subq	$0xc0, %rsp
0000000000011ac0	movq	%r8, %r15
0000000000011ac3	leaq	_NDR_record(%rip), %rax
0000000000011aca	movq	(%rax), %rax
0000000000011acd	leaq	-0xd0(%rbp), %rbx
0000000000011ad4	movq	%rax, 0x18(%rbx)
0000000000011ad8	movq	%rsi, 0x20(%rbx)
0000000000011adc	movl	%edx, 0x28(%rbx)
0000000000011adf	movl	(%r8), %eax
0000000000011ae2	movl	$0x20, %edx
0000000000011ae7	cmpl	%edx, %eax
0000000000011ae9	cmovbl	%eax, %edx
0000000000011aec	movq	%rcx, %r14
0000000000011aef	movl	%edx, 0x2c(%rbx)
0000000000011af2	movl	$0x1513, (%rbx)
0000000000011af8	movl	%edi, 0x8(%rbx)
0000000000011afb	callq	_mig_get_reply_port
0000000000011b00	movl	%eax, 0xc(%rbx)
0000000000011b03	movabsq	$0x12d300000000, %rcx
0000000000011b0d	movq	%rcx, 0x10(%rbx)
0000000000011b11	movl	$0x0, (%rsp)
0000000000011b18	movl	$0x3, %esi
0000000000011b1d	movl	$0x30, %edx
0000000000011b22	movl	$0xb0, %ecx
0000000000011b27	xorl	%r9d, %r9d
0000000000011b2a	movq	%rbx, %rdi
0000000000011b2d	movl	%eax, %r8d
0000000000011b30	callq	_mach_msg
0000000000011b35	movl	%eax, %ebx
0000000000011b37	leal	-0x10000002(%rbx), %eax
0000000000011b3d	cmpl	$0xe, %eax
0000000000011b40	ja	0x11b5c
0000000000011b42	movl	$0x4003, %ecx
0000000000011b47	btl	%eax, %ecx
0000000000011b4a	jae	0x11b5c
0000000000011b4c	movl	-0xc4(%rbp), %edi
0000000000011b52	callq	_mig_put_reply_port
0000000000011b57	jmp	0x11c30
0000000000011b5c	testl	%ebx, %ebx
0000000000011b5e	jne	0x11bb0
0000000000011b60	movl	-0xbc(%rbp), %eax
0000000000011b66	cmpl	$0x47, %eax
0000000000011b69	je	0x11bbd
0000000000011b6b	cmpl	$0x1337, %eax
0000000000011b70	jne	0x11bc4
0000000000011b72	cmpl	$0x0, -0xd0(%rbp)
0000000000011b79	js	0x11c1f
0000000000011b7f	movl	-0xcc(%rbp), %eax
0000000000011b85	leal	-0x28(%rax), %ecx
0000000000011b88	cmpl	$0x81, %ecx
0000000000011b8e	jb	0x11bcb
0000000000011b90	movl	$0xfffffed4, %ebx
0000000000011b95	cmpl	$0x24, %eax
0000000000011b98	jne	0x11c24
0000000000011b9e	movl	-0xb0(%rbp), %eax
0000000000011ba4	testl	%eax, %eax
0000000000011ba6	movl	$0xfffffed4, %ebx
0000000000011bab	cmovnel	%eax, %ebx
0000000000011bae	jmp	0x11c24
0000000000011bb0	movl	-0xc4(%rbp), %edi
0000000000011bb6	callq	_mig_dealloc_reply_port
0000000000011bbb	jmp	0x11c30
0000000000011bbd	movl	$0xfffffecc, %ebx
0000000000011bc2	jmp	0x11c24
0000000000011bc4	movl	$0xfffffed3, %ebx
0000000000011bc9	jmp	0x11c24
0000000000011bcb	movl	-0xb0(%rbp), %ebx
0000000000011bd1	testl	%ebx, %ebx
0000000000011bd3	jne	0x11c24
0000000000011bd5	movl	-0xac(%rbp), %r12d
0000000000011bdc	cmpl	$0x20, %r12d
0000000000011be0	ja	0x11c1f
0000000000011be2	shrl	$0x2, %ecx
0000000000011be5	cmpl	%r12d, %ecx
0000000000011be8	jb	0x11c1f
0000000000011bea	leal	0x28(,%r12,4), %ecx
0000000000011bf2	movl	$0xfffffed4, %ebx
0000000000011bf7	cmpl	%ecx, %eax
0000000000011bf9	jne	0x11c24
0000000000011bfb	leaq	-0xa8(%rbp), %rsi
0000000000011c02	movl	(%r15), %edx
0000000000011c05	cmpl	%edx, %r12d
0000000000011c08	jbe	0x11c42
0000000000011c0a	shll	$0x2, %edx
0000000000011c0d	movq	%r14, %rdi
0000000000011c10	callq	_memcpy
0000000000011c15	movl	%r12d, (%r15)
0000000000011c18	movl	$0xfffffecd, %ebx
0000000000011c1d	jmp	0x11c30
0000000000011c1f	movl	$0xfffffed4, %ebx
0000000000011c24	leaq	-0xd0(%rbp), %rdi
0000000000011c2b	callq	_mach_msg_destroy
0000000000011c30	movl	%ebx, %eax
0000000000011c32	addq	$0xc0, %rsp
0000000000011c39	popq	%rbx
0000000000011c3a	popq	%r12
0000000000011c3c	popq	%r14
0000000000011c3e	popq	%r15
0000000000011c40	popq	%rbp
0000000000011c41	retq
0000000000011c42	leal	(,%r12,4), %eax
0000000000011c4a	movl	%eax, %edx
0000000000011c4c	movq	%r14, %rdi
0000000000011c4f	callq	_memcpy
0000000000011c54	movl	%r12d, (%r15)
0000000000011c57	xorl	%ebx, %ebx
0000000000011c59	jmp	0x11c30
_mach_vm_page_range_query:
0000000000011c5b	pushq	%rbp
0000000000011c5c	movq	%rsp, %rbp
0000000000011c5f	pushq	%r14
0000000000011c61	pushq	%rbx
0000000000011c62	subq	$0x50, %rsp
0000000000011c66	movq	%r8, %r14
0000000000011c69	leaq	_NDR_record(%rip), %rax
0000000000011c70	movq	(%rax), %rax
0000000000011c73	leaq	-0x50(%rbp), %rbx
0000000000011c77	movq	%rax, 0x18(%rbx)
0000000000011c7b	movq	%rsi, 0x20(%rbx)
0000000000011c7f	movq	%rdx, 0x28(%rbx)
0000000000011c83	movq	%rcx, 0x30(%rbx)
0000000000011c87	movq	(%r8), %rax
0000000000011c8a	movq	%rax, 0x38(%rbx)
0000000000011c8e	movl	$0x1513, (%rbx)
0000000000011c94	movl	%edi, 0x8(%rbx)
0000000000011c97	callq	_mig_get_reply_port
0000000000011c9c	movl	%eax, 0xc(%rbx)
0000000000011c9f	movabsq	$0x12d400000000, %rcx
0000000000011ca9	movq	%rcx, 0x10(%rbx)
0000000000011cad	movl	$0x0, (%rsp)
0000000000011cb4	movl	$0x3, %esi
0000000000011cb9	movl	$0x40, %edx
0000000000011cbe	movl	$0x34, %ecx
0000000000011cc3	xorl	%r9d, %r9d
0000000000011cc6	movq	%rbx, %rdi
0000000000011cc9	movl	%eax, %r8d
0000000000011ccc	callq	_mach_msg
0000000000011cd1	movl	%eax, %ebx
0000000000011cd3	leal	-0x10000002(%rbx), %eax
0000000000011cd9	cmpl	$0xe, %eax
0000000000011cdc	ja	0x11cf2
0000000000011cde	movl	$0x4003, %ecx
0000000000011ce3	btl	%eax, %ecx
0000000000011ce6	jae	0x11cf2
0000000000011ce8	movl	-0x44(%rbp), %edi
0000000000011ceb	callq	_mig_put_reply_port
0000000000011cf0	jmp	0x11d47
0000000000011cf2	testl	%ebx, %ebx
0000000000011cf4	jne	0x11d26
0000000000011cf6	movl	-0x3c(%rbp), %eax
0000000000011cf9	cmpl	$0x47, %eax
0000000000011cfc	je	0x11d30
0000000000011cfe	cmpl	$0x1338, %eax
0000000000011d03	jne	0x11d37
0000000000011d05	movl	$0xfffffed4, %eax
0000000000011d0a	cmpl	$0x0, -0x50(%rbp)
0000000000011d0e	js	0x11d3c
0000000000011d10	movl	-0x4c(%rbp), %ecx
0000000000011d13	cmpl	$0x2c, %ecx
0000000000011d16	je	0x11d52
0000000000011d18	cmpl	$0x24, %ecx
0000000000011d1b	jne	0x11d3c
0000000000011d1d	movl	-0x30(%rbp), %ebx
0000000000011d20	testl	%ebx, %ebx
0000000000011d22	jne	0x11d3e
0000000000011d24	jmp	0x11d3c
0000000000011d26	movl	-0x44(%rbp), %edi
0000000000011d29	callq	_mig_dealloc_reply_port
0000000000011d2e	jmp	0x11d47
0000000000011d30	movl	$0xfffffecc, %eax
0000000000011d35	jmp	0x11d3c
0000000000011d37	movl	$0xfffffed3, %eax
0000000000011d3c	movl	%eax, %ebx
0000000000011d3e	leaq	-0x50(%rbp), %rdi
0000000000011d42	callq	_mach_msg_destroy
0000000000011d47	movl	%ebx, %eax
0000000000011d49	addq	$0x50, %rsp
0000000000011d4d	popq	%rbx
0000000000011d4e	popq	%r14
0000000000011d50	popq	%rbp
0000000000011d51	retq
0000000000011d52	movl	-0x30(%rbp), %ebx
0000000000011d55	testl	%ebx, %ebx
0000000000011d57	jne	0x11d3e
0000000000011d59	movq	-0x2c(%rbp), %rax
0000000000011d5d	movq	%rax, (%r14)
0000000000011d60	xorl	%ebx, %ebx
0000000000011d62	jmp	0x11d47
_mach_notify_port_deleted:
0000000000011d64	pushq	%rbp
0000000000011d65	movq	%rsp, %rbp
0000000000011d68	subq	$0x30, %rsp
0000000000011d6c	leaq	_NDR_record(%rip), %rax
0000000000011d73	movq	(%rax), %rcx
0000000000011d76	leaq	-0x28(%rbp), %rax
0000000000011d7a	movq	%rcx, 0x18(%rax)
0000000000011d7e	movl	%esi, 0x20(%rax)
0000000000011d81	movl	$0x12, (%rax)
0000000000011d87	movl	%edi, 0x8(%rax)
0000000000011d8a	movq	$0x0, 0xc(%rax)
0000000000011d92	movl	$0x41, 0x14(%rax)
0000000000011d99	movl	$0x0, (%rsp)
0000000000011da0	movl	$0x1, %esi
0000000000011da5	movl	$0x24, %edx
0000000000011daa	xorl	%ecx, %ecx
0000000000011dac	xorl	%r8d, %r8d
0000000000011daf	xorl	%r9d, %r9d
0000000000011db2	movq	%rax, %rdi
0000000000011db5	callq	_mach_msg
0000000000011dba	addq	$0x30, %rsp
0000000000011dbe	popq	%rbp
0000000000011dbf	retq
_mach_notify_port_destroyed:
0000000000011dc0	pushq	%rbp
0000000000011dc1	movq	%rsp, %rbp
0000000000011dc4	subq	$0x30, %rsp
0000000000011dc8	leaq	-0x28(%rbp), %rax
0000000000011dcc	movl	%esi, 0x1c(%rax)
0000000000011dcf	movl	$0x100000, 0x24(%rax)
0000000000011dd6	movl	$0x80000012, (%rax)
0000000000011ddc	movl	%edi, 0x8(%rax)
0000000000011ddf	movaps	0xe67a(%rip), %xmm0
0000000000011de6	movups	%xmm0, 0xc(%rax)
0000000000011dea	movl	$0x0, (%rsp)
0000000000011df1	movl	$0x1, %esi
0000000000011df6	movl	$0x28, %edx
0000000000011dfb	xorl	%ecx, %ecx
0000000000011dfd	xorl	%r8d, %r8d
0000000000011e00	xorl	%r9d, %r9d
0000000000011e03	movq	%rax, %rdi
0000000000011e06	callq	_mach_msg
0000000000011e0b	addq	$0x30, %rsp
0000000000011e0f	popq	%rbp
0000000000011e10	retq
_mach_notify_no_senders:
0000000000011e11	pushq	%rbp
0000000000011e12	movq	%rsp, %rbp
0000000000011e15	subq	$0x30, %rsp
0000000000011e19	leaq	_NDR_record(%rip), %rax
0000000000011e20	movq	(%rax), %rcx
0000000000011e23	leaq	-0x28(%rbp), %rax
0000000000011e27	movq	%rcx, 0x18(%rax)
0000000000011e2b	movl	%esi, 0x20(%rax)
0000000000011e2e	movl	$0x12, (%rax)
0000000000011e34	movl	%edi, 0x8(%rax)
0000000000011e37	movq	$0x0, 0xc(%rax)
0000000000011e3f	movl	$0x46, 0x14(%rax)
0000000000011e46	movl	$0x0, (%rsp)
0000000000011e4d	movl	$0x1, %esi
0000000000011e52	movl	$0x24, %edx
0000000000011e57	xorl	%ecx, %ecx
0000000000011e59	xorl	%r8d, %r8d
0000000000011e5c	xorl	%r9d, %r9d
0000000000011e5f	movq	%rax, %rdi
0000000000011e62	callq	_mach_msg
0000000000011e67	addq	$0x30, %rsp
0000000000011e6b	popq	%rbp
0000000000011e6c	retq
_mach_notify_send_once:
0000000000011e6d	pushq	%rbp
0000000000011e6e	movq	%rsp, %rbp
0000000000011e71	subq	$0x20, %rsp
0000000000011e75	leaq	-0x18(%rbp), %rax
0000000000011e79	movl	$0x12, (%rax)
0000000000011e7f	movl	%edi, 0x8(%rax)
0000000000011e82	movq	$0x0, 0xc(%rax)
0000000000011e8a	movl	$0x47, 0x14(%rax)
0000000000011e91	movl	$0x0, (%rsp)
0000000000011e98	movl	$0x1, %esi
0000000000011e9d	movl	$0x18, %edx
0000000000011ea2	xorl	%ecx, %ecx
0000000000011ea4	xorl	%r8d, %r8d
0000000000011ea7	xorl	%r9d, %r9d
0000000000011eaa	movq	%rax, %rdi
0000000000011ead	callq	_mach_msg
0000000000011eb2	addq	$0x20, %rsp
0000000000011eb6	popq	%rbp
0000000000011eb7	retq
_mach_notify_dead_name:
0000000000011eb8	pushq	%rbp
0000000000011eb9	movq	%rsp, %rbp
0000000000011ebc	subq	$0x30, %rsp
0000000000011ec0	leaq	_NDR_record(%rip), %rax
0000000000011ec7	movq	(%rax), %rcx
0000000000011eca	leaq	-0x28(%rbp), %rax
0000000000011ece	movq	%rcx, 0x18(%rax)
0000000000011ed2	movl	%esi, 0x20(%rax)
0000000000011ed5	movl	$0x12, (%rax)
0000000000011edb	movl	%edi, 0x8(%rax)
0000000000011ede	movq	$0x0, 0xc(%rax)
0000000000011ee6	movl	$0x48, 0x14(%rax)
0000000000011eed	movl	$0x0, (%rsp)
0000000000011ef4	movl	$0x1, %esi
0000000000011ef9	movl	$0x24, %edx
0000000000011efe	xorl	%ecx, %ecx
0000000000011f00	xorl	%r8d, %r8d
0000000000011f03	xorl	%r9d, %r9d
0000000000011f06	movq	%rax, %rdi
0000000000011f09	callq	_mach_msg
0000000000011f0e	addq	$0x30, %rsp
0000000000011f12	popq	%rbp
0000000000011f13	retq
_processor_set_statistics:
0000000000011f14	pushq	%rbp
0000000000011f15	movq	%rsp, %rbp
0000000000011f18	pushq	%r15
0000000000011f1a	pushq	%r14
0000000000011f1c	pushq	%r12
0000000000011f1e	pushq	%rbx
0000000000011f1f	subq	$0x50, %rsp
0000000000011f23	movq	%rcx, %r15
0000000000011f26	leaq	_NDR_record(%rip), %rax
0000000000011f2d	movq	(%rax), %rax
0000000000011f30	leaq	-0x68(%rbp), %rbx
0000000000011f34	movq	%rax, 0x18(%rbx)
0000000000011f38	movl	%esi, 0x20(%rbx)
0000000000011f3b	movl	(%rcx), %eax
0000000000011f3d	movl	$0x5, %ecx
0000000000011f42	cmpl	%ecx, %eax
0000000000011f44	cmovbl	%eax, %ecx
0000000000011f47	movq	%rdx, %r14
0000000000011f4a	movl	%ecx, 0x24(%rbx)
0000000000011f4d	movl	$0x1513, (%rbx)
0000000000011f53	movl	%edi, 0x8(%rbx)
0000000000011f56	callq	_mig_get_reply_port
0000000000011f5b	movl	%eax, 0xc(%rbx)
0000000000011f5e	movabsq	$0xfa000000000, %rcx
0000000000011f68	movq	%rcx, 0x10(%rbx)
0000000000011f6c	movl	$0x0, (%rsp)
0000000000011f73	movl	$0x3, %esi
0000000000011f78	movl	$0x28, %edx
0000000000011f7d	movl	$0x44, %ecx
0000000000011f82	xorl	%r9d, %r9d
0000000000011f85	movq	%rbx, %rdi
0000000000011f88	movl	%eax, %r8d
0000000000011f8b	callq	_mach_msg
0000000000011f90	movl	%eax, %ebx
0000000000011f92	leal	-0x10000002(%rbx), %eax
0000000000011f98	cmpl	$0xe, %eax
0000000000011f9b	ja	0x11fb4
0000000000011f9d	movl	$0x4003, %ecx
0000000000011fa2	btl	%eax, %ecx
0000000000011fa5	jae	0x11fb4
0000000000011fa7	movl	-0x5c(%rbp), %edi
0000000000011faa	callq	_mig_put_reply_port
0000000000011faf	jmp	0x12066
0000000000011fb4	testl	%ebx, %ebx
0000000000011fb6	jne	0x11ff5
0000000000011fb8	movl	-0x54(%rbp), %eax
0000000000011fbb	cmpl	$0x47, %eax
0000000000011fbe	je	0x11fff
0000000000011fc0	cmpl	$0x1004, %eax
0000000000011fc5	jne	0x12006
0000000000011fc7	cmpl	$0x0, -0x68(%rbp)
0000000000011fcb	js	0x12058
0000000000011fd1	movl	-0x64(%rbp), %eax
0000000000011fd4	leal	-0x28(%rax), %ecx
0000000000011fd7	cmpl	$0x15, %ecx
0000000000011fda	jb	0x1200d
0000000000011fdc	movl	$0xfffffed4, %ebx
0000000000011fe1	cmpl	$0x24, %eax
0000000000011fe4	jne	0x1205d
0000000000011fe6	movl	-0x48(%rbp), %eax
0000000000011fe9	testl	%eax, %eax
0000000000011feb	movl	$0xfffffed4, %ebx
0000000000011ff0	cmovnel	%eax, %ebx
0000000000011ff3	jmp	0x1205d
0000000000011ff5	movl	-0x5c(%rbp), %edi
0000000000011ff8	callq	_mig_dealloc_reply_port
0000000000011ffd	jmp	0x12066
0000000000011fff	movl	$0xfffffecc, %ebx
0000000000012004	jmp	0x1205d
0000000000012006	movl	$0xfffffed3, %ebx
000000000001200b	jmp	0x1205d
000000000001200d	movl	-0x48(%rbp), %ebx
0000000000012010	testl	%ebx, %ebx
0000000000012012	jne	0x1205d
0000000000012014	movl	-0x44(%rbp), %r12d
0000000000012018	cmpl	$0x5, %r12d
000000000001201c	ja	0x12058
000000000001201e	shrl	$0x2, %ecx
0000000000012021	cmpl	%r12d, %ecx
0000000000012024	jb	0x12058
0000000000012026	leal	0x28(,%r12,4), %ecx
000000000001202e	movl	$0xfffffed4, %ebx
0000000000012033	cmpl	%ecx, %eax
0000000000012035	jne	0x1205d
0000000000012037	movl	(%r15), %edx
000000000001203a	leaq	-0x40(%rbp), %rsi
000000000001203e	cmpl	%edx, %r12d
0000000000012041	jbe	0x12075
0000000000012043	shll	$0x2, %edx
0000000000012046	movq	%r14, %rdi
0000000000012049	callq	_memcpy
000000000001204e	movl	%r12d, (%r15)
0000000000012051	movl	$0xfffffecd, %ebx
0000000000012056	jmp	0x12066
0000000000012058	movl	$0xfffffed4, %ebx
000000000001205d	leaq	-0x68(%rbp), %rdi
0000000000012061	callq	_mach_msg_destroy
0000000000012066	movl	%ebx, %eax
0000000000012068	addq	$0x50, %rsp
000000000001206c	popq	%rbx
000000000001206d	popq	%r12
000000000001206f	popq	%r14
0000000000012071	popq	%r15
0000000000012073	popq	%rbp
0000000000012074	retq
0000000000012075	leal	(,%r12,4), %eax
000000000001207d	movl	%eax, %edx
000000000001207f	movq	%r14, %rdi
0000000000012082	callq	_memcpy
0000000000012087	movl	%r12d, (%r15)
000000000001208a	xorl	%ebx, %ebx
000000000001208c	jmp	0x12066
_processor_set_destroy:
000000000001208e	pushq	%rbp
000000000001208f	movq	%rsp, %rbp
0000000000012092	pushq	%rbx
0000000000012093	subq	$0x38, %rsp
0000000000012097	leaq	-0x38(%rbp), %rbx
000000000001209b	movl	$0x1513, (%rbx)
00000000000120a1	movl	%edi, 0x8(%rbx)
00000000000120a4	callq	_mig_get_reply_port
00000000000120a9	movl	%eax, 0xc(%rbx)
00000000000120ac	movabsq	$0xfa100000000, %rcx
00000000000120b6	movq	%rcx, 0x10(%rbx)
00000000000120ba	movl	$0x0, (%rsp)
00000000000120c1	movl	$0x3, %esi
00000000000120c6	movl	$0x18, %edx
00000000000120cb	movl	$0x2c, %ecx
00000000000120d0	xorl	%r9d, %r9d
00000000000120d3	movq	%rbx, %rdi
00000000000120d6	movl	%eax, %r8d
00000000000120d9	callq	_mach_msg
00000000000120de	movl	%eax, %ebx
00000000000120e0	leal	-0x10000002(%rbx), %eax
00000000000120e6	cmpl	$0xe, %eax
00000000000120e9	ja	0x120ff
00000000000120eb	movl	$0x4003, %ecx
00000000000120f0	btl	%eax, %ecx
00000000000120f3	jae	0x120ff
00000000000120f5	movl	-0x2c(%rbp), %edi
00000000000120f8	callq	_mig_put_reply_port
00000000000120fd	jmp	0x1214d
00000000000120ff	testl	%ebx, %ebx
0000000000012101	jne	0x1212e
0000000000012103	movl	-0x24(%rbp), %eax
0000000000012106	cmpl	$0x47, %eax
0000000000012109	je	0x12138
000000000001210b	cmpl	$0x1005, %eax
0000000000012110	jne	0x1213f
0000000000012112	movl	$0xfffffed4, %ebx
0000000000012117	cmpl	$0x0, -0x38(%rbp)
000000000001211b	js	0x12144
000000000001211d	cmpl	$0x24, -0x34(%rbp)
0000000000012121	jne	0x12144
0000000000012123	movl	-0x18(%rbp), %ebx
0000000000012126	testl	%ebx, %ebx
0000000000012128	jne	0x12144
000000000001212a	xorl	%ebx, %ebx
000000000001212c	jmp	0x1214d
000000000001212e	movl	-0x2c(%rbp), %edi
0000000000012131	callq	_mig_dealloc_reply_port
0000000000012136	jmp	0x1214d
0000000000012138	movl	$0xfffffecc, %ebx
000000000001213d	jmp	0x12144
000000000001213f	movl	$0xfffffed3, %ebx
0000000000012144	leaq	-0x38(%rbp), %rdi
0000000000012148	callq	_mach_msg_destroy
000000000001214d	movl	%ebx, %eax
000000000001214f	addq	$0x38, %rsp
0000000000012153	popq	%rbx
0000000000012154	popq	%rbp
0000000000012155	retq
_processor_set_max_priority:
0000000000012156	pushq	%rbp
0000000000012157	movq	%rsp, %rbp
000000000001215a	pushq	%rbx
000000000001215b	subq	$0x38, %rsp
000000000001215f	leaq	_NDR_record(%rip), %rax
0000000000012166	movq	(%rax), %rax
0000000000012169	leaq	-0x38(%rbp), %rbx
000000000001216d	movq	%rax, 0x18(%rbx)
0000000000012171	movl	%esi, 0x20(%rbx)
0000000000012174	movl	%edx, 0x24(%rbx)
0000000000012177	movl	$0x1513, (%rbx)
000000000001217d	movl	%edi, 0x8(%rbx)
0000000000012180	callq	_mig_get_reply_port
0000000000012185	movl	%eax, 0xc(%rbx)
0000000000012188	movabsq	$0xfa200000000, %rcx
0000000000012192	movq	%rcx, 0x10(%rbx)
0000000000012196	movl	$0x0, (%rsp)
000000000001219d	movl	$0x3, %esi
00000000000121a2	movl	$0x28, %edx
00000000000121a7	movl	$0x2c, %ecx
00000000000121ac	xorl	%r9d, %r9d
00000000000121af	movq	%rbx, %rdi
00000000000121b2	movl	%eax, %r8d
00000000000121b5	callq	_mach_msg
00000000000121ba	movl	%eax, %ebx
00000000000121bc	leal	-0x10000002(%rbx), %eax
00000000000121c2	cmpl	$0xe, %eax
00000000000121c5	ja	0x121db
00000000000121c7	movl	$0x4003, %ecx
00000000000121cc	btl	%eax, %ecx
00000000000121cf	jae	0x121db
00000000000121d1	movl	-0x2c(%rbp), %edi
00000000000121d4	callq	_mig_put_reply_port
00000000000121d9	jmp	0x12229
00000000000121db	testl	%ebx, %ebx
00000000000121dd	jne	0x1220a
00000000000121df	movl	-0x24(%rbp), %eax
00000000000121e2	cmpl	$0x47, %eax
00000000000121e5	je	0x12214
00000000000121e7	cmpl	$0x1006, %eax
00000000000121ec	jne	0x1221b
00000000000121ee	movl	$0xfffffed4, %ebx
00000000000121f3	cmpl	$0x0, -0x38(%rbp)
00000000000121f7	js	0x12220
00000000000121f9	cmpl	$0x24, -0x34(%rbp)
00000000000121fd	jne	0x12220
00000000000121ff	movl	-0x18(%rbp), %ebx
0000000000012202	testl	%ebx, %ebx
0000000000012204	jne	0x12220
0000000000012206	xorl	%ebx, %ebx
0000000000012208	jmp	0x12229
000000000001220a	movl	-0x2c(%rbp), %edi
000000000001220d	callq	_mig_dealloc_reply_port
0000000000012212	jmp	0x12229
0000000000012214	movl	$0xfffffecc, %ebx
0000000000012219	jmp	0x12220
000000000001221b	movl	$0xfffffed3, %ebx
0000000000012220	leaq	-0x38(%rbp), %rdi
0000000000012224	callq	_mach_msg_destroy
0000000000012229	movl	%ebx, %eax
000000000001222b	addq	$0x38, %rsp
000000000001222f	popq	%rbx
0000000000012230	popq	%rbp
0000000000012231	retq
_processor_set_policy_enable:
0000000000012232	pushq	%rbp
0000000000012233	movq	%rsp, %rbp
0000000000012236	pushq	%rbx
0000000000012237	subq	$0x38, %rsp
000000000001223b	leaq	_NDR_record(%rip), %rax
0000000000012242	movq	(%rax), %rax
0000000000012245	leaq	-0x38(%rbp), %rbx
0000000000012249	movq	%rax, 0x18(%rbx)
000000000001224d	movl	%esi, 0x20(%rbx)
0000000000012250	movl	$0x1513, (%rbx)
0000000000012256	movl	%edi, 0x8(%rbx)
0000000000012259	callq	_mig_get_reply_port
000000000001225e	movl	%eax, 0xc(%rbx)
0000000000012261	movabsq	$0xfa300000000, %rcx
000000000001226b	movq	%rcx, 0x10(%rbx)
000000000001226f	movl	$0x0, (%rsp)
0000000000012276	movl	$0x3, %esi
000000000001227b	movl	$0x24, %edx
0000000000012280	movl	$0x2c, %ecx
0000000000012285	xorl	%r9d, %r9d
0000000000012288	movq	%rbx, %rdi
000000000001228b	movl	%eax, %r8d
000000000001228e	callq	_mach_msg
0000000000012293	movl	%eax, %ebx
0000000000012295	leal	-0x10000002(%rbx), %eax
000000000001229b	cmpl	$0xe, %eax
000000000001229e	ja	0x122b4
00000000000122a0	movl	$0x4003, %ecx
00000000000122a5	btl	%eax, %ecx
00000000000122a8	jae	0x122b4
00000000000122aa	movl	-0x2c(%rbp), %edi
00000000000122ad	callq	_mig_put_reply_port
00000000000122b2	jmp	0x12302
00000000000122b4	testl	%ebx, %ebx
00000000000122b6	jne	0x122e3
00000000000122b8	movl	-0x24(%rbp), %eax
00000000000122bb	cmpl	$0x47, %eax
00000000000122be	je	0x122ed
00000000000122c0	cmpl	$0x1007, %eax
00000000000122c5	jne	0x122f4
00000000000122c7	movl	$0xfffffed4, %ebx
00000000000122cc	cmpl	$0x0, -0x38(%rbp)
00000000000122d0	js	0x122f9
00000000000122d2	cmpl	$0x24, -0x34(%rbp)
00000000000122d6	jne	0x122f9
00000000000122d8	movl	-0x18(%rbp), %ebx
00000000000122db	testl	%ebx, %ebx
00000000000122dd	jne	0x122f9
00000000000122df	xorl	%ebx, %ebx
00000000000122e1	jmp	0x12302
00000000000122e3	movl	-0x2c(%rbp), %edi
00000000000122e6	callq	_mig_dealloc_reply_port
00000000000122eb	jmp	0x12302
00000000000122ed	movl	$0xfffffecc, %ebx
00000000000122f2	jmp	0x122f9
00000000000122f4	movl	$0xfffffed3, %ebx
00000000000122f9	leaq	-0x38(%rbp), %rdi
00000000000122fd	callq	_mach_msg_destroy
0000000000012302	movl	%ebx, %eax
0000000000012304	addq	$0x38, %rsp
0000000000012308	popq	%rbx
0000000000012309	popq	%rbp
000000000001230a	retq
_processor_set_policy_disable:
000000000001230b	pushq	%rbp
000000000001230c	movq	%rsp, %rbp
000000000001230f	pushq	%rbx
0000000000012310	subq	$0x38, %rsp
0000000000012314	leaq	_NDR_record(%rip), %rax
000000000001231b	movq	(%rax), %rax
000000000001231e	leaq	-0x38(%rbp), %rbx
0000000000012322	movq	%rax, 0x18(%rbx)
0000000000012326	movl	%esi, 0x20(%rbx)
0000000000012329	movl	%edx, 0x24(%rbx)
000000000001232c	movl	$0x1513, (%rbx)
0000000000012332	movl	%edi, 0x8(%rbx)
0000000000012335	callq	_mig_get_reply_port
000000000001233a	movl	%eax, 0xc(%rbx)
000000000001233d	movabsq	$0xfa400000000, %rcx
0000000000012347	movq	%rcx, 0x10(%rbx)
000000000001234b	movl	$0x0, (%rsp)
0000000000012352	movl	$0x3, %esi
0000000000012357	movl	$0x28, %edx
000000000001235c	movl	$0x2c, %ecx
0000000000012361	xorl	%r9d, %r9d
0000000000012364	movq	%rbx, %rdi
0000000000012367	movl	%eax, %r8d
000000000001236a	callq	_mach_msg
000000000001236f	movl	%eax, %ebx
0000000000012371	leal	-0x10000002(%rbx), %eax
0000000000012377	cmpl	$0xe, %eax
000000000001237a	ja	0x12390
000000000001237c	movl	$0x4003, %ecx
0000000000012381	btl	%eax, %ecx
0000000000012384	jae	0x12390
0000000000012386	movl	-0x2c(%rbp), %edi
0000000000012389	callq	_mig_put_reply_port
000000000001238e	jmp	0x123de
0000000000012390	testl	%ebx, %ebx
0000000000012392	jne	0x123bf
0000000000012394	movl	-0x24(%rbp), %eax
0000000000012397	cmpl	$0x47, %eax
000000000001239a	je	0x123c9
000000000001239c	cmpl	$0x1008, %eax
00000000000123a1	jne	0x123d0
00000000000123a3	movl	$0xfffffed4, %ebx
00000000000123a8	cmpl	$0x0, -0x38(%rbp)
00000000000123ac	js	0x123d5
00000000000123ae	cmpl	$0x24, -0x34(%rbp)
00000000000123b2	jne	0x123d5
00000000000123b4	movl	-0x18(%rbp), %ebx
00000000000123b7	testl	%ebx, %ebx
00000000000123b9	jne	0x123d5
00000000000123bb	xorl	%ebx, %ebx
00000000000123bd	jmp	0x123de
00000000000123bf	movl	-0x2c(%rbp), %edi
00000000000123c2	callq	_mig_dealloc_reply_port
00000000000123c7	jmp	0x123de
00000000000123c9	movl	$0xfffffecc, %ebx
00000000000123ce	jmp	0x123d5
00000000000123d0	movl	$0xfffffed3, %ebx
00000000000123d5	leaq	-0x38(%rbp), %rdi
00000000000123d9	callq	_mach_msg_destroy
00000000000123de	movl	%ebx, %eax
00000000000123e0	addq	$0x38, %rsp
00000000000123e4	popq	%rbx
00000000000123e5	popq	%rbp
00000000000123e6	retq
_processor_set_tasks:
00000000000123e7	pushq	%rbp
00000000000123e8	movq	%rsp, %rbp
00000000000123eb	pushq	%r15
00000000000123ed	pushq	%r14
00000000000123ef	pushq	%rbx
00000000000123f0	subq	$0x48, %rsp
00000000000123f4	movq	%rdx, %r14
00000000000123f7	movq	%rsi, %r15
00000000000123fa	leaq	-0x58(%rbp), %rbx
00000000000123fe	movl	$0x1513, (%rbx)
0000000000012404	movl	%edi, 0x8(%rbx)
0000000000012407	callq	_mig_get_reply_port
000000000001240c	movl	%eax, 0xc(%rbx)
000000000001240f	movabsq	$0xfa500000000, %rcx
0000000000012419	movq	%rcx, 0x10(%rbx)
000000000001241d	movl	$0x0, (%rsp)
0000000000012424	movl	$0x3, %esi
0000000000012429	movl	$0x18, %edx
000000000001242e	movl	$0x40, %ecx
0000000000012433	xorl	%r9d, %r9d
0000000000012436	movq	%rbx, %rdi
0000000000012439	movl	%eax, %r8d
000000000001243c	callq	_mach_msg
0000000000012441	movl	%eax, %ebx
0000000000012443	leal	-0x10000002(%rbx), %eax
0000000000012449	cmpl	$0xe, %eax
000000000001244c	ja	0x12462
000000000001244e	movl	$0x4003, %ecx
0000000000012453	btl	%eax, %ecx
0000000000012456	jae	0x12462
0000000000012458	movl	-0x4c(%rbp), %edi
000000000001245b	callq	_mig_put_reply_port
0000000000012460	jmp	0x124b6
0000000000012462	testl	%ebx, %ebx
0000000000012464	jne	0x12497
0000000000012466	movl	-0x44(%rbp), %eax
0000000000012469	cmpl	$0x47, %eax
000000000001246c	je	0x124a1
000000000001246e	cmpl	$0x1009, %eax
0000000000012473	jne	0x124a8
0000000000012475	cmpl	$0x0, -0x58(%rbp)
0000000000012479	movl	-0x54(%rbp), %eax
000000000001247c	movl	$0xfffffed4, %ebx
0000000000012481	js	0x124c3
0000000000012483	cmpl	$0x24, %eax
0000000000012486	jne	0x124ad
0000000000012488	movl	-0x38(%rbp), %eax
000000000001248b	testl	%eax, %eax
000000000001248d	movl	$0xfffffed4, %ebx
0000000000012492	cmovnel	%eax, %ebx
0000000000012495	jmp	0x124ad
0000000000012497	movl	-0x4c(%rbp), %edi
000000000001249a	callq	_mig_dealloc_reply_port
000000000001249f	jmp	0x124b6
00000000000124a1	movl	$0xfffffecc, %ebx
00000000000124a6	jmp	0x124ad
00000000000124a8	movl	$0xfffffed3, %ebx
00000000000124ad	leaq	-0x58(%rbp), %rdi
00000000000124b1	callq	_mach_msg_destroy
00000000000124b6	movl	%ebx, %eax
00000000000124b8	addq	$0x48, %rsp
00000000000124bc	popq	%rbx
00000000000124bd	popq	%r14
00000000000124bf	popq	%r15
00000000000124c1	popq	%rbp
00000000000124c2	retq
00000000000124c3	cmpl	$0x38, %eax
00000000000124c6	jne	0x124ad
00000000000124c8	cmpl	$0x1, -0x40(%rbp)
00000000000124cc	jne	0x124ad
00000000000124ce	movl	$0xffff0000, %eax
00000000000124d3	andl	-0x34(%rbp), %eax
00000000000124d6	cmpl	$0x2110000, %eax
00000000000124db	jne	0x124ad
00000000000124dd	movl	-0x30(%rbp), %eax
00000000000124e0	cmpl	-0x24(%rbp), %eax
00000000000124e3	jne	0x124ad
00000000000124e5	movq	-0x3c(%rbp), %rcx
00000000000124e9	movq	%rcx, (%r15)
00000000000124ec	movl	%eax, (%r14)
00000000000124ef	xorl	%ebx, %ebx
00000000000124f1	jmp	0x124b6
_processor_set_threads:
00000000000124f3	pushq	%rbp
00000000000124f4	movq	%rsp, %rbp
00000000000124f7	pushq	%r15
00000000000124f9	pushq	%r14
00000000000124fb	pushq	%rbx
00000000000124fc	subq	$0x48, %rsp
0000000000012500	movq	%rdx, %r14
0000000000012503	movq	%rsi, %r15
0000000000012506	leaq	-0x58(%rbp), %rbx
000000000001250a	movl	$0x1513, (%rbx)
0000000000012510	movl	%edi, 0x8(%rbx)
0000000000012513	callq	_mig_get_reply_port
0000000000012518	movl	%eax, 0xc(%rbx)
000000000001251b	movabsq	$0xfa600000000, %rcx
0000000000012525	movq	%rcx, 0x10(%rbx)
0000000000012529	movl	$0x0, (%rsp)
0000000000012530	movl	$0x3, %esi
0000000000012535	movl	$0x18, %edx
000000000001253a	movl	$0x40, %ecx
000000000001253f	xorl	%r9d, %r9d
0000000000012542	movq	%rbx, %rdi
0000000000012545	movl	%eax, %r8d
0000000000012548	callq	_mach_msg
000000000001254d	movl	%eax, %ebx
000000000001254f	leal	-0x10000002(%rbx), %eax
0000000000012555	cmpl	$0xe, %eax
0000000000012558	ja	0x1256e
000000000001255a	movl	$0x4003, %ecx
000000000001255f	btl	%eax, %ecx
0000000000012562	jae	0x1256e
0000000000012564	movl	-0x4c(%rbp), %edi
0000000000012567	callq	_mig_put_reply_port
000000000001256c	jmp	0x125c2
000000000001256e	testl	%ebx, %ebx
0000000000012570	jne	0x125a3
0000000000012572	movl	-0x44(%rbp), %eax
0000000000012575	cmpl	$0x47, %eax
0000000000012578	je	0x125ad
000000000001257a	cmpl	$0x100a, %eax
000000000001257f	jne	0x125b4
0000000000012581	cmpl	$0x0, -0x58(%rbp)
0000000000012585	movl	-0x54(%rbp), %eax
0000000000012588	movl	$0xfffffed4, %ebx
000000000001258d	js	0x125cf
000000000001258f	cmpl	$0x24, %eax
0000000000012592	jne	0x125b9
0000000000012594	movl	-0x38(%rbp), %eax
0000000000012597	testl	%eax, %eax
0000000000012599	movl	$0xfffffed4, %ebx
000000000001259e	cmovnel	%eax, %ebx
00000000000125a1	jmp	0x125b9
00000000000125a3	movl	-0x4c(%rbp), %edi
00000000000125a6	callq	_mig_dealloc_reply_port
00000000000125ab	jmp	0x125c2
00000000000125ad	movl	$0xfffffecc, %ebx
00000000000125b2	jmp	0x125b9
00000000000125b4	movl	$0xfffffed3, %ebx
00000000000125b9	leaq	-0x58(%rbp), %rdi
00000000000125bd	callq	_mach_msg_destroy
00000000000125c2	movl	%ebx, %eax
00000000000125c4	addq	$0x48, %rsp
00000000000125c8	popq	%rbx
00000000000125c9	popq	%r14
00000000000125cb	popq	%r15
00000000000125cd	popq	%rbp
00000000000125ce	retq
00000000000125cf	cmpl	$0x38, %eax
00000000000125d2	jne	0x125b9
00000000000125d4	cmpl	$0x1, -0x40(%rbp)
00000000000125d8	jne	0x125b9
00000000000125da	movl	$0xffff0000, %eax
00000000000125df	andl	-0x34(%rbp), %eax
00000000000125e2	cmpl	$0x2110000, %eax
00000000000125e7	jne	0x125b9
00000000000125e9	movl	-0x30(%rbp), %eax
00000000000125ec	cmpl	-0x24(%rbp), %eax
00000000000125ef	jne	0x125b9
00000000000125f1	movq	-0x3c(%rbp), %rcx
00000000000125f5	movq	%rcx, (%r15)
00000000000125f8	movl	%eax, (%r14)
00000000000125fb	xorl	%ebx, %ebx
00000000000125fd	jmp	0x125c2
_processor_set_policy_control:
00000000000125ff	pushq	%rbp
0000000000012600	movq	%rsp, %rbp
0000000000012603	pushq	%r15
0000000000012605	pushq	%r14
0000000000012607	pushq	%r13
0000000000012609	pushq	%r12
000000000001260b	pushq	%rbx
000000000001260c	subq	$0x48, %rsp
0000000000012610	leaq	_NDR_record(%rip), %rax
0000000000012617	movq	(%rax), %rax
000000000001261a	movq	%rax, -0x50(%rbp)
000000000001261e	movl	%esi, -0x48(%rbp)
0000000000012621	movl	$0xfffffecd, %r12d
0000000000012627	cmpl	$0x5, %ecx
000000000001262a	ja	0x1272b
0000000000012630	movl	%r8d, %r14d
0000000000012633	movl	%ecx, %ebx
0000000000012635	movl	%edi, %r15d
0000000000012638	leaq	-0x40(%rbp), %r12
000000000001263c	leal	(,%rbx,4), %r13d
0000000000012644	movq	%r12, %rdi
0000000000012647	movq	%rdx, %rsi
000000000001264a	movq	%r13, %rdx
000000000001264d	callq	_memcpy
0000000000012652	movl	%ebx, -0x4(%r12)
0000000000012657	leal	0x2c(,%rbx,4), %ebx
000000000001265e	leaq	-0x68(%rbp), %rax
0000000000012662	movl	%r14d, 0x28(%r13,%rax)
0000000000012667	movq	%rax, %r14
000000000001266a	movl	$0x1513, -0x28(%r12)
0000000000012673	movl	%r15d, -0x20(%r12)
0000000000012678	callq	_mig_get_reply_port
000000000001267d	movl	%eax, -0x1c(%r12)
0000000000012682	movabsq	$0xfa700000000, %rcx
000000000001268c	movq	%rcx, -0x18(%r12)
0000000000012691	movl	$0x0, (%rsp)
0000000000012698	movl	$0x3, %esi
000000000001269d	movl	$0x2c, %ecx
00000000000126a2	xorl	%r9d, %r9d
00000000000126a5	movq	%r14, %rdi
00000000000126a8	movl	%ebx, %edx
00000000000126aa	movl	%eax, %r8d
00000000000126ad	callq	_mach_msg
00000000000126b2	movl	%eax, %r12d
00000000000126b5	leal	-0x10000002(%r12), %eax
00000000000126bd	cmpl	$0xe, %eax
00000000000126c0	ja	0x126d6
00000000000126c2	movl	$0x4003, %ecx
00000000000126c7	btl	%eax, %ecx
00000000000126ca	jae	0x126d6
00000000000126cc	movl	-0x5c(%rbp), %edi
00000000000126cf	callq	_mig_put_reply_port
00000000000126d4	jmp	0x1272b
00000000000126d6	testl	%r12d, %r12d
00000000000126d9	jne	0x1270a
00000000000126db	movl	-0x54(%rbp), %eax
00000000000126de	cmpl	$0x47, %eax
00000000000126e1	je	0x12714
00000000000126e3	cmpl	$0x100b, %eax
00000000000126e8	jne	0x1271c
00000000000126ea	movl	$0xfffffed4, %r12d
00000000000126f0	cmpl	$0x0, -0x68(%rbp)
00000000000126f4	js	0x12722
00000000000126f6	cmpl	$0x24, -0x64(%rbp)
00000000000126fa	jne	0x12722
00000000000126fc	movl	-0x48(%rbp), %r12d
0000000000012700	testl	%r12d, %r12d
0000000000012703	jne	0x12722
0000000000012705	xorl	%r12d, %r12d
0000000000012708	jmp	0x1272b
000000000001270a	movl	-0x5c(%rbp), %edi
000000000001270d	callq	_mig_dealloc_reply_port
0000000000012712	jmp	0x1272b
0000000000012714	movl	$0xfffffecc, %r12d
000000000001271a	jmp	0x12722
000000000001271c	movl	$0xfffffed3, %r12d
0000000000012722	leaq	-0x68(%rbp), %rdi
0000000000012726	callq	_mach_msg_destroy
000000000001272b	movl	%r12d, %eax
000000000001272e	addq	$0x48, %rsp
0000000000012732	popq	%rbx
0000000000012733	popq	%r12
0000000000012735	popq	%r13
0000000000012737	popq	%r14
0000000000012739	popq	%r15
000000000001273b	popq	%rbp
000000000001273c	retq
_processor_set_stack_usage:
000000000001273d	pushq	%rbp
000000000001273e	movq	%rsp, %rbp
0000000000012741	pushq	%r15
0000000000012743	pushq	%r14
0000000000012745	pushq	%r13
0000000000012747	pushq	%r12
0000000000012749	pushq	%rbx
000000000001274a	subq	$0x68, %rsp
000000000001274e	movq	%r9, -0x38(%rbp)
0000000000012752	movq	%r8, -0x30(%rbp)
0000000000012756	movq	%rcx, %r12
0000000000012759	movq	%rdx, %r13
000000000001275c	movq	%rsi, %r15
000000000001275f	leaq	-0x88(%rbp), %rbx
0000000000012766	movl	$0x1513, (%rbx)
000000000001276c	movl	%edi, 0x8(%rbx)
000000000001276f	callq	_mig_get_reply_port
0000000000012774	movl	%eax, 0xc(%rbx)
0000000000012777	movabsq	$0xfa800000000, %rcx
0000000000012781	movq	%rcx, 0x10(%rbx)
0000000000012785	movl	$0x0, (%rsp)
000000000001278c	movl	$0x3, %esi
0000000000012791	movl	$0x18, %edx
0000000000012796	movl	$0x50, %ecx
000000000001279b	xorl	%r9d, %r9d
000000000001279e	movq	%rbx, %rdi
00000000000127a1	movl	%eax, %r8d
00000000000127a4	callq	_mach_msg
00000000000127a9	movl	%eax, %r14d
00000000000127ac	leal	-0x10000002(%r14), %eax
00000000000127b3	cmpl	$0xe, %eax
00000000000127b6	ja	0x127cc
00000000000127b8	movl	$0x4003, %ecx
00000000000127bd	btl	%eax, %ecx
00000000000127c0	jae	0x127cc
00000000000127c2	movl	-0x7c(%rbp), %edi
00000000000127c5	callq	_mig_put_reply_port
00000000000127ca	jmp	0x1282e
00000000000127cc	testl	%r14d, %r14d
00000000000127cf	jne	0x12809
00000000000127d1	movl	-0x74(%rbp), %eax
00000000000127d4	cmpl	$0x47, %eax
00000000000127d7	je	0x12813
00000000000127d9	cmpl	$0x100c, %eax
00000000000127de	jne	0x1281a
00000000000127e0	movl	$0xfffffed4, %eax
00000000000127e5	cmpl	$0x0, -0x88(%rbp)
00000000000127ec	js	0x1281f
00000000000127ee	movl	-0x84(%rbp), %ecx
00000000000127f4	cmpl	$0x48, %ecx
00000000000127f7	je	0x12840
00000000000127f9	cmpl	$0x24, %ecx
00000000000127fc	jne	0x1281f
00000000000127fe	movl	-0x68(%rbp), %r14d
0000000000012802	testl	%r14d, %r14d
0000000000012805	jne	0x12822
0000000000012807	jmp	0x1281f
0000000000012809	movl	-0x7c(%rbp), %edi
000000000001280c	callq	_mig_dealloc_reply_port
0000000000012811	jmp	0x1282e
0000000000012813	movl	$0xfffffecc, %eax
0000000000012818	jmp	0x1281f
000000000001281a	movl	$0xfffffed3, %eax
000000000001281f	movl	%eax, %r14d
0000000000012822	leaq	-0x88(%rbp), %rdi
0000000000012829	callq	_mach_msg_destroy
000000000001282e	movl	%r14d, %eax
0000000000012831	addq	$0x68, %rsp
0000000000012835	popq	%rbx
0000000000012836	popq	%r12
0000000000012838	popq	%r13
000000000001283a	popq	%r14
000000000001283c	popq	%r15
000000000001283e	popq	%rbp
000000000001283f	retq
0000000000012840	movl	-0x68(%rbp), %r14d
0000000000012844	testl	%r14d, %r14d
0000000000012847	jne	0x12822
0000000000012849	movl	-0x64(%rbp), %eax
000000000001284c	movl	%eax, (%r15)
000000000001284f	movq	-0x60(%rbp), %rax
0000000000012853	movq	%rax, (%r13)
0000000000012857	movq	-0x58(%rbp), %rax
000000000001285b	movq	%rax, (%r12)
000000000001285f	movq	-0x50(%rbp), %rax
0000000000012863	movq	-0x30(%rbp), %rcx
0000000000012867	movq	%rax, (%rcx)
000000000001286a	movq	-0x48(%rbp), %rax
000000000001286e	movq	-0x38(%rbp), %rcx
0000000000012872	movq	%rax, (%rcx)
0000000000012875	xorl	%r14d, %r14d
0000000000012878	jmp	0x1282e
_processor_set_info:
000000000001287a	pushq	%rbp
000000000001287b	movq	%rsp, %rbp
000000000001287e	pushq	%r15
0000000000012880	pushq	%r14
0000000000012882	pushq	%r13
0000000000012884	pushq	%r12
0000000000012886	pushq	%rbx
0000000000012887	subq	$0x58, %rsp
000000000001288b	movq	%r8, %r14
000000000001288e	leaq	_NDR_record(%rip), %rax
0000000000012895	movq	(%rax), %rax
0000000000012898	leaq	-0x78(%rbp), %rbx
000000000001289c	movq	%rax, 0x18(%rbx)
00000000000128a0	movl	%esi, 0x20(%rbx)
00000000000128a3	movl	(%r8), %eax
00000000000128a6	movl	$0x5, %esi
00000000000128ab	cmpl	%esi, %eax
00000000000128ad	cmovbl	%eax, %esi
00000000000128b0	movq	%rcx, %r15
00000000000128b3	movq	%rdx, %r12
00000000000128b6	movl	%esi, 0x24(%rbx)
00000000000128b9	movl	$0x1513, (%rbx)
00000000000128bf	movl	%edi, 0x8(%rbx)
00000000000128c2	callq	_mig_get_reply_port
00000000000128c7	movl	%eax, 0xc(%rbx)
00000000000128ca	movabsq	$0xfa900000000, %rcx
00000000000128d4	movq	%rcx, 0x10(%rbx)
00000000000128d8	movl	$0x0, (%rsp)
00000000000128df	movl	$0x3, %esi
00000000000128e4	movl	$0x28, %edx
00000000000128e9	movl	$0x50, %ecx
00000000000128ee	xorl	%r9d, %r9d
00000000000128f1	movq	%rbx, %rdi
00000000000128f4	movl	%eax, %r8d
00000000000128f7	callq	_mach_msg
00000000000128fc	movl	%eax, %ebx
00000000000128fe	leal	-0x10000002(%rbx), %eax
0000000000012904	cmpl	$0xe, %eax
0000000000012907	ja	0x1291d
0000000000012909	movl	$0x4003, %ecx
000000000001290e	btl	%eax, %ecx
0000000000012911	jae	0x1291d
0000000000012913	movl	-0x6c(%rbp), %edi
0000000000012916	callq	_mig_put_reply_port
000000000001291b	jmp	0x12971
000000000001291d	testl	%ebx, %ebx
000000000001291f	jne	0x12952
0000000000012921	movl	-0x64(%rbp), %eax
0000000000012924	cmpl	$0x47, %eax
0000000000012927	je	0x1295c
0000000000012929	cmpl	$0x100d, %eax
000000000001292e	jne	0x12963
0000000000012930	cmpl	$0x0, -0x78(%rbp)
0000000000012934	movl	-0x74(%rbp), %eax
0000000000012937	js	0x12982
0000000000012939	movl	$0xfffffed4, %ebx
000000000001293e	cmpl	$0x24, %eax
0000000000012941	jne	0x12968
0000000000012943	movl	-0x58(%rbp), %eax
0000000000012946	testl	%eax, %eax
0000000000012948	movl	$0xfffffed4, %ebx
000000000001294d	cmovnel	%eax, %ebx
0000000000012950	jmp	0x12968
0000000000012952	movl	-0x6c(%rbp), %edi
0000000000012955	callq	_mig_dealloc_reply_port
000000000001295a	jmp	0x12971
000000000001295c	movl	$0xfffffecc, %ebx
0000000000012961	jmp	0x12968
0000000000012963	movl	$0xfffffed3, %ebx
0000000000012968	leaq	-0x78(%rbp), %rdi
000000000001296c	callq	_mach_msg_destroy
0000000000012971	movl	%ebx, %eax
0000000000012973	addq	$0x58, %rsp
0000000000012977	popq	%rbx
0000000000012978	popq	%r12
000000000001297a	popq	%r13
000000000001297c	popq	%r14
000000000001297e	popq	%r15
0000000000012980	popq	%rbp
0000000000012981	retq
0000000000012982	leal	-0x34(%rax), %ecx
0000000000012985	movl	$0xfffffed4, %ebx
000000000001298a	cmpl	$0x14, %ecx
000000000001298d	ja	0x12968
000000000001298f	cmpl	$0x1, -0x60(%rbp)
0000000000012993	jne	0x12968
0000000000012995	movl	$0xffff0000, %edx
000000000001299a	andl	-0x54(%rbp), %edx
000000000001299d	cmpl	$0x110000, %edx
00000000000129a3	jne	0x12968
00000000000129a5	movl	-0x48(%rbp), %r13d
00000000000129a9	cmpl	$0x5, %r13d
00000000000129ad	ja	0x12968
00000000000129af	shrl	$0x2, %ecx
00000000000129b2	cmpl	%r13d, %ecx
00000000000129b5	jb	0x12968
00000000000129b7	leal	0x34(,%r13,4), %ecx
00000000000129bf	cmpl	%ecx, %eax
00000000000129c1	jne	0x12968
00000000000129c3	leaq	-0x44(%rbp), %rsi
00000000000129c7	movl	-0x18(%rsi), %eax
00000000000129ca	movl	%eax, (%r12)
00000000000129ce	movl	(%r14), %edx
00000000000129d1	cmpl	%edx, %r13d
00000000000129d4	jbe	0x129eb
00000000000129d6	shll	$0x2, %edx
00000000000129d9	movq	%r15, %rdi
00000000000129dc	callq	_memcpy
00000000000129e1	movl	%r13d, (%r14)
00000000000129e4	movl	$0xfffffecd, %ebx
00000000000129e9	jmp	0x12971
00000000000129eb	leal	(,%r13,4), %eax
00000000000129f3	movl	%eax, %edx
00000000000129f5	movq	%r15, %rdi
00000000000129f8	callq	_memcpy
00000000000129fd	movl	%r13d, (%r14)
0000000000012a00	xorl	%ebx, %ebx
0000000000012a02	jmp	0x12971
_processor_start:
0000000000012a07	pushq	%rbp
0000000000012a08	movq	%rsp, %rbp
0000000000012a0b	pushq	%rbx
0000000000012a0c	subq	$0x38, %rsp
0000000000012a10	leaq	-0x38(%rbp), %rbx
0000000000012a14	movl	$0x1513, (%rbx)
0000000000012a1a	movl	%edi, 0x8(%rbx)
0000000000012a1d	callq	_mig_get_reply_port
0000000000012a22	movl	%eax, 0xc(%rbx)
0000000000012a25	movabsq	$0xbb800000000, %rcx
0000000000012a2f	movq	%rcx, 0x10(%rbx)
0000000000012a33	movl	$0x0, (%rsp)
0000000000012a3a	movl	$0x3, %esi
0000000000012a3f	movl	$0x18, %edx
0000000000012a44	movl	$0x2c, %ecx
0000000000012a49	xorl	%r9d, %r9d
0000000000012a4c	movq	%rbx, %rdi
0000000000012a4f	movl	%eax, %r8d
0000000000012a52	callq	_mach_msg
0000000000012a57	movl	%eax, %ebx
0000000000012a59	leal	-0x10000002(%rbx), %eax
0000000000012a5f	cmpl	$0xe, %eax
0000000000012a62	ja	0x12a78
0000000000012a64	movl	$0x4003, %ecx
0000000000012a69	btl	%eax, %ecx
0000000000012a6c	jae	0x12a78
0000000000012a6e	movl	-0x2c(%rbp), %edi
0000000000012a71	callq	_mig_put_reply_port
0000000000012a76	jmp	0x12ac6
0000000000012a78	testl	%ebx, %ebx
0000000000012a7a	jne	0x12aa7
0000000000012a7c	movl	-0x24(%rbp), %eax
0000000000012a7f	cmpl	$0x47, %eax
0000000000012a82	je	0x12ab1
0000000000012a84	cmpl	$0xc1c, %eax
0000000000012a89	jne	0x12ab8
0000000000012a8b	movl	$0xfffffed4, %ebx
0000000000012a90	cmpl	$0x0, -0x38(%rbp)
0000000000012a94	js	0x12abd
0000000000012a96	cmpl	$0x24, -0x34(%rbp)
0000000000012a9a	jne	0x12abd
0000000000012a9c	movl	-0x18(%rbp), %ebx
0000000000012a9f	testl	%ebx, %ebx
0000000000012aa1	jne	0x12abd
0000000000012aa3	xorl	%ebx, %ebx
0000000000012aa5	jmp	0x12ac6
0000000000012aa7	movl	-0x2c(%rbp), %edi
0000000000012aaa	callq	_mig_dealloc_reply_port
0000000000012aaf	jmp	0x12ac6
0000000000012ab1	movl	$0xfffffecc, %ebx
0000000000012ab6	jmp	0x12abd
0000000000012ab8	movl	$0xfffffed3, %ebx
0000000000012abd	leaq	-0x38(%rbp), %rdi
0000000000012ac1	callq	_mach_msg_destroy
0000000000012ac6	movl	%ebx, %eax
0000000000012ac8	addq	$0x38, %rsp
0000000000012acc	popq	%rbx
0000000000012acd	popq	%rbp
0000000000012ace	retq
_processor_exit:
0000000000012acf	pushq	%rbp
0000000000012ad0	movq	%rsp, %rbp
0000000000012ad3	pushq	%rbx
0000000000012ad4	subq	$0x38, %rsp
0000000000012ad8	leaq	-0x38(%rbp), %rbx
0000000000012adc	movl	$0x1513, (%rbx)
0000000000012ae2	movl	%edi, 0x8(%rbx)
0000000000012ae5	callq	_mig_get_reply_port
0000000000012aea	movl	%eax, 0xc(%rbx)
0000000000012aed	movabsq	$0xbb900000000, %rcx
0000000000012af7	movq	%rcx, 0x10(%rbx)
0000000000012afb	movl	$0x0, (%rsp)
0000000000012b02	movl	$0x3, %esi
0000000000012b07	movl	$0x18, %edx
0000000000012b0c	movl	$0x2c, %ecx
0000000000012b11	xorl	%r9d, %r9d
0000000000012b14	movq	%rbx, %rdi
0000000000012b17	movl	%eax, %r8d
0000000000012b1a	callq	_mach_msg
0000000000012b1f	movl	%eax, %ebx
0000000000012b21	leal	-0x10000002(%rbx), %eax
0000000000012b27	cmpl	$0xe, %eax
0000000000012b2a	ja	0x12b40
0000000000012b2c	movl	$0x4003, %ecx
0000000000012b31	btl	%eax, %ecx
0000000000012b34	jae	0x12b40
0000000000012b36	movl	-0x2c(%rbp), %edi
0000000000012b39	callq	_mig_put_reply_port
0000000000012b3e	jmp	0x12b8e
0000000000012b40	testl	%ebx, %ebx
0000000000012b42	jne	0x12b6f
0000000000012b44	movl	-0x24(%rbp), %eax
0000000000012b47	cmpl	$0x47, %eax
0000000000012b4a	je	0x12b79
0000000000012b4c	cmpl	$0xc1d, %eax
0000000000012b51	jne	0x12b80
0000000000012b53	movl	$0xfffffed4, %ebx
0000000000012b58	cmpl	$0x0, -0x38(%rbp)
0000000000012b5c	js	0x12b85
0000000000012b5e	cmpl	$0x24, -0x34(%rbp)
0000000000012b62	jne	0x12b85
0000000000012b64	movl	-0x18(%rbp), %ebx
0000000000012b67	testl	%ebx, %ebx
0000000000012b69	jne	0x12b85
0000000000012b6b	xorl	%ebx, %ebx
0000000000012b6d	jmp	0x12b8e
0000000000012b6f	movl	-0x2c(%rbp), %edi
0000000000012b72	callq	_mig_dealloc_reply_port
0000000000012b77	jmp	0x12b8e
0000000000012b79	movl	$0xfffffecc, %ebx
0000000000012b7e	jmp	0x12b85
0000000000012b80	movl	$0xfffffed3, %ebx
0000000000012b85	leaq	-0x38(%rbp), %rdi
0000000000012b89	callq	_mach_msg_destroy
0000000000012b8e	movl	%ebx, %eax
0000000000012b90	addq	$0x38, %rsp
0000000000012b94	popq	%rbx
0000000000012b95	popq	%rbp
0000000000012b96	retq
_processor_info:
0000000000012b97	pushq	%rbp
0000000000012b98	movq	%rsp, %rbp
0000000000012b9b	pushq	%r15
0000000000012b9d	pushq	%r14
0000000000012b9f	pushq	%r13
0000000000012ba1	pushq	%r12
0000000000012ba3	pushq	%rbx
0000000000012ba4	subq	$0x98, %rsp
0000000000012bab	movq	%r8, %r14
0000000000012bae	leaq	_NDR_record(%rip), %rax
0000000000012bb5	movq	(%rax), %rax
0000000000012bb8	leaq	-0xb8(%rbp), %rbx
0000000000012bbf	movq	%rax, 0x18(%rbx)
0000000000012bc3	movl	%esi, 0x20(%rbx)
0000000000012bc6	movl	(%r8), %eax
0000000000012bc9	movl	$0x14, %esi
0000000000012bce	cmpl	%esi, %eax
0000000000012bd0	cmovbl	%eax, %esi
0000000000012bd3	movq	%rcx, %r15
0000000000012bd6	movq	%rdx, %r12
0000000000012bd9	movl	%esi, 0x24(%rbx)
0000000000012bdc	movl	$0x1513, (%rbx)
0000000000012be2	movl	%edi, 0x8(%rbx)
0000000000012be5	callq	_mig_get_reply_port
0000000000012bea	movl	%eax, 0xc(%rbx)
0000000000012bed	movabsq	$0xbba00000000, %rcx
0000000000012bf7	movq	%rcx, 0x10(%rbx)
0000000000012bfb	movl	$0x0, (%rsp)
0000000000012c02	movl	$0x3, %esi
0000000000012c07	movl	$0x28, %edx
0000000000012c0c	movl	$0x8c, %ecx
0000000000012c11	xorl	%r9d, %r9d
0000000000012c14	movq	%rbx, %rdi
0000000000012c17	movl	%eax, %r8d
0000000000012c1a	callq	_mach_msg
0000000000012c1f	movl	%eax, %ebx
0000000000012c21	leal	-0x10000002(%rbx), %eax
0000000000012c27	cmpl	$0xe, %eax
0000000000012c2a	ja	0x12c43
0000000000012c2c	movl	$0x4003, %ecx
0000000000012c31	btl	%eax, %ecx
0000000000012c34	jae	0x12c43
0000000000012c36	movl	-0xac(%rbp), %edi
0000000000012c3c	callq	_mig_put_reply_port
0000000000012c41	jmp	0x12ca9
0000000000012c43	testl	%ebx, %ebx
0000000000012c45	jne	0x12c84
0000000000012c47	movl	-0xa4(%rbp), %eax
0000000000012c4d	cmpl	$0x47, %eax
0000000000012c50	je	0x12c91
0000000000012c52	cmpl	$0xc1e, %eax
0000000000012c57	jne	0x12c98
0000000000012c59	cmpl	$0x0, -0xb8(%rbp)
0000000000012c60	movl	-0xb4(%rbp), %eax
0000000000012c66	js	0x12cbd
0000000000012c68	movl	$0xfffffed4, %ebx
0000000000012c6d	cmpl	$0x24, %eax
0000000000012c70	jne	0x12c9d
0000000000012c72	movl	-0x98(%rbp), %eax
0000000000012c78	testl	%eax, %eax
0000000000012c7a	movl	$0xfffffed4, %ebx
0000000000012c7f	cmovnel	%eax, %ebx
0000000000012c82	jmp	0x12c9d
0000000000012c84	movl	-0xac(%rbp), %edi
0000000000012c8a	callq	_mig_dealloc_reply_port
0000000000012c8f	jmp	0x12ca9
0000000000012c91	movl	$0xfffffecc, %ebx
0000000000012c96	jmp	0x12c9d
0000000000012c98	movl	$0xfffffed3, %ebx
0000000000012c9d	leaq	-0xb8(%rbp), %rdi
0000000000012ca4	callq	_mach_msg_destroy
0000000000012ca9	movl	%ebx, %eax
0000000000012cab	addq	$0x98, %rsp
0000000000012cb2	popq	%rbx
0000000000012cb3	popq	%r12
0000000000012cb5	popq	%r13
0000000000012cb7	popq	%r14
0000000000012cb9	popq	%r15
0000000000012cbb	popq	%rbp
0000000000012cbc	retq
0000000000012cbd	leal	-0x34(%rax), %ecx
0000000000012cc0	movl	$0xfffffed4, %ebx
0000000000012cc5	cmpl	$0x50, %ecx
0000000000012cc8	ja	0x12c9d
0000000000012cca	cmpl	$0x1, -0xa0(%rbp)
0000000000012cd1	jne	0x12c9d
0000000000012cd3	movl	$0xffff0000, %edx
0000000000012cd8	andl	-0x94(%rbp), %edx
0000000000012cde	cmpl	$0x110000, %edx
0000000000012ce4	jne	0x12c9d
0000000000012ce6	movl	-0x88(%rbp), %r13d
0000000000012ced	cmpl	$0x14, %r13d
0000000000012cf1	ja	0x12c9d
0000000000012cf3	shrl	$0x2, %ecx
0000000000012cf6	cmpl	%r13d, %ecx
0000000000012cf9	jb	0x12c9d
0000000000012cfb	leal	0x34(,%r13,4), %ecx
0000000000012d03	cmpl	%ecx, %eax
0000000000012d05	jne	0x12c9d
0000000000012d07	leaq	-0x84(%rbp), %rsi
0000000000012d0e	movl	-0x18(%rsi), %eax
0000000000012d11	movl	%eax, (%r12)
0000000000012d15	movl	(%r14), %edx
0000000000012d18	cmpl	%edx, %r13d
0000000000012d1b	jbe	0x12d35
0000000000012d1d	shll	$0x2, %edx
0000000000012d20	movq	%r15, %rdi
0000000000012d23	callq	_memcpy
0000000000012d28	movl	%r13d, (%r14)
0000000000012d2b	movl	$0xfffffecd, %ebx
0000000000012d30	jmp	0x12ca9
0000000000012d35	leal	(,%r13,4), %eax
0000000000012d3d	movl	%eax, %edx
0000000000012d3f	movq	%r15, %rdi
0000000000012d42	callq	_memcpy
0000000000012d47	movl	%r13d, (%r14)
0000000000012d4a	xorl	%ebx, %ebx
0000000000012d4c	jmp	0x12ca9
_processor_control:
0000000000012d51	pushq	%rbp
0000000000012d52	movq	%rsp, %rbp
0000000000012d55	pushq	%r15
0000000000012d57	pushq	%r14
0000000000012d59	pushq	%rbx
0000000000012d5a	subq	$0x88, %rsp
0000000000012d61	leaq	_NDR_record(%rip), %rax
0000000000012d68	movq	(%rax), %rax
0000000000012d6b	movq	%rax, -0x78(%rbp)
0000000000012d6f	movl	$0xfffffecd, %r15d
0000000000012d75	cmpl	$0x14, %edx
0000000000012d78	ja	0x12e70
0000000000012d7e	movl	%edx, %ebx
0000000000012d80	movl	%edi, %r14d
0000000000012d83	leaq	-0x6c(%rbp), %r15
0000000000012d87	leal	(,%rbx,4), %edx
0000000000012d8e	movq	%r15, %rdi
0000000000012d91	callq	_memcpy
0000000000012d96	movl	%ebx, -0x4(%r15)
0000000000012d9a	leal	0x24(,%rbx,4), %ebx
0000000000012da1	movl	$0x1513, -0x24(%r15)
0000000000012da9	movl	%r14d, -0x1c(%r15)
0000000000012dad	callq	_mig_get_reply_port
0000000000012db2	movl	%eax, -0x18(%r15)
0000000000012db6	movabsq	$0xbbb00000000, %rcx
0000000000012dc0	movq	%rcx, -0x14(%r15)
0000000000012dc4	movl	$0x0, (%rsp)
0000000000012dcb	leaq	-0x90(%rbp), %rdi
0000000000012dd2	movl	$0x3, %esi
0000000000012dd7	movl	$0x2c, %ecx
0000000000012ddc	xorl	%r9d, %r9d
0000000000012ddf	movl	%eax, %r8d
0000000000012de2	movl	%ebx, %edx
0000000000012de4	callq	_mach_msg
0000000000012de9	movl	%eax, %r15d
0000000000012dec	leal	-0x10000002(%r15), %eax
0000000000012df3	cmpl	$0xe, %eax
0000000000012df6	ja	0x12e0f
0000000000012df8	movl	$0x4003, %ecx
0000000000012dfd	btl	%eax, %ecx
0000000000012e00	jae	0x12e0f
0000000000012e02	movl	-0x84(%rbp), %edi
0000000000012e08	callq	_mig_put_reply_port
0000000000012e0d	jmp	0x12e70
0000000000012e0f	testl	%r15d, %r15d
0000000000012e12	jne	0x12e49
0000000000012e14	movl	-0x7c(%rbp), %eax
0000000000012e17	cmpl	$0x47, %eax
0000000000012e1a	je	0x12e56
0000000000012e1c	cmpl	$0xc1f, %eax
0000000000012e21	jne	0x12e5e
0000000000012e23	movl	$0xfffffed4, %r15d
0000000000012e29	cmpl	$0x0, -0x90(%rbp)
0000000000012e30	js	0x12e64
0000000000012e32	cmpl	$0x24, -0x8c(%rbp)
0000000000012e39	jne	0x12e64
0000000000012e3b	movl	-0x70(%rbp), %r15d
0000000000012e3f	testl	%r15d, %r15d
0000000000012e42	jne	0x12e64
0000000000012e44	xorl	%r15d, %r15d
0000000000012e47	jmp	0x12e70
0000000000012e49	movl	-0x84(%rbp), %edi
0000000000012e4f	callq	_mig_dealloc_reply_port
0000000000012e54	jmp	0x12e70
0000000000012e56	movl	$0xfffffecc, %r15d
0000000000012e5c	jmp	0x12e64
0000000000012e5e	movl	$0xfffffed3, %r15d
0000000000012e64	leaq	-0x90(%rbp), %rdi
0000000000012e6b	callq	_mach_msg_destroy
0000000000012e70	movl	%r15d, %eax
0000000000012e73	addq	$0x88, %rsp
0000000000012e7a	popq	%rbx
0000000000012e7b	popq	%r14
0000000000012e7d	popq	%r15
0000000000012e7f	popq	%rbp
0000000000012e80	retq
_processor_assign:
0000000000012e81	pushq	%rbp
0000000000012e82	movq	%rsp, %rbp
0000000000012e85	pushq	%rbx
0000000000012e86	subq	$0x48, %rsp
0000000000012e8a	leaq	-0x40(%rbp), %rbx
0000000000012e8e	movl	$0x1, 0x18(%rbx)
0000000000012e95	movl	%esi, 0x1c(%rbx)
0000000000012e98	movl	$0x130000, 0x24(%rbx)
0000000000012e9f	leaq	_NDR_record(%rip), %rax
0000000000012ea6	movq	(%rax), %rax
0000000000012ea9	movq	%rax, 0x28(%rbx)
0000000000012ead	movl	%edx, 0x30(%rbx)
0000000000012eb0	movl	$0x80001513, (%rbx)
0000000000012eb6	movl	%edi, 0x8(%rbx)
0000000000012eb9	callq	_mig_get_reply_port
0000000000012ebe	movl	%eax, 0xc(%rbx)
0000000000012ec1	movabsq	$0xbbc00000000, %rcx
0000000000012ecb	movq	%rcx, 0x10(%rbx)
0000000000012ecf	movl	$0x0, (%rsp)
0000000000012ed6	movl	$0x3, %esi
0000000000012edb	movl	$0x34, %edx
0000000000012ee0	movl	$0x2c, %ecx
0000000000012ee5	xorl	%r9d, %r9d
0000000000012ee8	movq	%rbx, %rdi
0000000000012eeb	movl	%eax, %r8d
0000000000012eee	callq	_mach_msg
0000000000012ef3	movl	%eax, %ebx
0000000000012ef5	leal	-0x10000002(%rbx), %eax
0000000000012efb	cmpl	$0xe, %eax
0000000000012efe	ja	0x12f14
0000000000012f00	movl	$0x4003, %ecx
0000000000012f05	btl	%eax, %ecx
0000000000012f08	jae	0x12f14
0000000000012f0a	movl	-0x34(%rbp), %edi
0000000000012f0d	callq	_mig_put_reply_port
0000000000012f12	jmp	0x12f62
0000000000012f14	testl	%ebx, %ebx
0000000000012f16	jne	0x12f43
0000000000012f18	movl	-0x2c(%rbp), %eax
0000000000012f1b	cmpl	$0x47, %eax
0000000000012f1e	je	0x12f4d
0000000000012f20	cmpl	$0xc20, %eax
0000000000012f25	jne	0x12f54
0000000000012f27	movl	$0xfffffed4, %ebx
0000000000012f2c	cmpl	$0x0, -0x40(%rbp)
0000000000012f30	js	0x12f59
0000000000012f32	cmpl	$0x24, -0x3c(%rbp)
0000000000012f36	jne	0x12f59
0000000000012f38	movl	-0x20(%rbp), %ebx
0000000000012f3b	testl	%ebx, %ebx
0000000000012f3d	jne	0x12f59
0000000000012f3f	xorl	%ebx, %ebx
0000000000012f41	jmp	0x12f62
0000000000012f43	movl	-0x34(%rbp), %edi
0000000000012f46	callq	_mig_dealloc_reply_port
0000000000012f4b	jmp	0x12f62
0000000000012f4d	movl	$0xfffffecc, %ebx
0000000000012f52	jmp	0x12f59
0000000000012f54	movl	$0xfffffed3, %ebx
0000000000012f59	leaq	-0x40(%rbp), %rdi
0000000000012f5d	callq	_mach_msg_destroy
0000000000012f62	movl	%ebx, %eax
0000000000012f64	addq	$0x48, %rsp
0000000000012f68	popq	%rbx
0000000000012f69	popq	%rbp
0000000000012f6a	retq
_processor_get_assignment:
0000000000012f6b	pushq	%rbp
0000000000012f6c	movq	%rsp, %rbp
0000000000012f6f	pushq	%r14
0000000000012f71	pushq	%rbx
0000000000012f72	subq	$0x40, %rsp
0000000000012f76	movq	%rsi, %r14
0000000000012f79	leaq	-0x40(%rbp), %rbx
0000000000012f7d	movl	$0x1513, (%rbx)
0000000000012f83	movl	%edi, 0x8(%rbx)
0000000000012f86	callq	_mig_get_reply_port
0000000000012f8b	movl	%eax, 0xc(%rbx)
0000000000012f8e	movabsq	$0xbbd00000000, %rcx
0000000000012f98	movq	%rcx, 0x10(%rbx)
0000000000012f9c	movl	$0x0, (%rsp)
0000000000012fa3	movl	$0x3, %esi
0000000000012fa8	movl	$0x18, %edx
0000000000012fad	movl	$0x30, %ecx
0000000000012fb2	xorl	%r9d, %r9d
0000000000012fb5	movq	%rbx, %rdi
0000000000012fb8	movl	%eax, %r8d
0000000000012fbb	callq	_mach_msg
0000000000012fc0	movl	%eax, %ebx
0000000000012fc2	leal	-0x10000002(%rbx), %eax
0000000000012fc8	cmpl	$0xe, %eax
0000000000012fcb	ja	0x12fe1
0000000000012fcd	movl	$0x4003, %ecx
0000000000012fd2	btl	%eax, %ecx
0000000000012fd5	jae	0x12fe1
0000000000012fd7	movl	-0x34(%rbp), %edi
0000000000012fda	callq	_mig_put_reply_port
0000000000012fdf	jmp	0x13035
0000000000012fe1	testl	%ebx, %ebx
0000000000012fe3	jne	0x13016
0000000000012fe5	movl	-0x2c(%rbp), %eax
0000000000012fe8	cmpl	$0x47, %eax
0000000000012feb	je	0x13020
0000000000012fed	cmpl	$0xc21, %eax
0000000000012ff2	jne	0x13027
0000000000012ff4	cmpl	$0x0, -0x40(%rbp)
0000000000012ff8	movl	-0x3c(%rbp), %eax
0000000000012ffb	movl	$0xfffffed4, %ebx
0000000000013000	js	0x13040
0000000000013002	cmpl	$0x24, %eax
0000000000013005	jne	0x1302c
0000000000013007	movl	-0x20(%rbp), %eax
000000000001300a	testl	%eax, %eax
000000000001300c	movl	$0xfffffed4, %ebx
0000000000013011	cmovnel	%eax, %ebx
0000000000013014	jmp	0x1302c
0000000000013016	movl	-0x34(%rbp), %edi
0000000000013019	callq	_mig_dealloc_reply_port
000000000001301e	jmp	0x13035
0000000000013020	movl	$0xfffffecc, %ebx
0000000000013025	jmp	0x1302c
0000000000013027	movl	$0xfffffed3, %ebx
000000000001302c	leaq	-0x40(%rbp), %rdi
0000000000013030	callq	_mach_msg_destroy
0000000000013035	movl	%ebx, %eax
0000000000013037	addq	$0x40, %rsp
000000000001303b	popq	%rbx
000000000001303c	popq	%r14
000000000001303e	popq	%rbp
000000000001303f	retq
0000000000013040	cmpl	$0x28, %eax
0000000000013043	jne	0x1302c
0000000000013045	cmpl	$0x1, -0x28(%rbp)
0000000000013049	jne	0x1302c
000000000001304b	movl	$0xffff0000, %eax
0000000000013050	andl	-0x1c(%rbp), %eax
0000000000013053	cmpl	$0x110000, %eax
0000000000013058	jne	0x1302c
000000000001305a	movl	-0x24(%rbp), %eax
000000000001305d	movl	%eax, (%r14)
0000000000013060	xorl	%ebx, %ebx
0000000000013062	jmp	0x13035
_netname_check_in:
0000000000013064	pushq	%rbp
0000000000013065	movq	%rsp, %rbp
0000000000013068	pushq	%r15
000000000001306a	pushq	%r14
000000000001306c	pushq	%rbx
000000000001306d	subq	$0xa8, %rsp
0000000000013074	movl	%edi, %r14d
0000000000013077	leaq	-0x6c(%rbp), %rdi
000000000001307b	movl	$0x2, -0x2c(%rdi)
0000000000013082	movl	%edx, -0x28(%rdi)
0000000000013085	movl	$0x130000, %eax
000000000001308a	movl	%eax, -0x20(%rdi)
000000000001308d	movl	%ecx, -0x1c(%rdi)
0000000000013090	movl	%eax, -0x14(%rdi)
0000000000013093	leaq	_NDR_record(%rip), %rax
000000000001309a	movq	(%rax), %rax
000000000001309d	movq	%rax, -0x10(%rdi)
00000000000130a1	movl	$0x50, %edx
00000000000130a6	cmpq	$0x0, 0x15f52(%rip)
00000000000130ae	je	0x130b7
00000000000130b0	callq	_mig_strncpy_zerofill
00000000000130b5	jmp	0x130bc
00000000000130b7	callq	_mig_strncpy
00000000000130bc	movl	%eax, %ebx
00000000000130be	leaq	-0xb0(%rbp), %r15
00000000000130c5	movl	%eax, 0x40(%r15)
00000000000130c9	addl	$0x47, %ebx
00000000000130cc	andl	$-0x4, %ebx
00000000000130cf	movl	$0x80001513, (%r15)
00000000000130d6	movl	%r14d, 0x8(%r15)
00000000000130da	callq	_mig_get_reply_port
00000000000130df	movl	%eax, 0xc(%r15)
00000000000130e3	movabsq	$0x41000000000, %rcx
00000000000130ed	movq	%rcx, 0x10(%r15)
00000000000130f1	movl	$0x0, (%rsp)
00000000000130f8	movl	$0x3, %esi
00000000000130fd	movl	$0x2c, %ecx
0000000000013102	xorl	%r9d, %r9d
0000000000013105	movq	%r15, %rdi
0000000000013108	movl	%ebx, %edx
000000000001310a	movl	%eax, %r8d
000000000001310d	callq	_mach_msg
0000000000013112	movl	%eax, %ebx
0000000000013114	leal	-0x10000002(%rbx), %eax
000000000001311a	cmpl	$0xe, %eax
000000000001311d	ja	0x13136
000000000001311f	movl	$0x4003, %ecx
0000000000013124	btl	%eax, %ecx
0000000000013127	jae	0x13136
0000000000013129	movl	-0xa4(%rbp), %edi
000000000001312f	callq	_mig_put_reply_port
0000000000013134	jmp	0x13196
0000000000013136	testl	%ebx, %ebx
0000000000013138	jne	0x13171
000000000001313a	movl	-0x9c(%rbp), %eax
0000000000013140	cmpl	$0x47, %eax
0000000000013143	je	0x1317e
0000000000013145	cmpl	$0x474, %eax
000000000001314a	jne	0x13185
000000000001314c	movl	$0xfffffed4, %ebx
0000000000013151	cmpl	$0x0, -0xb0(%rbp)
0000000000013158	js	0x1318a
000000000001315a	cmpl	$0x24, -0xac(%rbp)
0000000000013161	jne	0x1318a
0000000000013163	movl	-0x90(%rbp), %ebx
0000000000013169	testl	%ebx, %ebx
000000000001316b	jne	0x1318a
000000000001316d	xorl	%ebx, %ebx
000000000001316f	jmp	0x13196
0000000000013171	movl	-0xa4(%rbp), %edi
0000000000013177	callq	_mig_dealloc_reply_port
000000000001317c	jmp	0x13196
000000000001317e	movl	$0xfffffecc, %ebx
0000000000013183	jmp	0x1318a
0000000000013185	movl	$0xfffffed3, %ebx
000000000001318a	leaq	-0xb0(%rbp), %rdi
0000000000013191	callq	_mach_msg_destroy
0000000000013196	movl	%ebx, %eax
0000000000013198	addq	$0xa8, %rsp
000000000001319f	popq	%rbx
00000000000131a0	popq	%r14
00000000000131a2	popq	%r15
00000000000131a4	popq	%rbp
00000000000131a5	retq
_netname_look_up:
00000000000131a6	pushq	%rbp
00000000000131a7	movq	%rsp, %rbp
00000000000131aa	pushq	%r15
00000000000131ac	pushq	%r14
00000000000131ae	pushq	%r13
00000000000131b0	pushq	%r12
00000000000131b2	pushq	%rbx
00000000000131b3	subq	$0xd8, %rsp
00000000000131ba	movq	%rcx, %r14
00000000000131bd	movq	%rdx, %r12
00000000000131c0	movl	%edi, %r15d
00000000000131c3	leaq	_NDR_record(%rip), %rax
00000000000131ca	movq	(%rax), %rax
00000000000131cd	leaq	-0xd0(%rbp), %rdi
00000000000131d4	movq	%rax, -0x10(%rdi)
00000000000131d8	movl	$0x50, %edx
00000000000131dd	cmpq	$0x0, 0x15e1b(%rip)
00000000000131e5	je	0x131ee
00000000000131e7	callq	_mig_strncpy_zerofill
00000000000131ec	jmp	0x131f3
00000000000131ee	callq	_mig_strncpy
00000000000131f3	movl	%eax, -0xd4(%rbp)
00000000000131f9	addl	$0x3, %eax
00000000000131fc	andl	$-0x4, %eax
00000000000131ff	leal	0x30(%rax), %r13d
0000000000013203	leaq	-0x148(%rbp,%rax), %rbx
000000000001320b	leaq	-0xc8(%rbp,%rax), %rdi
0000000000013213	movl	$0x50, %edx
0000000000013218	movq	%r12, %rsi
000000000001321b	cmpq	$0x0, 0x15ddd(%rip)
0000000000013223	je	0x1322c
0000000000013225	callq	_mig_strncpy_zerofill
000000000001322a	jmp	0x13231
000000000001322c	callq	_mig_strncpy
0000000000013231	movl	%eax, 0x7c(%rbx)
0000000000013234	addl	$0x3, %eax
0000000000013237	andl	$-0x4, %eax
000000000001323a	addl	%eax, %r13d
000000000001323d	leaq	-0xf8(%rbp), %rbx
0000000000013244	movl	$0x1513, (%rbx)
000000000001324a	movl	%r15d, 0x8(%rbx)
000000000001324e	callq	_mig_get_reply_port
0000000000013253	movl	%eax, 0xc(%rbx)
0000000000013256	movabsq	$0x41100000000, %rcx
0000000000013260	movq	%rcx, 0x10(%rbx)
0000000000013264	movl	$0x0, (%rsp)
000000000001326b	movl	$0x3, %esi
0000000000013270	movl	$0x30, %ecx
0000000000013275	xorl	%r9d, %r9d
0000000000013278	movq	%rbx, %rdi
000000000001327b	movl	%r13d, %edx
000000000001327e	movl	%eax, %r8d
0000000000013281	callq	_mach_msg
0000000000013286	movl	%eax, %ebx
0000000000013288	leal	-0x10000002(%rbx), %eax
000000000001328e	cmpl	$0xe, %eax
0000000000013291	ja	0x132aa
0000000000013293	movl	$0x4003, %ecx
0000000000013298	btl	%eax, %ecx
000000000001329b	jae	0x132aa
000000000001329d	movl	-0xec(%rbp), %edi
00000000000132a3	callq	_mig_put_reply_port
00000000000132a8	jmp	0x13310
00000000000132aa	testl	%ebx, %ebx
00000000000132ac	jne	0x132eb
00000000000132ae	movl	-0xe4(%rbp), %eax
00000000000132b4	cmpl	$0x47, %eax
00000000000132b7	je	0x132f8
00000000000132b9	cmpl	$0x475, %eax
00000000000132be	jne	0x132ff
00000000000132c0	cmpl	$0x0, -0xf8(%rbp)
00000000000132c7	movl	-0xf4(%rbp), %eax
00000000000132cd	movl	$0xfffffed4, %ebx
00000000000132d2	js	0x13324
00000000000132d4	cmpl	$0x24, %eax
00000000000132d7	jne	0x13304
00000000000132d9	movl	-0xd8(%rbp), %eax
00000000000132df	testl	%eax, %eax
00000000000132e1	movl	$0xfffffed4, %ebx
00000000000132e6	cmovnel	%eax, %ebx
00000000000132e9	jmp	0x13304
00000000000132eb	movl	-0xec(%rbp), %edi
00000000000132f1	callq	_mig_dealloc_reply_port
00000000000132f6	jmp	0x13310
00000000000132f8	movl	$0xfffffecc, %ebx
00000000000132fd	jmp	0x13304
00000000000132ff	movl	$0xfffffed3, %ebx
0000000000013304	leaq	-0xf8(%rbp), %rdi
000000000001330b	callq	_mach_msg_destroy
0000000000013310	movl	%ebx, %eax
0000000000013312	addq	$0xd8, %rsp
0000000000013319	popq	%rbx
000000000001331a	popq	%r12
000000000001331c	popq	%r13
000000000001331e	popq	%r14
0000000000013320	popq	%r15
0000000000013322	popq	%rbp
0000000000013323	retq
0000000000013324	cmpl	$0x28, %eax
0000000000013327	jne	0x13304
0000000000013329	cmpl	$0x1, -0xe0(%rbp)
0000000000013330	jne	0x13304
0000000000013332	movl	$0xffff0000, %eax
0000000000013337	andl	-0xd4(%rbp), %eax
000000000001333d	cmpl	$0x110000, %eax
0000000000013342	jne	0x13304
0000000000013344	movl	-0xdc(%rbp), %eax
000000000001334a	movl	%eax, (%r14)
000000000001334d	xorl	%ebx, %ebx
000000000001334f	jmp	0x13310
_netname_check_out:
0000000000013351	pushq	%rbp
0000000000013352	movq	%rsp, %rbp
0000000000013355	pushq	%r15
0000000000013357	pushq	%r14
0000000000013359	pushq	%rbx
000000000001335a	subq	$0x98, %rsp
0000000000013361	movl	%edi, %r14d
0000000000013364	leaq	-0x68(%rbp), %rdi
0000000000013368	movl	$0x1, -0x20(%rdi)
000000000001336f	movl	%edx, -0x1c(%rdi)
0000000000013372	movl	$0x130000, -0x14(%rdi)
0000000000013379	leaq	_NDR_record(%rip), %rax
0000000000013380	movq	(%rax), %rax
0000000000013383	movq	%rax, -0x10(%rdi)
0000000000013387	movl	$0x50, %edx
000000000001338c	cmpq	$0x0, 0x15c6c(%rip)
0000000000013394	je	0x1339d
0000000000013396	callq	_mig_strncpy_zerofill
000000000001339b	jmp	0x133a2
000000000001339d	callq	_mig_strncpy
00000000000133a2	movl	%eax, %ebx
00000000000133a4	leaq	-0xa0(%rbp), %r15
00000000000133ab	movl	%eax, 0x34(%r15)
00000000000133af	addl	$0x3b, %ebx
00000000000133b2	andl	$-0x4, %ebx
00000000000133b5	movl	$0x80001513, (%r15)
00000000000133bc	movl	%r14d, 0x8(%r15)
00000000000133c0	callq	_mig_get_reply_port
00000000000133c5	movl	%eax, 0xc(%r15)
00000000000133c9	movabsq	$0x41200000000, %rcx
00000000000133d3	movq	%rcx, 0x10(%r15)
00000000000133d7	movl	$0x0, (%rsp)
00000000000133de	movl	$0x3, %esi
00000000000133e3	movl	$0x2c, %ecx
00000000000133e8	xorl	%r9d, %r9d
00000000000133eb	movq	%r15, %rdi
00000000000133ee	movl	%ebx, %edx
00000000000133f0	movl	%eax, %r8d
00000000000133f3	callq	_mach_msg
00000000000133f8	movl	%eax, %ebx
00000000000133fa	leal	-0x10000002(%rbx), %eax
0000000000013400	cmpl	$0xe, %eax
0000000000013403	ja	0x1341c
0000000000013405	movl	$0x4003, %ecx
000000000001340a	btl	%eax, %ecx
000000000001340d	jae	0x1341c
000000000001340f	movl	-0x94(%rbp), %edi
0000000000013415	callq	_mig_put_reply_port
000000000001341a	jmp	0x13479
000000000001341c	testl	%ebx, %ebx
000000000001341e	jne	0x13454
0000000000013420	movl	-0x8c(%rbp), %eax
0000000000013426	cmpl	$0x47, %eax
0000000000013429	je	0x13461
000000000001342b	cmpl	$0x476, %eax
0000000000013430	jne	0x13468
0000000000013432	movl	$0xfffffed4, %ebx
0000000000013437	cmpl	$0x0, -0xa0(%rbp)
000000000001343e	js	0x1346d
0000000000013440	cmpl	$0x24, -0x9c(%rbp)
0000000000013447	jne	0x1346d
0000000000013449	movl	-0x80(%rbp), %ebx
000000000001344c	testl	%ebx, %ebx
000000000001344e	jne	0x1346d
0000000000013450	xorl	%ebx, %ebx
0000000000013452	jmp	0x13479
0000000000013454	movl	-0x94(%rbp), %edi
000000000001345a	callq	_mig_dealloc_reply_port
000000000001345f	jmp	0x13479
0000000000013461	movl	$0xfffffecc, %ebx
0000000000013466	jmp	0x1346d
0000000000013468	movl	$0xfffffed3, %ebx
000000000001346d	leaq	-0xa0(%rbp), %rdi
0000000000013474	callq	_mach_msg_destroy
0000000000013479	movl	%ebx, %eax
000000000001347b	addq	$0x98, %rsp
0000000000013482	popq	%rbx
0000000000013483	popq	%r14
0000000000013485	popq	%r15
0000000000013487	popq	%rbp
0000000000013488	retq
_netname_version:
0000000000013489	pushq	%rbp
000000000001348a	movq	%rsp, %rbp
000000000001348d	pushq	%r14
000000000001348f	pushq	%rbx
0000000000013490	subq	$0x90, %rsp
0000000000013497	movq	%rsi, %r14
000000000001349a	leaq	-0x98(%rbp), %rbx
00000000000134a1	movl	$0x1513, (%rbx)
00000000000134a7	movl	%edi, 0x8(%rbx)
00000000000134aa	callq	_mig_get_reply_port
00000000000134af	movl	%eax, 0xc(%rbx)
00000000000134b2	movabsq	$0x41300000000, %rcx
00000000000134bc	movq	%rcx, 0x10(%rbx)
00000000000134c0	movl	$0x0, (%rsp)
00000000000134c7	movl	$0x3, %esi
00000000000134cc	movl	$0x18, %edx
00000000000134d1	movl	$0x84, %ecx
00000000000134d6	xorl	%r9d, %r9d
00000000000134d9	movq	%rbx, %rdi
00000000000134dc	movl	%eax, %r8d
00000000000134df	callq	_mach_msg
00000000000134e4	movl	%eax, %ebx
00000000000134e6	leal	-0x10000002(%rbx), %eax
00000000000134ec	cmpl	$0xe, %eax
00000000000134ef	ja	0x1350b
00000000000134f1	movl	$0x4003, %ecx
00000000000134f6	btl	%eax, %ecx
00000000000134f9	jae	0x1350b
00000000000134fb	movl	-0x8c(%rbp), %edi
0000000000013501	callq	_mig_put_reply_port
0000000000013506	jmp	0x135b4
000000000001350b	testl	%ebx, %ebx
000000000001350d	jne	0x13551
000000000001350f	movl	-0x84(%rbp), %eax
0000000000013515	cmpl	$0x47, %eax
0000000000013518	je	0x1355e
000000000001351a	cmpl	$0x477, %eax
000000000001351f	jne	0x13565
0000000000013521	cmpl	$0x0, -0x98(%rbp)
0000000000013528	js	0x135a3
000000000001352a	movl	-0x94(%rbp), %eax
0000000000013530	leal	-0x2c(%rax), %ecx
0000000000013533	cmpl	$0x51, %ecx
0000000000013536	jb	0x1356c
0000000000013538	movl	$0xfffffed4, %ebx
000000000001353d	cmpl	$0x24, %eax
0000000000013540	jne	0x135a8
0000000000013542	movl	-0x78(%rbp), %eax
0000000000013545	testl	%eax, %eax
0000000000013547	movl	$0xfffffed4, %ebx
000000000001354c	cmovnel	%eax, %ebx
000000000001354f	jmp	0x135a8
0000000000013551	movl	-0x8c(%rbp), %edi
0000000000013557	callq	_mig_dealloc_reply_port
000000000001355c	jmp	0x135b4
000000000001355e	movl	$0xfffffecc, %ebx
0000000000013563	jmp	0x135a8
0000000000013565	movl	$0xfffffed3, %ebx
000000000001356a	jmp	0x135a8
000000000001356c	movl	-0x78(%rbp), %ebx
000000000001356f	testl	%ebx, %ebx
0000000000013571	jne	0x135a8
0000000000013573	movl	-0x70(%rbp), %edx
0000000000013576	cmpl	$0x50, %edx
0000000000013579	ja	0x135a3
000000000001357b	cmpl	%edx, %ecx
000000000001357d	jb	0x135a3
000000000001357f	addl	$0x2f, %edx
0000000000013582	andl	$-0x4, %edx
0000000000013585	movl	$0xfffffed4, %ebx
000000000001358a	cmpl	%edx, %eax
000000000001358c	jne	0x135a8
000000000001358e	leaq	-0x6c(%rbp), %rsi
0000000000013592	movl	$0x50, %edx
0000000000013597	movq	%r14, %rdi
000000000001359a	callq	_mig_strncpy
000000000001359f	xorl	%ebx, %ebx
00000000000135a1	jmp	0x135b4
00000000000135a3	movl	$0xfffffed4, %ebx
00000000000135a8	leaq	-0x98(%rbp), %rdi
00000000000135af	callq	_mach_msg_destroy
00000000000135b4	movl	%ebx, %eax
00000000000135b6	addq	$0x90, %rsp
00000000000135bd	popq	%rbx
00000000000135be	popq	%r14
00000000000135c0	popq	%rbp
00000000000135c1	retq
_task_create:
00000000000135c2	pushq	%rbp
00000000000135c3	movq	%rsp, %rbp
00000000000135c6	pushq	%r14
00000000000135c8	pushq	%rbx
00000000000135c9	subq	$0x50, %rsp
00000000000135cd	movq	%r8, %r14
00000000000135d0	leaq	-0x50(%rbp), %rbx
00000000000135d4	movl	$0x1, 0x18(%rbx)
00000000000135db	movq	%rsi, 0x1c(%rbx)
00000000000135df	movl	%edx, 0x28(%rbx)
00000000000135e2	movl	$0x2130000, 0x24(%rbx)
00000000000135e9	leaq	_NDR_record(%rip), %rax
00000000000135f0	movq	(%rax), %rax
00000000000135f3	movq	%rax, 0x2c(%rbx)
00000000000135f7	movl	%edx, 0x34(%rbx)
00000000000135fa	movl	%ecx, 0x38(%rbx)
00000000000135fd	movl	$0x80001513, (%rbx)
0000000000013603	movl	%edi, 0x8(%rbx)
0000000000013606	callq	_mig_get_reply_port
000000000001360b	movl	%eax, 0xc(%rbx)
000000000001360e	movabsq	$0xd4800000000, %rcx
0000000000013618	movq	%rcx, 0x10(%rbx)
000000000001361c	movl	$0x0, (%rsp)
0000000000013623	movl	$0x3, %esi
0000000000013628	movl	$0x3c, %edx
000000000001362d	movl	$0x30, %ecx
0000000000013632	xorl	%r9d, %r9d
0000000000013635	movq	%rbx, %rdi
0000000000013638	movl	%eax, %r8d
000000000001363b	callq	_mach_msg
0000000000013640	movl	%eax, %ebx
0000000000013642	leal	-0x10000002(%rbx), %eax
0000000000013648	cmpl	$0xe, %eax
000000000001364b	ja	0x13661
000000000001364d	movl	$0x4003, %ecx
0000000000013652	btl	%eax, %ecx
0000000000013655	jae	0x13661
0000000000013657	movl	-0x44(%rbp), %edi
000000000001365a	callq	_mig_put_reply_port
000000000001365f	jmp	0x136b5
0000000000013661	testl	%ebx, %ebx
0000000000013663	jne	0x13696
0000000000013665	movl	-0x3c(%rbp), %eax
0000000000013668	cmpl	$0x47, %eax
000000000001366b	je	0x136a0
000000000001366d	cmpl	$0xdac, %eax
0000000000013672	jne	0x136a7
0000000000013674	cmpl	$0x0, -0x50(%rbp)
0000000000013678	movl	-0x4c(%rbp), %eax
000000000001367b	movl	$0xfffffed4, %ebx
0000000000013680	js	0x136c0
0000000000013682	cmpl	$0x24, %eax
0000000000013685	jne	0x136ac
0000000000013687	movl	-0x30(%rbp), %eax
000000000001368a	testl	%eax, %eax
000000000001368c	movl	$0xfffffed4, %ebx
0000000000013691	cmovnel	%eax, %ebx
0000000000013694	jmp	0x136ac
0000000000013696	movl	-0x44(%rbp), %edi
0000000000013699	callq	_mig_dealloc_reply_port
000000000001369e	jmp	0x136b5
00000000000136a0	movl	$0xfffffecc, %ebx
00000000000136a5	jmp	0x136ac
00000000000136a7	movl	$0xfffffed3, %ebx
00000000000136ac	leaq	-0x50(%rbp), %rdi
00000000000136b0	callq	_mach_msg_destroy
00000000000136b5	movl	%ebx, %eax
00000000000136b7	addq	$0x50, %rsp
00000000000136bb	popq	%rbx
00000000000136bc	popq	%r14
00000000000136be	popq	%rbp
00000000000136bf	retq
00000000000136c0	cmpl	$0x28, %eax
00000000000136c3	jne	0x136ac
00000000000136c5	cmpl	$0x1, -0x38(%rbp)
00000000000136c9	jne	0x136ac
00000000000136cb	movl	$0xffff0000, %eax
00000000000136d0	andl	-0x2c(%rbp), %eax
00000000000136d3	cmpl	$0x110000, %eax
00000000000136d8	jne	0x136ac
00000000000136da	movl	-0x34(%rbp), %eax
00000000000136dd	movl	%eax, (%r14)
00000000000136e0	xorl	%ebx, %ebx
00000000000136e2	jmp	0x136b5
_task_terminate:
00000000000136e4	pushq	%rbp
00000000000136e5	movq	%rsp, %rbp
00000000000136e8	pushq	%rbx
00000000000136e9	subq	$0x38, %rsp
00000000000136ed	leaq	-0x38(%rbp), %rbx
00000000000136f1	movl	$0x1513, (%rbx)
00000000000136f7	movl	%edi, 0x8(%rbx)
00000000000136fa	callq	_mig_get_reply_port
00000000000136ff	movl	%eax, 0xc(%rbx)
0000000000013702	movabsq	$0xd4900000000, %rcx
000000000001370c	movq	%rcx, 0x10(%rbx)
0000000000013710	movl	$0x0, (%rsp)
0000000000013717	movl	$0x3, %esi
000000000001371c	movl	$0x18, %edx
0000000000013721	movl	$0x2c, %ecx
0000000000013726	xorl	%r9d, %r9d
0000000000013729	movq	%rbx, %rdi
000000000001372c	movl	%eax, %r8d
000000000001372f	callq	_mach_msg
0000000000013734	movl	%eax, %ebx
0000000000013736	leal	-0x10000002(%rbx), %eax
000000000001373c	cmpl	$0xe, %eax
000000000001373f	ja	0x13755
0000000000013741	movl	$0x4003, %ecx
0000000000013746	btl	%eax, %ecx
0000000000013749	jae	0x13755
000000000001374b	movl	-0x2c(%rbp), %edi
000000000001374e	callq	_mig_put_reply_port
0000000000013753	jmp	0x137a3
0000000000013755	testl	%ebx, %ebx
0000000000013757	jne	0x13784
0000000000013759	movl	-0x24(%rbp), %eax
000000000001375c	cmpl	$0x47, %eax
000000000001375f	je	0x1378e
0000000000013761	cmpl	$0xdad, %eax
0000000000013766	jne	0x13795
0000000000013768	movl	$0xfffffed4, %ebx
000000000001376d	cmpl	$0x0, -0x38(%rbp)
0000000000013771	js	0x1379a
0000000000013773	cmpl	$0x24, -0x34(%rbp)
0000000000013777	jne	0x1379a
0000000000013779	movl	-0x18(%rbp), %ebx
000000000001377c	testl	%ebx, %ebx
000000000001377e	jne	0x1379a
0000000000013780	xorl	%ebx, %ebx
0000000000013782	jmp	0x137a3
0000000000013784	movl	-0x2c(%rbp), %edi
0000000000013787	callq	_mig_dealloc_reply_port
000000000001378c	jmp	0x137a3
000000000001378e	movl	$0xfffffecc, %ebx
0000000000013793	jmp	0x1379a
0000000000013795	movl	$0xfffffed3, %ebx
000000000001379a	leaq	-0x38(%rbp), %rdi
000000000001379e	callq	_mach_msg_destroy
00000000000137a3	movl	%ebx, %eax
00000000000137a5	addq	$0x38, %rsp
00000000000137a9	popq	%rbx
00000000000137aa	popq	%rbp
00000000000137ab	retq
_task_suspend:
00000000000137ac	pushq	%rbp
00000000000137ad	movq	%rsp, %rbp
00000000000137b0	pushq	%rbx
00000000000137b1	subq	$0x38, %rsp
00000000000137b5	leaq	-0x38(%rbp), %rbx
00000000000137b9	movl	$0x1513, (%rbx)
00000000000137bf	movl	%edi, 0x8(%rbx)
00000000000137c2	callq	_mig_get_reply_port
00000000000137c7	movl	%eax, 0xc(%rbx)
00000000000137ca	movabsq	$0xd4f00000000, %rcx
00000000000137d4	movq	%rcx, 0x10(%rbx)
00000000000137d8	movl	$0x0, (%rsp)
00000000000137df	movl	$0x3, %esi
00000000000137e4	movl	$0x18, %edx
00000000000137e9	movl	$0x2c, %ecx
00000000000137ee	xorl	%r9d, %r9d
00000000000137f1	movq	%rbx, %rdi
00000000000137f4	movl	%eax, %r8d
00000000000137f7	callq	_mach_msg
00000000000137fc	movl	%eax, %ebx
00000000000137fe	leal	-0x10000002(%rbx), %eax
0000000000013804	cmpl	$0xe, %eax
0000000000013807	ja	0x1381d
0000000000013809	movl	$0x4003, %ecx
000000000001380e	btl	%eax, %ecx
0000000000013811	jae	0x1381d
0000000000013813	movl	-0x2c(%rbp), %edi
0000000000013816	callq	_mig_put_reply_port
000000000001381b	jmp	0x1386b
000000000001381d	testl	%ebx, %ebx
000000000001381f	jne	0x1384c
0000000000013821	movl	-0x24(%rbp), %eax
0000000000013824	cmpl	$0x47, %eax
0000000000013827	je	0x13856
0000000000013829	cmpl	$0xdb3, %eax
000000000001382e	jne	0x1385d
0000000000013830	movl	$0xfffffed4, %ebx
0000000000013835	cmpl	$0x0, -0x38(%rbp)
0000000000013839	js	0x13862
000000000001383b	cmpl	$0x24, -0x34(%rbp)
000000000001383f	jne	0x13862
0000000000013841	movl	-0x18(%rbp), %ebx
0000000000013844	testl	%ebx, %ebx
0000000000013846	jne	0x13862
0000000000013848	xorl	%ebx, %ebx
000000000001384a	jmp	0x1386b
000000000001384c	movl	-0x2c(%rbp), %edi
000000000001384f	callq	_mig_dealloc_reply_port
0000000000013854	jmp	0x1386b
0000000000013856	movl	$0xfffffecc, %ebx
000000000001385b	jmp	0x13862
000000000001385d	movl	$0xfffffed3, %ebx
0000000000013862	leaq	-0x38(%rbp), %rdi
0000000000013866	callq	_mach_msg_destroy
000000000001386b	movl	%ebx, %eax
000000000001386d	addq	$0x38, %rsp
0000000000013871	popq	%rbx
0000000000013872	popq	%rbp
0000000000013873	retq
_task_resume:
0000000000013874	pushq	%rbp
0000000000013875	movq	%rsp, %rbp
0000000000013878	pushq	%rbx
0000000000013879	subq	$0x38, %rsp
000000000001387d	leaq	-0x38(%rbp), %rbx
0000000000013881	movl	$0x1513, (%rbx)
0000000000013887	movl	%edi, 0x8(%rbx)
000000000001388a	callq	_mig_get_reply_port
000000000001388f	movl	%eax, 0xc(%rbx)
0000000000013892	movabsq	$0xd5000000000, %rcx
000000000001389c	movq	%rcx, 0x10(%rbx)
00000000000138a0	movl	$0x0, (%rsp)
00000000000138a7	movl	$0x3, %esi
00000000000138ac	movl	$0x18, %edx
00000000000138b1	movl	$0x2c, %ecx
00000000000138b6	xorl	%r9d, %r9d
00000000000138b9	movq	%rbx, %rdi
00000000000138bc	movl	%eax, %r8d
00000000000138bf	callq	_mach_msg
00000000000138c4	movl	%eax, %ebx
00000000000138c6	leal	-0x10000002(%rbx), %eax
00000000000138cc	cmpl	$0xe, %eax
00000000000138cf	ja	0x138e5
00000000000138d1	movl	$0x4003, %ecx
00000000000138d6	btl	%eax, %ecx
00000000000138d9	jae	0x138e5
00000000000138db	movl	-0x2c(%rbp), %edi
00000000000138de	callq	_mig_put_reply_port
00000000000138e3	jmp	0x13933
00000000000138e5	testl	%ebx, %ebx
00000000000138e7	jne	0x13914
00000000000138e9	movl	-0x24(%rbp), %eax
00000000000138ec	cmpl	$0x47, %eax
00000000000138ef	je	0x1391e
00000000000138f1	cmpl	$0xdb4, %eax
00000000000138f6	jne	0x13925
00000000000138f8	movl	$0xfffffed4, %ebx
00000000000138fd	cmpl	$0x0, -0x38(%rbp)
0000000000013901	js	0x1392a
0000000000013903	cmpl	$0x24, -0x34(%rbp)
0000000000013907	jne	0x1392a
0000000000013909	movl	-0x18(%rbp), %ebx
000000000001390c	testl	%ebx, %ebx
000000000001390e	jne	0x1392a
0000000000013910	xorl	%ebx, %ebx
0000000000013912	jmp	0x13933
0000000000013914	movl	-0x2c(%rbp), %edi
0000000000013917	callq	_mig_dealloc_reply_port
000000000001391c	jmp	0x13933
000000000001391e	movl	$0xfffffecc, %ebx
0000000000013923	jmp	0x1392a
0000000000013925	movl	$0xfffffed3, %ebx
000000000001392a	leaq	-0x38(%rbp), %rdi
000000000001392e	callq	_mach_msg_destroy
0000000000013933	movl	%ebx, %eax
0000000000013935	addq	$0x38, %rsp
0000000000013939	popq	%rbx
000000000001393a	popq	%rbp
000000000001393b	retq
_thread_create:
000000000001393c	pushq	%rbp
000000000001393d	movq	%rsp, %rbp
0000000000013940	pushq	%r14
0000000000013942	pushq	%rbx
0000000000013943	subq	$0x40, %rsp
0000000000013947	movq	%rsi, %r14
000000000001394a	leaq	-0x40(%rbp), %rbx
000000000001394e	movl	$0x1513, (%rbx)
0000000000013954	movl	%edi, 0x8(%rbx)
0000000000013957	callq	_mig_get_reply_port
000000000001395c	movl	%eax, 0xc(%rbx)
000000000001395f	movabsq	$0xd5300000000, %rcx
0000000000013969	movq	%rcx, 0x10(%rbx)
000000000001396d	movl	$0x0, (%rsp)
0000000000013974	movl	$0x3, %esi
0000000000013979	movl	$0x18, %edx
000000000001397e	movl	$0x30, %ecx
0000000000013983	xorl	%r9d, %r9d
0000000000013986	movq	%rbx, %rdi
0000000000013989	movl	%eax, %r8d
000000000001398c	callq	_mach_msg
0000000000013991	movl	%eax, %ebx
0000000000013993	leal	-0x10000002(%rbx), %eax
0000000000013999	cmpl	$0xe, %eax
000000000001399c	ja	0x139b2
000000000001399e	movl	$0x4003, %ecx
00000000000139a3	btl	%eax, %ecx
00000000000139a6	jae	0x139b2
00000000000139a8	movl	-0x34(%rbp), %edi
00000000000139ab	callq	_mig_put_reply_port
00000000000139b0	jmp	0x13a06
00000000000139b2	testl	%ebx, %ebx
00000000000139b4	jne	0x139e7
00000000000139b6	movl	-0x2c(%rbp), %eax
00000000000139b9	cmpl	$0x47, %eax
00000000000139bc	je	0x139f1
00000000000139be	cmpl	$0xdb7, %eax
00000000000139c3	jne	0x139f8
00000000000139c5	cmpl	$0x0, -0x40(%rbp)
00000000000139c9	movl	-0x3c(%rbp), %eax
00000000000139cc	movl	$0xfffffed4, %ebx
00000000000139d1	js	0x13a11
00000000000139d3	cmpl	$0x24, %eax
00000000000139d6	jne	0x139fd
00000000000139d8	movl	-0x20(%rbp), %eax
00000000000139db	testl	%eax, %eax
00000000000139dd	movl	$0xfffffed4, %ebx
00000000000139e2	cmovnel	%eax, %ebx
00000000000139e5	jmp	0x139fd
00000000000139e7	movl	-0x34(%rbp), %edi
00000000000139ea	callq	_mig_dealloc_reply_port
00000000000139ef	jmp	0x13a06
00000000000139f1	movl	$0xfffffecc, %ebx
00000000000139f6	jmp	0x139fd
00000000000139f8	movl	$0xfffffed3, %ebx
00000000000139fd	leaq	-0x40(%rbp), %rdi
0000000000013a01	callq	_mach_msg_destroy
0000000000013a06	movl	%ebx, %eax
0000000000013a08	addq	$0x40, %rsp
0000000000013a0c	popq	%rbx
0000000000013a0d	popq	%r14
0000000000013a0f	popq	%rbp
0000000000013a10	retq
0000000000013a11	cmpl	$0x28, %eax
0000000000013a14	jne	0x139fd
0000000000013a16	cmpl	$0x1, -0x28(%rbp)
0000000000013a1a	jne	0x139fd
0000000000013a1c	movl	$0xffff0000, %eax
0000000000013a21	andl	-0x1c(%rbp), %eax
0000000000013a24	cmpl	$0x110000, %eax
0000000000013a29	jne	0x139fd
0000000000013a2b	movl	-0x24(%rbp), %eax
0000000000013a2e	movl	%eax, (%r14)
0000000000013a31	xorl	%ebx, %ebx
0000000000013a33	jmp	0x13a06
_thread_create_running:
0000000000013a35	pushq	%rbp
0000000000013a36	movq	%rsp, %rbp
0000000000013a39	pushq	%r15
0000000000013a3b	pushq	%r14
0000000000013a3d	pushq	%r12
0000000000013a3f	pushq	%rbx
0000000000013a40	subq	$0x9d0, %rsp
0000000000013a47	leaq	_NDR_record(%rip), %rax
0000000000013a4e	movq	(%rax), %rax
0000000000013a51	movq	%rax, -0x9c8(%rbp)
0000000000013a58	movl	%esi, -0x9c0(%rbp)
0000000000013a5e	movl	$0xfffffecd, %r15d
0000000000013a64	cmpl	$0x266, %ecx
0000000000013a6a	ja	0x13b79
0000000000013a70	movq	%r8, %r14
0000000000013a73	movl	%ecx, %ebx
0000000000013a75	movl	%edi, %r12d
0000000000013a78	leaq	-0x9b8(%rbp), %r15
0000000000013a7f	leal	(,%rbx,4), %eax
0000000000013a86	movq	%r15, %rdi
0000000000013a89	movq	%rdx, %rsi
0000000000013a8c	movq	%rax, %rdx
0000000000013a8f	callq	_memcpy
0000000000013a94	movl	%ebx, -0x4(%r15)
0000000000013a98	leal	0x28(,%rbx,4), %ebx
0000000000013a9f	movl	$0x1513, -0x28(%r15)
0000000000013aa7	movl	%r12d, -0x20(%r15)
0000000000013aab	callq	_mig_get_reply_port
0000000000013ab0	movl	%eax, -0x1c(%r15)
0000000000013ab4	movabsq	$0xd5400000000, %rcx
0000000000013abe	movq	%rcx, -0x18(%r15)
0000000000013ac2	movl	$0x0, (%rsp)
0000000000013ac9	leaq	-0x9e0(%rbp), %rdi
0000000000013ad0	movl	$0x3, %esi
0000000000013ad5	movl	$0x30, %ecx
0000000000013ada	xorl	%r9d, %r9d
0000000000013add	movl	%eax, %r8d
0000000000013ae0	movl	%ebx, %edx
0000000000013ae2	callq	_mach_msg
0000000000013ae7	movl	%eax, %r15d
0000000000013aea	leal	-0x10000002(%r15), %eax
0000000000013af1	cmpl	$0xe, %eax
0000000000013af4	ja	0x13b0d
0000000000013af6	movl	$0x4003, %ecx
0000000000013afb	btl	%eax, %ecx
0000000000013afe	jae	0x13b0d
0000000000013b00	movl	-0x9d4(%rbp), %edi
0000000000013b06	callq	_mig_put_reply_port
0000000000013b0b	jmp	0x13b79
0000000000013b0d	testl	%r15d, %r15d
0000000000013b10	jne	0x13b52
0000000000013b12	movl	-0x9cc(%rbp), %eax
0000000000013b18	cmpl	$0x47, %eax
0000000000013b1b	je	0x13b5f
0000000000013b1d	cmpl	$0xdb8, %eax
0000000000013b22	jne	0x13b67
0000000000013b24	cmpl	$0x0, -0x9e0(%rbp)
0000000000013b2b	movl	-0x9dc(%rbp), %eax
0000000000013b31	movl	$0xfffffed4, %r15d
0000000000013b37	js	0x13b8c
0000000000013b39	cmpl	$0x24, %eax
0000000000013b3c	jne	0x13b6d
0000000000013b3e	movl	-0x9c0(%rbp), %eax
0000000000013b44	testl	%eax, %eax
0000000000013b46	movl	$0xfffffed4, %r15d
0000000000013b4c	cmovnel	%eax, %r15d
0000000000013b50	jmp	0x13b6d
0000000000013b52	movl	-0x9d4(%rbp), %edi
0000000000013b58	callq	_mig_dealloc_reply_port
0000000000013b5d	jmp	0x13b79
0000000000013b5f	movl	$0xfffffecc, %r15d
0000000000013b65	jmp	0x13b6d
0000000000013b67	movl	$0xfffffed3, %r15d
0000000000013b6d	leaq	-0x9e0(%rbp), %rdi
0000000000013b74	callq	_mach_msg_destroy
0000000000013b79	movl	%r15d, %eax
0000000000013b7c	addq	$0x9d0, %rsp
0000000000013b83	popq	%rbx
0000000000013b84	popq	%r12
0000000000013b86	popq	%r14
0000000000013b88	popq	%r15
0000000000013b8a	popq	%rbp
0000000000013b8b	retq
0000000000013b8c	cmpl	$0x28, %eax
0000000000013b8f	jne	0x13b6d
0000000000013b91	cmpl	$0x1, -0x9c8(%rbp)
0000000000013b98	jne	0x13b6d
0000000000013b9a	movl	$0xffff0000, %eax
0000000000013b9f	andl	-0x9bc(%rbp), %eax
0000000000013ba5	cmpl	$0x110000, %eax
0000000000013baa	jne	0x13b6d
0000000000013bac	movl	-0x9c4(%rbp), %eax
0000000000013bb2	movl	%eax, (%r14)
0000000000013bb5	xorl	%r15d, %r15d
0000000000013bb8	jmp	0x13b79
_task_swap_exception_ports:
0000000000013bba	pushq	%rbp
0000000000013bbb	movq	%rsp, %rbp
0000000000013bbe	pushq	%r15
0000000000013bc0	pushq	%r14
0000000000013bc2	pushq	%r13
0000000000013bc4	pushq	%r12
0000000000013bc6	pushq	%rbx
0000000000013bc7	subq	$0x338, %rsp
0000000000013bce	movq	%r9, %r14
0000000000013bd1	movl	$0x1, -0x340(%rbp)
0000000000013bdb	movl	%edx, -0x33c(%rbp)
0000000000013be1	movl	$0x130000, -0x334(%rbp)
0000000000013beb	leaq	_NDR_record(%rip), %rax
0000000000013bf2	movq	(%rax), %rax
0000000000013bf5	movq	%rax, -0x330(%rbp)
0000000000013bfc	movl	%esi, -0x328(%rbp)
0000000000013c02	movl	%ecx, -0x324(%rbp)
0000000000013c08	movl	%r8d, -0x320(%rbp)
0000000000013c0f	movl	$0x80001513, -0x358(%rbp)
0000000000013c19	movl	%edi, -0x350(%rbp)
0000000000013c1f	callq	_mig_get_reply_port
0000000000013c24	movl	%eax, -0x34c(%rbp)
0000000000013c2a	movabsq	$0xd5700000000, %rcx
0000000000013c34	movq	%rcx, -0x348(%rbp)
0000000000013c3b	movl	$0x0, (%rsp)
0000000000013c42	leaq	-0x358(%rbp), %r15
0000000000013c49	movl	$0x3, %esi
0000000000013c4e	movl	$0x3c, %edx
0000000000013c53	movl	$0x330, %ecx
0000000000013c58	xorl	%r9d, %r9d
0000000000013c5b	movl	%eax, %r8d
0000000000013c5e	movq	%r15, %rdi
0000000000013c61	callq	_mach_msg
0000000000013c66	movl	%eax, %ebx
0000000000013c68	leal	-0x10000002(%rbx), %eax
0000000000013c6e	cmpl	$0xe, %eax
0000000000013c71	ja	0x13c8a
0000000000013c73	movl	$0x4003, %ecx
0000000000013c78	btl	%eax, %ecx
0000000000013c7b	jae	0x13c8a
0000000000013c7d	movl	-0x34c(%rbp), %edi
0000000000013c83	callq	_mig_put_reply_port
0000000000013c88	jmp	0x13cf0
0000000000013c8a	testl	%ebx, %ebx
0000000000013c8c	jne	0x13ccb
0000000000013c8e	movl	-0x344(%rbp), %eax
0000000000013c94	cmpl	$0x47, %eax
0000000000013c97	je	0x13cd8
0000000000013c99	cmpl	$0xdbb, %eax
0000000000013c9e	jne	0x13cdf
0000000000013ca0	cmpl	$0x0, -0x358(%rbp)
0000000000013ca7	movl	-0x354(%rbp), %eax
0000000000013cad	js	0x13d04
0000000000013caf	movl	$0xfffffed4, %ebx
0000000000013cb4	cmpl	$0x24, %eax
0000000000013cb7	jne	0x13ce4
0000000000013cb9	movl	-0x338(%rbp), %eax
0000000000013cbf	testl	%eax, %eax
0000000000013cc1	movl	$0xfffffed4, %ebx
0000000000013cc6	cmovnel	%eax, %ebx
0000000000013cc9	jmp	0x13ce4
0000000000013ccb	movl	-0x34c(%rbp), %edi
0000000000013cd1	callq	_mig_dealloc_reply_port
0000000000013cd6	jmp	0x13cf0
0000000000013cd8	movl	$0xfffffecc, %ebx
0000000000013cdd	jmp	0x13ce4
0000000000013cdf	movl	$0xfffffed3, %ebx
0000000000013ce4	leaq	-0x358(%rbp), %rdi
0000000000013ceb	callq	_mach_msg_destroy
0000000000013cf0	movl	%ebx, %eax
0000000000013cf2	addq	$0x338, %rsp
0000000000013cf9	popq	%rbx
0000000000013cfa	popq	%r12
0000000000013cfc	popq	%r13
0000000000013cfe	popq	%r14
0000000000013d00	popq	%r15
0000000000013d02	popq	%rbp
0000000000013d03	retq
0000000000013d04	leal	-0x1a8(%rax), %ecx
0000000000013d0a	movl	$0xfffffed4, %ebx
0000000000013d0f	cmpl	$0x180, %ecx
0000000000013d15	ja	0x13ce4
0000000000013d17	cmpl	$0x20, -0x340(%rbp)
0000000000013d1e	jne	0x13ce4
0000000000013d20	leaq	-0x33c(%rbp), %r13
0000000000013d27	leaq	-0x334(%rbp), %rdx
0000000000013d2e	xorl	%esi, %esi
0000000000013d30	cmpl	$0xffffff, (%rdx)
0000000000013d36	ja	0x13ce4
0000000000013d38	incl	%esi
0000000000013d3a	addq	$0xc, %rdx
0000000000013d3e	cmpl	$0x20, %esi
0000000000013d41	jb	0x13d30
0000000000013d43	movslq	-0x1b4(%rbp), %r12
0000000000013d4a	cmpq	$0x20, %r12
0000000000013d4e	ja	0x13ce4
0000000000013d50	shrl	$0x2, %ecx
0000000000013d53	cmpl	%r12d, %ecx
0000000000013d56	jb	0x13ce4
0000000000013d58	leal	(,%r12,4), %ecx
0000000000013d60	leal	0x1a8(%rcx), %edx
0000000000013d66	cmpl	%edx, %eax
0000000000013d68	jb	0x13ce4
0000000000013d6e	subl	%ecx, %eax
0000000000013d70	cmpl	%edx, %eax
0000000000013d72	jb	0x13ce4
0000000000013d78	leal	-0x1a8(%rax), %esi
0000000000013d7e	shrl	$0x2, %esi
0000000000013d81	cmpl	%r12d, %esi
0000000000013d84	jb	0x13ce4
0000000000013d8a	subl	%ecx, %eax
0000000000013d8c	cmpl	%edx, %eax
0000000000013d8e	jne	0x13ce4
0000000000013d94	addl	$0xfffffe58, %eax
0000000000013d99	shrl	$0x2, %eax
0000000000013d9c	cmpl	%r12d, %eax
0000000000013d9f	jb	0x13ce4
0000000000013da5	movl	%ecx, %eax
0000000000013da7	leaq	-0x80(%rax), %rbx
0000000000013dab	leaq	-0x80(%rax,%r15), %r15
0000000000013db0	addq	%r15, %rbx
0000000000013db3	leaq	-0x1b0(%rbp), %rsi
0000000000013dba	movq	%r14, %rdi
0000000000013dbd	movq	%rax, %r14
0000000000013dc0	movq	%rax, %rdx
0000000000013dc3	callq	_memcpy
0000000000013dc8	movq	0x18(%rbp), %rdx
0000000000013dcc	movq	0x10(%rbp), %rax
0000000000013dd0	movl	%r12d, (%rax)
0000000000013dd3	testl	%r12d, %r12d
0000000000013dd6	je	0x13ded
0000000000013dd8	xorl	%eax, %eax
0000000000013dda	movl	(%r13), %ecx
0000000000013dde	movl	%ecx, (%rdx,%rax,4)
0000000000013de1	addq	$0xc, %r13
0000000000013de5	incq	%rax
0000000000013de8	cmpq	%r12, %rax
0000000000013deb	jl	0x13dda
0000000000013ded	addq	$0x228, %r15
0000000000013df4	movq	0x20(%rbp), %rdi
0000000000013df8	movq	%r15, %rsi
0000000000013dfb	movq	%r14, %rdx
0000000000013dfe	callq	_memcpy
0000000000013e03	addq	$0x2a8, %rbx
0000000000013e0a	movq	0x28(%rbp), %rdi
0000000000013e0e	movq	%rbx, %rsi
0000000000013e11	movq	%r14, %rdx
0000000000013e14	callq	_memcpy
0000000000013e19	xorl	%ebx, %ebx
0000000000013e1b	jmp	0x13cf0
_lock_set_create:
0000000000013e20	pushq	%rbp
0000000000013e21	movq	%rsp, %rbp
0000000000013e24	pushq	%r14
0000000000013e26	pushq	%rbx
0000000000013e27	subq	$0x40, %rsp
0000000000013e2b	movq	%rsi, %r14
0000000000013e2e	leaq	_NDR_record(%rip), %rax
0000000000013e35	movq	(%rax), %rax
0000000000013e38	leaq	-0x40(%rbp), %rbx
0000000000013e3c	movq	%rax, 0x18(%rbx)
0000000000013e40	movl	%edx, 0x20(%rbx)
0000000000013e43	movl	%ecx, 0x24(%rbx)
0000000000013e46	movl	$0x1513, (%rbx)
0000000000013e4c	movl	%edi, 0x8(%rbx)
0000000000013e4f	callq	_mig_get_reply_port
0000000000013e54	movl	%eax, 0xc(%rbx)
0000000000013e57	movabsq	$0xd5800000000, %rcx
0000000000013e61	movq	%rcx, 0x10(%rbx)
0000000000013e65	movl	$0x0, (%rsp)
0000000000013e6c	movl	$0x3, %esi
0000000000013e71	movl	$0x28, %edx
0000000000013e76	movl	$0x30, %ecx
0000000000013e7b	xorl	%r9d, %r9d
0000000000013e7e	movq	%rbx, %rdi
0000000000013e81	movl	%eax, %r8d
0000000000013e84	callq	_mach_msg
0000000000013e89	movl	%eax, %ebx
0000000000013e8b	leal	-0x10000002(%rbx), %eax
0000000000013e91	cmpl	$0xe, %eax
0000000000013e94	ja	0x13eaa
0000000000013e96	movl	$0x4003, %ecx
0000000000013e9b	btl	%eax, %ecx
0000000000013e9e	jae	0x13eaa
0000000000013ea0	movl	-0x34(%rbp), %edi
0000000000013ea3	callq	_mig_put_reply_port
0000000000013ea8	jmp	0x13efe
0000000000013eaa	testl	%ebx, %ebx
0000000000013eac	jne	0x13edf
0000000000013eae	movl	-0x2c(%rbp), %eax
0000000000013eb1	cmpl	$0x47, %eax
0000000000013eb4	je	0x13ee9
0000000000013eb6	cmpl	$0xdbc, %eax
0000000000013ebb	jne	0x13ef0
0000000000013ebd	cmpl	$0x0, -0x40(%rbp)
0000000000013ec1	movl	-0x3c(%rbp), %eax
0000000000013ec4	movl	$0xfffffed4, %ebx
0000000000013ec9	js	0x13f09
0000000000013ecb	cmpl	$0x24, %eax
0000000000013ece	jne	0x13ef5
0000000000013ed0	movl	-0x20(%rbp), %eax
0000000000013ed3	testl	%eax, %eax
0000000000013ed5	movl	$0xfffffed4, %ebx
0000000000013eda	cmovnel	%eax, %ebx
0000000000013edd	jmp	0x13ef5
0000000000013edf	movl	-0x34(%rbp), %edi
0000000000013ee2	callq	_mig_dealloc_reply_port
0000000000013ee7	jmp	0x13efe
0000000000013ee9	movl	$0xfffffecc, %ebx
0000000000013eee	jmp	0x13ef5
0000000000013ef0	movl	$0xfffffed3, %ebx
0000000000013ef5	leaq	-0x40(%rbp), %rdi
0000000000013ef9	callq	_mach_msg_destroy
0000000000013efe	movl	%ebx, %eax
0000000000013f00	addq	$0x40, %rsp
0000000000013f04	popq	%rbx
0000000000013f05	popq	%r14
0000000000013f07	popq	%rbp
0000000000013f08	retq
0000000000013f09	cmpl	$0x28, %eax
0000000000013f0c	jne	0x13ef5
0000000000013f0e	cmpl	$0x1, -0x28(%rbp)
0000000000013f12	jne	0x13ef5
0000000000013f14	movl	$0xffff0000, %eax
0000000000013f19	andl	-0x1c(%rbp), %eax
0000000000013f1c	cmpl	$0x110000, %eax
0000000000013f21	jne	0x13ef5
0000000000013f23	movl	-0x24(%rbp), %eax
0000000000013f26	movl	%eax, (%r14)
0000000000013f29	xorl	%ebx, %ebx
0000000000013f2b	jmp	0x13efe
_lock_set_destroy:
0000000000013f2d	pushq	%rbp
0000000000013f2e	movq	%rsp, %rbp
0000000000013f31	pushq	%rbx
0000000000013f32	subq	$0x38, %rsp
0000000000013f36	leaq	-0x38(%rbp), %rbx
0000000000013f3a	movl	$0x1, 0x18(%rbx)
0000000000013f41	movl	%esi, 0x1c(%rbx)
0000000000013f44	movl	$0x130000, 0x24(%rbx)
0000000000013f4b	movl	$0x80001513, (%rbx)
0000000000013f51	movl	%edi, 0x8(%rbx)
0000000000013f54	callq	_mig_get_reply_port
0000000000013f59	movl	%eax, 0xc(%rbx)
0000000000013f5c	movabsq	$0xd5900000000, %rcx
0000000000013f66	movq	%rcx, 0x10(%rbx)
0000000000013f6a	movl	$0x0, (%rsp)
0000000000013f71	movl	$0x3, %esi
0000000000013f76	movl	$0x28, %edx
0000000000013f7b	movl	$0x2c, %ecx
0000000000013f80	xorl	%r9d, %r9d
0000000000013f83	movq	%rbx, %rdi
0000000000013f86	movl	%eax, %r8d
0000000000013f89	callq	_mach_msg
0000000000013f8e	movl	%eax, %ebx
0000000000013f90	leal	-0x10000002(%rbx), %eax
0000000000013f96	cmpl	$0xe, %eax
0000000000013f99	ja	0x13faf
0000000000013f9b	movl	$0x4003, %ecx
0000000000013fa0	btl	%eax, %ecx
0000000000013fa3	jae	0x13faf
0000000000013fa5	movl	-0x2c(%rbp), %edi
0000000000013fa8	callq	_mig_put_reply_port
0000000000013fad	jmp	0x13ffd
0000000000013faf	testl	%ebx, %ebx
0000000000013fb1	jne	0x13fde
0000000000013fb3	movl	-0x24(%rbp), %eax
0000000000013fb6	cmpl	$0x47, %eax
0000000000013fb9	je	0x13fe8
0000000000013fbb	cmpl	$0xdbd, %eax
0000000000013fc0	jne	0x13fef
0000000000013fc2	movl	$0xfffffed4, %ebx
0000000000013fc7	cmpl	$0x0, -0x38(%rbp)
0000000000013fcb	js	0x13ff4
0000000000013fcd	cmpl	$0x24, -0x34(%rbp)
0000000000013fd1	jne	0x13ff4
0000000000013fd3	movl	-0x18(%rbp), %ebx
0000000000013fd6	testl	%ebx, %ebx
0000000000013fd8	jne	0x13ff4
0000000000013fda	xorl	%ebx, %ebx
0000000000013fdc	jmp	0x13ffd
0000000000013fde	movl	-0x2c(%rbp), %edi
0000000000013fe1	callq	_mig_dealloc_reply_port
0000000000013fe6	jmp	0x13ffd
0000000000013fe8	movl	$0xfffffecc, %ebx
0000000000013fed	jmp	0x13ff4
0000000000013fef	movl	$0xfffffed3, %ebx
0000000000013ff4	leaq	-0x38(%rbp), %rdi
0000000000013ff8	callq	_mach_msg_destroy
0000000000013ffd	movl	%ebx, %eax
0000000000013fff	addq	$0x38, %rsp
0000000000014003	popq	%rbx
0000000000014004	popq	%rbp
0000000000014005	retq
_task_policy_get:
0000000000014006	pushq	%rbp
0000000000014007	movq	%rsp, %rbp
000000000001400a	pushq	%r15
000000000001400c	pushq	%r14
000000000001400e	pushq	%r13
0000000000014010	pushq	%r12
0000000000014012	pushq	%rbx
0000000000014013	subq	$0x88, %rsp
000000000001401a	movq	%r8, %r12
000000000001401d	movq	%rcx, %r14
0000000000014020	movq	%rdx, %r15
0000000000014023	leaq	_NDR_record(%rip), %rax
000000000001402a	movq	(%rax), %rax
000000000001402d	leaq	-0xa0(%rbp), %rbx
0000000000014034	movq	%rax, 0x18(%rbx)
0000000000014038	movl	%esi, 0x20(%rbx)
000000000001403b	movl	(%rcx), %eax
000000000001403d	movl	$0x10, %ecx
0000000000014042	cmpl	%ecx, %eax
0000000000014044	cmovbl	%eax, %ecx
0000000000014047	movl	%ecx, 0x24(%rbx)
000000000001404a	movl	(%r8), %eax
000000000001404d	movl	%eax, 0x28(%rbx)
0000000000014050	movl	$0x1513, (%rbx)
0000000000014056	movl	%edi, 0x8(%rbx)
0000000000014059	callq	_mig_get_reply_port
000000000001405e	movl	%eax, 0xc(%rbx)
0000000000014061	movabsq	$0xd5d00000000, %rcx
000000000001406b	movq	%rcx, 0x10(%rbx)
000000000001406f	movl	$0x0, (%rsp)
0000000000014076	movl	$0x3, %esi
000000000001407b	movl	$0x2c, %edx
0000000000014080	movl	$0x74, %ecx
0000000000014085	xorl	%r9d, %r9d
0000000000014088	movq	%rbx, %rdi
000000000001408b	movl	%eax, %r8d
000000000001408e	callq	_mach_msg
0000000000014093	movl	%eax, %ebx
0000000000014095	leal	-0x10000002(%rbx), %eax
000000000001409b	cmpl	$0xe, %eax
000000000001409e	ja	0x140ba
00000000000140a0	movl	$0x4003, %ecx
00000000000140a5	btl	%eax, %ecx
00000000000140a8	jae	0x140ba
00000000000140aa	movl	-0x94(%rbp), %edi
00000000000140b0	callq	_mig_put_reply_port
00000000000140b5	jmp	0x1417e
00000000000140ba	testl	%ebx, %ebx
00000000000140bc	jne	0x14104
00000000000140be	movl	-0x8c(%rbp), %eax
00000000000140c4	cmpl	$0x47, %eax
00000000000140c7	je	0x14111
00000000000140c9	cmpl	$0xdc1, %eax
00000000000140ce	jne	0x14118
00000000000140d0	cmpl	$0x0, -0xa0(%rbp)
00000000000140d7	js	0x1416d
00000000000140dd	movl	-0x9c(%rbp), %eax
00000000000140e3	leal	-0x2c(%rax), %ecx
00000000000140e6	cmpl	$0x41, %ecx
00000000000140e9	jb	0x1411f
00000000000140eb	movl	$0xfffffed4, %ebx
00000000000140f0	cmpl	$0x24, %eax
00000000000140f3	jne	0x14172
00000000000140f5	movl	-0x80(%rbp), %eax
00000000000140f8	testl	%eax, %eax
00000000000140fa	movl	$0xfffffed4, %ebx
00000000000140ff	cmovnel	%eax, %ebx
0000000000014102	jmp	0x14172
0000000000014104	movl	-0x94(%rbp), %edi
000000000001410a	callq	_mig_dealloc_reply_port
000000000001410f	jmp	0x1417e
0000000000014111	movl	$0xfffffecc, %ebx
0000000000014116	jmp	0x14172
0000000000014118	movl	$0xfffffed3, %ebx
000000000001411d	jmp	0x14172
000000000001411f	movl	-0x80(%rbp), %ebx
0000000000014122	testl	%ebx, %ebx
0000000000014124	jne	0x14172
0000000000014126	movl	-0x7c(%rbp), %r13d
000000000001412a	cmpl	$0x10, %r13d
000000000001412e	ja	0x1416d
0000000000014130	shrl	$0x2, %ecx
0000000000014133	cmpl	%r13d, %ecx
0000000000014136	jb	0x1416d
0000000000014138	leal	(,%r13,4), %ecx
0000000000014140	leal	0x2c(%rcx), %edx
0000000000014143	movl	$0xfffffed4, %ebx
0000000000014148	cmpl	%edx, %eax
000000000001414a	jne	0x14172
000000000001414c	leaq	-0x78(%rbp), %rsi
0000000000014150	movl	(%r14), %edx
0000000000014153	cmpl	%edx, %r13d
0000000000014156	jbe	0x14192
0000000000014158	shll	$0x2, %edx
000000000001415b	movq	%r15, %rdi
000000000001415e	callq	_memcpy
0000000000014163	movl	%r13d, (%r14)
0000000000014166	movl	$0xfffffecd, %ebx
000000000001416b	jmp	0x1417e
000000000001416d	movl	$0xfffffed4, %ebx
0000000000014172	leaq	-0xa0(%rbp), %rdi
0000000000014179	callq	_mach_msg_destroy
000000000001417e	movl	%ebx, %eax
0000000000014180	addq	$0x88, %rsp
0000000000014187	popq	%rbx
0000000000014188	popq	%r12
000000000001418a	popq	%r13
000000000001418c	popq	%r14
000000000001418e	popq	%r15
0000000000014190	popq	%rbp
0000000000014191	retq
0000000000014192	movl	%ecx, %ebx
0000000000014194	movq	%r15, %rdi
0000000000014197	movq	%rbx, %rdx
000000000001419a	callq	_memcpy
000000000001419f	movl	%r13d, (%r14)
00000000000141a2	movl	-0x78(%rbp,%rbx), %eax
00000000000141a6	movl	%eax, (%r12)
00000000000141aa	xorl	%ebx, %ebx
00000000000141ac	jmp	0x1417e
_task_sample:
00000000000141ae	pushq	%rbp
00000000000141af	movq	%rsp, %rbp
00000000000141b2	pushq	%rbx
00000000000141b3	subq	$0x38, %rsp
00000000000141b7	leaq	-0x38(%rbp), %rbx
00000000000141bb	movl	$0x1, 0x18(%rbx)
00000000000141c2	movl	%esi, 0x1c(%rbx)
00000000000141c5	movl	$0x140000, 0x24(%rbx)
00000000000141cc	movl	$0x80001513, (%rbx)
00000000000141d2	movl	%edi, 0x8(%rbx)
00000000000141d5	callq	_mig_get_reply_port
00000000000141da	movl	%eax, 0xc(%rbx)
00000000000141dd	movabsq	$0xd5e00000000, %rcx
00000000000141e7	movq	%rcx, 0x10(%rbx)
00000000000141eb	movl	$0x0, (%rsp)
00000000000141f2	movl	$0x3, %esi
00000000000141f7	movl	$0x28, %edx
00000000000141fc	movl	$0x2c, %ecx
0000000000014201	xorl	%r9d, %r9d
0000000000014204	movq	%rbx, %rdi
0000000000014207	movl	%eax, %r8d
000000000001420a	callq	_mach_msg
000000000001420f	movl	%eax, %ebx
0000000000014211	leal	-0x10000002(%rbx), %eax
0000000000014217	cmpl	$0xe, %eax
000000000001421a	ja	0x14230
000000000001421c	movl	$0x4003, %ecx
0000000000014221	btl	%eax, %ecx
0000000000014224	jae	0x14230
0000000000014226	movl	-0x2c(%rbp), %edi
0000000000014229	callq	_mig_put_reply_port
000000000001422e	jmp	0x1427e
0000000000014230	testl	%ebx, %ebx
0000000000014232	jne	0x1425f
0000000000014234	movl	-0x24(%rbp), %eax
0000000000014237	cmpl	$0x47, %eax
000000000001423a	je	0x14269
000000000001423c	cmpl	$0xdc2, %eax
0000000000014241	jne	0x14270
0000000000014243	movl	$0xfffffed4, %ebx
0000000000014248	cmpl	$0x0, -0x38(%rbp)
000000000001424c	js	0x14275
000000000001424e	cmpl	$0x24, -0x34(%rbp)
0000000000014252	jne	0x14275
0000000000014254	movl	-0x18(%rbp), %ebx
0000000000014257	testl	%ebx, %ebx
0000000000014259	jne	0x14275
000000000001425b	xorl	%ebx, %ebx
000000000001425d	jmp	0x1427e
000000000001425f	movl	-0x2c(%rbp), %edi
0000000000014262	callq	_mig_dealloc_reply_port
0000000000014267	jmp	0x1427e
0000000000014269	movl	$0xfffffecc, %ebx
000000000001426e	jmp	0x14275
0000000000014270	movl	$0xfffffed3, %ebx
0000000000014275	leaq	-0x38(%rbp), %rdi
0000000000014279	callq	_mach_msg_destroy
000000000001427e	movl	%ebx, %eax
0000000000014280	addq	$0x38, %rsp
0000000000014284	popq	%rbx
0000000000014285	popq	%rbp
0000000000014286	retq
_task_policy:
0000000000014287	pushq	%rbp
0000000000014288	movq	%rsp, %rbp
000000000001428b	pushq	%r15
000000000001428d	pushq	%r14
000000000001428f	pushq	%r13
0000000000014291	pushq	%r12
0000000000014293	pushq	%rbx
0000000000014294	subq	$0x58, %rsp
0000000000014298	leaq	_NDR_record(%rip), %rax
000000000001429f	movq	(%rax), %rax
00000000000142a2	movq	%rax, -0x60(%rbp)
00000000000142a6	movl	%esi, -0x58(%rbp)
00000000000142a9	movl	$0xfffffecd, %r13d
00000000000142af	cmpl	$0x5, %ecx
00000000000142b2	ja	0x143b9
00000000000142b8	movl	%ecx, %ebx
00000000000142ba	leaq	-0x50(%rbp), %r13
00000000000142be	leal	(,%rbx,4), %r14d
00000000000142c6	movl	%edi, -0x2c(%rbp)
00000000000142c9	movq	%r13, %rdi
00000000000142cc	movq	%rdx, %rsi
00000000000142cf	movq	%r14, %rdx
00000000000142d2	movl	%r9d, %r15d
00000000000142d5	movl	%r8d, %r12d
00000000000142d8	callq	_memcpy
00000000000142dd	movl	%ebx, -0x4(%r13)
00000000000142e1	leal	0x30(,%rbx,4), %eax
00000000000142e8	movl	%eax, -0x30(%rbp)
00000000000142eb	leaq	-0x78(%rbp), %rbx
00000000000142ef	movl	%r12d, 0x28(%r14,%rbx)
00000000000142f4	movl	%r15d, 0x2c(%r14,%rbx)
00000000000142f9	movl	$0x1513, -0x28(%r13)
0000000000014301	movl	-0x2c(%rbp), %eax
0000000000014304	movl	%eax, -0x20(%r13)
0000000000014308	callq	_mig_get_reply_port
000000000001430d	movl	%eax, -0x1c(%r13)
0000000000014311	movabsq	$0xd5f00000000, %rcx
000000000001431b	movq	%rcx, -0x18(%r13)
000000000001431f	movl	$0x0, (%rsp)
0000000000014326	movl	$0x3, %esi
000000000001432b	movl	$0x2c, %ecx
0000000000014330	xorl	%r9d, %r9d
0000000000014333	movq	%rbx, %rdi
0000000000014336	movl	-0x30(%rbp), %edx
0000000000014339	movl	%eax, %r8d
000000000001433c	callq	_mach_msg
0000000000014341	movl	%eax, %r13d
0000000000014344	leal	-0x10000002(%r13), %eax
000000000001434b	cmpl	$0xe, %eax
000000000001434e	ja	0x14364
0000000000014350	movl	$0x4003, %ecx
0000000000014355	btl	%eax, %ecx
0000000000014358	jae	0x14364
000000000001435a	movl	-0x6c(%rbp), %edi
000000000001435d	callq	_mig_put_reply_port
0000000000014362	jmp	0x143b9
0000000000014364	testl	%r13d, %r13d
0000000000014367	jne	0x14398
0000000000014369	movl	-0x64(%rbp), %eax
000000000001436c	cmpl	$0x47, %eax
000000000001436f	je	0x143a2
0000000000014371	cmpl	$0xdc3, %eax
0000000000014376	jne	0x143aa
0000000000014378	movl	$0xfffffed4, %r13d
000000000001437e	cmpl	$0x0, -0x78(%rbp)
0000000000014382	js	0x143b0
0000000000014384	cmpl	$0x24, -0x74(%rbp)
0000000000014388	jne	0x143b0
000000000001438a	movl	-0x58(%rbp), %r13d
000000000001438e	testl	%r13d, %r13d
0000000000014391	jne	0x143b0
0000000000014393	xorl	%r13d, %r13d
0000000000014396	jmp	0x143b9
0000000000014398	movl	-0x6c(%rbp), %edi
000000000001439b	callq	_mig_dealloc_reply_port
00000000000143a0	jmp	0x143b9
00000000000143a2	movl	$0xfffffecc, %r13d
00000000000143a8	jmp	0x143b0
00000000000143aa	movl	$0xfffffed3, %r13d
00000000000143b0	leaq	-0x78(%rbp), %rdi
00000000000143b4	callq	_mach_msg_destroy
00000000000143b9	movl	%r13d, %eax
00000000000143bc	addq	$0x58, %rsp
00000000000143c0	popq	%rbx
00000000000143c1	popq	%r12
00000000000143c3	popq	%r13
00000000000143c5	popq	%r14
00000000000143c7	popq	%r15
00000000000143c9	popq	%rbp
00000000000143ca	retq
_task_set_emulation:
00000000000143cb	pushq	%rbp
00000000000143cc	movq	%rsp, %rbp
00000000000143cf	pushq	%rbx
00000000000143d0	subq	$0x38, %rsp
00000000000143d4	leaq	_NDR_record(%rip), %rax
00000000000143db	movq	(%rax), %rax
00000000000143de	leaq	-0x38(%rbp), %rbx
00000000000143e2	movq	%rax, 0x18(%rbx)
00000000000143e6	movq	%rsi, 0x20(%rbx)
00000000000143ea	movl	%edx, 0x28(%rbx)
00000000000143ed	movl	$0x1513, (%rbx)
00000000000143f3	movl	%edi, 0x8(%rbx)
00000000000143f6	callq	_mig_get_reply_port
00000000000143fb	movl	%eax, 0xc(%rbx)
00000000000143fe	movabsq	$0xd6000000000, %rcx
0000000000014408	movq	%rcx, 0x10(%rbx)
000000000001440c	movl	$0x0, (%rsp)
0000000000014413	movl	$0x3, %esi
0000000000014418	movl	$0x2c, %edx
000000000001441d	movl	$0x2c, %ecx
0000000000014422	xorl	%r9d, %r9d
0000000000014425	movq	%rbx, %rdi
0000000000014428	movl	%eax, %r8d
000000000001442b	callq	_mach_msg
0000000000014430	movl	%eax, %ebx
0000000000014432	leal	-0x10000002(%rbx), %eax
0000000000014438	cmpl	$0xe, %eax
000000000001443b	ja	0x14451
000000000001443d	movl	$0x4003, %ecx
0000000000014442	btl	%eax, %ecx
0000000000014445	jae	0x14451
0000000000014447	movl	-0x2c(%rbp), %edi
000000000001444a	callq	_mig_put_reply_port
000000000001444f	jmp	0x1449f
0000000000014451	testl	%ebx, %ebx
0000000000014453	jne	0x14480
0000000000014455	movl	-0x24(%rbp), %eax
0000000000014458	cmpl	$0x47, %eax
000000000001445b	je	0x1448a
000000000001445d	cmpl	$0xdc4, %eax
0000000000014462	jne	0x14491
0000000000014464	movl	$0xfffffed4, %ebx
0000000000014469	cmpl	$0x0, -0x38(%rbp)
000000000001446d	js	0x14496
000000000001446f	cmpl	$0x24, -0x34(%rbp)
0000000000014473	jne	0x14496
0000000000014475	movl	-0x18(%rbp), %ebx
0000000000014478	testl	%ebx, %ebx
000000000001447a	jne	0x14496
000000000001447c	xorl	%ebx, %ebx
000000000001447e	jmp	0x1449f
0000000000014480	movl	-0x2c(%rbp), %edi
0000000000014483	callq	_mig_dealloc_reply_port
0000000000014488	jmp	0x1449f
000000000001448a	movl	$0xfffffecc, %ebx
000000000001448f	jmp	0x14496
0000000000014491	movl	$0xfffffed3, %ebx
0000000000014496	leaq	-0x38(%rbp), %rdi
000000000001449a	callq	_mach_msg_destroy
000000000001449f	movl	%ebx, %eax
00000000000144a1	addq	$0x38, %rsp
00000000000144a5	popq	%rbx
00000000000144a6	popq	%rbp
00000000000144a7	retq
_task_get_emulation_vector:
00000000000144a8	pushq	%rbp
00000000000144a9	movq	%rsp, %rbp
00000000000144ac	pushq	%r15
00000000000144ae	pushq	%r14
00000000000144b0	pushq	%r12
00000000000144b2	pushq	%rbx
00000000000144b3	subq	$0x50, %rsp
00000000000144b7	movq	%rcx, %r14
00000000000144ba	movq	%rdx, %r15
00000000000144bd	movq	%rsi, %r12
00000000000144c0	leaq	-0x68(%rbp), %rbx
00000000000144c4	movl	$0x1513, (%rbx)
00000000000144ca	movl	%edi, 0x8(%rbx)
00000000000144cd	callq	_mig_get_reply_port
00000000000144d2	movl	%eax, 0xc(%rbx)
00000000000144d5	movabsq	$0xd6100000000, %rcx
00000000000144df	movq	%rcx, 0x10(%rbx)
00000000000144e3	movl	$0x0, (%rsp)
00000000000144ea	movl	$0x3, %esi
00000000000144ef	movl	$0x18, %edx
00000000000144f4	movl	$0x44, %ecx
00000000000144f9	xorl	%r9d, %r9d
00000000000144fc	movq	%rbx, %rdi
00000000000144ff	movl	%eax, %r8d
0000000000014502	callq	_mach_msg
0000000000014507	movl	%eax, %ebx
0000000000014509	leal	-0x10000002(%rbx), %eax
000000000001450f	cmpl	$0xe, %eax
0000000000014512	ja	0x14528
0000000000014514	movl	$0x4003, %ecx
0000000000014519	btl	%eax, %ecx
000000000001451c	jae	0x14528
000000000001451e	movl	-0x5c(%rbp), %edi
0000000000014521	callq	_mig_put_reply_port
0000000000014526	jmp	0x1457c
0000000000014528	testl	%ebx, %ebx
000000000001452a	jne	0x1455d
000000000001452c	movl	-0x54(%rbp), %eax
000000000001452f	cmpl	$0x47, %eax
0000000000014532	je	0x14567
0000000000014534	cmpl	$0xdc5, %eax
0000000000014539	jne	0x1456e
000000000001453b	cmpl	$0x0, -0x68(%rbp)
000000000001453f	movl	-0x64(%rbp), %eax
0000000000014542	movl	$0xfffffed4, %ebx
0000000000014547	js	0x1458b
0000000000014549	cmpl	$0x24, %eax
000000000001454c	jne	0x14573
000000000001454e	movl	-0x48(%rbp), %eax
0000000000014551	testl	%eax, %eax
0000000000014553	movl	$0xfffffed4, %ebx
0000000000014558	cmovnel	%eax, %ebx
000000000001455b	jmp	0x14573
000000000001455d	movl	-0x5c(%rbp), %edi
0000000000014560	callq	_mig_dealloc_reply_port
0000000000014565	jmp	0x1457c
0000000000014567	movl	$0xfffffecc, %ebx
000000000001456c	jmp	0x14573
000000000001456e	movl	$0xfffffed3, %ebx
0000000000014573	leaq	-0x68(%rbp), %rdi
0000000000014577	callq	_mach_msg_destroy
000000000001457c	movl	%ebx, %eax
000000000001457e	addq	$0x50, %rsp
0000000000014582	popq	%rbx
0000000000014583	popq	%r12
0000000000014585	popq	%r14
0000000000014587	popq	%r15
0000000000014589	popq	%rbp
000000000001458a	retq
000000000001458b	cmpl	$0x3c, %eax
000000000001458e	jne	0x14573
0000000000014590	cmpl	$0x1, -0x50(%rbp)
0000000000014594	jne	0x14573
0000000000014596	movl	$0xff000000, %eax
000000000001459b	andl	-0x44(%rbp), %eax
000000000001459e	cmpl	$0x1000000, %eax
00000000000145a3	jne	0x14573
00000000000145a5	movl	-0x40(%rbp), %eax
00000000000145a8	shrl	$0x3, %eax
00000000000145ab	cmpl	-0x30(%rbp), %eax
00000000000145ae	jne	0x14573
00000000000145b0	movl	-0x34(%rbp), %ecx
00000000000145b3	movl	%ecx, (%r12)
00000000000145b7	movq	-0x4c(%rbp), %rcx
00000000000145bb	movq	%rcx, (%r15)
00000000000145be	movl	%eax, (%r14)
00000000000145c1	xorl	%ebx, %ebx
00000000000145c3	jmp	0x1457c
_task_set_emulation_vector:
00000000000145c5	pushq	%rbp
00000000000145c6	movq	%rsp, %rbp
00000000000145c9	pushq	%rbx
00000000000145ca	subq	$0x48, %rsp
00000000000145ce	leaq	-0x48(%rbp), %rbx
00000000000145d2	movl	$0x1, 0x18(%rbx)
00000000000145d9	movq	%rdx, 0x1c(%rbx)
00000000000145dd	leal	(,%rcx,8), %eax
00000000000145e4	movl	%eax, 0x28(%rbx)
00000000000145e7	movl	$0x1000100, 0x24(%rbx)
00000000000145ee	leaq	_NDR_record(%rip), %rax
00000000000145f5	movq	(%rax), %rax
00000000000145f8	movq	%rax, 0x2c(%rbx)
00000000000145fc	movl	%esi, 0x34(%rbx)
00000000000145ff	movl	%ecx, 0x38(%rbx)
0000000000014602	movl	$0x80001513, (%rbx)
0000000000014608	movl	%edi, 0x8(%rbx)
000000000001460b	callq	_mig_get_reply_port
0000000000014610	movl	%eax, 0xc(%rbx)
0000000000014613	movabsq	$0xd6200000000, %rcx
000000000001461d	movq	%rcx, 0x10(%rbx)
0000000000014621	movl	$0x0, (%rsp)
0000000000014628	movl	$0x3, %esi
000000000001462d	movl	$0x3c, %edx
0000000000014632	movl	$0x2c, %ecx
0000000000014637	xorl	%r9d, %r9d
000000000001463a	movq	%rbx, %rdi
000000000001463d	movl	%eax, %r8d
0000000000014640	callq	_mach_msg
0000000000014645	movl	%eax, %ebx
0000000000014647	leal	-0x10000002(%rbx), %eax
000000000001464d	cmpl	$0xe, %eax
0000000000014650	ja	0x14666
0000000000014652	movl	$0x4003, %ecx
0000000000014657	btl	%eax, %ecx
000000000001465a	jae	0x14666
000000000001465c	movl	-0x3c(%rbp), %edi
000000000001465f	callq	_mig_put_reply_port
0000000000014664	jmp	0x146b4
0000000000014666	testl	%ebx, %ebx
0000000000014668	jne	0x14695
000000000001466a	movl	-0x34(%rbp), %eax
000000000001466d	cmpl	$0x47, %eax
0000000000014670	je	0x1469f
0000000000014672	cmpl	$0xdc6, %eax
0000000000014677	jne	0x146a6
0000000000014679	movl	$0xfffffed4, %ebx
000000000001467e	cmpl	$0x0, -0x48(%rbp)
0000000000014682	js	0x146ab
0000000000014684	cmpl	$0x24, -0x44(%rbp)
0000000000014688	jne	0x146ab
000000000001468a	movl	-0x28(%rbp), %ebx
000000000001468d	testl	%ebx, %ebx
000000000001468f	jne	0x146ab
0000000000014691	xorl	%ebx, %ebx
0000000000014693	jmp	0x146b4
0000000000014695	movl	-0x3c(%rbp), %edi
0000000000014698	callq	_mig_dealloc_reply_port
000000000001469d	jmp	0x146b4
000000000001469f	movl	$0xfffffecc, %ebx
00000000000146a4	jmp	0x146ab
00000000000146a6	movl	$0xfffffed3, %ebx
00000000000146ab	leaq	-0x48(%rbp), %rdi
00000000000146af	callq	_mach_msg_destroy
00000000000146b4	movl	%ebx, %eax
00000000000146b6	addq	$0x48, %rsp
00000000000146ba	popq	%rbx
00000000000146bb	popq	%rbp
00000000000146bc	retq
_task_set_ras_pc:
00000000000146bd	pushq	%rbp
00000000000146be	movq	%rsp, %rbp
00000000000146c1	pushq	%rbx
00000000000146c2	subq	$0x38, %rsp
00000000000146c6	leaq	_NDR_record(%rip), %rax
00000000000146cd	movq	(%rax), %rax
00000000000146d0	leaq	-0x38(%rbp), %rbx
00000000000146d4	movq	%rax, 0x18(%rbx)
00000000000146d8	movq	%rsi, 0x20(%rbx)
00000000000146dc	movq	%rdx, 0x28(%rbx)
00000000000146e0	movl	$0x1513, (%rbx)
00000000000146e6	movl	%edi, 0x8(%rbx)
00000000000146e9	callq	_mig_get_reply_port
00000000000146ee	movl	%eax, 0xc(%rbx)
00000000000146f1	movabsq	$0xd6300000000, %rcx
00000000000146fb	movq	%rcx, 0x10(%rbx)
00000000000146ff	movl	$0x0, (%rsp)
0000000000014706	movl	$0x3, %esi
000000000001470b	movl	$0x30, %edx
0000000000014710	movl	$0x2c, %ecx
0000000000014715	xorl	%r9d, %r9d
0000000000014718	movq	%rbx, %rdi
000000000001471b	movl	%eax, %r8d
000000000001471e	callq	_mach_msg
0000000000014723	movl	%eax, %ebx
0000000000014725	leal	-0x10000002(%rbx), %eax
000000000001472b	cmpl	$0xe, %eax
000000000001472e	ja	0x14744
0000000000014730	movl	$0x4003, %ecx
0000000000014735	btl	%eax, %ecx
0000000000014738	jae	0x14744
000000000001473a	movl	-0x2c(%rbp), %edi
000000000001473d	callq	_mig_put_reply_port
0000000000014742	jmp	0x14792
0000000000014744	testl	%ebx, %ebx
0000000000014746	jne	0x14773
0000000000014748	movl	-0x24(%rbp), %eax
000000000001474b	cmpl	$0x47, %eax
000000000001474e	je	0x1477d
0000000000014750	cmpl	$0xdc7, %eax
0000000000014755	jne	0x14784
0000000000014757	movl	$0xfffffed4, %ebx
000000000001475c	cmpl	$0x0, -0x38(%rbp)
0000000000014760	js	0x14789
0000000000014762	cmpl	$0x24, -0x34(%rbp)
0000000000014766	jne	0x14789
0000000000014768	movl	-0x18(%rbp), %ebx
000000000001476b	testl	%ebx, %ebx
000000000001476d	jne	0x14789
000000000001476f	xorl	%ebx, %ebx
0000000000014771	jmp	0x14792
0000000000014773	movl	-0x2c(%rbp), %edi
0000000000014776	callq	_mig_dealloc_reply_port
000000000001477b	jmp	0x14792
000000000001477d	movl	$0xfffffecc, %ebx
0000000000014782	jmp	0x14789
0000000000014784	movl	$0xfffffed3, %ebx
0000000000014789	leaq	-0x38(%rbp), %rdi
000000000001478d	callq	_mach_msg_destroy
0000000000014792	movl	%ebx, %eax
0000000000014794	addq	$0x38, %rsp
0000000000014798	popq	%rbx
0000000000014799	popq	%rbp
000000000001479a	retq
_task_zone_info:
000000000001479b	pushq	%rbp
000000000001479c	movq	%rsp, %rbp
000000000001479f	pushq	%r15
00000000000147a1	pushq	%r14
00000000000147a3	pushq	%r13
00000000000147a5	pushq	%r12
00000000000147a7	pushq	%rbx
00000000000147a8	subq	$0x68, %rsp
00000000000147ac	movq	%r8, %r14
00000000000147af	movq	%rcx, %r15
00000000000147b2	movq	%rdx, %r12
00000000000147b5	movq	%rsi, %r13
00000000000147b8	leaq	-0x80(%rbp), %rbx
00000000000147bc	movl	$0x1513, (%rbx)
00000000000147c2	movl	%edi, 0x8(%rbx)
00000000000147c5	callq	_mig_get_reply_port
00000000000147ca	movl	%eax, 0xc(%rbx)
00000000000147cd	movabsq	$0xd6400000000, %rcx
00000000000147d7	movq	%rcx, 0x10(%rbx)
00000000000147db	movl	$0x0, (%rsp)
00000000000147e2	movl	$0x3, %esi
00000000000147e7	movl	$0x18, %edx
00000000000147ec	movl	$0x54, %ecx
00000000000147f1	xorl	%r9d, %r9d
00000000000147f4	movq	%rbx, %rdi
00000000000147f7	movl	%eax, %r8d
00000000000147fa	callq	_mach_msg
00000000000147ff	movl	%eax, %ebx
0000000000014801	leal	-0x10000002(%rbx), %eax
0000000000014807	cmpl	$0xe, %eax
000000000001480a	ja	0x14820
000000000001480c	movl	$0x4003, %ecx
0000000000014811	btl	%eax, %ecx
0000000000014814	jae	0x14820
0000000000014816	movl	-0x74(%rbp), %edi
0000000000014819	callq	_mig_put_reply_port
000000000001481e	jmp	0x14874
0000000000014820	testl	%ebx, %ebx
0000000000014822	jne	0x14855
0000000000014824	movl	-0x6c(%rbp), %eax
0000000000014827	cmpl	$0x47, %eax
000000000001482a	je	0x1485f
000000000001482c	cmpl	$0xdc8, %eax
0000000000014831	jne	0x14866
0000000000014833	cmpl	$0x0, -0x80(%rbp)
0000000000014837	movl	-0x7c(%rbp), %eax
000000000001483a	movl	$0xfffffed4, %ebx
000000000001483f	js	0x14885
0000000000014841	cmpl	$0x24, %eax
0000000000014844	jne	0x1486b
0000000000014846	movl	-0x60(%rbp), %eax
0000000000014849	testl	%eax, %eax
000000000001484b	movl	$0xfffffed4, %ebx
0000000000014850	cmovnel	%eax, %ebx
0000000000014853	jmp	0x1486b
0000000000014855	movl	-0x74(%rbp), %edi
0000000000014858	callq	_mig_dealloc_reply_port
000000000001485d	jmp	0x14874
000000000001485f	movl	$0xfffffecc, %ebx
0000000000014864	jmp	0x1486b
0000000000014866	movl	$0xfffffed3, %ebx
000000000001486b	leaq	-0x80(%rbp), %rdi
000000000001486f	callq	_mach_msg_destroy
0000000000014874	movl	%ebx, %eax
0000000000014876	addq	$0x68, %rsp
000000000001487a	popq	%rbx
000000000001487b	popq	%r12
000000000001487d	popq	%r13
000000000001487f	popq	%r14
0000000000014881	popq	%r15
0000000000014883	popq	%rbp
0000000000014884	retq
0000000000014885	cmpl	$0x4c, %eax
0000000000014888	jne	0x1486b
000000000001488a	cmpl	$0x2, -0x68(%rbp)
000000000001488e	jne	0x1486b
0000000000014890	movl	$0xff000000, %eax
0000000000014895	movl	-0x5c(%rbp), %ecx
0000000000014898	andl	%eax, %ecx
000000000001489a	cmpl	$0x1000000, %ecx
00000000000148a0	jne	0x1486b
00000000000148a2	andl	-0x4c(%rbp), %eax
00000000000148a5	cmpl	$0x1000000, %eax
00000000000148aa	jne	0x1486b
00000000000148ac	movl	-0x58(%rbp), %ecx
00000000000148af	movl	$0xcccccccd, %eax
00000000000148b4	imulq	%rcx, %rax
00000000000148b8	shrq	$0x26, %rax
00000000000148bc	cmpl	-0x3c(%rbp), %eax
00000000000148bf	jne	0x1486b
00000000000148c1	movl	-0x48(%rbp), %edx
00000000000148c4	movl	$0xba2e8ba3, %ecx
00000000000148c9	imulq	%rdx, %rcx
00000000000148cd	shrq	$0x26, %rcx
00000000000148d1	cmpl	-0x38(%rbp), %ecx
00000000000148d4	jne	0x1486b
00000000000148d6	movq	-0x64(%rbp), %rdx
00000000000148da	movq	%rdx, (%r13)
00000000000148de	movl	%eax, (%r12)
00000000000148e2	movq	-0x54(%rbp), %rax
00000000000148e6	movq	%rax, (%r15)
00000000000148e9	movl	%ecx, (%r14)
00000000000148ec	xorl	%ebx, %ebx
00000000000148ee	jmp	0x14874
_task_assign:
00000000000148f0	pushq	%rbp
00000000000148f1	movq	%rsp, %rbp
00000000000148f4	pushq	%rbx
00000000000148f5	subq	$0x48, %rsp
00000000000148f9	leaq	-0x40(%rbp), %rbx
00000000000148fd	movl	$0x1, 0x18(%rbx)
0000000000014904	movl	%esi, 0x1c(%rbx)
0000000000014907	movl	$0x130000, 0x24(%rbx)
000000000001490e	leaq	_NDR_record(%rip), %rax
0000000000014915	movq	(%rax), %rax
0000000000014918	movq	%rax, 0x28(%rbx)
000000000001491c	movl	%edx, 0x30(%rbx)
000000000001491f	movl	$0x80001513, (%rbx)
0000000000014925	movl	%edi, 0x8(%rbx)
0000000000014928	callq	_mig_get_reply_port
000000000001492d	movl	%eax, 0xc(%rbx)
0000000000014930	movabsq	$0xd6500000000, %rcx
000000000001493a	movq	%rcx, 0x10(%rbx)
000000000001493e	movl	$0x0, (%rsp)
0000000000014945	movl	$0x3, %esi
000000000001494a	movl	$0x34, %edx
000000000001494f	movl	$0x2c, %ecx
0000000000014954	xorl	%r9d, %r9d
0000000000014957	movq	%rbx, %rdi
000000000001495a	movl	%eax, %r8d
000000000001495d	callq	_mach_msg
0000000000014962	movl	%eax, %ebx
0000000000014964	leal	-0x10000002(%rbx), %eax
000000000001496a	cmpl	$0xe, %eax
000000000001496d	ja	0x14983
000000000001496f	movl	$0x4003, %ecx
0000000000014974	btl	%eax, %ecx
0000000000014977	jae	0x14983
0000000000014979	movl	-0x34(%rbp), %edi
000000000001497c	callq	_mig_put_reply_port
0000000000014981	jmp	0x149d1
0000000000014983	testl	%ebx, %ebx
0000000000014985	jne	0x149b2
0000000000014987	movl	-0x2c(%rbp), %eax
000000000001498a	cmpl	$0x47, %eax
000000000001498d	je	0x149bc
000000000001498f	cmpl	$0xdc9, %eax
0000000000014994	jne	0x149c3
0000000000014996	movl	$0xfffffed4, %ebx
000000000001499b	cmpl	$0x0, -0x40(%rbp)
000000000001499f	js	0x149c8
00000000000149a1	cmpl	$0x24, -0x3c(%rbp)
00000000000149a5	jne	0x149c8
00000000000149a7	movl	-0x20(%rbp), %ebx
00000000000149aa	testl	%ebx, %ebx
00000000000149ac	jne	0x149c8
00000000000149ae	xorl	%ebx, %ebx
00000000000149b0	jmp	0x149d1
00000000000149b2	movl	-0x34(%rbp), %edi
00000000000149b5	callq	_mig_dealloc_reply_port
00000000000149ba	jmp	0x149d1
00000000000149bc	movl	$0xfffffecc, %ebx
00000000000149c1	jmp	0x149c8
00000000000149c3	movl	$0xfffffed3, %ebx
00000000000149c8	leaq	-0x40(%rbp), %rdi
00000000000149cc	callq	_mach_msg_destroy
00000000000149d1	movl	%ebx, %eax
00000000000149d3	addq	$0x48, %rsp
00000000000149d7	popq	%rbx
00000000000149d8	popq	%rbp
00000000000149d9	retq
_task_assign_default:
00000000000149da	pushq	%rbp
00000000000149db	movq	%rsp, %rbp
00000000000149de	pushq	%rbx
00000000000149df	subq	$0x38, %rsp
00000000000149e3	leaq	_NDR_record(%rip), %rax
00000000000149ea	movq	(%rax), %rax
00000000000149ed	leaq	-0x38(%rbp), %rbx
00000000000149f1	movq	%rax, 0x18(%rbx)
00000000000149f5	movl	%esi, 0x20(%rbx)
00000000000149f8	movl	$0x1513, (%rbx)
00000000000149fe	movl	%edi, 0x8(%rbx)
0000000000014a01	callq	_mig_get_reply_port
0000000000014a06	movl	%eax, 0xc(%rbx)
0000000000014a09	movabsq	$0xd6600000000, %rcx
0000000000014a13	movq	%rcx, 0x10(%rbx)
0000000000014a17	movl	$0x0, (%rsp)
0000000000014a1e	movl	$0x3, %esi
0000000000014a23	movl	$0x24, %edx
0000000000014a28	movl	$0x2c, %ecx
0000000000014a2d	xorl	%r9d, %r9d
0000000000014a30	movq	%rbx, %rdi
0000000000014a33	movl	%eax, %r8d
0000000000014a36	callq	_mach_msg
0000000000014a3b	movl	%eax, %ebx
0000000000014a3d	leal	-0x10000002(%rbx), %eax
0000000000014a43	cmpl	$0xe, %eax
0000000000014a46	ja	0x14a5c
0000000000014a48	movl	$0x4003, %ecx
0000000000014a4d	btl	%eax, %ecx
0000000000014a50	jae	0x14a5c
0000000000014a52	movl	-0x2c(%rbp), %edi
0000000000014a55	callq	_mig_put_reply_port
0000000000014a5a	jmp	0x14aaa
0000000000014a5c	testl	%ebx, %ebx
0000000000014a5e	jne	0x14a8b
0000000000014a60	movl	-0x24(%rbp), %eax
0000000000014a63	cmpl	$0x47, %eax
0000000000014a66	je	0x14a95
0000000000014a68	cmpl	$0xdca, %eax
0000000000014a6d	jne	0x14a9c
0000000000014a6f	movl	$0xfffffed4, %ebx
0000000000014a74	cmpl	$0x0, -0x38(%rbp)
0000000000014a78	js	0x14aa1
0000000000014a7a	cmpl	$0x24, -0x34(%rbp)
0000000000014a7e	jne	0x14aa1
0000000000014a80	movl	-0x18(%rbp), %ebx
0000000000014a83	testl	%ebx, %ebx
0000000000014a85	jne	0x14aa1
0000000000014a87	xorl	%ebx, %ebx
0000000000014a89	jmp	0x14aaa
0000000000014a8b	movl	-0x2c(%rbp), %edi
0000000000014a8e	callq	_mig_dealloc_reply_port
0000000000014a93	jmp	0x14aaa
0000000000014a95	movl	$0xfffffecc, %ebx
0000000000014a9a	jmp	0x14aa1
0000000000014a9c	movl	$0xfffffed3, %ebx
0000000000014aa1	leaq	-0x38(%rbp), %rdi
0000000000014aa5	callq	_mach_msg_destroy
0000000000014aaa	movl	%ebx, %eax
0000000000014aac	addq	$0x38, %rsp
0000000000014ab0	popq	%rbx
0000000000014ab1	popq	%rbp
0000000000014ab2	retq
_task_get_assignment:
0000000000014ab3	pushq	%rbp
0000000000014ab4	movq	%rsp, %rbp
0000000000014ab7	pushq	%r14
0000000000014ab9	pushq	%rbx
0000000000014aba	subq	$0x40, %rsp
0000000000014abe	movq	%rsi, %r14
0000000000014ac1	leaq	-0x40(%rbp), %rbx
0000000000014ac5	movl	$0x1513, (%rbx)
0000000000014acb	movl	%edi, 0x8(%rbx)
0000000000014ace	callq	_mig_get_reply_port
0000000000014ad3	movl	%eax, 0xc(%rbx)
0000000000014ad6	movabsq	$0xd6700000000, %rcx
0000000000014ae0	movq	%rcx, 0x10(%rbx)
0000000000014ae4	movl	$0x0, (%rsp)
0000000000014aeb	movl	$0x3, %esi
0000000000014af0	movl	$0x18, %edx
0000000000014af5	movl	$0x30, %ecx
0000000000014afa	xorl	%r9d, %r9d
0000000000014afd	movq	%rbx, %rdi
0000000000014b00	movl	%eax, %r8d
0000000000014b03	callq	_mach_msg
0000000000014b08	movl	%eax, %ebx
0000000000014b0a	leal	-0x10000002(%rbx), %eax
0000000000014b10	cmpl	$0xe, %eax
0000000000014b13	ja	0x14b29
0000000000014b15	movl	$0x4003, %ecx
0000000000014b1a	btl	%eax, %ecx
0000000000014b1d	jae	0x14b29
0000000000014b1f	movl	-0x34(%rbp), %edi
0000000000014b22	callq	_mig_put_reply_port
0000000000014b27	jmp	0x14b7d
0000000000014b29	testl	%ebx, %ebx
0000000000014b2b	jne	0x14b5e
0000000000014b2d	movl	-0x2c(%rbp), %eax
0000000000014b30	cmpl	$0x47, %eax
0000000000014b33	je	0x14b68
0000000000014b35	cmpl	$0xdcb, %eax
0000000000014b3a	jne	0x14b6f
0000000000014b3c	cmpl	$0x0, -0x40(%rbp)
0000000000014b40	movl	-0x3c(%rbp), %eax
0000000000014b43	movl	$0xfffffed4, %ebx
0000000000014b48	js	0x14b88
0000000000014b4a	cmpl	$0x24, %eax
0000000000014b4d	jne	0x14b74
0000000000014b4f	movl	-0x20(%rbp), %eax
0000000000014b52	testl	%eax, %eax
0000000000014b54	movl	$0xfffffed4, %ebx
0000000000014b59	cmovnel	%eax, %ebx
0000000000014b5c	jmp	0x14b74
0000000000014b5e	movl	-0x34(%rbp), %edi
0000000000014b61	callq	_mig_dealloc_reply_port
0000000000014b66	jmp	0x14b7d
0000000000014b68	movl	$0xfffffecc, %ebx
0000000000014b6d	jmp	0x14b74
0000000000014b6f	movl	$0xfffffed3, %ebx
0000000000014b74	leaq	-0x40(%rbp), %rdi
0000000000014b78	callq	_mach_msg_destroy
0000000000014b7d	movl	%ebx, %eax
0000000000014b7f	addq	$0x40, %rsp
0000000000014b83	popq	%rbx
0000000000014b84	popq	%r14
0000000000014b86	popq	%rbp
0000000000014b87	retq
0000000000014b88	cmpl	$0x28, %eax
0000000000014b8b	jne	0x14b74
0000000000014b8d	cmpl	$0x1, -0x28(%rbp)
0000000000014b91	jne	0x14b74
0000000000014b93	movl	$0xffff0000, %eax
0000000000014b98	andl	-0x1c(%rbp), %eax
0000000000014b9b	cmpl	$0x110000, %eax
0000000000014ba0	jne	0x14b74
0000000000014ba2	movl	-0x24(%rbp), %eax
0000000000014ba5	movl	%eax, (%r14)
0000000000014ba8	xorl	%ebx, %ebx
0000000000014baa	jmp	0x14b7d
_task_set_policy:
0000000000014bac	pushq	%rbp
0000000000014bad	movq	%rsp, %rbp
0000000000014bb0	pushq	%r15
0000000000014bb2	pushq	%r14
0000000000014bb4	pushq	%r13
0000000000014bb6	pushq	%r12
0000000000014bb8	pushq	%rbx
0000000000014bb9	subq	$0x68, %rsp
0000000000014bbd	movl	$0x1, -0x70(%rbp)
0000000000014bc4	movl	%esi, -0x6c(%rbp)
0000000000014bc7	movl	$0x130000, -0x64(%rbp)
0000000000014bce	leaq	_NDR_record(%rip), %rax
0000000000014bd5	movq	(%rax), %rax
0000000000014bd8	movq	%rax, -0x60(%rbp)
0000000000014bdc	movl	%edx, -0x58(%rbp)
0000000000014bdf	movl	$0xfffffecd, %r12d
0000000000014be5	cmpl	$0x5, %r8d
0000000000014be9	ja	0x14d27
0000000000014bef	movq	%r9, %r15
0000000000014bf2	movl	%r8d, %ebx
0000000000014bf5	movl	%edi, -0x2c(%rbp)
0000000000014bf8	leaq	-0x50(%rbp), %r14
0000000000014bfc	leal	(,%rbx,4), %r13d
0000000000014c04	movq	%r14, %rdi
0000000000014c07	movq	%rcx, %rsi
0000000000014c0a	movq	%r13, %rdx
0000000000014c0d	callq	_memcpy
0000000000014c12	movl	%ebx, -0x4(%r14)
0000000000014c16	movl	0x10(%rbp), %r14d
0000000000014c1a	cmpl	$0x1, %r14d
0000000000014c1e	ja	0x14d27
0000000000014c24	leaq	-0x88(%rbp), %rax
0000000000014c2b	leaq	-0x14(%r13,%rax), %r12
0000000000014c30	leaq	0x50(%r12), %rdi
0000000000014c35	leal	(,%r14,4), %ebx
0000000000014c3d	movq	%r15, %rsi
0000000000014c40	movq	%rbx, %rdx
0000000000014c43	callq	_memcpy
0000000000014c48	movl	%r14d, 0x4c(%r12)
0000000000014c4d	leal	0x40(%r13,%r14,4), %r14d
0000000000014c52	movl	0x18(%rbp), %eax
0000000000014c55	movl	%eax, 0x50(%rbx,%r12)
0000000000014c5a	leaq	-0x88(%rbp), %rbx
0000000000014c61	movl	$0x80001513, (%rbx)
0000000000014c67	movl	-0x2c(%rbp), %eax
0000000000014c6a	movl	%eax, 0x8(%rbx)
0000000000014c6d	callq	_mig_get_reply_port
0000000000014c72	movl	%eax, 0xc(%rbx)
0000000000014c75	movabsq	$0xd6800000000, %rcx
0000000000014c7f	movq	%rcx, 0x10(%rbx)
0000000000014c83	movl	$0x0, (%rsp)
0000000000014c8a	movl	$0x3, %esi
0000000000014c8f	movl	$0x2c, %ecx
0000000000014c94	xorl	%r9d, %r9d
0000000000014c97	movq	%rbx, %rdi
0000000000014c9a	movl	%r14d, %edx
0000000000014c9d	movl	%eax, %r8d
0000000000014ca0	callq	_mach_msg
0000000000014ca5	movl	%eax, %r12d
0000000000014ca8	leal	-0x10000002(%r12), %eax
0000000000014cb0	cmpl	$0xe, %eax
0000000000014cb3	ja	0x14cc9
0000000000014cb5	movl	$0x4003, %ecx
0000000000014cba	btl	%eax, %ecx
0000000000014cbd	jae	0x14cc9
0000000000014cbf	movl	-0x7c(%rbp), %edi
0000000000014cc2	callq	_mig_put_reply_port
0000000000014cc7	jmp	0x14d27
0000000000014cc9	testl	%r12d, %r12d
0000000000014ccc	jne	0x14d03
0000000000014cce	movl	-0x74(%rbp), %eax
0000000000014cd1	cmpl	$0x47, %eax
0000000000014cd4	je	0x14d0d
0000000000014cd6	cmpl	$0xdcc, %eax
0000000000014cdb	jne	0x14d15
0000000000014cdd	movl	$0xfffffed4, %r12d
0000000000014ce3	cmpl	$0x0, -0x88(%rbp)
0000000000014cea	js	0x14d1b
0000000000014cec	cmpl	$0x24, -0x84(%rbp)
0000000000014cf3	jne	0x14d1b
0000000000014cf5	movl	-0x68(%rbp), %r12d
0000000000014cf9	testl	%r12d, %r12d
0000000000014cfc	jne	0x14d1b
0000000000014cfe	xorl	%r12d, %r12d
0000000000014d01	jmp	0x14d27
0000000000014d03	movl	-0x7c(%rbp), %edi
0000000000014d06	callq	_mig_dealloc_reply_port
0000000000014d0b	jmp	0x14d27
0000000000014d0d	movl	$0xfffffecc, %r12d
0000000000014d13	jmp	0x14d1b
0000000000014d15	movl	$0xfffffed3, %r12d
0000000000014d1b	leaq	-0x88(%rbp), %rdi
0000000000014d22	callq	_mach_msg_destroy
0000000000014d27	movl	%r12d, %eax
0000000000014d2a	addq	$0x68, %rsp
0000000000014d2e	popq	%rbx
0000000000014d2f	popq	%r12
0000000000014d31	popq	%r13
0000000000014d33	popq	%r14
0000000000014d35	popq	%r15
0000000000014d37	popq	%rbp
0000000000014d38	retq
_task_get_state:
0000000000014d39	pushq	%rbp
0000000000014d3a	movq	%rsp, %rbp
0000000000014d3d	pushq	%r15
0000000000014d3f	pushq	%r14
0000000000014d41	pushq	%r12
0000000000014d43	pushq	%rbx
0000000000014d44	subq	$0x9d0, %rsp
0000000000014d4b	movq	%rcx, %r15
0000000000014d4e	leaq	_NDR_record(%rip), %rax
0000000000014d55	movq	(%rax), %rax
0000000000014d58	leaq	-0x9e8(%rbp), %rbx
0000000000014d5f	movq	%rax, 0x18(%rbx)
0000000000014d63	movl	%esi, 0x20(%rbx)
0000000000014d66	movl	(%rcx), %eax
0000000000014d68	movl	$0x266, %ecx
0000000000014d6d	cmpl	%ecx, %eax
0000000000014d6f	cmovbl	%eax, %ecx
0000000000014d72	movq	%rdx, %r14
0000000000014d75	movl	%ecx, 0x24(%rbx)
0000000000014d78	movl	$0x1513, (%rbx)
0000000000014d7e	movl	%edi, 0x8(%rbx)
0000000000014d81	callq	_mig_get_reply_port
0000000000014d86	movl	%eax, 0xc(%rbx)
0000000000014d89	movabsq	$0xd6900000000, %rcx
0000000000014d93	movq	%rcx, 0x10(%rbx)
0000000000014d97	movl	$0x0, (%rsp)
0000000000014d9e	movl	$0x3, %esi
0000000000014da3	movl	$0x28, %edx
0000000000014da8	movl	$0x9c8, %ecx
0000000000014dad	xorl	%r9d, %r9d
0000000000014db0	movq	%rbx, %rdi
0000000000014db3	movl	%eax, %r8d
0000000000014db6	callq	_mach_msg
0000000000014dbb	movl	%eax, %ebx
0000000000014dbd	leal	-0x10000002(%rbx), %eax
0000000000014dc3	cmpl	$0xe, %eax
0000000000014dc6	ja	0x14de2
0000000000014dc8	movl	$0x4003, %ecx
0000000000014dcd	btl	%eax, %ecx
0000000000014dd0	jae	0x14de2
0000000000014dd2	movl	-0x9dc(%rbp), %edi
0000000000014dd8	callq	_mig_put_reply_port
0000000000014ddd	jmp	0x14eb9
0000000000014de2	testl	%ebx, %ebx
0000000000014de4	jne	0x14e36
0000000000014de6	movl	-0x9d4(%rbp), %eax
0000000000014dec	cmpl	$0x47, %eax
0000000000014def	je	0x14e43
0000000000014df1	cmpl	$0xdcd, %eax
0000000000014df6	jne	0x14e4a
0000000000014df8	cmpl	$0x0, -0x9e8(%rbp)
0000000000014dff	js	0x14ea8
0000000000014e05	movl	-0x9e4(%rbp), %eax
0000000000014e0b	leal	-0x28(%rax), %ecx
0000000000014e0e	cmpl	$0x999, %ecx
0000000000014e14	jb	0x14e51
0000000000014e16	movl	$0xfffffed4, %ebx
0000000000014e1b	cmpl	$0x24, %eax
0000000000014e1e	jne	0x14ead
0000000000014e24	movl	-0x9c8(%rbp), %eax
0000000000014e2a	testl	%eax, %eax
0000000000014e2c	movl	$0xfffffed4, %ebx
0000000000014e31	cmovnel	%eax, %ebx
0000000000014e34	jmp	0x14ead
0000000000014e36	movl	-0x9dc(%rbp), %edi
0000000000014e3c	callq	_mig_dealloc_reply_port
0000000000014e41	jmp	0x14eb9
0000000000014e43	movl	$0xfffffecc, %ebx
0000000000014e48	jmp	0x14ead
0000000000014e4a	movl	$0xfffffed3, %ebx
0000000000014e4f	jmp	0x14ead
0000000000014e51	movl	-0x9c8(%rbp), %ebx
0000000000014e57	testl	%ebx, %ebx
0000000000014e59	jne	0x14ead
0000000000014e5b	movl	-0x9c4(%rbp), %r12d
0000000000014e62	cmpl	$0x266, %r12d
0000000000014e69	ja	0x14ea8
0000000000014e6b	shrl	$0x2, %ecx
0000000000014e6e	cmpl	%r12d, %ecx
0000000000014e71	jb	0x14ea8
0000000000014e73	leal	0x28(,%r12,4), %ecx
0000000000014e7b	movl	$0xfffffed4, %ebx
0000000000014e80	cmpl	%ecx, %eax
0000000000014e82	jne	0x14ead
0000000000014e84	movl	(%r15), %edx
0000000000014e87	leaq	-0x9c0(%rbp), %rsi
0000000000014e8e	cmpl	%edx, %r12d
0000000000014e91	jbe	0x14ecb
0000000000014e93	shll	$0x2, %edx
0000000000014e96	movq	%r14, %rdi
0000000000014e99	callq	_memcpy
0000000000014e9e	movl	%r12d, (%r15)
0000000000014ea1	movl	$0xfffffecd, %ebx
0000000000014ea6	jmp	0x14eb9
0000000000014ea8	movl	$0xfffffed4, %ebx
0000000000014ead	leaq	-0x9e8(%rbp), %rdi
0000000000014eb4	callq	_mach_msg_destroy
0000000000014eb9	movl	%ebx, %eax
0000000000014ebb	addq	$0x9d0, %rsp
0000000000014ec2	popq	%rbx
0000000000014ec3	popq	%r12
0000000000014ec5	popq	%r14
0000000000014ec7	popq	%r15
0000000000014ec9	popq	%rbp
0000000000014eca	retq
0000000000014ecb	leal	(,%r12,4), %eax
0000000000014ed3	movl	%eax, %edx
0000000000014ed5	movq	%r14, %rdi
0000000000014ed8	callq	_memcpy
0000000000014edd	movl	%r12d, (%r15)
0000000000014ee0	xorl	%ebx, %ebx
0000000000014ee2	jmp	0x14eb9
_task_set_state:
0000000000014ee4	pushq	%rbp
0000000000014ee5	movq	%rsp, %rbp
0000000000014ee8	pushq	%r15
0000000000014eea	pushq	%r14
0000000000014eec	pushq	%rbx
0000000000014eed	subq	$0x9c8, %rsp
0000000000014ef4	leaq	_NDR_record(%rip), %rax
0000000000014efb	movq	(%rax), %rax
0000000000014efe	movq	%rax, -0x9c0(%rbp)
0000000000014f05	movl	%esi, -0x9b8(%rbp)
0000000000014f0b	movl	$0xfffffecd, %r14d
0000000000014f11	cmpl	$0x266, %ecx
0000000000014f17	ja	0x1501e
0000000000014f1d	movl	%ecx, %ebx
0000000000014f1f	movl	%edi, %r15d
0000000000014f22	leaq	-0x9b0(%rbp), %r14
0000000000014f29	leal	(,%rbx,4), %eax
0000000000014f30	movq	%r14, %rdi
0000000000014f33	movq	%rdx, %rsi
0000000000014f36	movq	%rax, %rdx
0000000000014f39	callq	_memcpy
0000000000014f3e	movl	%ebx, -0x4(%r14)
0000000000014f42	leal	0x28(,%rbx,4), %ebx
0000000000014f49	movl	$0x1513, -0x28(%r14)
0000000000014f51	movl	%r15d, -0x20(%r14)
0000000000014f55	callq	_mig_get_reply_port
0000000000014f5a	movl	%eax, -0x1c(%r14)
0000000000014f5e	movabsq	$0xd6a00000000, %rcx
0000000000014f68	movq	%rcx, -0x18(%r14)
0000000000014f6c	movl	$0x0, (%rsp)
0000000000014f73	leaq	-0x9d8(%rbp), %rdi
0000000000014f7a	movl	$0x3, %esi
0000000000014f7f	movl	$0x2c, %ecx
0000000000014f84	xorl	%r9d, %r9d
0000000000014f87	movl	%eax, %r8d
0000000000014f8a	movl	%ebx, %edx
0000000000014f8c	callq	_mach_msg
0000000000014f91	movl	%eax, %r14d
0000000000014f94	leal	-0x10000002(%r14), %eax
0000000000014f9b	cmpl	$0xe, %eax
0000000000014f9e	ja	0x14fb7
0000000000014fa0	movl	$0x4003, %ecx
0000000000014fa5	btl	%eax, %ecx
0000000000014fa8	jae	0x14fb7
0000000000014faa	movl	-0x9cc(%rbp), %edi
0000000000014fb0	callq	_mig_put_reply_port
0000000000014fb5	jmp	0x1501e
0000000000014fb7	testl	%r14d, %r14d
0000000000014fba	jne	0x14ff7
0000000000014fbc	movl	-0x9c4(%rbp), %eax
0000000000014fc2	cmpl	$0x47, %eax
0000000000014fc5	je	0x15004
0000000000014fc7	cmpl	$0xdce, %eax
0000000000014fcc	jne	0x1500c
0000000000014fce	movl	$0xfffffed4, %r14d
0000000000014fd4	cmpl	$0x0, -0x9d8(%rbp)
0000000000014fdb	js	0x15012
0000000000014fdd	cmpl	$0x24, -0x9d4(%rbp)
0000000000014fe4	jne	0x15012
0000000000014fe6	movl	-0x9b8(%rbp), %r14d
0000000000014fed	testl	%r14d, %r14d
0000000000014ff0	jne	0x15012
0000000000014ff2	xorl	%r14d, %r14d
0000000000014ff5	jmp	0x1501e
0000000000014ff7	movl	-0x9cc(%rbp), %edi
0000000000014ffd	callq	_mig_dealloc_reply_port
0000000000015002	jmp	0x1501e
0000000000015004	movl	$0xfffffecc, %r14d
000000000001500a	jmp	0x15012
000000000001500c	movl	$0xfffffed3, %r14d
0000000000015012	leaq	-0x9d8(%rbp), %rdi
0000000000015019	callq	_mach_msg_destroy
000000000001501e	movl	%r14d, %eax
0000000000015021	addq	$0x9c8, %rsp
0000000000015028	popq	%rbx
0000000000015029	popq	%r14
000000000001502b	popq	%r15
000000000001502d	popq	%rbp
000000000001502e	retq
_task_set_phys_footprint_limit:
000000000001502f	pushq	%rbp
0000000000015030	movq	%rsp, %rbp
0000000000015033	pushq	%r14
0000000000015035	pushq	%rbx
0000000000015036	subq	$0x40, %rsp
000000000001503a	movq	%rdx, %r14
000000000001503d	leaq	_NDR_record(%rip), %rax
0000000000015044	movq	(%rax), %rax
0000000000015047	leaq	-0x40(%rbp), %rbx
000000000001504b	movq	%rax, 0x18(%rbx)
000000000001504f	movl	%esi, 0x20(%rbx)
0000000000015052	movl	$0x1513, (%rbx)
0000000000015058	movl	%edi, 0x8(%rbx)
000000000001505b	callq	_mig_get_reply_port
0000000000015060	movl	%eax, 0xc(%rbx)
0000000000015063	movabsq	$0xd6b00000000, %rcx
000000000001506d	movq	%rcx, 0x10(%rbx)
0000000000015071	movl	$0x0, (%rsp)
0000000000015078	movl	$0x3, %esi
000000000001507d	movl	$0x24, %edx
0000000000015082	movl	$0x30, %ecx
0000000000015087	xorl	%r9d, %r9d
000000000001508a	movq	%rbx, %rdi
000000000001508d	movl	%eax, %r8d
0000000000015090	callq	_mach_msg
0000000000015095	movl	%eax, %ebx
0000000000015097	leal	-0x10000002(%rbx), %eax
000000000001509d	cmpl	$0xe, %eax
00000000000150a0	ja	0x150b6
00000000000150a2	movl	$0x4003, %ecx
00000000000150a7	btl	%eax, %ecx
00000000000150aa	jae	0x150b6
00000000000150ac	movl	-0x34(%rbp), %edi
00000000000150af	callq	_mig_put_reply_port
00000000000150b4	jmp	0x1510b
00000000000150b6	testl	%ebx, %ebx
00000000000150b8	jne	0x150ea
00000000000150ba	movl	-0x2c(%rbp), %eax
00000000000150bd	cmpl	$0x47, %eax
00000000000150c0	je	0x150f4
00000000000150c2	cmpl	$0xdcf, %eax
00000000000150c7	jne	0x150fb
00000000000150c9	movl	$0xfffffed4, %eax
00000000000150ce	cmpl	$0x0, -0x40(%rbp)
00000000000150d2	js	0x15100
00000000000150d4	movl	-0x3c(%rbp), %ecx
00000000000150d7	cmpl	$0x28, %ecx
00000000000150da	je	0x15116
00000000000150dc	cmpl	$0x24, %ecx
00000000000150df	jne	0x15100
00000000000150e1	movl	-0x20(%rbp), %ebx
00000000000150e4	testl	%ebx, %ebx
00000000000150e6	jne	0x15102
00000000000150e8	jmp	0x15100
00000000000150ea	movl	-0x34(%rbp), %edi
00000000000150ed	callq	_mig_dealloc_reply_port
00000000000150f2	jmp	0x1510b
00000000000150f4	movl	$0xfffffecc, %eax
00000000000150f9	jmp	0x15100
00000000000150fb	movl	$0xfffffed3, %eax
0000000000015100	movl	%eax, %ebx
0000000000015102	leaq	-0x40(%rbp), %rdi
0000000000015106	callq	_mach_msg_destroy
000000000001510b	movl	%ebx, %eax
000000000001510d	addq	$0x40, %rsp
0000000000015111	popq	%rbx
0000000000015112	popq	%r14
0000000000015114	popq	%rbp
0000000000015115	retq
0000000000015116	movl	-0x20(%rbp), %ebx
0000000000015119	testl	%ebx, %ebx
000000000001511b	jne	0x15102
000000000001511d	movl	-0x1c(%rbp), %eax
0000000000015120	movl	%eax, (%r14)
0000000000015123	xorl	%ebx, %ebx
0000000000015125	jmp	0x1510b
_task_suspend2:
0000000000015127	pushq	%rbp
0000000000015128	movq	%rsp, %rbp
000000000001512b	pushq	%r14
000000000001512d	pushq	%rbx
000000000001512e	subq	$0x40, %rsp
0000000000015132	movq	%rsi, %r14
0000000000015135	leaq	-0x40(%rbp), %rbx
0000000000015139	movl	$0x1513, (%rbx)
000000000001513f	movl	%edi, 0x8(%rbx)
0000000000015142	callq	_mig_get_reply_port
0000000000015147	movl	%eax, 0xc(%rbx)
000000000001514a	movabsq	$0xd6c00000000, %rcx
0000000000015154	movq	%rcx, 0x10(%rbx)
0000000000015158	movl	$0x0, (%rsp)
000000000001515f	movl	$0x3, %esi
0000000000015164	movl	$0x18, %edx
0000000000015169	movl	$0x30, %ecx
000000000001516e	xorl	%r9d, %r9d
0000000000015171	movq	%rbx, %rdi
0000000000015174	movl	%eax, %r8d
0000000000015177	callq	_mach_msg
000000000001517c	movl	%eax, %ebx
000000000001517e	leal	-0x10000002(%rbx), %eax
0000000000015184	cmpl	$0xe, %eax
0000000000015187	ja	0x1519d
0000000000015189	movl	$0x4003, %ecx
000000000001518e	btl	%eax, %ecx
0000000000015191	jae	0x1519d
0000000000015193	movl	-0x34(%rbp), %edi
0000000000015196	callq	_mig_put_reply_port
000000000001519b	jmp	0x151f1
000000000001519d	testl	%ebx, %ebx
000000000001519f	jne	0x151d2
00000000000151a1	movl	-0x2c(%rbp), %eax
00000000000151a4	cmpl	$0x47, %eax
00000000000151a7	je	0x151dc
00000000000151a9	cmpl	$0xdd0, %eax
00000000000151ae	jne	0x151e3
00000000000151b0	cmpl	$0x0, -0x40(%rbp)
00000000000151b4	movl	-0x3c(%rbp), %eax
00000000000151b7	movl	$0xfffffed4, %ebx
00000000000151bc	js	0x151fc
00000000000151be	cmpl	$0x24, %eax
00000000000151c1	jne	0x151e8
00000000000151c3	movl	-0x20(%rbp), %eax
00000000000151c6	testl	%eax, %eax
00000000000151c8	movl	$0xfffffed4, %ebx
00000000000151cd	cmovnel	%eax, %ebx
00000000000151d0	jmp	0x151e8
00000000000151d2	movl	-0x34(%rbp), %edi
00000000000151d5	callq	_mig_dealloc_reply_port
00000000000151da	jmp	0x151f1
00000000000151dc	movl	$0xfffffecc, %ebx
00000000000151e1	jmp	0x151e8
00000000000151e3	movl	$0xfffffed3, %ebx
00000000000151e8	leaq	-0x40(%rbp), %rdi
00000000000151ec	callq	_mach_msg_destroy
00000000000151f1	movl	%ebx, %eax
00000000000151f3	addq	$0x40, %rsp
00000000000151f7	popq	%rbx
00000000000151f8	popq	%r14
00000000000151fa	popq	%rbp
00000000000151fb	retq
00000000000151fc	cmpl	$0x28, %eax
00000000000151ff	jne	0x151e8
0000000000015201	cmpl	$0x1, -0x28(%rbp)
0000000000015205	jne	0x151e8
0000000000015207	movl	$0xffff0000, %eax
000000000001520c	andl	-0x1c(%rbp), %eax
000000000001520f	cmpl	$0x120000, %eax
0000000000015214	jne	0x151e8
0000000000015216	movl	-0x24(%rbp), %eax
0000000000015219	movl	%eax, (%r14)
000000000001521c	xorl	%ebx, %ebx
000000000001521e	jmp	0x151f1
_task_resume2:
0000000000015220	pushq	%rbp
0000000000015221	movq	%rsp, %rbp
0000000000015224	pushq	%rbx
0000000000015225	subq	$0x38, %rsp
0000000000015229	leaq	-0x38(%rbp), %rbx
000000000001522d	movl	$0x1512, (%rbx)
0000000000015233	movl	%edi, 0x8(%rbx)
0000000000015236	callq	_mig_get_reply_port
000000000001523b	movl	%eax, 0xc(%rbx)
000000000001523e	movabsq	$0xd6d00000000, %rcx
0000000000015248	movq	%rcx, 0x10(%rbx)
000000000001524c	movl	$0x0, (%rsp)
0000000000015253	movl	$0x3, %esi
0000000000015258	movl	$0x18, %edx
000000000001525d	movl	$0x2c, %ecx
0000000000015262	xorl	%r9d, %r9d
0000000000015265	movq	%rbx, %rdi
0000000000015268	movl	%eax, %r8d
000000000001526b	callq	_mach_msg
0000000000015270	movl	%eax, %ebx
0000000000015272	leal	-0x10000002(%rbx), %eax
0000000000015278	cmpl	$0xe, %eax
000000000001527b	ja	0x15291
000000000001527d	movl	$0x4003, %ecx
0000000000015282	btl	%eax, %ecx
0000000000015285	jae	0x15291
0000000000015287	movl	-0x2c(%rbp), %edi
000000000001528a	callq	_mig_put_reply_port
000000000001528f	jmp	0x152df
0000000000015291	testl	%ebx, %ebx
0000000000015293	jne	0x152c0
0000000000015295	movl	-0x24(%rbp), %eax
0000000000015298	cmpl	$0x47, %eax
000000000001529b	je	0x152ca
000000000001529d	cmpl	$0xdd1, %eax
00000000000152a2	jne	0x152d1
00000000000152a4	movl	$0xfffffed4, %ebx
00000000000152a9	cmpl	$0x0, -0x38(%rbp)
00000000000152ad	js	0x152d6
00000000000152af	cmpl	$0x24, -0x34(%rbp)
00000000000152b3	jne	0x152d6
00000000000152b5	movl	-0x18(%rbp), %ebx
00000000000152b8	testl	%ebx, %ebx
00000000000152ba	jne	0x152d6
00000000000152bc	xorl	%ebx, %ebx
00000000000152be	jmp	0x152df
00000000000152c0	movl	-0x2c(%rbp), %edi
00000000000152c3	callq	_mig_dealloc_reply_port
00000000000152c8	jmp	0x152df
00000000000152ca	movl	$0xfffffecc, %ebx
00000000000152cf	jmp	0x152d6
00000000000152d1	movl	$0xfffffed3, %ebx
00000000000152d6	leaq	-0x38(%rbp), %rdi
00000000000152da	callq	_mach_msg_destroy
00000000000152df	movl	%ebx, %eax
00000000000152e1	addq	$0x38, %rsp
00000000000152e5	popq	%rbx
00000000000152e6	popq	%rbp
00000000000152e7	retq
_task_purgable_info:
00000000000152e8	pushq	%rbp
00000000000152e9	movq	%rsp, %rbp
00000000000152ec	pushq	%r14
00000000000152ee	pushq	%rbx
00000000000152ef	subq	$0x150, %rsp
00000000000152f6	movq	%rsi, %r14
00000000000152f9	leaq	-0x150(%rbp), %rbx
0000000000015300	movl	$0x1513, (%rbx)
0000000000015306	movl	%edi, 0x8(%rbx)
0000000000015309	callq	_mig_get_reply_port
000000000001530e	movl	%eax, 0xc(%rbx)
0000000000015311	movabsq	$0xd6e00000000, %rcx
000000000001531b	movq	%rcx, 0x10(%rbx)
000000000001531f	movl	$0x0, (%rsp)
0000000000015326	movl	$0x3, %esi
000000000001532b	movl	$0x18, %edx
0000000000015330	movl	$0x13c, %ecx
0000000000015335	xorl	%r9d, %r9d
0000000000015338	movq	%rbx, %rdi
000000000001533b	movl	%eax, %r8d
000000000001533e	callq	_mach_msg
0000000000015343	movl	%eax, %ebx
0000000000015345	leal	-0x10000002(%rbx), %eax
000000000001534b	cmpl	$0xe, %eax
000000000001534e	ja	0x15367
0000000000015350	movl	$0x4003, %ecx
0000000000015355	btl	%eax, %ecx
0000000000015358	jae	0x15367
000000000001535a	movl	-0x144(%rbp), %edi
0000000000015360	callq	_mig_put_reply_port
0000000000015365	jmp	0x153d1
0000000000015367	testl	%ebx, %ebx
0000000000015369	jne	0x153aa
000000000001536b	movl	-0x13c(%rbp), %eax
0000000000015371	cmpl	$0x47, %eax
0000000000015374	je	0x153b7
0000000000015376	cmpl	$0xdd2, %eax
000000000001537b	jne	0x153be
000000000001537d	movl	$0xfffffed4, %eax
0000000000015382	cmpl	$0x0, -0x150(%rbp)
0000000000015389	js	0x153c3
000000000001538b	movl	-0x14c(%rbp), %ecx
0000000000015391	cmpl	$0x134, %ecx
0000000000015397	je	0x153df
0000000000015399	cmpl	$0x24, %ecx
000000000001539c	jne	0x153c3
000000000001539e	movl	-0x130(%rbp), %ebx
00000000000153a4	testl	%ebx, %ebx
00000000000153a6	jne	0x153c5
00000000000153a8	jmp	0x153c3
00000000000153aa	movl	-0x144(%rbp), %edi
00000000000153b0	callq	_mig_dealloc_reply_port
00000000000153b5	jmp	0x153d1
00000000000153b7	movl	$0xfffffecc, %eax
00000000000153bc	jmp	0x153c3
00000000000153be	movl	$0xfffffed3, %eax
00000000000153c3	movl	%eax, %ebx
00000000000153c5	leaq	-0x150(%rbp), %rdi
00000000000153cc	callq	_mach_msg_destroy
00000000000153d1	movl	%ebx, %eax
00000000000153d3	addq	$0x150, %rsp
00000000000153da	popq	%rbx
00000000000153db	popq	%r14
00000000000153dd	popq	%rbp
00000000000153de	retq
00000000000153df	movl	-0x130(%rbp), %ebx
00000000000153e5	testl	%ebx, %ebx
00000000000153e7	jne	0x153c5
00000000000153e9	leaq	-0x12c(%rbp), %rsi
00000000000153f0	movl	$0x110, %edx
00000000000153f5	movq	%r14, %rdi
00000000000153f8	callq	_memcpy
00000000000153fd	xorl	%ebx, %ebx
00000000000153ff	jmp	0x153d1
_task_get_mach_voucher:
0000000000015401	pushq	%rbp
0000000000015402	movq	%rsp, %rbp
0000000000015405	pushq	%r14
0000000000015407	pushq	%rbx
0000000000015408	subq	$0x40, %rsp
000000000001540c	movq	%rdx, %r14
000000000001540f	leaq	_NDR_record(%rip), %rax
0000000000015416	movq	(%rax), %rax
0000000000015419	leaq	-0x40(%rbp), %rbx
000000000001541d	movq	%rax, 0x18(%rbx)
0000000000015421	movl	%esi, 0x20(%rbx)
0000000000015424	movl	$0x1513, (%rbx)
000000000001542a	movl	%edi, 0x8(%rbx)
000000000001542d	callq	_mig_get_reply_port
0000000000015432	movl	%eax, 0xc(%rbx)
0000000000015435	movabsq	$0xd6f00000000, %rcx
000000000001543f	movq	%rcx, 0x10(%rbx)
0000000000015443	movl	$0x0, (%rsp)
000000000001544a	movl	$0x3, %esi
000000000001544f	movl	$0x24, %edx
0000000000015454	movl	$0x30, %ecx
0000000000015459	xorl	%r9d, %r9d
000000000001545c	movq	%rbx, %rdi
000000000001545f	movl	%eax, %r8d
0000000000015462	callq	_mach_msg
0000000000015467	movl	%eax, %ebx
0000000000015469	leal	-0x10000002(%rbx), %eax
000000000001546f	cmpl	$0xe, %eax
0000000000015472	ja	0x15488
0000000000015474	movl	$0x4003, %ecx
0000000000015479	btl	%eax, %ecx
000000000001547c	jae	0x15488
000000000001547e	movl	-0x34(%rbp), %edi
0000000000015481	callq	_mig_put_reply_port
0000000000015486	jmp	0x154dc
0000000000015488	testl	%ebx, %ebx
000000000001548a	jne	0x154bd
000000000001548c	movl	-0x2c(%rbp), %eax
000000000001548f	cmpl	$0x47, %eax
0000000000015492	je	0x154c7
0000000000015494	cmpl	$0xdd3, %eax
0000000000015499	jne	0x154ce
000000000001549b	cmpl	$0x0, -0x40(%rbp)
000000000001549f	movl	-0x3c(%rbp), %eax
00000000000154a2	movl	$0xfffffed4, %ebx
00000000000154a7	js	0x154e7
00000000000154a9	cmpl	$0x24, %eax
00000000000154ac	jne	0x154d3
00000000000154ae	movl	-0x20(%rbp), %eax
00000000000154b1	testl	%eax, %eax
00000000000154b3	movl	$0xfffffed4, %ebx
00000000000154b8	cmovnel	%eax, %ebx
00000000000154bb	jmp	0x154d3
00000000000154bd	movl	-0x34(%rbp), %edi
00000000000154c0	callq	_mig_dealloc_reply_port
00000000000154c5	jmp	0x154dc
00000000000154c7	movl	$0xfffffecc, %ebx
00000000000154cc	jmp	0x154d3
00000000000154ce	movl	$0xfffffed3, %ebx
00000000000154d3	leaq	-0x40(%rbp), %rdi
00000000000154d7	callq	_mach_msg_destroy
00000000000154dc	movl	%ebx, %eax
00000000000154de	addq	$0x40, %rsp
00000000000154e2	popq	%rbx
00000000000154e3	popq	%r14
00000000000154e5	popq	%rbp
00000000000154e6	retq
00000000000154e7	cmpl	$0x28, %eax
00000000000154ea	jne	0x154d3
00000000000154ec	cmpl	$0x1, -0x28(%rbp)
00000000000154f0	jne	0x154d3
00000000000154f2	movl	$0xffff0000, %eax
00000000000154f7	andl	-0x1c(%rbp), %eax
00000000000154fa	cmpl	$0x110000, %eax
00000000000154ff	jne	0x154d3
0000000000015501	movl	-0x24(%rbp), %eax
0000000000015504	movl	%eax, (%r14)
0000000000015507	xorl	%ebx, %ebx
0000000000015509	jmp	0x154dc
_task_set_mach_voucher:
000000000001550b	pushq	%rbp
000000000001550c	movq	%rsp, %rbp
000000000001550f	pushq	%rbx
0000000000015510	subq	$0x38, %rsp
0000000000015514	leaq	-0x38(%rbp), %rbx
0000000000015518	movl	$0x1, 0x18(%rbx)
000000000001551f	movl	%esi, 0x1c(%rbx)
0000000000015522	movl	$0x130000, 0x24(%rbx)
0000000000015529	movl	$0x80001513, (%rbx)
000000000001552f	movl	%edi, 0x8(%rbx)
0000000000015532	callq	_mig_get_reply_port
0000000000015537	movl	%eax, 0xc(%rbx)
000000000001553a	movabsq	$0xd7000000000, %rcx
0000000000015544	movq	%rcx, 0x10(%rbx)
0000000000015548	movl	$0x0, (%rsp)
000000000001554f	movl	$0x3, %esi
0000000000015554	movl	$0x28, %edx
0000000000015559	movl	$0x2c, %ecx
000000000001555e	xorl	%r9d, %r9d
0000000000015561	movq	%rbx, %rdi
0000000000015564	movl	%eax, %r8d
0000000000015567	callq	_mach_msg
000000000001556c	movl	%eax, %ebx
000000000001556e	leal	-0x10000002(%rbx), %eax
0000000000015574	cmpl	$0xe, %eax
0000000000015577	ja	0x1558d
0000000000015579	movl	$0x4003, %ecx
000000000001557e	btl	%eax, %ecx
0000000000015581	jae	0x1558d
0000000000015583	movl	-0x2c(%rbp), %edi
0000000000015586	callq	_mig_put_reply_port
000000000001558b	jmp	0x155db
000000000001558d	testl	%ebx, %ebx
000000000001558f	jne	0x155bc
0000000000015591	movl	-0x24(%rbp), %eax
0000000000015594	cmpl	$0x47, %eax
0000000000015597	je	0x155c6
0000000000015599	cmpl	$0xdd4, %eax
000000000001559e	jne	0x155cd
00000000000155a0	movl	$0xfffffed4, %ebx
00000000000155a5	cmpl	$0x0, -0x38(%rbp)
00000000000155a9	js	0x155d2
00000000000155ab	cmpl	$0x24, -0x34(%rbp)
00000000000155af	jne	0x155d2
00000000000155b1	movl	-0x18(%rbp), %ebx
00000000000155b4	testl	%ebx, %ebx
00000000000155b6	jne	0x155d2
00000000000155b8	xorl	%ebx, %ebx
00000000000155ba	jmp	0x155db
00000000000155bc	movl	-0x2c(%rbp), %edi
00000000000155bf	callq	_mig_dealloc_reply_port
00000000000155c4	jmp	0x155db
00000000000155c6	movl	$0xfffffecc, %ebx
00000000000155cb	jmp	0x155d2
00000000000155cd	movl	$0xfffffed3, %ebx
00000000000155d2	leaq	-0x38(%rbp), %rdi
00000000000155d6	callq	_mach_msg_destroy
00000000000155db	movl	%ebx, %eax
00000000000155dd	addq	$0x38, %rsp
00000000000155e1	popq	%rbx
00000000000155e2	popq	%rbp
00000000000155e3	retq
_task_swap_mach_voucher:
00000000000155e4	pushq	%rbp
00000000000155e5	movq	%rsp, %rbp
00000000000155e8	pushq	%r14
00000000000155ea	pushq	%rbx
00000000000155eb	subq	$0x40, %rsp
00000000000155ef	movq	%rdx, %r14
00000000000155f2	leaq	-0x48(%rbp), %rbx
00000000000155f6	movl	$0x2, 0x18(%rbx)
00000000000155fd	movl	%esi, 0x1c(%rbx)
0000000000015600	movl	$0x130000, %eax
0000000000015605	movl	%eax, 0x24(%rbx)
0000000000015608	movl	(%rdx), %ecx
000000000001560a	movl	%ecx, 0x28(%rbx)
000000000001560d	movl	%eax, 0x30(%rbx)
0000000000015610	movl	$0x80001513, (%rbx)
0000000000015616	movl	%edi, 0x8(%rbx)
0000000000015619	callq	_mig_get_reply_port
000000000001561e	movl	%eax, 0xc(%rbx)
0000000000015621	movabsq	$0xd7100000000, %rcx
000000000001562b	movq	%rcx, 0x10(%rbx)
000000000001562f	movl	$0x0, (%rsp)
0000000000015636	movl	$0x3, %esi
000000000001563b	movl	$0x34, %edx
0000000000015640	movl	$0x30, %ecx
0000000000015645	xorl	%r9d, %r9d
0000000000015648	movq	%rbx, %rdi
000000000001564b	movl	%eax, %r8d
000000000001564e	callq	_mach_msg
0000000000015653	movl	%eax, %ebx
0000000000015655	leal	-0x10000002(%rbx), %eax
000000000001565b	cmpl	$0xe, %eax
000000000001565e	ja	0x15674
0000000000015660	movl	$0x4003, %ecx
0000000000015665	btl	%eax, %ecx
0000000000015668	jae	0x15674
000000000001566a	movl	-0x3c(%rbp), %edi
000000000001566d	callq	_mig_put_reply_port
0000000000015672	jmp	0x156c8
0000000000015674	testl	%ebx, %ebx
0000000000015676	jne	0x156a9
0000000000015678	movl	-0x34(%rbp), %eax
000000000001567b	cmpl	$0x47, %eax
000000000001567e	je	0x156b3
0000000000015680	cmpl	$0xdd5, %eax
0000000000015685	jne	0x156ba
0000000000015687	cmpl	$0x0, -0x48(%rbp)
000000000001568b	movl	-0x44(%rbp), %eax
000000000001568e	movl	$0xfffffed4, %ebx
0000000000015693	js	0x156d3
0000000000015695	cmpl	$0x24, %eax
0000000000015698	jne	0x156bf
000000000001569a	movl	-0x28(%rbp), %eax
000000000001569d	testl	%eax, %eax
000000000001569f	movl	$0xfffffed4, %ebx
00000000000156a4	cmovnel	%eax, %ebx
00000000000156a7	jmp	0x156bf
00000000000156a9	movl	-0x3c(%rbp), %edi
00000000000156ac	callq	_mig_dealloc_reply_port
00000000000156b1	jmp	0x156c8
00000000000156b3	movl	$0xfffffecc, %ebx
00000000000156b8	jmp	0x156bf
00000000000156ba	movl	$0xfffffed3, %ebx
00000000000156bf	leaq	-0x48(%rbp), %rdi
00000000000156c3	callq	_mach_msg_destroy
00000000000156c8	movl	%ebx, %eax
00000000000156ca	addq	$0x40, %rsp
00000000000156ce	popq	%rbx
00000000000156cf	popq	%r14
00000000000156d1	popq	%rbp
00000000000156d2	retq
00000000000156d3	cmpl	$0x28, %eax
00000000000156d6	jne	0x156bf
00000000000156d8	cmpl	$0x1, -0x30(%rbp)
00000000000156dc	jne	0x156bf
00000000000156de	movl	$0xffff0000, %eax
00000000000156e3	andl	-0x24(%rbp), %eax
00000000000156e6	cmpl	$0x110000, %eax
00000000000156eb	jne	0x156bf
00000000000156ed	movl	-0x2c(%rbp), %eax
00000000000156f0	movl	%eax, (%r14)
00000000000156f3	xorl	%ebx, %ebx
00000000000156f5	jmp	0x156c8
_task_generate_corpse:
00000000000156f7	pushq	%rbp
00000000000156f8	movq	%rsp, %rbp
00000000000156fb	pushq	%r14
00000000000156fd	pushq	%rbx
00000000000156fe	subq	$0x40, %rsp
0000000000015702	movq	%rsi, %r14
0000000000015705	leaq	-0x40(%rbp), %rbx
0000000000015709	movl	$0x1513, (%rbx)
000000000001570f	movl	%edi, 0x8(%rbx)
0000000000015712	callq	_mig_get_reply_port
0000000000015717	movl	%eax, 0xc(%rbx)
000000000001571a	movabsq	$0xd7200000000, %rcx
0000000000015724	movq	%rcx, 0x10(%rbx)
0000000000015728	movl	$0x0, (%rsp)
000000000001572f	movl	$0x3, %esi
0000000000015734	movl	$0x18, %edx
0000000000015739	movl	$0x30, %ecx
000000000001573e	xorl	%r9d, %r9d
0000000000015741	movq	%rbx, %rdi
0000000000015744	movl	%eax, %r8d
0000000000015747	callq	_mach_msg
000000000001574c	movl	%eax, %ebx
000000000001574e	leal	-0x10000002(%rbx), %eax
0000000000015754	cmpl	$0xe, %eax
0000000000015757	ja	0x1576d
0000000000015759	movl	$0x4003, %ecx
000000000001575e	btl	%eax, %ecx
0000000000015761	jae	0x1576d
0000000000015763	movl	-0x34(%rbp), %edi
0000000000015766	callq	_mig_put_reply_port
000000000001576b	jmp	0x157c1
000000000001576d	testl	%ebx, %ebx
000000000001576f	jne	0x157a2
0000000000015771	movl	-0x2c(%rbp), %eax
0000000000015774	cmpl	$0x47, %eax
0000000000015777	je	0x157ac
0000000000015779	cmpl	$0xdd6, %eax
000000000001577e	jne	0x157b3
0000000000015780	cmpl	$0x0, -0x40(%rbp)
0000000000015784	movl	-0x3c(%rbp), %eax
0000000000015787	movl	$0xfffffed4, %ebx
000000000001578c	js	0x157cc
000000000001578e	cmpl	$0x24, %eax
0000000000015791	jne	0x157b8
0000000000015793	movl	-0x20(%rbp), %eax
0000000000015796	testl	%eax, %eax
0000000000015798	movl	$0xfffffed4, %ebx
000000000001579d	cmovnel	%eax, %ebx
00000000000157a0	jmp	0x157b8
00000000000157a2	movl	-0x34(%rbp), %edi
00000000000157a5	callq	_mig_dealloc_reply_port
00000000000157aa	jmp	0x157c1
00000000000157ac	movl	$0xfffffecc, %ebx
00000000000157b1	jmp	0x157b8
00000000000157b3	movl	$0xfffffed3, %ebx
00000000000157b8	leaq	-0x40(%rbp), %rdi
00000000000157bc	callq	_mach_msg_destroy
00000000000157c1	movl	%ebx, %eax
00000000000157c3	addq	$0x40, %rsp
00000000000157c7	popq	%rbx
00000000000157c8	popq	%r14
00000000000157ca	popq	%rbp
00000000000157cb	retq
00000000000157cc	cmpl	$0x28, %eax
00000000000157cf	jne	0x157b8
00000000000157d1	cmpl	$0x1, -0x28(%rbp)
00000000000157d5	jne	0x157b8
00000000000157d7	movl	$0xffff0000, %eax
00000000000157dc	andl	-0x1c(%rbp), %eax
00000000000157df	cmpl	$0x110000, %eax
00000000000157e4	jne	0x157b8
00000000000157e6	movl	-0x24(%rbp), %eax
00000000000157e9	movl	%eax, (%r14)
00000000000157ec	xorl	%ebx, %ebx
00000000000157ee	jmp	0x157c1
_task_map_corpse_info:
00000000000157f0	pushq	%rbp
00000000000157f1	movq	%rsp, %rbp
00000000000157f4	pushq	%r15
00000000000157f6	pushq	%r14
00000000000157f8	pushq	%rbx
00000000000157f9	subq	$0x48, %rsp
00000000000157fd	movq	%rcx, %r14
0000000000015800	movq	%rdx, %r15
0000000000015803	leaq	-0x50(%rbp), %rbx
0000000000015807	movl	$0x1, 0x18(%rbx)
000000000001580e	movl	%esi, 0x1c(%rbx)
0000000000015811	movl	$0x130000, 0x24(%rbx)
0000000000015818	movl	$0x80001513, (%rbx)
000000000001581e	movl	%edi, 0x8(%rbx)
0000000000015821	callq	_mig_get_reply_port
0000000000015826	movl	%eax, 0xc(%rbx)
0000000000015829	movabsq	$0xd7300000000, %rcx
0000000000015833	movq	%rcx, 0x10(%rbx)
0000000000015837	movl	$0x0, (%rsp)
000000000001583e	movl	$0x3, %esi
0000000000015843	movl	$0x28, %edx
0000000000015848	movl	$0x38, %ecx
000000000001584d	xorl	%r9d, %r9d
0000000000015850	movq	%rbx, %rdi
0000000000015853	movl	%eax, %r8d
0000000000015856	callq	_mach_msg
000000000001585b	movl	%eax, %ebx
000000000001585d	leal	-0x10000002(%rbx), %eax
0000000000015863	cmpl	$0xe, %eax
0000000000015866	ja	0x1587c
0000000000015868	movl	$0x4003, %ecx
000000000001586d	btl	%eax, %ecx
0000000000015870	jae	0x1587c
0000000000015872	movl	-0x44(%rbp), %edi
0000000000015875	callq	_mig_put_reply_port
000000000001587a	jmp	0x158d1
000000000001587c	testl	%ebx, %ebx
000000000001587e	jne	0x158b0
0000000000015880	movl	-0x3c(%rbp), %eax
0000000000015883	cmpl	$0x47, %eax
0000000000015886	je	0x158ba
0000000000015888	cmpl	$0xdd7, %eax
000000000001588d	jne	0x158c1
000000000001588f	movl	$0xfffffed4, %eax
0000000000015894	cmpl	$0x0, -0x50(%rbp)
0000000000015898	js	0x158c6
000000000001589a	movl	-0x4c(%rbp), %ecx
000000000001589d	cmpl	$0x30, %ecx
00000000000158a0	je	0x158de
00000000000158a2	cmpl	$0x24, %ecx
00000000000158a5	jne	0x158c6
00000000000158a7	movl	-0x30(%rbp), %ebx
00000000000158aa	testl	%ebx, %ebx
00000000000158ac	jne	0x158c8
00000000000158ae	jmp	0x158c6
00000000000158b0	movl	-0x44(%rbp), %edi
00000000000158b3	callq	_mig_dealloc_reply_port
00000000000158b8	jmp	0x158d1
00000000000158ba	movl	$0xfffffecc, %eax
00000000000158bf	jmp	0x158c6
00000000000158c1	movl	$0xfffffed3, %eax
00000000000158c6	movl	%eax, %ebx
00000000000158c8	leaq	-0x50(%rbp), %rdi
00000000000158cc	callq	_mach_msg_destroy
00000000000158d1	movl	%ebx, %eax
00000000000158d3	addq	$0x48, %rsp
00000000000158d7	popq	%rbx
00000000000158d8	popq	%r14
00000000000158da	popq	%r15
00000000000158dc	popq	%rbp
00000000000158dd	retq
00000000000158de	movl	-0x30(%rbp), %ebx
00000000000158e1	testl	%ebx, %ebx
00000000000158e3	jne	0x158c8
00000000000158e5	movq	-0x2c(%rbp), %rax
00000000000158e9	movq	%rax, (%r15)
00000000000158ec	movl	-0x24(%rbp), %eax
00000000000158ef	movl	%eax, (%r14)
00000000000158f2	xorl	%ebx, %ebx
00000000000158f4	jmp	0x158d1
_task_register_dyld_image_infos:
00000000000158f6	pushq	%rbp
00000000000158f7	movq	%rsp, %rbp
00000000000158fa	pushq	%rbx
00000000000158fb	subq	$0x48, %rsp
00000000000158ff	leaq	-0x40(%rbp), %rbx
0000000000015903	movl	$0x1, 0x18(%rbx)
000000000001590a	movq	%rsi, 0x1c(%rbx)
000000000001590e	leal	(,%rdx,8), %eax
0000000000015915	leal	(%rax,%rax,4), %eax
0000000000015918	movl	%eax, 0x28(%rbx)
000000000001591b	movl	$0x1000100, 0x24(%rbx)
0000000000015922	leaq	_NDR_record(%rip), %rax
0000000000015929	movq	(%rax), %rax
000000000001592c	movq	%rax, 0x2c(%rbx)
0000000000015930	movl	%edx, 0x34(%rbx)
0000000000015933	movl	$0x80001513, (%rbx)
0000000000015939	movl	%edi, 0x8(%rbx)
000000000001593c	callq	_mig_get_reply_port
0000000000015941	movl	%eax, 0xc(%rbx)
0000000000015944	movabsq	$0xd7400000000, %rcx
000000000001594e	movq	%rcx, 0x10(%rbx)
0000000000015952	movl	$0x0, (%rsp)
0000000000015959	movl	$0x3, %esi
000000000001595e	movl	$0x38, %edx
0000000000015963	movl	$0x2c, %ecx
0000000000015968	xorl	%r9d, %r9d
000000000001596b	movq	%rbx, %rdi
000000000001596e	movl	%eax, %r8d
0000000000015971	callq	_mach_msg
0000000000015976	movl	%eax, %ebx
0000000000015978	leal	-0x10000002(%rbx), %eax
000000000001597e	cmpl	$0xe, %eax
0000000000015981	ja	0x15997
0000000000015983	movl	$0x4003, %ecx
0000000000015988	btl	%eax, %ecx
000000000001598b	jae	0x15997
000000000001598d	movl	-0x34(%rbp), %edi
0000000000015990	callq	_mig_put_reply_port
0000000000015995	jmp	0x159e5
0000000000015997	testl	%ebx, %ebx
0000000000015999	jne	0x159c6
000000000001599b	movl	-0x2c(%rbp), %eax
000000000001599e	cmpl	$0x47, %eax
00000000000159a1	je	0x159d0
00000000000159a3	cmpl	$0xdd8, %eax
00000000000159a8	jne	0x159d7
00000000000159aa	movl	$0xfffffed4, %ebx
00000000000159af	cmpl	$0x0, -0x40(%rbp)
00000000000159b3	js	0x159dc
00000000000159b5	cmpl	$0x24, -0x3c(%rbp)
00000000000159b9	jne	0x159dc
00000000000159bb	movl	-0x20(%rbp), %ebx
00000000000159be	testl	%ebx, %ebx
00000000000159c0	jne	0x159dc
00000000000159c2	xorl	%ebx, %ebx
00000000000159c4	jmp	0x159e5
00000000000159c6	movl	-0x34(%rbp), %edi
00000000000159c9	callq	_mig_dealloc_reply_port
00000000000159ce	jmp	0x159e5
00000000000159d0	movl	$0xfffffecc, %ebx
00000000000159d5	jmp	0x159dc
00000000000159d7	movl	$0xfffffed3, %ebx
00000000000159dc	leaq	-0x40(%rbp), %rdi
00000000000159e0	callq	_mach_msg_destroy
00000000000159e5	movl	%ebx, %eax
00000000000159e7	addq	$0x48, %rsp
00000000000159eb	popq	%rbx
00000000000159ec	popq	%rbp
00000000000159ed	retq
_task_unregister_dyld_image_infos:
00000000000159ee	pushq	%rbp
00000000000159ef	movq	%rsp, %rbp
00000000000159f2	pushq	%rbx
00000000000159f3	subq	$0x48, %rsp
00000000000159f7	leaq	-0x40(%rbp), %rbx
00000000000159fb	movl	$0x1, 0x18(%rbx)
0000000000015a02	movq	%rsi, 0x1c(%rbx)
0000000000015a06	leal	(,%rdx,8), %eax
0000000000015a0d	leal	(%rax,%rax,4), %eax
0000000000015a10	movl	%eax, 0x28(%rbx)
0000000000015a13	movl	$0x1000100, 0x24(%rbx)
0000000000015a1a	leaq	_NDR_record(%rip), %rax
0000000000015a21	movq	(%rax), %rax
0000000000015a24	movq	%rax, 0x2c(%rbx)
0000000000015a28	movl	%edx, 0x34(%rbx)
0000000000015a2b	movl	$0x80001513, (%rbx)
0000000000015a31	movl	%edi, 0x8(%rbx)
0000000000015a34	callq	_mig_get_reply_port
0000000000015a39	movl	%eax, 0xc(%rbx)
0000000000015a3c	movabsq	$0xd7500000000, %rcx
0000000000015a46	movq	%rcx, 0x10(%rbx)
0000000000015a4a	movl	$0x0, (%rsp)
0000000000015a51	movl	$0x3, %esi
0000000000015a56	movl	$0x38, %edx
0000000000015a5b	movl	$0x2c, %ecx
0000000000015a60	xorl	%r9d, %r9d
0000000000015a63	movq	%rbx, %rdi
0000000000015a66	movl	%eax, %r8d
0000000000015a69	callq	_mach_msg
0000000000015a6e	movl	%eax, %ebx
0000000000015a70	leal	-0x10000002(%rbx), %eax
0000000000015a76	cmpl	$0xe, %eax
0000000000015a79	ja	0x15a8f
0000000000015a7b	movl	$0x4003, %ecx
0000000000015a80	btl	%eax, %ecx
0000000000015a83	jae	0x15a8f
0000000000015a85	movl	-0x34(%rbp), %edi
0000000000015a88	callq	_mig_put_reply_port
0000000000015a8d	jmp	0x15add
0000000000015a8f	testl	%ebx, %ebx
0000000000015a91	jne	0x15abe
0000000000015a93	movl	-0x2c(%rbp), %eax
0000000000015a96	cmpl	$0x47, %eax
0000000000015a99	je	0x15ac8
0000000000015a9b	cmpl	$0xdd9, %eax
0000000000015aa0	jne	0x15acf
0000000000015aa2	movl	$0xfffffed4, %ebx
0000000000015aa7	cmpl	$0x0, -0x40(%rbp)
0000000000015aab	js	0x15ad4
0000000000015aad	cmpl	$0x24, -0x3c(%rbp)
0000000000015ab1	jne	0x15ad4
0000000000015ab3	movl	-0x20(%rbp), %ebx
0000000000015ab6	testl	%ebx, %ebx
0000000000015ab8	jne	0x15ad4
0000000000015aba	xorl	%ebx, %ebx
0000000000015abc	jmp	0x15add
0000000000015abe	movl	-0x34(%rbp), %edi
0000000000015ac1	callq	_mig_dealloc_reply_port
0000000000015ac6	jmp	0x15add
0000000000015ac8	movl	$0xfffffecc, %ebx
0000000000015acd	jmp	0x15ad4
0000000000015acf	movl	$0xfffffed3, %ebx
0000000000015ad4	leaq	-0x40(%rbp), %rdi
0000000000015ad8	callq	_mach_msg_destroy
0000000000015add	movl	%ebx, %eax
0000000000015adf	addq	$0x48, %rsp
0000000000015ae3	popq	%rbx
0000000000015ae4	popq	%rbp
0000000000015ae5	retq
_task_get_dyld_image_infos:
0000000000015ae6	pushq	%rbp
0000000000015ae7	movq	%rsp, %rbp
0000000000015aea	pushq	%r15
0000000000015aec	pushq	%r14
0000000000015aee	pushq	%rbx
0000000000015aef	subq	$0x48, %rsp
0000000000015af3	movq	%rdx, %r14
0000000000015af6	movq	%rsi, %r15
0000000000015af9	leaq	-0x58(%rbp), %rbx
0000000000015afd	movl	$0x1513, (%rbx)
0000000000015b03	movl	%edi, 0x8(%rbx)
0000000000015b06	callq	_mig_get_reply_port
0000000000015b0b	movl	%eax, 0xc(%rbx)
0000000000015b0e	movabsq	$0xd7600000000, %rcx
0000000000015b18	movq	%rcx, 0x10(%rbx)
0000000000015b1c	movl	$0x0, (%rsp)
0000000000015b23	movl	$0x3, %esi
0000000000015b28	movl	$0x18, %edx
0000000000015b2d	movl	$0x40, %ecx
0000000000015b32	xorl	%r9d, %r9d
0000000000015b35	movq	%rbx, %rdi
0000000000015b38	movl	%eax, %r8d
0000000000015b3b	callq	_mach_msg
0000000000015b40	movl	%eax, %ebx
0000000000015b42	leal	-0x10000002(%rbx), %eax
0000000000015b48	cmpl	$0xe, %eax
0000000000015b4b	ja	0x15b61
0000000000015b4d	movl	$0x4003, %ecx
0000000000015b52	btl	%eax, %ecx
0000000000015b55	jae	0x15b61
0000000000015b57	movl	-0x4c(%rbp), %edi
0000000000015b5a	callq	_mig_put_reply_port
0000000000015b5f	jmp	0x15bb5
0000000000015b61	testl	%ebx, %ebx
0000000000015b63	jne	0x15b96
0000000000015b65	movl	-0x44(%rbp), %eax
0000000000015b68	cmpl	$0x47, %eax
0000000000015b6b	je	0x15ba0
0000000000015b6d	cmpl	$0xdda, %eax
0000000000015b72	jne	0x15ba7
0000000000015b74	cmpl	$0x0, -0x58(%rbp)
0000000000015b78	movl	-0x54(%rbp), %eax
0000000000015b7b	movl	$0xfffffed4, %ebx
0000000000015b80	js	0x15bc2
0000000000015b82	cmpl	$0x24, %eax
0000000000015b85	jne	0x15bac
0000000000015b87	movl	-0x38(%rbp), %eax
0000000000015b8a	testl	%eax, %eax
0000000000015b8c	movl	$0xfffffed4, %ebx
0000000000015b91	cmovnel	%eax, %ebx
0000000000015b94	jmp	0x15bac
0000000000015b96	movl	-0x4c(%rbp), %edi
0000000000015b99	callq	_mig_dealloc_reply_port
0000000000015b9e	jmp	0x15bb5
0000000000015ba0	movl	$0xfffffecc, %ebx
0000000000015ba5	jmp	0x15bac
0000000000015ba7	movl	$0xfffffed3, %ebx
0000000000015bac	leaq	-0x58(%rbp), %rdi
0000000000015bb0	callq	_mach_msg_destroy
0000000000015bb5	movl	%ebx, %eax
0000000000015bb7	addq	$0x48, %rsp
0000000000015bbb	popq	%rbx
0000000000015bbc	popq	%r14
0000000000015bbe	popq	%r15
0000000000015bc0	popq	%rbp
0000000000015bc1	retq
0000000000015bc2	cmpl	$0x38, %eax
0000000000015bc5	jne	0x15bac
0000000000015bc7	cmpl	$0x1, -0x40(%rbp)
0000000000015bcb	jne	0x15bac
0000000000015bcd	movl	$0xff000000, %eax
0000000000015bd2	andl	-0x34(%rbp), %eax
0000000000015bd5	cmpl	$0x1000000, %eax
0000000000015bda	jne	0x15bac
0000000000015bdc	movl	-0x30(%rbp), %ecx
0000000000015bdf	movl	$0xcccccccd, %eax
0000000000015be4	imulq	%rcx, %rax
0000000000015be8	shrq	$0x25, %rax
0000000000015bec	cmpl	-0x24(%rbp), %eax
0000000000015bef	jne	0x15bac
0000000000015bf1	movq	-0x3c(%rbp), %rcx
0000000000015bf5	movq	%rcx, (%r15)
0000000000015bf8	movl	%eax, (%r14)
0000000000015bfb	xorl	%ebx, %ebx
0000000000015bfd	jmp	0x15bb5
_task_register_dyld_shared_cache_image_info:
0000000000015bff	pushq	%rbp
0000000000015c00	movq	%rsp, %rbp
0000000000015c03	pushq	%rbx
0000000000015c04	subq	$0x58, %rsp
0000000000015c08	leaq	_NDR_record(%rip), %rax
0000000000015c0f	movq	(%rax), %rax
0000000000015c12	leaq	-0x58(%rbp), %rbx
0000000000015c16	movq	%rax, 0x18(%rbx)
0000000000015c1a	movq	0x10(%rbp), %rax
0000000000015c1e	movq	0x18(%rbp), %rcx
0000000000015c22	movq	%rax, 0x20(%rbx)
0000000000015c26	movq	%rcx, 0x28(%rbx)
0000000000015c2a	movq	0x20(%rbp), %rax
0000000000015c2e	movq	%rax, 0x30(%rbx)
0000000000015c32	movq	0x28(%rbp), %rax
0000000000015c36	movq	%rax, 0x38(%rbx)
0000000000015c3a	movq	0x30(%rbp), %rax
0000000000015c3e	movq	%rax, 0x40(%rbx)
0000000000015c42	movl	%esi, 0x48(%rbx)
0000000000015c45	movl	%edx, 0x4c(%rbx)
0000000000015c48	movl	$0x1513, (%rbx)
0000000000015c4e	movl	%edi, 0x8(%rbx)
0000000000015c51	callq	_mig_get_reply_port
0000000000015c56	movl	%eax, 0xc(%rbx)
0000000000015c59	movabsq	$0xd7700000000, %rcx
0000000000015c63	movq	%rcx, 0x10(%rbx)
0000000000015c67	movl	$0x0, (%rsp)
0000000000015c6e	movl	$0x3, %esi
0000000000015c73	movl	$0x50, %edx
0000000000015c78	movl	$0x2c, %ecx
0000000000015c7d	xorl	%r9d, %r9d
0000000000015c80	movq	%rbx, %rdi
0000000000015c83	movl	%eax, %r8d
0000000000015c86	callq	_mach_msg
0000000000015c8b	movl	%eax, %ebx
0000000000015c8d	leal	-0x10000002(%rbx), %eax
0000000000015c93	cmpl	$0xe, %eax
0000000000015c96	ja	0x15cac
0000000000015c98	movl	$0x4003, %ecx
0000000000015c9d	btl	%eax, %ecx
0000000000015ca0	jae	0x15cac
0000000000015ca2	movl	-0x4c(%rbp), %edi
0000000000015ca5	callq	_mig_put_reply_port
0000000000015caa	jmp	0x15cfa
0000000000015cac	testl	%ebx, %ebx
0000000000015cae	jne	0x15cdb
0000000000015cb0	movl	-0x44(%rbp), %eax
0000000000015cb3	cmpl	$0x47, %eax
0000000000015cb6	je	0x15ce5
0000000000015cb8	cmpl	$0xddb, %eax
0000000000015cbd	jne	0x15cec
0000000000015cbf	movl	$0xfffffed4, %ebx
0000000000015cc4	cmpl	$0x0, -0x58(%rbp)
0000000000015cc8	js	0x15cf1
0000000000015cca	cmpl	$0x24, -0x54(%rbp)
0000000000015cce	jne	0x15cf1
0000000000015cd0	movl	-0x38(%rbp), %ebx
0000000000015cd3	testl	%ebx, %ebx
0000000000015cd5	jne	0x15cf1
0000000000015cd7	xorl	%ebx, %ebx
0000000000015cd9	jmp	0x15cfa
0000000000015cdb	movl	-0x4c(%rbp), %edi
0000000000015cde	callq	_mig_dealloc_reply_port
0000000000015ce3	jmp	0x15cfa
0000000000015ce5	movl	$0xfffffecc, %ebx
0000000000015cea	jmp	0x15cf1
0000000000015cec	movl	$0xfffffed3, %ebx
0000000000015cf1	leaq	-0x58(%rbp), %rdi
0000000000015cf5	callq	_mach_msg_destroy
0000000000015cfa	movl	%ebx, %eax
0000000000015cfc	addq	$0x58, %rsp
0000000000015d00	popq	%rbx
0000000000015d01	popq	%rbp
0000000000015d02	retq
_task_register_dyld_set_dyld_state:
0000000000015d03	pushq	%rbp
0000000000015d04	movq	%rsp, %rbp
0000000000015d07	pushq	%rbx
0000000000015d08	subq	$0x38, %rsp
0000000000015d0c	leaq	_NDR_record(%rip), %rax
0000000000015d13	movq	(%rax), %rax
0000000000015d16	leaq	-0x38(%rbp), %rbx
0000000000015d1a	movq	%rax, 0x18(%rbx)
0000000000015d1e	movb	%sil, 0x20(%rbx)
0000000000015d22	movl	$0x1513, (%rbx)
0000000000015d28	movl	%edi, 0x8(%rbx)
0000000000015d2b	callq	_mig_get_reply_port
0000000000015d30	movl	%eax, 0xc(%rbx)
0000000000015d33	movabsq	$0xd7800000000, %rcx
0000000000015d3d	movq	%rcx, 0x10(%rbx)
0000000000015d41	movl	$0x0, (%rsp)
0000000000015d48	movl	$0x3, %esi
0000000000015d4d	movl	$0x24, %edx
0000000000015d52	movl	$0x2c, %ecx
0000000000015d57	xorl	%r9d, %r9d
0000000000015d5a	movq	%rbx, %rdi
0000000000015d5d	movl	%eax, %r8d
0000000000015d60	callq	_mach_msg
0000000000015d65	movl	%eax, %ebx
0000000000015d67	leal	-0x10000002(%rbx), %eax
0000000000015d6d	cmpl	$0xe, %eax
0000000000015d70	ja	0x15d86
0000000000015d72	movl	$0x4003, %ecx
0000000000015d77	btl	%eax, %ecx
0000000000015d7a	jae	0x15d86
0000000000015d7c	movl	-0x2c(%rbp), %edi
0000000000015d7f	callq	_mig_put_reply_port
0000000000015d84	jmp	0x15dd4
0000000000015d86	testl	%ebx, %ebx
0000000000015d88	jne	0x15db5
0000000000015d8a	movl	-0x24(%rbp), %eax
0000000000015d8d	cmpl	$0x47, %eax
0000000000015d90	je	0x15dbf
0000000000015d92	cmpl	$0xddc, %eax
0000000000015d97	jne	0x15dc6
0000000000015d99	movl	$0xfffffed4, %ebx
0000000000015d9e	cmpl	$0x0, -0x38(%rbp)
0000000000015da2	js	0x15dcb
0000000000015da4	cmpl	$0x24, -0x34(%rbp)
0000000000015da8	jne	0x15dcb
0000000000015daa	movl	-0x18(%rbp), %ebx
0000000000015dad	testl	%ebx, %ebx
0000000000015daf	jne	0x15dcb
0000000000015db1	xorl	%ebx, %ebx
0000000000015db3	jmp	0x15dd4
0000000000015db5	movl	-0x2c(%rbp), %edi
0000000000015db8	callq	_mig_dealloc_reply_port
0000000000015dbd	jmp	0x15dd4
0000000000015dbf	movl	$0xfffffecc, %ebx
0000000000015dc4	jmp	0x15dcb
0000000000015dc6	movl	$0xfffffed3, %ebx
0000000000015dcb	leaq	-0x38(%rbp), %rdi
0000000000015dcf	callq	_mach_msg_destroy
0000000000015dd4	movl	%ebx, %eax
0000000000015dd6	addq	$0x38, %rsp
0000000000015dda	popq	%rbx
0000000000015ddb	popq	%rbp
0000000000015ddc	retq
_task_register_dyld_get_process_state:
0000000000015ddd	pushq	%rbp
0000000000015dde	movq	%rsp, %rbp
0000000000015de1	pushq	%r14
0000000000015de3	pushq	%rbx
0000000000015de4	subq	$0x80, %rsp
0000000000015deb	movq	%rsi, %r14
0000000000015dee	leaq	-0x88(%rbp), %rbx
0000000000015df5	movl	$0x1513, (%rbx)
0000000000015dfb	movl	%edi, 0x8(%rbx)
0000000000015dfe	callq	_mig_get_reply_port
0000000000015e03	movl	%eax, 0xc(%rbx)
0000000000015e06	movabsq	$0xd7900000000, %rcx
0000000000015e10	movq	%rcx, 0x10(%rbx)
0000000000015e14	movl	$0x0, (%rsp)
0000000000015e1b	movl	$0x3, %esi
0000000000015e20	movl	$0x18, %edx
0000000000015e25	movl	$0x74, %ecx
0000000000015e2a	xorl	%r9d, %r9d
0000000000015e2d	movq	%rbx, %rdi
0000000000015e30	movl	%eax, %r8d
0000000000015e33	callq	_mach_msg
0000000000015e38	movl	%eax, %ebx
0000000000015e3a	leal	-0x10000002(%rbx), %eax
0000000000015e40	cmpl	$0xe, %eax
0000000000015e43	ja	0x15e59
0000000000015e45	movl	$0x4003, %ecx
0000000000015e4a	btl	%eax, %ecx
0000000000015e4d	jae	0x15e59
0000000000015e4f	movl	-0x7c(%rbp), %edi
0000000000015e52	callq	_mig_put_reply_port
0000000000015e57	jmp	0x15eb7
0000000000015e59	testl	%ebx, %ebx
0000000000015e5b	jne	0x15e93
0000000000015e5d	movl	-0x74(%rbp), %eax
0000000000015e60	cmpl	$0x47, %eax
0000000000015e63	je	0x15e9d
0000000000015e65	cmpl	$0xddd, %eax
0000000000015e6a	jne	0x15ea4
0000000000015e6c	movl	$0xfffffed4, %eax
0000000000015e71	cmpl	$0x0, -0x88(%rbp)
0000000000015e78	js	0x15ea9
0000000000015e7a	movl	-0x84(%rbp), %ecx
0000000000015e80	cmpl	$0x6c, %ecx
0000000000015e83	je	0x15ec5
0000000000015e85	cmpl	$0x24, %ecx
0000000000015e88	jne	0x15ea9
0000000000015e8a	movl	-0x68(%rbp), %ebx
0000000000015e8d	testl	%ebx, %ebx
0000000000015e8f	jne	0x15eab
0000000000015e91	jmp	0x15ea9
0000000000015e93	movl	-0x7c(%rbp), %edi
0000000000015e96	callq	_mig_dealloc_reply_port
0000000000015e9b	jmp	0x15eb7
0000000000015e9d	movl	$0xfffffecc, %eax
0000000000015ea2	jmp	0x15ea9
0000000000015ea4	movl	$0xfffffed3, %eax
0000000000015ea9	movl	%eax, %ebx
0000000000015eab	leaq	-0x88(%rbp), %rdi
0000000000015eb2	callq	_mach_msg_destroy
0000000000015eb7	movl	%ebx, %eax
0000000000015eb9	addq	$0x80, %rsp
0000000000015ec0	popq	%rbx
0000000000015ec1	popq	%r14
0000000000015ec3	popq	%rbp
0000000000015ec4	retq
0000000000015ec5	movl	-0x68(%rbp), %ebx
0000000000015ec8	testl	%ebx, %ebx
0000000000015eca	jne	0x15eab
0000000000015ecc	leaq	-0x64(%rbp), %rsi
0000000000015ed0	movl	$0x12, %ecx
0000000000015ed5	movq	%r14, %rdi
0000000000015ed8	rep		movsl	(%rsi), %es:(%rdi)
0000000000015eda	xorl	%ebx, %ebx
0000000000015edc	jmp	0x15eb7
_task_map_corpse_info_64:
0000000000015ede	pushq	%rbp
0000000000015edf	movq	%rsp, %rbp
0000000000015ee2	pushq	%r15
0000000000015ee4	pushq	%r14
0000000000015ee6	pushq	%rbx
0000000000015ee7	subq	$0x48, %rsp
0000000000015eeb	movq	%rcx, %r14
0000000000015eee	movq	%rdx, %r15
0000000000015ef1	leaq	-0x58(%rbp), %rbx
0000000000015ef5	movl	$0x1, 0x18(%rbx)
0000000000015efc	movl	%esi, 0x1c(%rbx)
0000000000015eff	movl	$0x130000, 0x24(%rbx)
0000000000015f06	movl	$0x80001513, (%rbx)
0000000000015f0c	movl	%edi, 0x8(%rbx)
0000000000015f0f	callq	_mig_get_reply_port
0000000000015f14	movl	%eax, 0xc(%rbx)
0000000000015f17	movabsq	$0xd7a00000000, %rcx
0000000000015f21	movq	%rcx, 0x10(%rbx)
0000000000015f25	movl	$0x0, (%rsp)
0000000000015f2c	movl	$0x3, %esi
0000000000015f31	movl	$0x28, %edx
0000000000015f36	movl	$0x3c, %ecx
0000000000015f3b	xorl	%r9d, %r9d
0000000000015f3e	movq	%rbx, %rdi
0000000000015f41	movl	%eax, %r8d
0000000000015f44	callq	_mach_msg
0000000000015f49	movl	%eax, %ebx
0000000000015f4b	leal	-0x10000002(%rbx), %eax
0000000000015f51	cmpl	$0xe, %eax
0000000000015f54	ja	0x15f6a
0000000000015f56	movl	$0x4003, %ecx
0000000000015f5b	btl	%eax, %ecx
0000000000015f5e	jae	0x15f6a
0000000000015f60	movl	-0x4c(%rbp), %edi
0000000000015f63	callq	_mig_put_reply_port
0000000000015f68	jmp	0x15fbf
0000000000015f6a	testl	%ebx, %ebx
0000000000015f6c	jne	0x15f9e
0000000000015f6e	movl	-0x44(%rbp), %eax
0000000000015f71	cmpl	$0x47, %eax
0000000000015f74	je	0x15fa8
0000000000015f76	cmpl	$0xdde, %eax
0000000000015f7b	jne	0x15faf
0000000000015f7d	movl	$0xfffffed4, %eax
0000000000015f82	cmpl	$0x0, -0x58(%rbp)
0000000000015f86	js	0x15fb4
0000000000015f88	movl	-0x54(%rbp), %ecx
0000000000015f8b	cmpl	$0x34, %ecx
0000000000015f8e	je	0x15fcc
0000000000015f90	cmpl	$0x24, %ecx
0000000000015f93	jne	0x15fb4
0000000000015f95	movl	-0x38(%rbp), %ebx
0000000000015f98	testl	%ebx, %ebx
0000000000015f9a	jne	0x15fb6
0000000000015f9c	jmp	0x15fb4
0000000000015f9e	movl	-0x4c(%rbp), %edi
0000000000015fa1	callq	_mig_dealloc_reply_port
0000000000015fa6	jmp	0x15fbf
0000000000015fa8	movl	$0xfffffecc, %eax
0000000000015fad	jmp	0x15fb4
0000000000015faf	movl	$0xfffffed3, %eax
0000000000015fb4	movl	%eax, %ebx
0000000000015fb6	leaq	-0x58(%rbp), %rdi
0000000000015fba	callq	_mach_msg_destroy
0000000000015fbf	movl	%ebx, %eax
0000000000015fc1	addq	$0x48, %rsp
0000000000015fc5	popq	%rbx
0000000000015fc6	popq	%r14
0000000000015fc8	popq	%r15
0000000000015fca	popq	%rbp
0000000000015fcb	retq
0000000000015fcc	movl	-0x38(%rbp), %ebx
0000000000015fcf	testl	%ebx, %ebx
0000000000015fd1	jne	0x15fb6
0000000000015fd3	movq	-0x34(%rbp), %rax
0000000000015fd7	movq	%rax, (%r15)
0000000000015fda	movq	-0x2c(%rbp), %rax
0000000000015fde	movq	%rax, (%r14)
0000000000015fe1	xorl	%ebx, %ebx
0000000000015fe3	jmp	0x15fbf
_task_inspect:
0000000000015fe5	pushq	%rbp
0000000000015fe6	movq	%rsp, %rbp
0000000000015fe9	pushq	%r15
0000000000015feb	pushq	%r14
0000000000015fed	pushq	%r12
0000000000015fef	pushq	%rbx
0000000000015ff0	subq	$0x50, %rsp
0000000000015ff4	movq	%rcx, %r15
0000000000015ff7	leaq	_NDR_record(%rip), %rax
0000000000015ffe	movq	(%rax), %rax
0000000000016001	leaq	-0x60(%rbp), %rbx
0000000000016005	movq	%rax, 0x18(%rbx)
0000000000016009	movl	%esi, 0x20(%rbx)
000000000001600c	movl	(%rcx), %eax
000000000001600e	movl	$0x4, %ecx
0000000000016013	cmpl	%ecx, %eax
0000000000016015	cmovbl	%eax, %ecx
0000000000016018	movq	%rdx, %r14
000000000001601b	movl	%ecx, 0x24(%rbx)
000000000001601e	movl	$0x1513, (%rbx)
0000000000016024	movl	%edi, 0x8(%rbx)
0000000000016027	callq	_mig_get_reply_port
000000000001602c	movl	%eax, 0xc(%rbx)
000000000001602f	movabsq	$0xd7b00000000, %rcx
0000000000016039	movq	%rcx, 0x10(%rbx)
000000000001603d	movl	$0x0, (%rsp)
0000000000016044	movl	$0x3, %esi
0000000000016049	movl	$0x28, %edx
000000000001604e	movl	$0x40, %ecx
0000000000016053	xorl	%r9d, %r9d
0000000000016056	movq	%rbx, %rdi
0000000000016059	movl	%eax, %r8d
000000000001605c	callq	_mach_msg
0000000000016061	movl	%eax, %ebx
0000000000016063	leal	-0x10000002(%rbx), %eax
0000000000016069	cmpl	$0xe, %eax
000000000001606c	ja	0x16085
000000000001606e	movl	$0x4003, %ecx
0000000000016073	btl	%eax, %ecx
0000000000016076	jae	0x16085
0000000000016078	movl	-0x54(%rbp), %edi
000000000001607b	callq	_mig_put_reply_port
0000000000016080	jmp	0x16137
0000000000016085	testl	%ebx, %ebx
0000000000016087	jne	0x160c6
0000000000016089	movl	-0x4c(%rbp), %eax
000000000001608c	cmpl	$0x47, %eax
000000000001608f	je	0x160d0
0000000000016091	cmpl	$0xddf, %eax
0000000000016096	jne	0x160d7
0000000000016098	cmpl	$0x0, -0x60(%rbp)
000000000001609c	js	0x16129
00000000000160a2	movl	-0x5c(%rbp), %eax
00000000000160a5	leal	-0x28(%rax), %ecx
00000000000160a8	cmpl	$0x11, %ecx
00000000000160ab	jb	0x160de
00000000000160ad	movl	$0xfffffed4, %ebx
00000000000160b2	cmpl	$0x24, %eax
00000000000160b5	jne	0x1612e
00000000000160b7	movl	-0x40(%rbp), %eax
00000000000160ba	testl	%eax, %eax
00000000000160bc	movl	$0xfffffed4, %ebx
00000000000160c1	cmovnel	%eax, %ebx
00000000000160c4	jmp	0x1612e
00000000000160c6	movl	-0x54(%rbp), %edi
00000000000160c9	callq	_mig_dealloc_reply_port
00000000000160ce	jmp	0x16137
00000000000160d0	movl	$0xfffffecc, %ebx
00000000000160d5	jmp	0x1612e
00000000000160d7	movl	$0xfffffed3, %ebx
00000000000160dc	jmp	0x1612e
00000000000160de	movl	-0x40(%rbp), %ebx
00000000000160e1	testl	%ebx, %ebx
00000000000160e3	jne	0x1612e
00000000000160e5	movl	-0x3c(%rbp), %r12d
00000000000160e9	cmpl	$0x4, %r12d
00000000000160ed	ja	0x16129
00000000000160ef	shrl	$0x2, %ecx
00000000000160f2	cmpl	%r12d, %ecx
00000000000160f5	jb	0x16129
00000000000160f7	leal	0x28(,%r12,4), %ecx
00000000000160ff	movl	$0xfffffed4, %ebx
0000000000016104	cmpl	%ecx, %eax
0000000000016106	jne	0x1612e
0000000000016108	movl	(%r15), %edx
000000000001610b	leaq	-0x38(%rbp), %rsi
000000000001610f	cmpl	%edx, %r12d
0000000000016112	jbe	0x16146
0000000000016114	shll	$0x2, %edx
0000000000016117	movq	%r14, %rdi
000000000001611a	callq	_memcpy
000000000001611f	movl	%r12d, (%r15)
0000000000016122	movl	$0xfffffecd, %ebx
0000000000016127	jmp	0x16137
0000000000016129	movl	$0xfffffed4, %ebx
000000000001612e	leaq	-0x60(%rbp), %rdi
0000000000016132	callq	_mach_msg_destroy
0000000000016137	movl	%ebx, %eax
0000000000016139	addq	$0x50, %rsp
000000000001613d	popq	%rbx
000000000001613e	popq	%r12
0000000000016140	popq	%r14
0000000000016142	popq	%r15
0000000000016144	popq	%rbp
0000000000016145	retq
0000000000016146	leal	(,%r12,4), %eax
000000000001614e	movl	%eax, %edx
0000000000016150	movq	%r14, %rdi
0000000000016153	callq	_memcpy
0000000000016158	movl	%r12d, (%r15)
000000000001615b	xorl	%ebx, %ebx
000000000001615d	jmp	0x16137
_reboot:
000000000001615f	xorl	%esi, %esi
0000000000016161	jmp	___reboot
_reboot_np:
0000000000016166	jmp	___reboot
_thread_terminate:
000000000001616b	pushq	%rbp
000000000001616c	movq	%rsp, %rbp
000000000001616f	pushq	%rbx
0000000000016170	subq	$0x38, %rsp
0000000000016174	leaq	-0x38(%rbp), %rbx
0000000000016178	movl	$0x1511, (%rbx)
000000000001617e	movl	%edi, 0x8(%rbx)
0000000000016181	callq	_mig_get_reply_port
0000000000016186	movl	%eax, 0xc(%rbx)
0000000000016189	movabsq	$0xe1000000000, %rcx
0000000000016193	movq	%rcx, 0x10(%rbx)
0000000000016197	movl	$0x0, (%rsp)
000000000001619e	movl	$0x3, %esi
00000000000161a3	movl	$0x18, %edx
00000000000161a8	movl	$0x2c, %ecx
00000000000161ad	xorl	%r9d, %r9d
00000000000161b0	movq	%rbx, %rdi
00000000000161b3	movl	%eax, %r8d
00000000000161b6	callq	_mach_msg
00000000000161bb	movl	%eax, %ebx
00000000000161bd	leal	-0x10000002(%rbx), %eax
00000000000161c3	cmpl	$0xe, %eax
00000000000161c6	ja	0x161dc
00000000000161c8	movl	$0x4003, %ecx
00000000000161cd	btl	%eax, %ecx
00000000000161d0	jae	0x161dc
00000000000161d2	movl	-0x2c(%rbp), %edi
00000000000161d5	callq	_mig_put_reply_port
00000000000161da	jmp	0x1622a
00000000000161dc	testl	%ebx, %ebx
00000000000161de	jne	0x1620b
00000000000161e0	movl	-0x24(%rbp), %eax
00000000000161e3	cmpl	$0x47, %eax
00000000000161e6	je	0x16215
00000000000161e8	cmpl	$0xe74, %eax
00000000000161ed	jne	0x1621c
00000000000161ef	movl	$0xfffffed4, %ebx
00000000000161f4	cmpl	$0x0, -0x38(%rbp)
00000000000161f8	js	0x16221
00000000000161fa	cmpl	$0x24, -0x34(%rbp)
00000000000161fe	jne	0x16221
0000000000016200	movl	-0x18(%rbp), %ebx
0000000000016203	testl	%ebx, %ebx
0000000000016205	jne	0x16221
0000000000016207	xorl	%ebx, %ebx
0000000000016209	jmp	0x1622a
000000000001620b	movl	-0x2c(%rbp), %edi
000000000001620e	callq	_mig_dealloc_reply_port
0000000000016213	jmp	0x1622a
0000000000016215	movl	$0xfffffecc, %ebx
000000000001621a	jmp	0x16221
000000000001621c	movl	$0xfffffed3, %ebx
0000000000016221	leaq	-0x38(%rbp), %rdi
0000000000016225	callq	_mach_msg_destroy
000000000001622a	movl	%ebx, %eax
000000000001622c	addq	$0x38, %rsp
0000000000016230	popq	%rbx
0000000000016231	popq	%rbp
0000000000016232	retq
_act_get_state:
0000000000016233	pushq	%rbp
0000000000016234	movq	%rsp, %rbp
0000000000016237	pushq	%r15
0000000000016239	pushq	%r14
000000000001623b	pushq	%r12
000000000001623d	pushq	%rbx
000000000001623e	subq	$0x9d0, %rsp
0000000000016245	movq	%rcx, %r15
0000000000016248	leaq	_NDR_record(%rip), %rax
000000000001624f	movq	(%rax), %rax
0000000000016252	leaq	-0x9e8(%rbp), %rbx
0000000000016259	movq	%rax, 0x18(%rbx)
000000000001625d	movl	%esi, 0x20(%rbx)
0000000000016260	movl	(%rcx), %eax
0000000000016262	movl	$0x266, %ecx
0000000000016267	cmpl	%ecx, %eax
0000000000016269	cmovbl	%eax, %ecx
000000000001626c	movq	%rdx, %r14
000000000001626f	movl	%ecx, 0x24(%rbx)
0000000000016272	movl	$0x1513, (%rbx)
0000000000016278	movl	%edi, 0x8(%rbx)
000000000001627b	callq	_mig_get_reply_port
0000000000016280	movl	%eax, 0xc(%rbx)
0000000000016283	movabsq	$0xe1100000000, %rcx
000000000001628d	movq	%rcx, 0x10(%rbx)
0000000000016291	movl	$0x0, (%rsp)
0000000000016298	movl	$0x3, %esi
000000000001629d	movl	$0x28, %edx
00000000000162a2	movl	$0x9c8, %ecx
00000000000162a7	xorl	%r9d, %r9d
00000000000162aa	movq	%rbx, %rdi
00000000000162ad	movl	%eax, %r8d
00000000000162b0	callq	_mach_msg
00000000000162b5	movl	%eax, %ebx
00000000000162b7	leal	-0x10000002(%rbx), %eax
00000000000162bd	cmpl	$0xe, %eax
00000000000162c0	ja	0x162dc
00000000000162c2	movl	$0x4003, %ecx
00000000000162c7	btl	%eax, %ecx
00000000000162ca	jae	0x162dc
00000000000162cc	movl	-0x9dc(%rbp), %edi
00000000000162d2	callq	_mig_put_reply_port
00000000000162d7	jmp	0x163b3
00000000000162dc	testl	%ebx, %ebx
00000000000162de	jne	0x16330
00000000000162e0	movl	-0x9d4(%rbp), %eax
00000000000162e6	cmpl	$0x47, %eax
00000000000162e9	je	0x1633d
00000000000162eb	cmpl	$0xe75, %eax
00000000000162f0	jne	0x16344
00000000000162f2	cmpl	$0x0, -0x9e8(%rbp)
00000000000162f9	js	0x163a2
00000000000162ff	movl	-0x9e4(%rbp), %eax
0000000000016305	leal	-0x28(%rax), %ecx
0000000000016308	cmpl	$0x999, %ecx
000000000001630e	jb	0x1634b
0000000000016310	movl	$0xfffffed4, %ebx
0000000000016315	cmpl	$0x24, %eax
0000000000016318	jne	0x163a7
000000000001631e	movl	-0x9c8(%rbp), %eax
0000000000016324	testl	%eax, %eax
0000000000016326	movl	$0xfffffed4, %ebx
000000000001632b	cmovnel	%eax, %ebx
000000000001632e	jmp	0x163a7
0000000000016330	movl	-0x9dc(%rbp), %edi
0000000000016336	callq	_mig_dealloc_reply_port
000000000001633b	jmp	0x163b3
000000000001633d	movl	$0xfffffecc, %ebx
0000000000016342	jmp	0x163a7
0000000000016344	movl	$0xfffffed3, %ebx
0000000000016349	jmp	0x163a7
000000000001634b	movl	-0x9c8(%rbp), %ebx
0000000000016351	testl	%ebx, %ebx
0000000000016353	jne	0x163a7
0000000000016355	movl	-0x9c4(%rbp), %r12d
000000000001635c	cmpl	$0x266, %r12d
0000000000016363	ja	0x163a2
0000000000016365	shrl	$0x2, %ecx
0000000000016368	cmpl	%r12d, %ecx
000000000001636b	jb	0x163a2
000000000001636d	leal	0x28(,%r12,4), %ecx
0000000000016375	movl	$0xfffffed4, %ebx
000000000001637a	cmpl	%ecx, %eax
000000000001637c	jne	0x163a7
000000000001637e	movl	(%r15), %edx
0000000000016381	leaq	-0x9c0(%rbp), %rsi
0000000000016388	cmpl	%edx, %r12d
000000000001638b	jbe	0x163c5
000000000001638d	shll	$0x2, %edx
0000000000016390	movq	%r14, %rdi
0000000000016393	callq	_memcpy
0000000000016398	movl	%r12d, (%r15)
000000000001639b	movl	$0xfffffecd, %ebx
00000000000163a0	jmp	0x163b3
00000000000163a2	movl	$0xfffffed4, %ebx
00000000000163a7	leaq	-0x9e8(%rbp), %rdi
00000000000163ae	callq	_mach_msg_destroy
00000000000163b3	movl	%ebx, %eax
00000000000163b5	addq	$0x9d0, %rsp
00000000000163bc	popq	%rbx
00000000000163bd	popq	%r12
00000000000163bf	popq	%r14
00000000000163c1	popq	%r15
00000000000163c3	popq	%rbp
00000000000163c4	retq
00000000000163c5	leal	(,%r12,4), %eax
00000000000163cd	movl	%eax, %edx
00000000000163cf	movq	%r14, %rdi
00000000000163d2	callq	_memcpy
00000000000163d7	movl	%r12d, (%r15)
00000000000163da	xorl	%ebx, %ebx
00000000000163dc	jmp	0x163b3
_act_set_state:
00000000000163de	pushq	%rbp
00000000000163df	movq	%rsp, %rbp
00000000000163e2	pushq	%r15
00000000000163e4	pushq	%r14
00000000000163e6	pushq	%rbx
00000000000163e7	subq	$0x9c8, %rsp
00000000000163ee	leaq	_NDR_record(%rip), %rax
00000000000163f5	movq	(%rax), %rax
00000000000163f8	movq	%rax, -0x9c0(%rbp)
00000000000163ff	movl	%esi, -0x9b8(%rbp)
0000000000016405	movl	$0xfffffecd, %r14d
000000000001640b	cmpl	$0x266, %ecx
0000000000016411	ja	0x16518
0000000000016417	movl	%ecx, %ebx
0000000000016419	movl	%edi, %r15d
000000000001641c	leaq	-0x9b0(%rbp), %r14
0000000000016423	leal	(,%rbx,4), %eax
000000000001642a	movq	%r14, %rdi
000000000001642d	movq	%rdx, %rsi
0000000000016430	movq	%rax, %rdx
0000000000016433	callq	_memcpy
0000000000016438	movl	%ebx, -0x4(%r14)
000000000001643c	leal	0x28(,%rbx,4), %ebx
0000000000016443	movl	$0x1513, -0x28(%r14)
000000000001644b	movl	%r15d, -0x20(%r14)
000000000001644f	callq	_mig_get_reply_port
0000000000016454	movl	%eax, -0x1c(%r14)
0000000000016458	movabsq	$0xe1200000000, %rcx
0000000000016462	movq	%rcx, -0x18(%r14)
0000000000016466	movl	$0x0, (%rsp)
000000000001646d	leaq	-0x9d8(%rbp), %rdi
0000000000016474	movl	$0x3, %esi
0000000000016479	movl	$0x2c, %ecx
000000000001647e	xorl	%r9d, %r9d
0000000000016481	movl	%eax, %r8d
0000000000016484	movl	%ebx, %edx
0000000000016486	callq	_mach_msg
000000000001648b	movl	%eax, %r14d
000000000001648e	leal	-0x10000002(%r14), %eax
0000000000016495	cmpl	$0xe, %eax
0000000000016498	ja	0x164b1
000000000001649a	movl	$0x4003, %ecx
000000000001649f	btl	%eax, %ecx
00000000000164a2	jae	0x164b1
00000000000164a4	movl	-0x9cc(%rbp), %edi
00000000000164aa	callq	_mig_put_reply_port
00000000000164af	jmp	0x16518
00000000000164b1	testl	%r14d, %r14d
00000000000164b4	jne	0x164f1
00000000000164b6	movl	-0x9c4(%rbp), %eax
00000000000164bc	cmpl	$0x47, %eax
00000000000164bf	je	0x164fe
00000000000164c1	cmpl	$0xe76, %eax
00000000000164c6	jne	0x16506
00000000000164c8	movl	$0xfffffed4, %r14d
00000000000164ce	cmpl	$0x0, -0x9d8(%rbp)
00000000000164d5	js	0x1650c
00000000000164d7	cmpl	$0x24, -0x9d4(%rbp)
00000000000164de	jne	0x1650c
00000000000164e0	movl	-0x9b8(%rbp), %r14d
00000000000164e7	testl	%r14d, %r14d
00000000000164ea	jne	0x1650c
00000000000164ec	xorl	%r14d, %r14d
00000000000164ef	jmp	0x16518
00000000000164f1	movl	-0x9cc(%rbp), %edi
00000000000164f7	callq	_mig_dealloc_reply_port
00000000000164fc	jmp	0x16518
00000000000164fe	movl	$0xfffffecc, %r14d
0000000000016504	jmp	0x1650c
0000000000016506	movl	$0xfffffed3, %r14d
000000000001650c	leaq	-0x9d8(%rbp), %rdi
0000000000016513	callq	_mach_msg_destroy
0000000000016518	movl	%r14d, %eax
000000000001651b	addq	$0x9c8, %rsp
0000000000016522	popq	%rbx
0000000000016523	popq	%r14
0000000000016525	popq	%r15
0000000000016527	popq	%rbp
0000000000016528	retq
_thread_set_state:
0000000000016529	pushq	%rbp
000000000001652a	movq	%rsp, %rbp
000000000001652d	pushq	%r15
000000000001652f	pushq	%r14
0000000000016531	pushq	%rbx
0000000000016532	subq	$0x9c8, %rsp
0000000000016539	leaq	_NDR_record(%rip), %rax
0000000000016540	movq	(%rax), %rax
0000000000016543	movq	%rax, -0x9c0(%rbp)
000000000001654a	movl	%esi, -0x9b8(%rbp)
0000000000016550	movl	$0xfffffecd, %r14d
0000000000016556	cmpl	$0x266, %ecx
000000000001655c	ja	0x16663
0000000000016562	movl	%ecx, %ebx
0000000000016564	movl	%edi, %r15d
0000000000016567	leaq	-0x9b0(%rbp), %r14
000000000001656e	leal	(,%rbx,4), %eax
0000000000016575	movq	%r14, %rdi
0000000000016578	movq	%rdx, %rsi
000000000001657b	movq	%rax, %rdx
000000000001657e	callq	_memcpy
0000000000016583	movl	%ebx, -0x4(%r14)
0000000000016587	leal	0x28(,%rbx,4), %ebx
000000000001658e	movl	$0x1513, -0x28(%r14)
0000000000016596	movl	%r15d, -0x20(%r14)
000000000001659a	callq	_mig_get_reply_port
000000000001659f	movl	%eax, -0x1c(%r14)
00000000000165a3	movabsq	$0xe1400000000, %rcx
00000000000165ad	movq	%rcx, -0x18(%r14)
00000000000165b1	movl	$0x0, (%rsp)
00000000000165b8	leaq	-0x9d8(%rbp), %rdi
00000000000165bf	movl	$0x3, %esi
00000000000165c4	movl	$0x2c, %ecx
00000000000165c9	xorl	%r9d, %r9d
00000000000165cc	movl	%eax, %r8d
00000000000165cf	movl	%ebx, %edx
00000000000165d1	callq	_mach_msg
00000000000165d6	movl	%eax, %r14d
00000000000165d9	leal	-0x10000002(%r14), %eax
00000000000165e0	cmpl	$0xe, %eax
00000000000165e3	ja	0x165fc
00000000000165e5	movl	$0x4003, %ecx
00000000000165ea	btl	%eax, %ecx
00000000000165ed	jae	0x165fc
00000000000165ef	movl	-0x9cc(%rbp), %edi
00000000000165f5	callq	_mig_put_reply_port
00000000000165fa	jmp	0x16663
00000000000165fc	testl	%r14d, %r14d
00000000000165ff	jne	0x1663c
0000000000016601	movl	-0x9c4(%rbp), %eax
0000000000016607	cmpl	$0x47, %eax
000000000001660a	je	0x16649
000000000001660c	cmpl	$0xe78, %eax
0000000000016611	jne	0x16651
0000000000016613	movl	$0xfffffed4, %r14d
0000000000016619	cmpl	$0x0, -0x9d8(%rbp)
0000000000016620	js	0x16657
0000000000016622	cmpl	$0x24, -0x9d4(%rbp)
0000000000016629	jne	0x16657
000000000001662b	movl	-0x9b8(%rbp), %r14d
0000000000016632	testl	%r14d, %r14d
0000000000016635	jne	0x16657
0000000000016637	xorl	%r14d, %r14d
000000000001663a	jmp	0x16663
000000000001663c	movl	-0x9cc(%rbp), %edi
0000000000016642	callq	_mig_dealloc_reply_port
0000000000016647	jmp	0x16663
0000000000016649	movl	$0xfffffecc, %r14d
000000000001664f	jmp	0x16657
0000000000016651	movl	$0xfffffed3, %r14d
0000000000016657	leaq	-0x9d8(%rbp), %rdi
000000000001665e	callq	_mach_msg_destroy
0000000000016663	movl	%r14d, %eax
0000000000016666	addq	$0x9c8, %rsp
000000000001666d	popq	%rbx
000000000001666e	popq	%r14
0000000000016670	popq	%r15
0000000000016672	popq	%rbp
0000000000016673	retq
_thread_suspend:
0000000000016674	pushq	%rbp
0000000000016675	movq	%rsp, %rbp
0000000000016678	pushq	%rbx
0000000000016679	subq	$0x38, %rsp
000000000001667d	leaq	-0x38(%rbp), %rbx
0000000000016681	movl	$0x1513, (%rbx)
0000000000016687	movl	%edi, 0x8(%rbx)
000000000001668a	callq	_mig_get_reply_port
000000000001668f	movl	%eax, 0xc(%rbx)
0000000000016692	movabsq	$0xe1500000000, %rcx
000000000001669c	movq	%rcx, 0x10(%rbx)
00000000000166a0	movl	$0x0, (%rsp)
00000000000166a7	movl	$0x3, %esi
00000000000166ac	movl	$0x18, %edx
00000000000166b1	movl	$0x2c, %ecx
00000000000166b6	xorl	%r9d, %r9d
00000000000166b9	movq	%rbx, %rdi
00000000000166bc	movl	%eax, %r8d
00000000000166bf	callq	_mach_msg
00000000000166c4	movl	%eax, %ebx
00000000000166c6	leal	-0x10000002(%rbx), %eax
00000000000166cc	cmpl	$0xe, %eax
00000000000166cf	ja	0x166e5
00000000000166d1	movl	$0x4003, %ecx
00000000000166d6	btl	%eax, %ecx
00000000000166d9	jae	0x166e5
00000000000166db	movl	-0x2c(%rbp), %edi
00000000000166de	callq	_mig_put_reply_port
00000000000166e3	jmp	0x16733
00000000000166e5	testl	%ebx, %ebx
00000000000166e7	jne	0x16714
00000000000166e9	movl	-0x24(%rbp), %eax
00000000000166ec	cmpl	$0x47, %eax
00000000000166ef	je	0x1671e
00000000000166f1	cmpl	$0xe79, %eax
00000000000166f6	jne	0x16725
00000000000166f8	movl	$0xfffffed4, %ebx
00000000000166fd	cmpl	$0x0, -0x38(%rbp)
0000000000016701	js	0x1672a
0000000000016703	cmpl	$0x24, -0x34(%rbp)
0000000000016707	jne	0x1672a
0000000000016709	movl	-0x18(%rbp), %ebx
000000000001670c	testl	%ebx, %ebx
000000000001670e	jne	0x1672a
0000000000016710	xorl	%ebx, %ebx
0000000000016712	jmp	0x16733
0000000000016714	movl	-0x2c(%rbp), %edi
0000000000016717	callq	_mig_dealloc_reply_port
000000000001671c	jmp	0x16733
000000000001671e	movl	$0xfffffecc, %ebx
0000000000016723	jmp	0x1672a
0000000000016725	movl	$0xfffffed3, %ebx
000000000001672a	leaq	-0x38(%rbp), %rdi
000000000001672e	callq	_mach_msg_destroy
0000000000016733	movl	%ebx, %eax
0000000000016735	addq	$0x38, %rsp
0000000000016739	popq	%rbx
000000000001673a	popq	%rbp
000000000001673b	retq
_thread_resume:
000000000001673c	pushq	%rbp
000000000001673d	movq	%rsp, %rbp
0000000000016740	pushq	%rbx
0000000000016741	subq	$0x38, %rsp
0000000000016745	leaq	-0x38(%rbp), %rbx
0000000000016749	movl	$0x1513, (%rbx)
000000000001674f	movl	%edi, 0x8(%rbx)
0000000000016752	callq	_mig_get_reply_port
0000000000016757	movl	%eax, 0xc(%rbx)
000000000001675a	movabsq	$0xe1600000000, %rcx
0000000000016764	movq	%rcx, 0x10(%rbx)
0000000000016768	movl	$0x0, (%rsp)
000000000001676f	movl	$0x3, %esi
0000000000016774	movl	$0x18, %edx
0000000000016779	movl	$0x2c, %ecx
000000000001677e	xorl	%r9d, %r9d
0000000000016781	movq	%rbx, %rdi
0000000000016784	movl	%eax, %r8d
0000000000016787	callq	_mach_msg
000000000001678c	movl	%eax, %ebx
000000000001678e	leal	-0x10000002(%rbx), %eax
0000000000016794	cmpl	$0xe, %eax
0000000000016797	ja	0x167ad
0000000000016799	movl	$0x4003, %ecx
000000000001679e	btl	%eax, %ecx
00000000000167a1	jae	0x167ad
00000000000167a3	movl	-0x2c(%rbp), %edi
00000000000167a6	callq	_mig_put_reply_port
00000000000167ab	jmp	0x167fb
00000000000167ad	testl	%ebx, %ebx
00000000000167af	jne	0x167dc
00000000000167b1	movl	-0x24(%rbp), %eax
00000000000167b4	cmpl	$0x47, %eax
00000000000167b7	je	0x167e6
00000000000167b9	cmpl	$0xe7a, %eax
00000000000167be	jne	0x167ed
00000000000167c0	movl	$0xfffffed4, %ebx
00000000000167c5	cmpl	$0x0, -0x38(%rbp)
00000000000167c9	js	0x167f2
00000000000167cb	cmpl	$0x24, -0x34(%rbp)
00000000000167cf	jne	0x167f2
00000000000167d1	movl	-0x18(%rbp), %ebx
00000000000167d4	testl	%ebx, %ebx
00000000000167d6	jne	0x167f2
00000000000167d8	xorl	%ebx, %ebx
00000000000167da	jmp	0x167fb
00000000000167dc	movl	-0x2c(%rbp), %edi
00000000000167df	callq	_mig_dealloc_reply_port
00000000000167e4	jmp	0x167fb
00000000000167e6	movl	$0xfffffecc, %ebx
00000000000167eb	jmp	0x167f2
00000000000167ed	movl	$0xfffffed3, %ebx
00000000000167f2	leaq	-0x38(%rbp), %rdi
00000000000167f6	callq	_mach_msg_destroy
00000000000167fb	movl	%ebx, %eax
00000000000167fd	addq	$0x38, %rsp
0000000000016801	popq	%rbx
0000000000016802	popq	%rbp
0000000000016803	retq
_thread_abort:
0000000000016804	pushq	%rbp
0000000000016805	movq	%rsp, %rbp
0000000000016808	pushq	%rbx
0000000000016809	subq	$0x38, %rsp
000000000001680d	leaq	-0x38(%rbp), %rbx
0000000000016811	movl	$0x1513, (%rbx)
0000000000016817	movl	%edi, 0x8(%rbx)
000000000001681a	callq	_mig_get_reply_port
000000000001681f	movl	%eax, 0xc(%rbx)
0000000000016822	movabsq	$0xe1700000000, %rcx
000000000001682c	movq	%rcx, 0x10(%rbx)
0000000000016830	movl	$0x0, (%rsp)
0000000000016837	movl	$0x3, %esi
000000000001683c	movl	$0x18, %edx
0000000000016841	movl	$0x2c, %ecx
0000000000016846	xorl	%r9d, %r9d
0000000000016849	movq	%rbx, %rdi
000000000001684c	movl	%eax, %r8d
000000000001684f	callq	_mach_msg
0000000000016854	movl	%eax, %ebx
0000000000016856	leal	-0x10000002(%rbx), %eax
000000000001685c	cmpl	$0xe, %eax
000000000001685f	ja	0x16875
0000000000016861	movl	$0x4003, %ecx
0000000000016866	btl	%eax, %ecx
0000000000016869	jae	0x16875
000000000001686b	movl	-0x2c(%rbp), %edi
000000000001686e	callq	_mig_put_reply_port
0000000000016873	jmp	0x168c3
0000000000016875	testl	%ebx, %ebx
0000000000016877	jne	0x168a4
0000000000016879	movl	-0x24(%rbp), %eax
000000000001687c	cmpl	$0x47, %eax
000000000001687f	je	0x168ae
0000000000016881	cmpl	$0xe7b, %eax
0000000000016886	jne	0x168b5
0000000000016888	movl	$0xfffffed4, %ebx
000000000001688d	cmpl	$0x0, -0x38(%rbp)
0000000000016891	js	0x168ba
0000000000016893	cmpl	$0x24, -0x34(%rbp)
0000000000016897	jne	0x168ba
0000000000016899	movl	-0x18(%rbp), %ebx
000000000001689c	testl	%ebx, %ebx
000000000001689e	jne	0x168ba
00000000000168a0	xorl	%ebx, %ebx
00000000000168a2	jmp	0x168c3
00000000000168a4	movl	-0x2c(%rbp), %edi
00000000000168a7	callq	_mig_dealloc_reply_port
00000000000168ac	jmp	0x168c3
00000000000168ae	movl	$0xfffffecc, %ebx
00000000000168b3	jmp	0x168ba
00000000000168b5	movl	$0xfffffed3, %ebx
00000000000168ba	leaq	-0x38(%rbp), %rdi
00000000000168be	callq	_mach_msg_destroy
00000000000168c3	movl	%ebx, %eax
00000000000168c5	addq	$0x38, %rsp
00000000000168c9	popq	%rbx
00000000000168ca	popq	%rbp
00000000000168cb	retq
_thread_abort_safely:
00000000000168cc	pushq	%rbp
00000000000168cd	movq	%rsp, %rbp
00000000000168d0	pushq	%rbx
00000000000168d1	subq	$0x38, %rsp
00000000000168d5	leaq	-0x38(%rbp), %rbx
00000000000168d9	movl	$0x1513, (%rbx)
00000000000168df	movl	%edi, 0x8(%rbx)
00000000000168e2	callq	_mig_get_reply_port
00000000000168e7	movl	%eax, 0xc(%rbx)
00000000000168ea	movabsq	$0xe1800000000, %rcx
00000000000168f4	movq	%rcx, 0x10(%rbx)
00000000000168f8	movl	$0x0, (%rsp)
00000000000168ff	movl	$0x3, %esi
0000000000016904	movl	$0x18, %edx
0000000000016909	movl	$0x2c, %ecx
000000000001690e	xorl	%r9d, %r9d
0000000000016911	movq	%rbx, %rdi
0000000000016914	movl	%eax, %r8d
0000000000016917	callq	_mach_msg
000000000001691c	movl	%eax, %ebx
000000000001691e	leal	-0x10000002(%rbx), %eax
0000000000016924	cmpl	$0xe, %eax
0000000000016927	ja	0x1693d
0000000000016929	movl	$0x4003, %ecx
000000000001692e	btl	%eax, %ecx
0000000000016931	jae	0x1693d
0000000000016933	movl	-0x2c(%rbp), %edi
0000000000016936	callq	_mig_put_reply_port
000000000001693b	jmp	0x1698b
000000000001693d	testl	%ebx, %ebx
000000000001693f	jne	0x1696c
0000000000016941	movl	-0x24(%rbp), %eax
0000000000016944	cmpl	$0x47, %eax
0000000000016947	je	0x16976
0000000000016949	cmpl	$0xe7c, %eax
000000000001694e	jne	0x1697d
0000000000016950	movl	$0xfffffed4, %ebx
0000000000016955	cmpl	$0x0, -0x38(%rbp)
0000000000016959	js	0x16982
000000000001695b	cmpl	$0x24, -0x34(%rbp)
000000000001695f	jne	0x16982
0000000000016961	movl	-0x18(%rbp), %ebx
0000000000016964	testl	%ebx, %ebx
0000000000016966	jne	0x16982
0000000000016968	xorl	%ebx, %ebx
000000000001696a	jmp	0x1698b
000000000001696c	movl	-0x2c(%rbp), %edi
000000000001696f	callq	_mig_dealloc_reply_port
0000000000016974	jmp	0x1698b
0000000000016976	movl	$0xfffffecc, %ebx
000000000001697b	jmp	0x16982
000000000001697d	movl	$0xfffffed3, %ebx
0000000000016982	leaq	-0x38(%rbp), %rdi
0000000000016986	callq	_mach_msg_destroy
000000000001698b	movl	%ebx, %eax
000000000001698d	addq	$0x38, %rsp
0000000000016991	popq	%rbx
0000000000016992	popq	%rbp
0000000000016993	retq
_thread_depress_abort:
0000000000016994	pushq	%rbp
0000000000016995	movq	%rsp, %rbp
0000000000016998	pushq	%rbx
0000000000016999	subq	$0x38, %rsp
000000000001699d	leaq	-0x38(%rbp), %rbx
00000000000169a1	movl	$0x1513, (%rbx)
00000000000169a7	movl	%edi, 0x8(%rbx)
00000000000169aa	callq	_mig_get_reply_port
00000000000169af	movl	%eax, 0xc(%rbx)
00000000000169b2	movabsq	$0xe1900000000, %rcx
00000000000169bc	movq	%rcx, 0x10(%rbx)
00000000000169c0	movl	$0x0, (%rsp)
00000000000169c7	movl	$0x3, %esi
00000000000169cc	movl	$0x18, %edx
00000000000169d1	movl	$0x2c, %ecx
00000000000169d6	xorl	%r9d, %r9d
00000000000169d9	movq	%rbx, %rdi
00000000000169dc	movl	%eax, %r8d
00000000000169df	callq	_mach_msg
00000000000169e4	movl	%eax, %ebx
00000000000169e6	leal	-0x10000002(%rbx), %eax
00000000000169ec	cmpl	$0xe, %eax
00000000000169ef	ja	0x16a05
00000000000169f1	movl	$0x4003, %ecx
00000000000169f6	btl	%eax, %ecx
00000000000169f9	jae	0x16a05
00000000000169fb	movl	-0x2c(%rbp), %edi
00000000000169fe	callq	_mig_put_reply_port
0000000000016a03	jmp	0x16a53
0000000000016a05	testl	%ebx, %ebx
0000000000016a07	jne	0x16a34
0000000000016a09	movl	-0x24(%rbp), %eax
0000000000016a0c	cmpl	$0x47, %eax
0000000000016a0f	je	0x16a3e
0000000000016a11	cmpl	$0xe7d, %eax
0000000000016a16	jne	0x16a45
0000000000016a18	movl	$0xfffffed4, %ebx
0000000000016a1d	cmpl	$0x0, -0x38(%rbp)
0000000000016a21	js	0x16a4a
0000000000016a23	cmpl	$0x24, -0x34(%rbp)
0000000000016a27	jne	0x16a4a
0000000000016a29	movl	-0x18(%rbp), %ebx
0000000000016a2c	testl	%ebx, %ebx
0000000000016a2e	jne	0x16a4a
0000000000016a30	xorl	%ebx, %ebx
0000000000016a32	jmp	0x16a53
0000000000016a34	movl	-0x2c(%rbp), %edi
0000000000016a37	callq	_mig_dealloc_reply_port
0000000000016a3c	jmp	0x16a53
0000000000016a3e	movl	$0xfffffecc, %ebx
0000000000016a43	jmp	0x16a4a
0000000000016a45	movl	$0xfffffed3, %ebx
0000000000016a4a	leaq	-0x38(%rbp), %rdi
0000000000016a4e	callq	_mach_msg_destroy
0000000000016a53	movl	%ebx, %eax
0000000000016a55	addq	$0x38, %rsp
0000000000016a59	popq	%rbx
0000000000016a5a	popq	%rbp
0000000000016a5b	retq
_thread_get_special_port:
0000000000016a5c	pushq	%rbp
0000000000016a5d	movq	%rsp, %rbp
0000000000016a60	pushq	%r14
0000000000016a62	pushq	%rbx
0000000000016a63	subq	$0x40, %rsp
0000000000016a67	movq	%rdx, %r14
0000000000016a6a	leaq	_NDR_record(%rip), %rax
0000000000016a71	movq	(%rax), %rax
0000000000016a74	leaq	-0x40(%rbp), %rbx
0000000000016a78	movq	%rax, 0x18(%rbx)
0000000000016a7c	movl	%esi, 0x20(%rbx)
0000000000016a7f	movl	$0x1513, (%rbx)
0000000000016a85	movl	%edi, 0x8(%rbx)
0000000000016a88	callq	_mig_get_reply_port
0000000000016a8d	movl	%eax, 0xc(%rbx)
0000000000016a90	movabsq	$0xe1a00000000, %rcx
0000000000016a9a	movq	%rcx, 0x10(%rbx)
0000000000016a9e	movl	$0x0, (%rsp)
0000000000016aa5	movl	$0x3, %esi
0000000000016aaa	movl	$0x24, %edx
0000000000016aaf	movl	$0x30, %ecx
0000000000016ab4	xorl	%r9d, %r9d
0000000000016ab7	movq	%rbx, %rdi
0000000000016aba	movl	%eax, %r8d
0000000000016abd	callq	_mach_msg
0000000000016ac2	movl	%eax, %ebx
0000000000016ac4	leal	-0x10000002(%rbx), %eax
0000000000016aca	cmpl	$0xe, %eax
0000000000016acd	ja	0x16ae3
0000000000016acf	movl	$0x4003, %ecx
0000000000016ad4	btl	%eax, %ecx
0000000000016ad7	jae	0x16ae3
0000000000016ad9	movl	-0x34(%rbp), %edi
0000000000016adc	callq	_mig_put_reply_port
0000000000016ae1	jmp	0x16b37
0000000000016ae3	testl	%ebx, %ebx
0000000000016ae5	jne	0x16b18
0000000000016ae7	movl	-0x2c(%rbp), %eax
0000000000016aea	cmpl	$0x47, %eax
0000000000016aed	je	0x16b22
0000000000016aef	cmpl	$0xe7e, %eax
0000000000016af4	jne	0x16b29
0000000000016af6	cmpl	$0x0, -0x40(%rbp)
0000000000016afa	movl	-0x3c(%rbp), %eax
0000000000016afd	movl	$0xfffffed4, %ebx
0000000000016b02	js	0x16b42
0000000000016b04	cmpl	$0x24, %eax
0000000000016b07	jne	0x16b2e
0000000000016b09	movl	-0x20(%rbp), %eax
0000000000016b0c	testl	%eax, %eax
0000000000016b0e	movl	$0xfffffed4, %ebx
0000000000016b13	cmovnel	%eax, %ebx
0000000000016b16	jmp	0x16b2e
0000000000016b18	movl	-0x34(%rbp), %edi
0000000000016b1b	callq	_mig_dealloc_reply_port
0000000000016b20	jmp	0x16b37
0000000000016b22	movl	$0xfffffecc, %ebx
0000000000016b27	jmp	0x16b2e
0000000000016b29	movl	$0xfffffed3, %ebx
0000000000016b2e	leaq	-0x40(%rbp), %rdi
0000000000016b32	callq	_mach_msg_destroy
0000000000016b37	movl	%ebx, %eax
0000000000016b39	addq	$0x40, %rsp
0000000000016b3d	popq	%rbx
0000000000016b3e	popq	%r14
0000000000016b40	popq	%rbp
0000000000016b41	retq
0000000000016b42	cmpl	$0x28, %eax
0000000000016b45	jne	0x16b2e
0000000000016b47	cmpl	$0x1, -0x28(%rbp)
0000000000016b4b	jne	0x16b2e
0000000000016b4d	movl	$0xffff0000, %eax
0000000000016b52	andl	-0x1c(%rbp), %eax
0000000000016b55	cmpl	$0x110000, %eax
0000000000016b5a	jne	0x16b2e
0000000000016b5c	movl	-0x24(%rbp), %eax
0000000000016b5f	movl	%eax, (%r14)
0000000000016b62	xorl	%ebx, %ebx
0000000000016b64	jmp	0x16b37
_thread_set_special_port:
0000000000016b66	pushq	%rbp
0000000000016b67	movq	%rsp, %rbp
0000000000016b6a	pushq	%rbx
0000000000016b6b	subq	$0x48, %rsp
0000000000016b6f	leaq	-0x40(%rbp), %rbx
0000000000016b73	movl	$0x1, 0x18(%rbx)
0000000000016b7a	movl	%edx, 0x1c(%rbx)
0000000000016b7d	movl	$0x130000, 0x24(%rbx)
0000000000016b84	leaq	_NDR_record(%rip), %rax
0000000000016b8b	movq	(%rax), %rax
0000000000016b8e	movq	%rax, 0x28(%rbx)
0000000000016b92	movl	%esi, 0x30(%rbx)
0000000000016b95	movl	$0x80001513, (%rbx)
0000000000016b9b	movl	%edi, 0x8(%rbx)
0000000000016b9e	callq	_mig_get_reply_port
0000000000016ba3	movl	%eax, 0xc(%rbx)
0000000000016ba6	movabsq	$0xe1b00000000, %rcx
0000000000016bb0	movq	%rcx, 0x10(%rbx)
0000000000016bb4	movl	$0x0, (%rsp)
0000000000016bbb	movl	$0x3, %esi
0000000000016bc0	movl	$0x34, %edx
0000000000016bc5	movl	$0x2c, %ecx
0000000000016bca	xorl	%r9d, %r9d
0000000000016bcd	movq	%rbx, %rdi
0000000000016bd0	movl	%eax, %r8d
0000000000016bd3	callq	_mach_msg
0000000000016bd8	movl	%eax, %ebx
0000000000016bda	leal	-0x10000002(%rbx), %eax
0000000000016be0	cmpl	$0xe, %eax
0000000000016be3	ja	0x16bf9
0000000000016be5	movl	$0x4003, %ecx
0000000000016bea	btl	%eax, %ecx
0000000000016bed	jae	0x16bf9
0000000000016bef	movl	-0x34(%rbp), %edi
0000000000016bf2	callq	_mig_put_reply_port
0000000000016bf7	jmp	0x16c47
0000000000016bf9	testl	%ebx, %ebx
0000000000016bfb	jne	0x16c28
0000000000016bfd	movl	-0x2c(%rbp), %eax
0000000000016c00	cmpl	$0x47, %eax
0000000000016c03	je	0x16c32
0000000000016c05	cmpl	$0xe7f, %eax
0000000000016c0a	jne	0x16c39
0000000000016c0c	movl	$0xfffffed4, %ebx
0000000000016c11	cmpl	$0x0, -0x40(%rbp)
0000000000016c15	js	0x16c3e
0000000000016c17	cmpl	$0x24, -0x3c(%rbp)
0000000000016c1b	jne	0x16c3e
0000000000016c1d	movl	-0x20(%rbp), %ebx
0000000000016c20	testl	%ebx, %ebx
0000000000016c22	jne	0x16c3e
0000000000016c24	xorl	%ebx, %ebx
0000000000016c26	jmp	0x16c47
0000000000016c28	movl	-0x34(%rbp), %edi
0000000000016c2b	callq	_mig_dealloc_reply_port
0000000000016c30	jmp	0x16c47
0000000000016c32	movl	$0xfffffecc, %ebx
0000000000016c37	jmp	0x16c3e
0000000000016c39	movl	$0xfffffed3, %ebx
0000000000016c3e	leaq	-0x40(%rbp), %rdi
0000000000016c42	callq	_mach_msg_destroy
0000000000016c47	movl	%ebx, %eax
0000000000016c49	addq	$0x48, %rsp
0000000000016c4d	popq	%rbx
0000000000016c4e	popq	%rbp
0000000000016c4f	retq
_thread_swap_exception_ports:
0000000000016c50	pushq	%rbp
0000000000016c51	movq	%rsp, %rbp
0000000000016c54	pushq	%r15
0000000000016c56	pushq	%r14
0000000000016c58	pushq	%r13
0000000000016c5a	pushq	%r12
0000000000016c5c	pushq	%rbx
0000000000016c5d	subq	$0x338, %rsp
0000000000016c64	movq	%r9, %r14
0000000000016c67	movl	$0x1, -0x340(%rbp)
0000000000016c71	movl	%edx, -0x33c(%rbp)
0000000000016c77	movl	$0x130000, -0x334(%rbp)
0000000000016c81	leaq	_NDR_record(%rip), %rax
0000000000016c88	movq	(%rax), %rax
0000000000016c8b	movq	%rax, -0x330(%rbp)
0000000000016c92	movl	%esi, -0x328(%rbp)
0000000000016c98	movl	%ecx, -0x324(%rbp)
0000000000016c9e	movl	%r8d, -0x320(%rbp)
0000000000016ca5	movl	$0x80001513, -0x358(%rbp)
0000000000016caf	movl	%edi, -0x350(%rbp)
0000000000016cb5	callq	_mig_get_reply_port
0000000000016cba	movl	%eax, -0x34c(%rbp)
0000000000016cc0	movabsq	$0xe1f00000000, %rcx
0000000000016cca	movq	%rcx, -0x348(%rbp)
0000000000016cd1	movl	$0x0, (%rsp)
0000000000016cd8	leaq	-0x358(%rbp), %r15
0000000000016cdf	movl	$0x3, %esi
0000000000016ce4	movl	$0x3c, %edx
0000000000016ce9	movl	$0x330, %ecx
0000000000016cee	xorl	%r9d, %r9d
0000000000016cf1	movl	%eax, %r8d
0000000000016cf4	movq	%r15, %rdi
0000000000016cf7	callq	_mach_msg
0000000000016cfc	movl	%eax, %ebx
0000000000016cfe	leal	-0x10000002(%rbx), %eax
0000000000016d04	cmpl	$0xe, %eax
0000000000016d07	ja	0x16d20
0000000000016d09	movl	$0x4003, %ecx
0000000000016d0e	btl	%eax, %ecx
0000000000016d11	jae	0x16d20
0000000000016d13	movl	-0x34c(%rbp), %edi
0000000000016d19	callq	_mig_put_reply_port
0000000000016d1e	jmp	0x16d86
0000000000016d20	testl	%ebx, %ebx
0000000000016d22	jne	0x16d61
0000000000016d24	movl	-0x344(%rbp), %eax
0000000000016d2a	cmpl	$0x47, %eax
0000000000016d2d	je	0x16d6e
0000000000016d2f	cmpl	$0xe83, %eax
0000000000016d34	jne	0x16d75
0000000000016d36	cmpl	$0x0, -0x358(%rbp)
0000000000016d3d	movl	-0x354(%rbp), %eax
0000000000016d43	js	0x16d9a
0000000000016d45	movl	$0xfffffed4, %ebx
0000000000016d4a	cmpl	$0x24, %eax
0000000000016d4d	jne	0x16d7a
0000000000016d4f	movl	-0x338(%rbp), %eax
0000000000016d55	testl	%eax, %eax
0000000000016d57	movl	$0xfffffed4, %ebx
0000000000016d5c	cmovnel	%eax, %ebx
0000000000016d5f	jmp	0x16d7a
0000000000016d61	movl	-0x34c(%rbp), %edi
0000000000016d67	callq	_mig_dealloc_reply_port
0000000000016d6c	jmp	0x16d86
0000000000016d6e	movl	$0xfffffecc, %ebx
0000000000016d73	jmp	0x16d7a
0000000000016d75	movl	$0xfffffed3, %ebx
0000000000016d7a	leaq	-0x358(%rbp), %rdi
0000000000016d81	callq	_mach_msg_destroy
0000000000016d86	movl	%ebx, %eax
0000000000016d88	addq	$0x338, %rsp
0000000000016d8f	popq	%rbx
0000000000016d90	popq	%r12
0000000000016d92	popq	%r13
0000000000016d94	popq	%r14
0000000000016d96	popq	%r15
0000000000016d98	popq	%rbp
0000000000016d99	retq
0000000000016d9a	leal	-0x1a8(%rax), %ecx
0000000000016da0	movl	$0xfffffed4, %ebx
0000000000016da5	cmpl	$0x180, %ecx
0000000000016dab	ja	0x16d7a
0000000000016dad	cmpl	$0x20, -0x340(%rbp)
0000000000016db4	jne	0x16d7a
0000000000016db6	leaq	-0x33c(%rbp), %r13
0000000000016dbd	leaq	-0x334(%rbp), %rdx
0000000000016dc4	xorl	%esi, %esi
0000000000016dc6	cmpl	$0xffffff, (%rdx)
0000000000016dcc	ja	0x16d7a
0000000000016dce	incl	%esi
0000000000016dd0	addq	$0xc, %rdx
0000000000016dd4	cmpl	$0x20, %esi
0000000000016dd7	jb	0x16dc6
0000000000016dd9	movslq	-0x1b4(%rbp), %r12
0000000000016de0	cmpq	$0x20, %r12
0000000000016de4	ja	0x16d7a
0000000000016de6	shrl	$0x2, %ecx
0000000000016de9	cmpl	%r12d, %ecx
0000000000016dec	jb	0x16d7a
0000000000016dee	leal	(,%r12,4), %ecx
0000000000016df6	leal	0x1a8(%rcx), %edx
0000000000016dfc	cmpl	%edx, %eax
0000000000016dfe	jb	0x16d7a
0000000000016e04	subl	%ecx, %eax
0000000000016e06	cmpl	%edx, %eax
0000000000016e08	jb	0x16d7a
0000000000016e0e	leal	-0x1a8(%rax), %esi
0000000000016e14	shrl	$0x2, %esi
0000000000016e17	cmpl	%r12d, %esi
0000000000016e1a	jb	0x16d7a
0000000000016e20	subl	%ecx, %eax
0000000000016e22	cmpl	%edx, %eax
0000000000016e24	jne	0x16d7a
0000000000016e2a	addl	$0xfffffe58, %eax
0000000000016e2f	shrl	$0x2, %eax
0000000000016e32	cmpl	%r12d, %eax
0000000000016e35	jb	0x16d7a
0000000000016e3b	movl	%ecx, %eax
0000000000016e3d	leaq	-0x80(%rax), %rbx
0000000000016e41	leaq	-0x80(%rax,%r15), %r15
0000000000016e46	addq	%r15, %rbx
0000000000016e49	leaq	-0x1b0(%rbp), %rsi
0000000000016e50	movq	%r14, %rdi
0000000000016e53	movq	%rax, %r14
0000000000016e56	movq	%rax, %rdx
0000000000016e59	callq	_memcpy
0000000000016e5e	movq	0x18(%rbp), %rdx
0000000000016e62	movq	0x10(%rbp), %rax
0000000000016e66	movl	%r12d, (%rax)
0000000000016e69	testl	%r12d, %r12d
0000000000016e6c	je	0x16e83
0000000000016e6e	xorl	%eax, %eax
0000000000016e70	movl	(%r13), %ecx
0000000000016e74	movl	%ecx, (%rdx,%rax,4)
0000000000016e77	addq	$0xc, %r13
0000000000016e7b	incq	%rax
0000000000016e7e	cmpq	%r12, %rax
0000000000016e81	jl	0x16e70
0000000000016e83	addq	$0x228, %r15
0000000000016e8a	movq	0x20(%rbp), %rdi
0000000000016e8e	movq	%r15, %rsi
0000000000016e91	movq	%r14, %rdx
0000000000016e94	callq	_memcpy
0000000000016e99	addq	$0x2a8, %rbx
0000000000016ea0	movq	0x28(%rbp), %rdi
0000000000016ea4	movq	%rbx, %rsi
0000000000016ea7	movq	%r14, %rdx
0000000000016eaa	callq	_memcpy
0000000000016eaf	xorl	%ebx, %ebx
0000000000016eb1	jmp	0x16d86
_thread_sample:
0000000000016eb6	pushq	%rbp
0000000000016eb7	movq	%rsp, %rbp
0000000000016eba	pushq	%rbx
0000000000016ebb	subq	$0x38, %rsp
0000000000016ebf	leaq	-0x38(%rbp), %rbx
0000000000016ec3	movl	$0x1, 0x18(%rbx)
0000000000016eca	movl	%esi, 0x1c(%rbx)
0000000000016ecd	movl	$0x140000, 0x24(%rbx)
0000000000016ed4	movl	$0x80001513, (%rbx)
0000000000016eda	movl	%edi, 0x8(%rbx)
0000000000016edd	callq	_mig_get_reply_port
0000000000016ee2	movl	%eax, 0xc(%rbx)
0000000000016ee5	movabsq	$0xe2300000000, %rcx
0000000000016eef	movq	%rcx, 0x10(%rbx)
0000000000016ef3	movl	$0x0, (%rsp)
0000000000016efa	movl	$0x3, %esi
0000000000016eff	movl	$0x28, %edx
0000000000016f04	movl	$0x2c, %ecx
0000000000016f09	xorl	%r9d, %r9d
0000000000016f0c	movq	%rbx, %rdi
0000000000016f0f	movl	%eax, %r8d
0000000000016f12	callq	_mach_msg
0000000000016f17	movl	%eax, %ebx
0000000000016f19	leal	-0x10000002(%rbx), %eax
0000000000016f1f	cmpl	$0xe, %eax
0000000000016f22	ja	0x16f38
0000000000016f24	movl	$0x4003, %ecx
0000000000016f29	btl	%eax, %ecx
0000000000016f2c	jae	0x16f38
0000000000016f2e	movl	-0x2c(%rbp), %edi
0000000000016f31	callq	_mig_put_reply_port
0000000000016f36	jmp	0x16f86
0000000000016f38	testl	%ebx, %ebx
0000000000016f3a	jne	0x16f67
0000000000016f3c	movl	-0x24(%rbp), %eax
0000000000016f3f	cmpl	$0x47, %eax
0000000000016f42	je	0x16f71
0000000000016f44	cmpl	$0xe87, %eax
0000000000016f49	jne	0x16f78
0000000000016f4b	movl	$0xfffffed4, %ebx
0000000000016f50	cmpl	$0x0, -0x38(%rbp)
0000000000016f54	js	0x16f7d
0000000000016f56	cmpl	$0x24, -0x34(%rbp)
0000000000016f5a	jne	0x16f7d
0000000000016f5c	movl	-0x18(%rbp), %ebx
0000000000016f5f	testl	%ebx, %ebx
0000000000016f61	jne	0x16f7d
0000000000016f63	xorl	%ebx, %ebx
0000000000016f65	jmp	0x16f86
0000000000016f67	movl	-0x2c(%rbp), %edi
0000000000016f6a	callq	_mig_dealloc_reply_port
0000000000016f6f	jmp	0x16f86
0000000000016f71	movl	$0xfffffecc, %ebx
0000000000016f76	jmp	0x16f7d
0000000000016f78	movl	$0xfffffed3, %ebx
0000000000016f7d	leaq	-0x38(%rbp), %rdi
0000000000016f81	callq	_mach_msg_destroy
0000000000016f86	movl	%ebx, %eax
0000000000016f88	addq	$0x38, %rsp
0000000000016f8c	popq	%rbx
0000000000016f8d	popq	%rbp
0000000000016f8e	retq
_etap_trace_thread:
0000000000016f8f	pushq	%rbp
0000000000016f90	movq	%rsp, %rbp
0000000000016f93	pushq	%rbx
0000000000016f94	subq	$0x38, %rsp
0000000000016f98	leaq	_NDR_record(%rip), %rax
0000000000016f9f	movq	(%rax), %rax
0000000000016fa2	leaq	-0x38(%rbp), %rbx
0000000000016fa6	movq	%rax, 0x18(%rbx)
0000000000016faa	movl	%esi, 0x20(%rbx)
0000000000016fad	movl	$0x1513, (%rbx)
0000000000016fb3	movl	%edi, 0x8(%rbx)
0000000000016fb6	callq	_mig_get_reply_port
0000000000016fbb	movl	%eax, 0xc(%rbx)
0000000000016fbe	movabsq	$0xe2400000000, %rcx
0000000000016fc8	movq	%rcx, 0x10(%rbx)
0000000000016fcc	movl	$0x0, (%rsp)
0000000000016fd3	movl	$0x3, %esi
0000000000016fd8	movl	$0x24, %edx
0000000000016fdd	movl	$0x2c, %ecx
0000000000016fe2	xorl	%r9d, %r9d
0000000000016fe5	movq	%rbx, %rdi
0000000000016fe8	movl	%eax, %r8d
0000000000016feb	callq	_mach_msg
0000000000016ff0	movl	%eax, %ebx
0000000000016ff2	leal	-0x10000002(%rbx), %eax
0000000000016ff8	cmpl	$0xe, %eax
0000000000016ffb	ja	0x17011
0000000000016ffd	movl	$0x4003, %ecx
0000000000017002	btl	%eax, %ecx
0000000000017005	jae	0x17011
0000000000017007	movl	-0x2c(%rbp), %edi
000000000001700a	callq	_mig_put_reply_port
000000000001700f	jmp	0x1705f
0000000000017011	testl	%ebx, %ebx
0000000000017013	jne	0x17040
0000000000017015	movl	-0x24(%rbp), %eax
0000000000017018	cmpl	$0x47, %eax
000000000001701b	je	0x1704a
000000000001701d	cmpl	$0xe88, %eax
0000000000017022	jne	0x17051
0000000000017024	movl	$0xfffffed4, %ebx
0000000000017029	cmpl	$0x0, -0x38(%rbp)
000000000001702d	js	0x17056
000000000001702f	cmpl	$0x24, -0x34(%rbp)
0000000000017033	jne	0x17056
0000000000017035	movl	-0x18(%rbp), %ebx
0000000000017038	testl	%ebx, %ebx
000000000001703a	jne	0x17056
000000000001703c	xorl	%ebx, %ebx
000000000001703e	jmp	0x1705f
0000000000017040	movl	-0x2c(%rbp), %edi
0000000000017043	callq	_mig_dealloc_reply_port
0000000000017048	jmp	0x1705f
000000000001704a	movl	$0xfffffecc, %ebx
000000000001704f	jmp	0x17056
0000000000017051	movl	$0xfffffed3, %ebx
0000000000017056	leaq	-0x38(%rbp), %rdi
000000000001705a	callq	_mach_msg_destroy
000000000001705f	movl	%ebx, %eax
0000000000017061	addq	$0x38, %rsp
0000000000017065	popq	%rbx
0000000000017066	popq	%rbp
0000000000017067	retq
_thread_assign:
0000000000017068	pushq	%rbp
0000000000017069	movq	%rsp, %rbp
000000000001706c	pushq	%rbx
000000000001706d	subq	$0x38, %rsp
0000000000017071	leaq	-0x38(%rbp), %rbx
0000000000017075	movl	$0x1, 0x18(%rbx)
000000000001707c	movl	%esi, 0x1c(%rbx)
000000000001707f	movl	$0x130000, 0x24(%rbx)
0000000000017086	movl	$0x80001513, (%rbx)
000000000001708c	movl	%edi, 0x8(%rbx)
000000000001708f	callq	_mig_get_reply_port
0000000000017094	movl	%eax, 0xc(%rbx)
0000000000017097	movabsq	$0xe2500000000, %rcx
00000000000170a1	movq	%rcx, 0x10(%rbx)
00000000000170a5	movl	$0x0, (%rsp)
00000000000170ac	movl	$0x3, %esi
00000000000170b1	movl	$0x28, %edx
00000000000170b6	movl	$0x2c, %ecx
00000000000170bb	xorl	%r9d, %r9d
00000000000170be	movq	%rbx, %rdi
00000000000170c1	movl	%eax, %r8d
00000000000170c4	callq	_mach_msg
00000000000170c9	movl	%eax, %ebx
00000000000170cb	leal	-0x10000002(%rbx), %eax
00000000000170d1	cmpl	$0xe, %eax
00000000000170d4	ja	0x170ea
00000000000170d6	movl	$0x4003, %ecx
00000000000170db	btl	%eax, %ecx
00000000000170de	jae	0x170ea
00000000000170e0	movl	-0x2c(%rbp), %edi
00000000000170e3	callq	_mig_put_reply_port
00000000000170e8	jmp	0x17138
00000000000170ea	testl	%ebx, %ebx
00000000000170ec	jne	0x17119
00000000000170ee	movl	-0x24(%rbp), %eax
00000000000170f1	cmpl	$0x47, %eax
00000000000170f4	je	0x17123
00000000000170f6	cmpl	$0xe89, %eax
00000000000170fb	jne	0x1712a
00000000000170fd	movl	$0xfffffed4, %ebx
0000000000017102	cmpl	$0x0, -0x38(%rbp)
0000000000017106	js	0x1712f
0000000000017108	cmpl	$0x24, -0x34(%rbp)
000000000001710c	jne	0x1712f
000000000001710e	movl	-0x18(%rbp), %ebx
0000000000017111	testl	%ebx, %ebx
0000000000017113	jne	0x1712f
0000000000017115	xorl	%ebx, %ebx
0000000000017117	jmp	0x17138
0000000000017119	movl	-0x2c(%rbp), %edi
000000000001711c	callq	_mig_dealloc_reply_port
0000000000017121	jmp	0x17138
0000000000017123	movl	$0xfffffecc, %ebx
0000000000017128	jmp	0x1712f
000000000001712a	movl	$0xfffffed3, %ebx
000000000001712f	leaq	-0x38(%rbp), %rdi
0000000000017133	callq	_mach_msg_destroy
0000000000017138	movl	%ebx, %eax
000000000001713a	addq	$0x38, %rsp
000000000001713e	popq	%rbx
000000000001713f	popq	%rbp
0000000000017140	retq
_thread_assign_default:
0000000000017141	pushq	%rbp
0000000000017142	movq	%rsp, %rbp
0000000000017145	pushq	%rbx
0000000000017146	subq	$0x38, %rsp
000000000001714a	leaq	-0x38(%rbp), %rbx
000000000001714e	movl	$0x1513, (%rbx)
0000000000017154	movl	%edi, 0x8(%rbx)
0000000000017157	callq	_mig_get_reply_port
000000000001715c	movl	%eax, 0xc(%rbx)
000000000001715f	movabsq	$0xe2600000000, %rcx
0000000000017169	movq	%rcx, 0x10(%rbx)
000000000001716d	movl	$0x0, (%rsp)
0000000000017174	movl	$0x3, %esi
0000000000017179	movl	$0x18, %edx
000000000001717e	movl	$0x2c, %ecx
0000000000017183	xorl	%r9d, %r9d
0000000000017186	movq	%rbx, %rdi
0000000000017189	movl	%eax, %r8d
000000000001718c	callq	_mach_msg
0000000000017191	movl	%eax, %ebx
0000000000017193	leal	-0x10000002(%rbx), %eax
0000000000017199	cmpl	$0xe, %eax
000000000001719c	ja	0x171b2
000000000001719e	movl	$0x4003, %ecx
00000000000171a3	btl	%eax, %ecx
00000000000171a6	jae	0x171b2
00000000000171a8	movl	-0x2c(%rbp), %edi
00000000000171ab	callq	_mig_put_reply_port
00000000000171b0	jmp	0x17200
00000000000171b2	testl	%ebx, %ebx
00000000000171b4	jne	0x171e1
00000000000171b6	movl	-0x24(%rbp), %eax
00000000000171b9	cmpl	$0x47, %eax
00000000000171bc	je	0x171eb
00000000000171be	cmpl	$0xe8a, %eax
00000000000171c3	jne	0x171f2
00000000000171c5	movl	$0xfffffed4, %ebx
00000000000171ca	cmpl	$0x0, -0x38(%rbp)
00000000000171ce	js	0x171f7
00000000000171d0	cmpl	$0x24, -0x34(%rbp)
00000000000171d4	jne	0x171f7
00000000000171d6	movl	-0x18(%rbp), %ebx
00000000000171d9	testl	%ebx, %ebx
00000000000171db	jne	0x171f7
00000000000171dd	xorl	%ebx, %ebx
00000000000171df	jmp	0x17200
00000000000171e1	movl	-0x2c(%rbp), %edi
00000000000171e4	callq	_mig_dealloc_reply_port
00000000000171e9	jmp	0x17200
00000000000171eb	movl	$0xfffffecc, %ebx
00000000000171f0	jmp	0x171f7
00000000000171f2	movl	$0xfffffed3, %ebx
00000000000171f7	leaq	-0x38(%rbp), %rdi
00000000000171fb	callq	_mach_msg_destroy
0000000000017200	movl	%ebx, %eax
0000000000017202	addq	$0x38, %rsp
0000000000017206	popq	%rbx
0000000000017207	popq	%rbp
0000000000017208	retq
_thread_get_assignment:
0000000000017209	pushq	%rbp
000000000001720a	movq	%rsp, %rbp
000000000001720d	pushq	%r14
000000000001720f	pushq	%rbx
0000000000017210	subq	$0x40, %rsp
0000000000017214	movq	%rsi, %r14
0000000000017217	leaq	-0x40(%rbp), %rbx
000000000001721b	movl	$0x1513, (%rbx)
0000000000017221	movl	%edi, 0x8(%rbx)
0000000000017224	callq	_mig_get_reply_port
0000000000017229	movl	%eax, 0xc(%rbx)
000000000001722c	movabsq	$0xe2700000000, %rcx
0000000000017236	movq	%rcx, 0x10(%rbx)
000000000001723a	movl	$0x0, (%rsp)
0000000000017241	movl	$0x3, %esi
0000000000017246	movl	$0x18, %edx
000000000001724b	movl	$0x30, %ecx
0000000000017250	xorl	%r9d, %r9d
0000000000017253	movq	%rbx, %rdi
0000000000017256	movl	%eax, %r8d
0000000000017259	callq	_mach_msg
000000000001725e	movl	%eax, %ebx
0000000000017260	leal	-0x10000002(%rbx), %eax
0000000000017266	cmpl	$0xe, %eax
0000000000017269	ja	0x1727f
000000000001726b	movl	$0x4003, %ecx
0000000000017270	btl	%eax, %ecx
0000000000017273	jae	0x1727f
0000000000017275	movl	-0x34(%rbp), %edi
0000000000017278	callq	_mig_put_reply_port
000000000001727d	jmp	0x172d3
000000000001727f	testl	%ebx, %ebx
0000000000017281	jne	0x172b4
0000000000017283	movl	-0x2c(%rbp), %eax
0000000000017286	cmpl	$0x47, %eax
0000000000017289	je	0x172be
000000000001728b	cmpl	$0xe8b, %eax
0000000000017290	jne	0x172c5
0000000000017292	cmpl	$0x0, -0x40(%rbp)
0000000000017296	movl	-0x3c(%rbp), %eax
0000000000017299	movl	$0xfffffed4, %ebx
000000000001729e	js	0x172de
00000000000172a0	cmpl	$0x24, %eax
00000000000172a3	jne	0x172ca
00000000000172a5	movl	-0x20(%rbp), %eax
00000000000172a8	testl	%eax, %eax
00000000000172aa	movl	$0xfffffed4, %ebx
00000000000172af	cmovnel	%eax, %ebx
00000000000172b2	jmp	0x172ca
00000000000172b4	movl	-0x34(%rbp), %edi
00000000000172b7	callq	_mig_dealloc_reply_port
00000000000172bc	jmp	0x172d3
00000000000172be	movl	$0xfffffecc, %ebx
00000000000172c3	jmp	0x172ca
00000000000172c5	movl	$0xfffffed3, %ebx
00000000000172ca	leaq	-0x40(%rbp), %rdi
00000000000172ce	callq	_mach_msg_destroy
00000000000172d3	movl	%ebx, %eax
00000000000172d5	addq	$0x40, %rsp
00000000000172d9	popq	%rbx
00000000000172da	popq	%r14
00000000000172dc	popq	%rbp
00000000000172dd	retq
00000000000172de	cmpl	$0x28, %eax
00000000000172e1	jne	0x172ca
00000000000172e3	cmpl	$0x1, -0x28(%rbp)
00000000000172e7	jne	0x172ca
00000000000172e9	movl	$0xffff0000, %eax
00000000000172ee	andl	-0x1c(%rbp), %eax
00000000000172f1	cmpl	$0x110000, %eax
00000000000172f6	jne	0x172ca
00000000000172f8	movl	-0x24(%rbp), %eax
00000000000172fb	movl	%eax, (%r14)
00000000000172fe	xorl	%ebx, %ebx
0000000000017300	jmp	0x172d3
__kernelrpc_thread_set_policy:
0000000000017302	pushq	%rbp
0000000000017303	movq	%rsp, %rbp
0000000000017306	pushq	%r15
0000000000017308	pushq	%r14
000000000001730a	pushq	%r13
000000000001730c	pushq	%r12
000000000001730e	pushq	%rbx
000000000001730f	subq	$0x68, %rsp
0000000000017313	movl	$0x1, -0x68(%rbp)
000000000001731a	movl	%esi, -0x64(%rbp)
000000000001731d	movl	$0x130000, -0x5c(%rbp)
0000000000017324	leaq	_NDR_record(%rip), %rax
000000000001732b	movq	(%rax), %rax
000000000001732e	movq	%rax, -0x58(%rbp)
0000000000017332	movl	%edx, -0x50(%rbp)
0000000000017335	movl	$0xfffffecd, %r12d
000000000001733b	cmpl	$0x5, %r8d
000000000001733f	ja	0x17461
0000000000017345	movq	%r9, %r15
0000000000017348	movl	%r8d, %ebx
000000000001734b	movl	%edi, -0x2c(%rbp)
000000000001734e	leaq	-0x48(%rbp), %r14
0000000000017352	leal	(,%rbx,4), %r13d
000000000001735a	movq	%r14, %rdi
000000000001735d	movq	%rcx, %rsi
0000000000017360	movq	%r13, %rdx
0000000000017363	callq	_memcpy
0000000000017368	movl	%ebx, -0x4(%r14)
000000000001736c	movl	0x10(%rbp), %r14d
0000000000017370	cmpl	$0x1, %r14d
0000000000017374	ja	0x17461
000000000001737a	leaq	-0x80(%rbp), %rax
000000000001737e	leaq	-0x14(%r13,%rax), %rbx
0000000000017383	leaq	0x50(%rbx), %rdi
0000000000017387	leal	(,%r14,4), %edx
000000000001738f	movq	%r15, %rsi
0000000000017392	callq	_memcpy
0000000000017397	movl	%r14d, 0x4c(%rbx)
000000000001739b	leal	0x3c(%r13,%r14,4), %r14d
00000000000173a0	leaq	-0x80(%rbp), %rbx
00000000000173a4	movl	$0x80001513, (%rbx)
00000000000173aa	movl	-0x2c(%rbp), %eax
00000000000173ad	movl	%eax, 0x8(%rbx)
00000000000173b0	callq	_mig_get_reply_port
00000000000173b5	movl	%eax, 0xc(%rbx)
00000000000173b8	movabsq	$0xe2800000000, %rcx
00000000000173c2	movq	%rcx, 0x10(%rbx)
00000000000173c6	movl	$0x0, (%rsp)
00000000000173cd	movl	$0x3, %esi
00000000000173d2	movl	$0x2c, %ecx
00000000000173d7	xorl	%r9d, %r9d
00000000000173da	movq	%rbx, %rdi
00000000000173dd	movl	%r14d, %edx
00000000000173e0	movl	%eax, %r8d
00000000000173e3	callq	_mach_msg
00000000000173e8	movl	%eax, %r12d
00000000000173eb	leal	-0x10000002(%r12), %eax
00000000000173f3	cmpl	$0xe, %eax
00000000000173f6	ja	0x1740c
00000000000173f8	movl	$0x4003, %ecx
00000000000173fd	btl	%eax, %ecx
0000000000017400	jae	0x1740c
0000000000017402	movl	-0x74(%rbp), %edi
0000000000017405	callq	_mig_put_reply_port
000000000001740a	jmp	0x17461
000000000001740c	testl	%r12d, %r12d
000000000001740f	jne	0x17440
0000000000017411	movl	-0x6c(%rbp), %eax
0000000000017414	cmpl	$0x47, %eax
0000000000017417	je	0x1744a
0000000000017419	cmpl	$0xe8c, %eax
000000000001741e	jne	0x17452
0000000000017420	movl	$0xfffffed4, %r12d
0000000000017426	cmpl	$0x0, -0x80(%rbp)
000000000001742a	js	0x17458
000000000001742c	cmpl	$0x24, -0x7c(%rbp)
0000000000017430	jne	0x17458
0000000000017432	movl	-0x60(%rbp), %r12d
0000000000017436	testl	%r12d, %r12d
0000000000017439	jne	0x17458
000000000001743b	xorl	%r12d, %r12d
000000000001743e	jmp	0x17461
0000000000017440	movl	-0x74(%rbp), %edi
0000000000017443	callq	_mig_dealloc_reply_port
0000000000017448	jmp	0x17461
000000000001744a	movl	$0xfffffecc, %r12d
0000000000017450	jmp	0x17458
0000000000017452	movl	$0xfffffed3, %r12d
0000000000017458	leaq	-0x80(%rbp), %rdi
000000000001745c	callq	_mach_msg_destroy
0000000000017461	movl	%r12d, %eax
0000000000017464	addq	$0x68, %rsp
0000000000017468	popq	%rbx
0000000000017469	popq	%r12
000000000001746b	popq	%r13
000000000001746d	popq	%r14
000000000001746f	popq	%r15
0000000000017471	popq	%rbp
0000000000017472	retq
_thread_get_mach_voucher:
0000000000017473	pushq	%rbp
0000000000017474	movq	%rsp, %rbp
0000000000017477	pushq	%r14
0000000000017479	pushq	%rbx
000000000001747a	subq	$0x40, %rsp
000000000001747e	movq	%rdx, %r14
0000000000017481	leaq	_NDR_record(%rip), %rax
0000000000017488	movq	(%rax), %rax
000000000001748b	leaq	-0x40(%rbp), %rbx
000000000001748f	movq	%rax, 0x18(%rbx)
0000000000017493	movl	%esi, 0x20(%rbx)
0000000000017496	movl	$0x1513, (%rbx)
000000000001749c	movl	%edi, 0x8(%rbx)
000000000001749f	callq	_mig_get_reply_port
00000000000174a4	movl	%eax, 0xc(%rbx)
00000000000174a7	movabsq	$0xe2900000000, %rcx
00000000000174b1	movq	%rcx, 0x10(%rbx)
00000000000174b5	movl	$0x0, (%rsp)
00000000000174bc	movl	$0x3, %esi
00000000000174c1	movl	$0x24, %edx
00000000000174c6	movl	$0x30, %ecx
00000000000174cb	xorl	%r9d, %r9d
00000000000174ce	movq	%rbx, %rdi
00000000000174d1	movl	%eax, %r8d
00000000000174d4	callq	_mach_msg
00000000000174d9	movl	%eax, %ebx
00000000000174db	leal	-0x10000002(%rbx), %eax
00000000000174e1	cmpl	$0xe, %eax
00000000000174e4	ja	0x174fa
00000000000174e6	movl	$0x4003, %ecx
00000000000174eb	btl	%eax, %ecx
00000000000174ee	jae	0x174fa
00000000000174f0	movl	-0x34(%rbp), %edi
00000000000174f3	callq	_mig_put_reply_port
00000000000174f8	jmp	0x1754e
00000000000174fa	testl	%ebx, %ebx
00000000000174fc	jne	0x1752f
00000000000174fe	movl	-0x2c(%rbp), %eax
0000000000017501	cmpl	$0x47, %eax
0000000000017504	je	0x17539
0000000000017506	cmpl	$0xe8d, %eax
000000000001750b	jne	0x17540
000000000001750d	cmpl	$0x0, -0x40(%rbp)
0000000000017511	movl	-0x3c(%rbp), %eax
0000000000017514	movl	$0xfffffed4, %ebx
0000000000017519	js	0x17559
000000000001751b	cmpl	$0x24, %eax
000000000001751e	jne	0x17545
0000000000017520	movl	-0x20(%rbp), %eax
0000000000017523	testl	%eax, %eax
0000000000017525	movl	$0xfffffed4, %ebx
000000000001752a	cmovnel	%eax, %ebx
000000000001752d	jmp	0x17545
000000000001752f	movl	-0x34(%rbp), %edi
0000000000017532	callq	_mig_dealloc_reply_port
0000000000017537	jmp	0x1754e
0000000000017539	movl	$0xfffffecc, %ebx
000000000001753e	jmp	0x17545
0000000000017540	movl	$0xfffffed3, %ebx
0000000000017545	leaq	-0x40(%rbp), %rdi
0000000000017549	callq	_mach_msg_destroy
000000000001754e	movl	%ebx, %eax
0000000000017550	addq	$0x40, %rsp
0000000000017554	popq	%rbx
0000000000017555	popq	%r14
0000000000017557	popq	%rbp
0000000000017558	retq
0000000000017559	cmpl	$0x28, %eax
000000000001755c	jne	0x17545
000000000001755e	cmpl	$0x1, -0x28(%rbp)
0000000000017562	jne	0x17545
0000000000017564	movl	$0xffff0000, %eax
0000000000017569	andl	-0x1c(%rbp), %eax
000000000001756c	cmpl	$0x110000, %eax
0000000000017571	jne	0x17545
0000000000017573	movl	-0x24(%rbp), %eax
0000000000017576	movl	%eax, (%r14)
0000000000017579	xorl	%ebx, %ebx
000000000001757b	jmp	0x1754e
_thread_set_mach_voucher:
000000000001757d	pushq	%rbp
000000000001757e	movq	%rsp, %rbp
0000000000017581	pushq	%rbx
0000000000017582	subq	$0x38, %rsp
0000000000017586	leaq	-0x38(%rbp), %rbx
000000000001758a	movl	$0x1, 0x18(%rbx)
0000000000017591	movl	%esi, 0x1c(%rbx)
0000000000017594	movl	$0x130000, 0x24(%rbx)
000000000001759b	movl	$0x80001513, (%rbx)
00000000000175a1	movl	%edi, 0x8(%rbx)
00000000000175a4	callq	_mig_get_reply_port
00000000000175a9	movl	%eax, 0xc(%rbx)
00000000000175ac	movabsq	$0xe2a00000000, %rcx
00000000000175b6	movq	%rcx, 0x10(%rbx)
00000000000175ba	movl	$0x0, (%rsp)
00000000000175c1	movl	$0x3, %esi
00000000000175c6	movl	$0x28, %edx
00000000000175cb	movl	$0x2c, %ecx
00000000000175d0	xorl	%r9d, %r9d
00000000000175d3	movq	%rbx, %rdi
00000000000175d6	movl	%eax, %r8d
00000000000175d9	callq	_mach_msg
00000000000175de	movl	%eax, %ebx
00000000000175e0	leal	-0x10000002(%rbx), %eax
00000000000175e6	cmpl	$0xe, %eax
00000000000175e9	ja	0x175ff
00000000000175eb	movl	$0x4003, %ecx
00000000000175f0	btl	%eax, %ecx
00000000000175f3	jae	0x175ff
00000000000175f5	movl	-0x2c(%rbp), %edi
00000000000175f8	callq	_mig_put_reply_port
00000000000175fd	jmp	0x1764d
00000000000175ff	testl	%ebx, %ebx
0000000000017601	jne	0x1762e
0000000000017603	movl	-0x24(%rbp), %eax
0000000000017606	cmpl	$0x47, %eax
0000000000017609	je	0x17638
000000000001760b	cmpl	$0xe8e, %eax
0000000000017610	jne	0x1763f
0000000000017612	movl	$0xfffffed4, %ebx
0000000000017617	cmpl	$0x0, -0x38(%rbp)
000000000001761b	js	0x17644
000000000001761d	cmpl	$0x24, -0x34(%rbp)
0000000000017621	jne	0x17644
0000000000017623	movl	-0x18(%rbp), %ebx
0000000000017626	testl	%ebx, %ebx
0000000000017628	jne	0x17644
000000000001762a	xorl	%ebx, %ebx
000000000001762c	jmp	0x1764d
000000000001762e	movl	-0x2c(%rbp), %edi
0000000000017631	callq	_mig_dealloc_reply_port
0000000000017636	jmp	0x1764d
0000000000017638	movl	$0xfffffecc, %ebx
000000000001763d	jmp	0x17644
000000000001763f	movl	$0xfffffed3, %ebx
0000000000017644	leaq	-0x38(%rbp), %rdi
0000000000017648	callq	_mach_msg_destroy
000000000001764d	movl	%ebx, %eax
000000000001764f	addq	$0x38, %rsp
0000000000017653	popq	%rbx
0000000000017654	popq	%rbp
0000000000017655	retq
_thread_swap_mach_voucher:
0000000000017656	pushq	%rbp
0000000000017657	movq	%rsp, %rbp
000000000001765a	pushq	%r14
000000000001765c	pushq	%rbx
000000000001765d	subq	$0x40, %rsp
0000000000017661	movq	%rdx, %r14
0000000000017664	leaq	-0x48(%rbp), %rbx
0000000000017668	movl	$0x2, 0x18(%rbx)
000000000001766f	movl	%esi, 0x1c(%rbx)
0000000000017672	movl	$0x130000, %eax
0000000000017677	movl	%eax, 0x24(%rbx)
000000000001767a	movl	(%rdx), %ecx
000000000001767c	movl	%ecx, 0x28(%rbx)
000000000001767f	movl	%eax, 0x30(%rbx)
0000000000017682	movl	$0x80001513, (%rbx)
0000000000017688	movl	%edi, 0x8(%rbx)
000000000001768b	callq	_mig_get_reply_port
0000000000017690	movl	%eax, 0xc(%rbx)
0000000000017693	movabsq	$0xe2b00000000, %rcx
000000000001769d	movq	%rcx, 0x10(%rbx)
00000000000176a1	movl	$0x0, (%rsp)
00000000000176a8	movl	$0x3, %esi
00000000000176ad	movl	$0x34, %edx
00000000000176b2	movl	$0x30, %ecx
00000000000176b7	xorl	%r9d, %r9d
00000000000176ba	movq	%rbx, %rdi
00000000000176bd	movl	%eax, %r8d
00000000000176c0	callq	_mach_msg
00000000000176c5	movl	%eax, %ebx
00000000000176c7	leal	-0x10000002(%rbx), %eax
00000000000176cd	cmpl	$0xe, %eax
00000000000176d0	ja	0x176e6
00000000000176d2	movl	$0x4003, %ecx
00000000000176d7	btl	%eax, %ecx
00000000000176da	jae	0x176e6
00000000000176dc	movl	-0x3c(%rbp), %edi
00000000000176df	callq	_mig_put_reply_port
00000000000176e4	jmp	0x1773a
00000000000176e6	testl	%ebx, %ebx
00000000000176e8	jne	0x1771b
00000000000176ea	movl	-0x34(%rbp), %eax
00000000000176ed	cmpl	$0x47, %eax
00000000000176f0	je	0x17725
00000000000176f2	cmpl	$0xe8f, %eax
00000000000176f7	jne	0x1772c
00000000000176f9	cmpl	$0x0, -0x48(%rbp)
00000000000176fd	movl	-0x44(%rbp), %eax
0000000000017700	movl	$0xfffffed4, %ebx
0000000000017705	js	0x17745
0000000000017707	cmpl	$0x24, %eax
000000000001770a	jne	0x17731
000000000001770c	movl	-0x28(%rbp), %eax
000000000001770f	testl	%eax, %eax
0000000000017711	movl	$0xfffffed4, %ebx
0000000000017716	cmovnel	%eax, %ebx
0000000000017719	jmp	0x17731
000000000001771b	movl	-0x3c(%rbp), %edi
000000000001771e	callq	_mig_dealloc_reply_port
0000000000017723	jmp	0x1773a
0000000000017725	movl	$0xfffffecc, %ebx
000000000001772a	jmp	0x17731
000000000001772c	movl	$0xfffffed3, %ebx
0000000000017731	leaq	-0x48(%rbp), %rdi
0000000000017735	callq	_mach_msg_destroy
000000000001773a	movl	%ebx, %eax
000000000001773c	addq	$0x40, %rsp
0000000000017740	popq	%rbx
0000000000017741	popq	%r14
0000000000017743	popq	%rbp
0000000000017744	retq
0000000000017745	cmpl	$0x28, %eax
0000000000017748	jne	0x17731
000000000001774a	cmpl	$0x1, -0x30(%rbp)
000000000001774e	jne	0x17731
0000000000017750	movl	$0xffff0000, %eax
0000000000017755	andl	-0x24(%rbp), %eax
0000000000017758	cmpl	$0x110000, %eax
000000000001775d	jne	0x17731
000000000001775f	movl	-0x2c(%rbp), %eax
0000000000017762	movl	%eax, (%r14)
0000000000017765	xorl	%ebx, %ebx
0000000000017767	jmp	0x1773a
__mach_continuous_time:
0000000000017769	pushq	%rbp
000000000001776a	movq	%rsp, %rbp
000000000001776d	pushq	%r15
000000000001776f	pushq	%r14
0000000000017771	pushq	%rbx
0000000000017772	subq	$0x18, %rsp
0000000000017776	movq	%rsi, %r14
0000000000017779	movq	%rdi, %rbx
000000000001777c	movabsq	$0x7fffffe000c0, %r15
0000000000017786	movq	(%r15), %rax
0000000000017789	movq	%rax, -0x28(%rbp)
000000000001778d	callq	_mach_absolute_time
0000000000017792	movq	%rax, -0x20(%rbp)
0000000000017796	movq	(%r15), %rax
0000000000017799	movq	%rax, -0x30(%rbp)
000000000001779d	movq	-0x28(%rbp), %rax
00000000000177a1	cmpq	-0x30(%rbp), %rax
00000000000177a5	jne	0x17786
00000000000177a7	testq	%rbx, %rbx
00000000000177aa	je	0x177b3
00000000000177ac	movq	-0x20(%rbp), %rax
00000000000177b0	movq	%rax, (%rbx)
00000000000177b3	testq	%r14, %r14
00000000000177b6	je	0x177c3
00000000000177b8	movq	-0x20(%rbp), %rax
00000000000177bc	addq	-0x28(%rbp), %rax
00000000000177c0	movq	%rax, (%r14)
00000000000177c3	xorl	%eax, %eax
00000000000177c5	addq	$0x18, %rsp
00000000000177c9	popq	%rbx
00000000000177ca	popq	%r14
00000000000177cc	popq	%r15
00000000000177ce	popq	%rbp
00000000000177cf	retq
_mach_continuous_approximate_time:
00000000000177d0	pushq	%rbp
00000000000177d1	movq	%rsp, %rbp
00000000000177d4	pushq	%rbx
00000000000177d5	pushq	%rax
00000000000177d6	movabsq	$0x7fffffe000c0, %rax
00000000000177e0	movq	(%rax), %rax
00000000000177e3	movq	%rax, -0x10(%rbp)
00000000000177e7	movq	-0x10(%rbp), %rbx
00000000000177eb	callq	_mach_approximate_time
00000000000177f0	addq	%rbx, %rax
00000000000177f3	addq	$0x8, %rsp
00000000000177f7	popq	%rbx
00000000000177f8	popq	%rbp
00000000000177f9	retq
_vm_inherit:
00000000000177fa	pushq	%rbp
00000000000177fb	movq	%rsp, %rbp
00000000000177fe	pushq	%rbx
00000000000177ff	subq	$0x48, %rsp
0000000000017803	leaq	_NDR_record(%rip), %rax
000000000001780a	movq	(%rax), %rax
000000000001780d	leaq	-0x40(%rbp), %rbx
0000000000017811	movq	%rax, 0x18(%rbx)
0000000000017815	movq	%rsi, 0x20(%rbx)
0000000000017819	movq	%rdx, 0x28(%rbx)
000000000001781d	movl	%ecx, 0x30(%rbx)
0000000000017820	movl	$0x1513, (%rbx)
0000000000017826	movl	%edi, 0x8(%rbx)
0000000000017829	callq	_mig_get_reply_port
000000000001782e	movl	%eax, 0xc(%rbx)
0000000000017831	movabsq	$0x12c300000000, %rcx
000000000001783b	movq	%rcx, 0x10(%rbx)
000000000001783f	movl	$0x0, (%rsp)
0000000000017846	movl	$0x3, %esi
000000000001784b	movl	$0x34, %edx
0000000000017850	movl	$0x2c, %ecx
0000000000017855	xorl	%r9d, %r9d
0000000000017858	movq	%rbx, %rdi
000000000001785b	movl	%eax, %r8d
000000000001785e	callq	_mach_msg
0000000000017863	movl	%eax, %ebx
0000000000017865	leal	-0x10000002(%rbx), %eax
000000000001786b	cmpl	$0xe, %eax
000000000001786e	ja	0x17884
0000000000017870	movl	$0x4003, %ecx
0000000000017875	btl	%eax, %ecx
0000000000017878	jae	0x17884
000000000001787a	movl	-0x34(%rbp), %edi
000000000001787d	callq	_mig_put_reply_port
0000000000017882	jmp	0x178d2
0000000000017884	testl	%ebx, %ebx
0000000000017886	jne	0x178b3
0000000000017888	movl	-0x2c(%rbp), %eax
000000000001788b	cmpl	$0x47, %eax
000000000001788e	je	0x178bd
0000000000017890	cmpl	$0x1327, %eax
0000000000017895	jne	0x178c4
0000000000017897	movl	$0xfffffed4, %ebx
000000000001789c	cmpl	$0x0, -0x40(%rbp)
00000000000178a0	js	0x178c9
00000000000178a2	cmpl	$0x24, -0x3c(%rbp)
00000000000178a6	jne	0x178c9
00000000000178a8	movl	-0x20(%rbp), %ebx
00000000000178ab	testl	%ebx, %ebx
00000000000178ad	jne	0x178c9
00000000000178af	xorl	%ebx, %ebx
00000000000178b1	jmp	0x178d2
00000000000178b3	movl	-0x34(%rbp), %edi
00000000000178b6	callq	_mig_dealloc_reply_port
00000000000178bb	jmp	0x178d2
00000000000178bd	movl	$0xfffffecc, %ebx
00000000000178c2	jmp	0x178c9
00000000000178c4	movl	$0xfffffed3, %ebx
00000000000178c9	leaq	-0x40(%rbp), %rdi
00000000000178cd	callq	_mach_msg_destroy
00000000000178d2	movl	%ebx, %eax
00000000000178d4	addq	$0x48, %rsp
00000000000178d8	popq	%rbx
00000000000178d9	popq	%rbp
00000000000178da	retq
_vm_read_list:
00000000000178db	pushq	%rbp
00000000000178dc	movq	%rsp, %rbp
00000000000178df	pushq	%r15
00000000000178e1	pushq	%r14
00000000000178e3	pushq	%r12
00000000000178e5	pushq	%rbx
00000000000178e6	subq	$0x1040, %rsp
00000000000178ed	movl	%edx, %r12d
00000000000178f0	movq	%rsi, %r14
00000000000178f3	movl	%edi, %r15d
00000000000178f6	leaq	_NDR_record(%rip), %rax
00000000000178fd	movq	(%rax), %rax
0000000000017900	leaq	-0x1030(%rbp), %rbx
0000000000017907	movq	%rax, -0x8(%rbx)
000000000001790b	movl	$0x1000, %edx
0000000000017910	movq	%rbx, %rdi
0000000000017913	callq	_memcpy
0000000000017918	movl	%r12d, 0x1000(%rbx)
000000000001791f	movl	$0x1513, -0x20(%rbx)
0000000000017926	movl	%r15d, -0x18(%rbx)
000000000001792a	callq	_mig_get_reply_port
000000000001792f	movl	%eax, -0x14(%rbx)
0000000000017932	movabsq	$0x12c500000000, %rcx
000000000001793c	movq	%rcx, -0x10(%rbx)
0000000000017940	movl	$0x0, (%rsp)
0000000000017947	leaq	-0x1050(%rbp), %rdi
000000000001794e	movl	$0x3, %esi
0000000000017953	movl	$0x1024, %edx
0000000000017958	movl	$0x102c, %ecx
000000000001795d	xorl	%r9d, %r9d
0000000000017960	movl	%eax, %r8d
0000000000017963	callq	_mach_msg
0000000000017968	movl	%eax, %ebx
000000000001796a	leal	-0x10000002(%rbx), %eax
0000000000017970	cmpl	$0xe, %eax
0000000000017973	ja	0x1798c
0000000000017975	movl	$0x4003, %ecx
000000000001797a	btl	%eax, %ecx
000000000001797d	jae	0x1798c
000000000001797f	movl	-0x1044(%rbp), %edi
0000000000017985	callq	_mig_put_reply_port
000000000001798a	jmp	0x179f6
000000000001798c	testl	%ebx, %ebx
000000000001798e	jne	0x179cf
0000000000017990	movl	-0x103c(%rbp), %eax
0000000000017996	cmpl	$0x47, %eax
0000000000017999	je	0x179dc
000000000001799b	cmpl	$0x1329, %eax
00000000000179a0	jne	0x179e3
00000000000179a2	movl	$0xfffffed4, %eax
00000000000179a7	cmpl	$0x0, -0x1050(%rbp)
00000000000179ae	js	0x179e8
00000000000179b0	movl	-0x104c(%rbp), %ecx
00000000000179b6	cmpl	$0x1024, %ecx
00000000000179bc	je	0x17a08
00000000000179be	cmpl	$0x24, %ecx
00000000000179c1	jne	0x179e8
00000000000179c3	movl	-0x1030(%rbp), %ebx
00000000000179c9	testl	%ebx, %ebx
00000000000179cb	jne	0x179ea
00000000000179cd	jmp	0x179e8
00000000000179cf	movl	-0x1044(%rbp), %edi
00000000000179d5	callq	_mig_dealloc_reply_port
00000000000179da	jmp	0x179f6
00000000000179dc	movl	$0xfffffecc, %eax
00000000000179e1	jmp	0x179e8
00000000000179e3	movl	$0xfffffed3, %eax
00000000000179e8	movl	%eax, %ebx
00000000000179ea	leaq	-0x1050(%rbp), %rdi
00000000000179f1	callq	_mach_msg_destroy
00000000000179f6	movl	%ebx, %eax
00000000000179f8	addq	$0x1040, %rsp
00000000000179ff	popq	%rbx
0000000000017a00	popq	%r12
0000000000017a02	popq	%r14
0000000000017a04	popq	%r15
0000000000017a06	popq	%rbp
0000000000017a07	retq
0000000000017a08	movl	-0x1030(%rbp), %ebx
0000000000017a0e	testl	%ebx, %ebx
0000000000017a10	jne	0x179ea
0000000000017a12	leaq	-0x102c(%rbp), %rsi
0000000000017a19	movl	$0x1000, %edx
0000000000017a1e	movq	%r14, %rdi
0000000000017a21	callq	_memcpy
0000000000017a26	xorl	%ebx, %ebx
0000000000017a28	jmp	0x179f6
_vm_write:
0000000000017a2a	pushq	%rbp
0000000000017a2b	movq	%rsp, %rbp
0000000000017a2e	pushq	%rbx
0000000000017a2f	subq	$0x48, %rsp
0000000000017a33	leaq	-0x48(%rbp), %rbx
0000000000017a37	movl	$0x1, 0x18(%rbx)
0000000000017a3e	movq	%rdx, 0x1c(%rbx)
0000000000017a42	movl	%ecx, 0x28(%rbx)
0000000000017a45	movl	$0x1000100, 0x24(%rbx)
0000000000017a4c	leaq	_NDR_record(%rip), %rax
0000000000017a53	movq	(%rax), %rax
0000000000017a56	movq	%rax, 0x2c(%rbx)
0000000000017a5a	movq	%rsi, 0x34(%rbx)
0000000000017a5e	movl	%ecx, 0x3c(%rbx)
0000000000017a61	movl	$0x80001513, (%rbx)
0000000000017a67	movl	%edi, 0x8(%rbx)
0000000000017a6a	callq	_mig_get_reply_port
0000000000017a6f	movl	%eax, 0xc(%rbx)
0000000000017a72	movabsq	$0x12c600000000, %rcx
0000000000017a7c	movq	%rcx, 0x10(%rbx)
0000000000017a80	movl	$0x0, (%rsp)
0000000000017a87	movl	$0x3, %esi
0000000000017a8c	movl	$0x40, %edx
0000000000017a91	movl	$0x2c, %ecx
0000000000017a96	xorl	%r9d, %r9d
0000000000017a99	movq	%rbx, %rdi
0000000000017a9c	movl	%eax, %r8d
0000000000017a9f	callq	_mach_msg
0000000000017aa4	movl	%eax, %ebx
0000000000017aa6	leal	-0x10000002(%rbx), %eax
0000000000017aac	cmpl	$0xe, %eax
0000000000017aaf	ja	0x17ac5
0000000000017ab1	movl	$0x4003, %ecx
0000000000017ab6	btl	%eax, %ecx
0000000000017ab9	jae	0x17ac5
0000000000017abb	movl	-0x3c(%rbp), %edi
0000000000017abe	callq	_mig_put_reply_port
0000000000017ac3	jmp	0x17b13
0000000000017ac5	testl	%ebx, %ebx
0000000000017ac7	jne	0x17af4
0000000000017ac9	movl	-0x34(%rbp), %eax
0000000000017acc	cmpl	$0x47, %eax
0000000000017acf	je	0x17afe
0000000000017ad1	cmpl	$0x132a, %eax
0000000000017ad6	jne	0x17b05
0000000000017ad8	movl	$0xfffffed4, %ebx
0000000000017add	cmpl	$0x0, -0x48(%rbp)
0000000000017ae1	js	0x17b0a
0000000000017ae3	cmpl	$0x24, -0x44(%rbp)
0000000000017ae7	jne	0x17b0a
0000000000017ae9	movl	-0x28(%rbp), %ebx
0000000000017aec	testl	%ebx, %ebx
0000000000017aee	jne	0x17b0a
0000000000017af0	xorl	%ebx, %ebx
0000000000017af2	jmp	0x17b13
0000000000017af4	movl	-0x3c(%rbp), %edi
0000000000017af7	callq	_mig_dealloc_reply_port
0000000000017afc	jmp	0x17b13
0000000000017afe	movl	$0xfffffecc, %ebx
0000000000017b03	jmp	0x17b0a
0000000000017b05	movl	$0xfffffed3, %ebx
0000000000017b0a	leaq	-0x48(%rbp), %rdi
0000000000017b0e	callq	_mach_msg_destroy
0000000000017b13	movl	%ebx, %eax
0000000000017b15	addq	$0x48, %rsp
0000000000017b19	popq	%rbx
0000000000017b1a	popq	%rbp
0000000000017b1b	retq
_vm_read_overwrite:
0000000000017b1c	pushq	%rbp
0000000000017b1d	movq	%rsp, %rbp
0000000000017b20	pushq	%r14
0000000000017b22	pushq	%rbx
0000000000017b23	subq	$0x40, %rsp
0000000000017b27	movq	%r8, %r14
0000000000017b2a	leaq	_NDR_record(%rip), %rax
0000000000017b31	movq	(%rax), %rax
0000000000017b34	leaq	-0x48(%rbp), %rbx
0000000000017b38	movq	%rax, 0x18(%rbx)
0000000000017b3c	movq	%rsi, 0x20(%rbx)
0000000000017b40	movq	%rdx, 0x28(%rbx)
0000000000017b44	movq	%rcx, 0x30(%rbx)
0000000000017b48	movl	$0x1513, (%rbx)
0000000000017b4e	movl	%edi, 0x8(%rbx)
0000000000017b51	callq	_mig_get_reply_port
0000000000017b56	movl	%eax, 0xc(%rbx)
0000000000017b59	movabsq	$0x12c800000000, %rcx
0000000000017b63	movq	%rcx, 0x10(%rbx)
0000000000017b67	movl	$0x0, (%rsp)
0000000000017b6e	movl	$0x3, %esi
0000000000017b73	movl	$0x38, %edx
0000000000017b78	movl	$0x34, %ecx
0000000000017b7d	xorl	%r9d, %r9d
0000000000017b80	movq	%rbx, %rdi
0000000000017b83	movl	%eax, %r8d
0000000000017b86	callq	_mach_msg
0000000000017b8b	movl	%eax, %ebx
0000000000017b8d	leal	-0x10000002(%rbx), %eax
0000000000017b93	cmpl	$0xe, %eax
0000000000017b96	ja	0x17bac
0000000000017b98	movl	$0x4003, %ecx
0000000000017b9d	btl	%eax, %ecx
0000000000017ba0	jae	0x17bac
0000000000017ba2	movl	-0x3c(%rbp), %edi
0000000000017ba5	callq	_mig_put_reply_port
0000000000017baa	jmp	0x17c01
0000000000017bac	testl	%ebx, %ebx
0000000000017bae	jne	0x17be0
0000000000017bb0	movl	-0x34(%rbp), %eax
0000000000017bb3	cmpl	$0x47, %eax
0000000000017bb6	je	0x17bea
0000000000017bb8	cmpl	$0x132c, %eax
0000000000017bbd	jne	0x17bf1
0000000000017bbf	movl	$0xfffffed4, %eax
0000000000017bc4	cmpl	$0x0, -0x48(%rbp)
0000000000017bc8	js	0x17bf6
0000000000017bca	movl	-0x44(%rbp), %ecx
0000000000017bcd	cmpl	$0x2c, %ecx
0000000000017bd0	je	0x17c0c
0000000000017bd2	cmpl	$0x24, %ecx
0000000000017bd5	jne	0x17bf6
0000000000017bd7	movl	-0x28(%rbp), %ebx
0000000000017bda	testl	%ebx, %ebx
0000000000017bdc	jne	0x17bf8
0000000000017bde	jmp	0x17bf6
0000000000017be0	movl	-0x3c(%rbp), %edi
0000000000017be3	callq	_mig_dealloc_reply_port
0000000000017be8	jmp	0x17c01
0000000000017bea	movl	$0xfffffecc, %eax
0000000000017bef	jmp	0x17bf6
0000000000017bf1	movl	$0xfffffed3, %eax
0000000000017bf6	movl	%eax, %ebx
0000000000017bf8	leaq	-0x48(%rbp), %rdi
0000000000017bfc	callq	_mach_msg_destroy
0000000000017c01	movl	%ebx, %eax
0000000000017c03	addq	$0x40, %rsp
0000000000017c07	popq	%rbx
0000000000017c08	popq	%r14
0000000000017c0a	popq	%rbp
0000000000017c0b	retq
0000000000017c0c	movl	-0x28(%rbp), %ebx
0000000000017c0f	testl	%ebx, %ebx
0000000000017c11	jne	0x17bf8
0000000000017c13	movq	-0x24(%rbp), %rax
0000000000017c17	movq	%rax, (%r14)
0000000000017c1a	xorl	%ebx, %ebx
0000000000017c1c	jmp	0x17c01
_vm_msync:
0000000000017c1e	pushq	%rbp
0000000000017c1f	movq	%rsp, %rbp
0000000000017c22	pushq	%rbx
0000000000017c23	subq	$0x48, %rsp
0000000000017c27	leaq	_NDR_record(%rip), %rax
0000000000017c2e	movq	(%rax), %rax
0000000000017c31	leaq	-0x40(%rbp), %rbx
0000000000017c35	movq	%rax, 0x18(%rbx)
0000000000017c39	movq	%rsi, 0x20(%rbx)
0000000000017c3d	movq	%rdx, 0x28(%rbx)
0000000000017c41	movl	%ecx, 0x30(%rbx)
0000000000017c44	movl	$0x1513, (%rbx)
0000000000017c4a	movl	%edi, 0x8(%rbx)
0000000000017c4d	callq	_mig_get_reply_port
0000000000017c52	movl	%eax, 0xc(%rbx)
0000000000017c55	movabsq	$0x12c900000000, %rcx
0000000000017c5f	movq	%rcx, 0x10(%rbx)
0000000000017c63	movl	$0x0, (%rsp)
0000000000017c6a	movl	$0x3, %esi
0000000000017c6f	movl	$0x34, %edx
0000000000017c74	movl	$0x2c, %ecx
0000000000017c79	xorl	%r9d, %r9d
0000000000017c7c	movq	%rbx, %rdi
0000000000017c7f	movl	%eax, %r8d
0000000000017c82	callq	_mach_msg
0000000000017c87	movl	%eax, %ebx
0000000000017c89	leal	-0x10000002(%rbx), %eax
0000000000017c8f	cmpl	$0xe, %eax
0000000000017c92	ja	0x17ca8
0000000000017c94	movl	$0x4003, %ecx
0000000000017c99	btl	%eax, %ecx
0000000000017c9c	jae	0x17ca8
0000000000017c9e	movl	-0x34(%rbp), %edi
0000000000017ca1	callq	_mig_put_reply_port
0000000000017ca6	jmp	0x17cf6
0000000000017ca8	testl	%ebx, %ebx
0000000000017caa	jne	0x17cd7
0000000000017cac	movl	-0x2c(%rbp), %eax
0000000000017caf	cmpl	$0x47, %eax
0000000000017cb2	je	0x17ce1
0000000000017cb4	cmpl	$0x132d, %eax
0000000000017cb9	jne	0x17ce8
0000000000017cbb	movl	$0xfffffed4, %ebx
0000000000017cc0	cmpl	$0x0, -0x40(%rbp)
0000000000017cc4	js	0x17ced
0000000000017cc6	cmpl	$0x24, -0x3c(%rbp)
0000000000017cca	jne	0x17ced
0000000000017ccc	movl	-0x20(%rbp), %ebx
0000000000017ccf	testl	%ebx, %ebx
0000000000017cd1	jne	0x17ced
0000000000017cd3	xorl	%ebx, %ebx
0000000000017cd5	jmp	0x17cf6
0000000000017cd7	movl	-0x34(%rbp), %edi
0000000000017cda	callq	_mig_dealloc_reply_port
0000000000017cdf	jmp	0x17cf6
0000000000017ce1	movl	$0xfffffecc, %ebx
0000000000017ce6	jmp	0x17ced
0000000000017ce8	movl	$0xfffffed3, %ebx
0000000000017ced	leaq	-0x40(%rbp), %rdi
0000000000017cf1	callq	_mach_msg_destroy
0000000000017cf6	movl	%ebx, %eax
0000000000017cf8	addq	$0x48, %rsp
0000000000017cfc	popq	%rbx
0000000000017cfd	popq	%rbp
0000000000017cfe	retq
_vm_behavior_set:
0000000000017cff	pushq	%rbp
0000000000017d00	movq	%rsp, %rbp
0000000000017d03	pushq	%rbx
0000000000017d04	subq	$0x48, %rsp
0000000000017d08	leaq	_NDR_record(%rip), %rax
0000000000017d0f	movq	(%rax), %rax
0000000000017d12	leaq	-0x40(%rbp), %rbx
0000000000017d16	movq	%rax, 0x18(%rbx)
0000000000017d1a	movq	%rsi, 0x20(%rbx)
0000000000017d1e	movq	%rdx, 0x28(%rbx)
0000000000017d22	movl	%ecx, 0x30(%rbx)
0000000000017d25	movl	$0x1513, (%rbx)
0000000000017d2b	movl	%edi, 0x8(%rbx)
0000000000017d2e	callq	_mig_get_reply_port
0000000000017d33	movl	%eax, 0xc(%rbx)
0000000000017d36	movabsq	$0x12ca00000000, %rcx
0000000000017d40	movq	%rcx, 0x10(%rbx)
0000000000017d44	movl	$0x0, (%rsp)
0000000000017d4b	movl	$0x3, %esi
0000000000017d50	movl	$0x34, %edx
0000000000017d55	movl	$0x2c, %ecx
0000000000017d5a	xorl	%r9d, %r9d
0000000000017d5d	movq	%rbx, %rdi
0000000000017d60	movl	%eax, %r8d
0000000000017d63	callq	_mach_msg
0000000000017d68	movl	%eax, %ebx
0000000000017d6a	leal	-0x10000002(%rbx), %eax
0000000000017d70	cmpl	$0xe, %eax
0000000000017d73	ja	0x17d89
0000000000017d75	movl	$0x4003, %ecx
0000000000017d7a	btl	%eax, %ecx
0000000000017d7d	jae	0x17d89
0000000000017d7f	movl	-0x34(%rbp), %edi
0000000000017d82	callq	_mig_put_reply_port
0000000000017d87	jmp	0x17dd7
0000000000017d89	testl	%ebx, %ebx
0000000000017d8b	jne	0x17db8
0000000000017d8d	movl	-0x2c(%rbp), %eax
0000000000017d90	cmpl	$0x47, %eax
0000000000017d93	je	0x17dc2
0000000000017d95	cmpl	$0x132e, %eax
0000000000017d9a	jne	0x17dc9
0000000000017d9c	movl	$0xfffffed4, %ebx
0000000000017da1	cmpl	$0x0, -0x40(%rbp)
0000000000017da5	js	0x17dce
0000000000017da7	cmpl	$0x24, -0x3c(%rbp)
0000000000017dab	jne	0x17dce
0000000000017dad	movl	-0x20(%rbp), %ebx
0000000000017db0	testl	%ebx, %ebx
0000000000017db2	jne	0x17dce
0000000000017db4	xorl	%ebx, %ebx
0000000000017db6	jmp	0x17dd7
0000000000017db8	movl	-0x34(%rbp), %edi
0000000000017dbb	callq	_mig_dealloc_reply_port
0000000000017dc0	jmp	0x17dd7
0000000000017dc2	movl	$0xfffffecc, %ebx
0000000000017dc7	jmp	0x17dce
0000000000017dc9	movl	$0xfffffed3, %ebx
0000000000017dce	leaq	-0x40(%rbp), %rdi
0000000000017dd2	callq	_mach_msg_destroy
0000000000017dd7	movl	%ebx, %eax
0000000000017dd9	addq	$0x48, %rsp
0000000000017ddd	popq	%rbx
0000000000017dde	popq	%rbp
0000000000017ddf	retq
_vm_machine_attribute:
0000000000017de0	pushq	%rbp
0000000000017de1	movq	%rsp, %rbp
0000000000017de4	pushq	%r14
0000000000017de6	pushq	%rbx
0000000000017de7	subq	$0x40, %rsp
0000000000017deb	movq	%r8, %r14
0000000000017dee	leaq	_NDR_record(%rip), %rax
0000000000017df5	movq	(%rax), %rax
0000000000017df8	leaq	-0x48(%rbp), %rbx
0000000000017dfc	movq	%rax, 0x18(%rbx)
0000000000017e00	movq	%rsi, 0x20(%rbx)
0000000000017e04	movq	%rdx, 0x28(%rbx)
0000000000017e08	movl	%ecx, 0x30(%rbx)
0000000000017e0b	movl	(%r8), %eax
0000000000017e0e	movl	%eax, 0x34(%rbx)
0000000000017e11	movl	$0x1513, (%rbx)
0000000000017e17	movl	%edi, 0x8(%rbx)
0000000000017e1a	callq	_mig_get_reply_port
0000000000017e1f	movl	%eax, 0xc(%rbx)
0000000000017e22	movabsq	$0x12cc00000000, %rcx
0000000000017e2c	movq	%rcx, 0x10(%rbx)
0000000000017e30	movl	$0x0, (%rsp)
0000000000017e37	movl	$0x3, %esi
0000000000017e3c	movl	$0x38, %edx
0000000000017e41	movl	$0x30, %ecx
0000000000017e46	xorl	%r9d, %r9d
0000000000017e49	movq	%rbx, %rdi
0000000000017e4c	movl	%eax, %r8d
0000000000017e4f	callq	_mach_msg
0000000000017e54	movl	%eax, %ebx
0000000000017e56	leal	-0x10000002(%rbx), %eax
0000000000017e5c	cmpl	$0xe, %eax
0000000000017e5f	ja	0x17e75
0000000000017e61	movl	$0x4003, %ecx
0000000000017e66	btl	%eax, %ecx
0000000000017e69	jae	0x17e75
0000000000017e6b	movl	-0x3c(%rbp), %edi
0000000000017e6e	callq	_mig_put_reply_port
0000000000017e73	jmp	0x17eca
0000000000017e75	testl	%ebx, %ebx
0000000000017e77	jne	0x17ea9
0000000000017e79	movl	-0x34(%rbp), %eax
0000000000017e7c	cmpl	$0x47, %eax
0000000000017e7f	je	0x17eb3
0000000000017e81	cmpl	$0x1330, %eax
0000000000017e86	jne	0x17eba
0000000000017e88	movl	$0xfffffed4, %eax
0000000000017e8d	cmpl	$0x0, -0x48(%rbp)
0000000000017e91	js	0x17ebf
0000000000017e93	movl	-0x44(%rbp), %ecx
0000000000017e96	cmpl	$0x28, %ecx
0000000000017e99	je	0x17ed5
0000000000017e9b	cmpl	$0x24, %ecx
0000000000017e9e	jne	0x17ebf
0000000000017ea0	movl	-0x28(%rbp), %ebx
0000000000017ea3	testl	%ebx, %ebx
0000000000017ea5	jne	0x17ec1
0000000000017ea7	jmp	0x17ebf
0000000000017ea9	movl	-0x3c(%rbp), %edi
0000000000017eac	callq	_mig_dealloc_reply_port
0000000000017eb1	jmp	0x17eca
0000000000017eb3	movl	$0xfffffecc, %eax
0000000000017eb8	jmp	0x17ebf
0000000000017eba	movl	$0xfffffed3, %eax
0000000000017ebf	movl	%eax, %ebx
0000000000017ec1	leaq	-0x48(%rbp), %rdi
0000000000017ec5	callq	_mach_msg_destroy
0000000000017eca	movl	%ebx, %eax
0000000000017ecc	addq	$0x40, %rsp
0000000000017ed0	popq	%rbx
0000000000017ed1	popq	%r14
0000000000017ed3	popq	%rbp
0000000000017ed4	retq
0000000000017ed5	movl	-0x28(%rbp), %ebx
0000000000017ed8	testl	%ebx, %ebx
0000000000017eda	jne	0x17ec1
0000000000017edc	movl	-0x24(%rbp), %eax
0000000000017edf	movl	%eax, (%r14)
0000000000017ee2	xorl	%ebx, %ebx
0000000000017ee4	jmp	0x17eca
_vm_map_page_query:
0000000000017ee6	pushq	%rbp
0000000000017ee7	movq	%rsp, %rbp
0000000000017eea	pushq	%r15
0000000000017eec	pushq	%r14
0000000000017eee	pushq	%rbx
0000000000017eef	subq	$0x48, %rsp
0000000000017ef3	movq	%rcx, %r14
0000000000017ef6	movq	%rdx, %r15
0000000000017ef9	leaq	_NDR_record(%rip), %rax
0000000000017f00	movq	(%rax), %rax
0000000000017f03	leaq	-0x50(%rbp), %rbx
0000000000017f07	movq	%rax, 0x18(%rbx)
0000000000017f0b	movq	%rsi, 0x20(%rbx)
0000000000017f0f	movl	$0x1513, (%rbx)
0000000000017f15	movl	%edi, 0x8(%rbx)
0000000000017f18	callq	_mig_get_reply_port
0000000000017f1d	movl	%eax, 0xc(%rbx)
0000000000017f20	movabsq	$0x12ce00000000, %rcx
0000000000017f2a	movq	%rcx, 0x10(%rbx)
0000000000017f2e	movl	$0x0, (%rsp)
0000000000017f35	movl	$0x3, %esi
0000000000017f3a	movl	$0x28, %edx
0000000000017f3f	movl	$0x34, %ecx
0000000000017f44	xorl	%r9d, %r9d
0000000000017f47	movq	%rbx, %rdi
0000000000017f4a	movl	%eax, %r8d
0000000000017f4d	callq	_mach_msg
0000000000017f52	movl	%eax, %ebx
0000000000017f54	leal	-0x10000002(%rbx), %eax
0000000000017f5a	cmpl	$0xe, %eax
0000000000017f5d	ja	0x17f73
0000000000017f5f	movl	$0x4003, %ecx
0000000000017f64	btl	%eax, %ecx
0000000000017f67	jae	0x17f73
0000000000017f69	movl	-0x44(%rbp), %edi
0000000000017f6c	callq	_mig_put_reply_port
0000000000017f71	jmp	0x17fc8
0000000000017f73	testl	%ebx, %ebx
0000000000017f75	jne	0x17fa7
0000000000017f77	movl	-0x3c(%rbp), %eax
0000000000017f7a	cmpl	$0x47, %eax
0000000000017f7d	je	0x17fb1
0000000000017f7f	cmpl	$0x1332, %eax
0000000000017f84	jne	0x17fb8
0000000000017f86	movl	$0xfffffed4, %eax
0000000000017f8b	cmpl	$0x0, -0x50(%rbp)
0000000000017f8f	js	0x17fbd
0000000000017f91	movl	-0x4c(%rbp), %ecx
0000000000017f94	cmpl	$0x2c, %ecx
0000000000017f97	je	0x17fd5
0000000000017f99	cmpl	$0x24, %ecx
0000000000017f9c	jne	0x17fbd
0000000000017f9e	movl	-0x30(%rbp), %ebx
0000000000017fa1	testl	%ebx, %ebx
0000000000017fa3	jne	0x17fbf
0000000000017fa5	jmp	0x17fbd
0000000000017fa7	movl	-0x44(%rbp), %edi
0000000000017faa	callq	_mig_dealloc_reply_port
0000000000017faf	jmp	0x17fc8
0000000000017fb1	movl	$0xfffffecc, %eax
0000000000017fb6	jmp	0x17fbd
0000000000017fb8	movl	$0xfffffed3, %eax
0000000000017fbd	movl	%eax, %ebx
0000000000017fbf	leaq	-0x50(%rbp), %rdi
0000000000017fc3	callq	_mach_msg_destroy
0000000000017fc8	movl	%ebx, %eax
0000000000017fca	addq	$0x48, %rsp
0000000000017fce	popq	%rbx
0000000000017fcf	popq	%r14
0000000000017fd1	popq	%r15
0000000000017fd3	popq	%rbp
0000000000017fd4	retq
0000000000017fd5	movl	-0x30(%rbp), %ebx
0000000000017fd8	testl	%ebx, %ebx
0000000000017fda	jne	0x17fbf
0000000000017fdc	movl	-0x2c(%rbp), %eax
0000000000017fdf	movl	%eax, (%r15)
0000000000017fe2	movl	-0x28(%rbp), %eax
0000000000017fe5	movl	%eax, (%r14)
0000000000017fe8	xorl	%ebx, %ebx
0000000000017fea	jmp	0x17fc8
__kernelrpc_vm_purgable_control:
0000000000017fec	pushq	%rbp
0000000000017fed	movq	%rsp, %rbp
0000000000017ff0	pushq	%r14
0000000000017ff2	pushq	%rbx
0000000000017ff3	subq	$0x40, %rsp
0000000000017ff7	movq	%rcx, %r14
0000000000017ffa	leaq	_NDR_record(%rip), %rax
0000000000018001	movq	(%rax), %rax
0000000000018004	leaq	-0x40(%rbp), %rbx
0000000000018008	movq	%rax, 0x18(%rbx)
000000000001800c	movq	%rsi, 0x20(%rbx)
0000000000018010	movl	%edx, 0x28(%rbx)
0000000000018013	movl	(%rcx), %eax
0000000000018015	movl	%eax, 0x2c(%rbx)
0000000000018018	movl	$0x1513, (%rbx)
000000000001801e	movl	%edi, 0x8(%rbx)
0000000000018021	callq	_mig_get_reply_port
0000000000018026	movl	%eax, 0xc(%rbx)
0000000000018029	movabsq	$0x12d200000000, %rcx
0000000000018033	movq	%rcx, 0x10(%rbx)
0000000000018037	movl	$0x0, (%rsp)
000000000001803e	movl	$0x3, %esi
0000000000018043	movl	$0x30, %edx
0000000000018048	movl	$0x30, %ecx
000000000001804d	xorl	%r9d, %r9d
0000000000018050	movq	%rbx, %rdi
0000000000018053	movl	%eax, %r8d
0000000000018056	callq	_mach_msg
000000000001805b	movl	%eax, %ebx
000000000001805d	leal	-0x10000002(%rbx), %eax
0000000000018063	cmpl	$0xe, %eax
0000000000018066	ja	0x1807c
0000000000018068	movl	$0x4003, %ecx
000000000001806d	btl	%eax, %ecx
0000000000018070	jae	0x1807c
0000000000018072	movl	-0x34(%rbp), %edi
0000000000018075	callq	_mig_put_reply_port
000000000001807a	jmp	0x180d1
000000000001807c	testl	%ebx, %ebx
000000000001807e	jne	0x180b0
0000000000018080	movl	-0x2c(%rbp), %eax
0000000000018083	cmpl	$0x47, %eax
0000000000018086	je	0x180ba
0000000000018088	cmpl	$0x1336, %eax
000000000001808d	jne	0x180c1
000000000001808f	movl	$0xfffffed4, %eax
0000000000018094	cmpl	$0x0, -0x40(%rbp)
0000000000018098	js	0x180c6
000000000001809a	movl	-0x3c(%rbp), %ecx
000000000001809d	cmpl	$0x28, %ecx
00000000000180a0	je	0x180dc
00000000000180a2	cmpl	$0x24, %ecx
00000000000180a5	jne	0x180c6
00000000000180a7	movl	-0x20(%rbp), %ebx
00000000000180aa	testl	%ebx, %ebx
00000000000180ac	jne	0x180c8
00000000000180ae	jmp	0x180c6
00000000000180b0	movl	-0x34(%rbp), %edi
00000000000180b3	callq	_mig_dealloc_reply_port
00000000000180b8	jmp	0x180d1
00000000000180ba	movl	$0xfffffecc, %eax
00000000000180bf	jmp	0x180c6
00000000000180c1	movl	$0xfffffed3, %eax
00000000000180c6	movl	%eax, %ebx
00000000000180c8	leaq	-0x40(%rbp), %rdi
00000000000180cc	callq	_mach_msg_destroy
00000000000180d1	movl	%ebx, %eax
00000000000180d3	addq	$0x40, %rsp
00000000000180d7	popq	%rbx
00000000000180d8	popq	%r14
00000000000180da	popq	%rbp
00000000000180db	retq
00000000000180dc	movl	-0x20(%rbp), %ebx
00000000000180df	testl	%ebx, %ebx
00000000000180e1	jne	0x180c8
00000000000180e3	movl	-0x1c(%rbp), %eax
00000000000180e6	movl	%eax, (%r14)
00000000000180e9	xorl	%ebx, %ebx
00000000000180eb	jmp	0x180d1
_renameat:
00000000000180ed	pushq	%rbp
00000000000180ee	movq	%rsp, %rbp
00000000000180f1	pushq	%rbx
00000000000180f2	pushq	%rax
00000000000180f3	callq	___renameat
00000000000180f8	movl	%eax, %ebx
00000000000180fa	testl	%eax, %eax
00000000000180fc	jne	0x18103
00000000000180fe	callq	___inc_remove_counter
0000000000018103	movl	%ebx, %eax
0000000000018105	addq	$0x8, %rsp
0000000000018109	popq	%rbx
000000000001810a	popq	%rbp
000000000001810b	retq
_internal_catch_exception_raise_state_identity:
000000000001810c	pushq	%rbp
000000000001810d	movq	%rsp, %rbp
0000000000018110	pushq	%r15
0000000000018112	pushq	%r14
0000000000018114	pushq	%r13
0000000000018116	pushq	%r12
0000000000018118	pushq	%rbx
0000000000018119	pushq	%rax
000000000001811a	movq	%r8, %r15
000000000001811d	movl	%ecx, %r12d
0000000000018120	movl	%edx, %r13d
0000000000018123	movl	%esi, %ebx
0000000000018125	movl	%edi, %r14d
0000000000018128	movq	_internal_catch_exception_raise_state_identity.exc_raise_state_identity_func(%rip), %rax
000000000001812f	cmpq	$-0x1, %rax
0000000000018133	jne	0x1815b
0000000000018135	leaq	__dlsym(%rip), %rax
000000000001813c	leaq	0xd3c8(%rip), %rsi ## literal pool for: "catch_exception_raise_state_identity"
0000000000018143	movq	$-0x2, %rdi
000000000001814a	movl	%r9d, -0x2c(%rbp)
000000000001814e	callq	*(%rax)
0000000000018150	movl	-0x2c(%rbp), %r9d
0000000000018154	movq	%rax, _internal_catch_exception_raise_state_identity.exc_raise_state_identity_func(%rip)
000000000001815b	testq	%rax, %rax
000000000001815e	je	0x1817e
0000000000018160	movl	%r14d, %edi
0000000000018163	movl	%ebx, %esi
0000000000018165	movl	%r13d, %edx
0000000000018168	movl	%r12d, %ecx
000000000001816b	movq	%r15, %r8
000000000001816e	addq	$0x8, %rsp
0000000000018172	popq	%rbx
0000000000018173	popq	%r12
0000000000018175	popq	%r13
0000000000018177	popq	%r14
0000000000018179	popq	%r15
000000000001817b	popq	%rbp
000000000001817c	jmpq	*%rax
000000000001817e	callq	_abort
_abort:
0000000000018183	pushq	%rbp
0000000000018184	movq	%rsp, %rbp
0000000000018187	callq	_getpid
000000000001818c	movl	$0x6, %esi
0000000000018191	xorl	%edx, %edx
0000000000018193	movl	%eax, %edi
0000000000018195	callq	___kill
000000000001819a	movl	$0x1, %edi
000000000001819f	callq	__exit
_internal_catch_exception_raise_state:
00000000000181a4	pushq	%rbp
00000000000181a5	movq	%rsp, %rbp
00000000000181a8	pushq	%r15
00000000000181aa	pushq	%r14
00000000000181ac	pushq	%r13
00000000000181ae	pushq	%r12
00000000000181b0	pushq	%rbx
00000000000181b1	pushq	%rax
00000000000181b2	movq	%r8, %r15
00000000000181b5	movl	%ecx, %r12d
00000000000181b8	movq	%rdx, %r13
00000000000181bb	movl	%esi, %ebx
00000000000181bd	movl	%edi, %r14d
00000000000181c0	movq	_internal_catch_exception_raise_state.exc_raise_state_func(%rip), %rax
00000000000181c7	cmpq	$-0x1, %rax
00000000000181cb	jne	0x181f3
00000000000181cd	leaq	__dlsym(%rip), %rax
00000000000181d4	leaq	0xd355(%rip), %rsi ## literal pool for: "catch_exception_raise_state"
00000000000181db	movq	$-0x2, %rdi
00000000000181e2	movq	%r9, -0x30(%rbp)
00000000000181e6	callq	*(%rax)
00000000000181e8	movq	-0x30(%rbp), %r9
00000000000181ec	movq	%rax, _internal_catch_exception_raise_state.exc_raise_state_func(%rip)
00000000000181f3	testq	%rax, %rax
00000000000181f6	je	0x18216
00000000000181f8	movl	%r14d, %edi
00000000000181fb	movl	%ebx, %esi
00000000000181fd	movq	%r13, %rdx
0000000000018200	movl	%r12d, %ecx
0000000000018203	movq	%r15, %r8
0000000000018206	addq	$0x8, %rsp
000000000001820a	popq	%rbx
000000000001820b	popq	%r12
000000000001820d	popq	%r13
000000000001820f	popq	%r14
0000000000018211	popq	%r15
0000000000018213	popq	%rbp
0000000000018214	jmpq	*%rax
0000000000018216	callq	_abort
_abort:
000000000001821b	pushq	%rbp
000000000001821c	movq	%rsp, %rbp
000000000001821f	callq	_getpid
0000000000018224	movl	$0x6, %esi
0000000000018229	xorl	%edx, %edx
000000000001822b	movl	%eax, %edi
000000000001822d	callq	___kill
0000000000018232	movl	$0x1, %edi
0000000000018237	callq	__exit
_internal_catch_exception_raise:
000000000001823c	pushq	%rbp
000000000001823d	movq	%rsp, %rbp
0000000000018240	pushq	%r15
0000000000018242	pushq	%r14
0000000000018244	pushq	%r13
0000000000018246	pushq	%r12
0000000000018248	pushq	%rbx
0000000000018249	pushq	%rax
000000000001824a	movq	%r8, %r15
000000000001824d	movl	%ecx, %r12d
0000000000018250	movl	%edx, %r13d
0000000000018253	movl	%esi, %ebx
0000000000018255	movl	%edi, %r14d
0000000000018258	movq	_internal_catch_exception_raise.exc_raise_func(%rip), %rax
000000000001825f	cmpq	$-0x1, %rax
0000000000018263	jne	0x1828b
0000000000018265	leaq	__dlsym(%rip), %rax
000000000001826c	leaq	0xd2d9(%rip), %rsi ## literal pool for: "catch_exception_raise"
0000000000018273	movq	$-0x2, %rdi
000000000001827a	movl	%r9d, -0x2c(%rbp)
000000000001827e	callq	*(%rax)
0000000000018280	movl	-0x2c(%rbp), %r9d
0000000000018284	movq	%rax, _internal_catch_exception_raise.exc_raise_func(%rip)
000000000001828b	testq	%rax, %rax
000000000001828e	je	0x182ae
0000000000018290	movl	%r14d, %edi
0000000000018293	movl	%ebx, %esi
0000000000018295	movl	%r13d, %edx
0000000000018298	movl	%r12d, %ecx
000000000001829b	movq	%r15, %r8
000000000001829e	addq	$0x8, %rsp
00000000000182a2	popq	%rbx
00000000000182a3	popq	%r12
00000000000182a5	popq	%r13
00000000000182a7	popq	%r14
00000000000182a9	popq	%r15
00000000000182ab	popq	%rbp
00000000000182ac	jmpq	*%rax
00000000000182ae	callq	_abort
_abort:
00000000000182b3	pushq	%rbp
00000000000182b4	movq	%rsp, %rbp
00000000000182b7	callq	_getpid
00000000000182bc	movl	$0x6, %esi
00000000000182c1	xorl	%edx, %edx
00000000000182c3	movl	%eax, %edi
00000000000182c5	callq	___kill
00000000000182ca	movl	$0x1, %edi
00000000000182cf	callq	__exit
_fprintf_stderr:
00000000000182d4	pushq	%rbp
00000000000182d5	movq	%rsp, %rbp
00000000000182d8	pushq	%r14
00000000000182da	pushq	%rbx
00000000000182db	subq	$0x4d0, %rsp
00000000000182e2	movq	%rdi, %rbx
00000000000182e5	testb	%al, %al
00000000000182e7	je	0x18312
00000000000182e9	movaps	%xmm0, -0xb0(%rbp)
00000000000182f0	movaps	%xmm1, -0xa0(%rbp)
00000000000182f7	movaps	%xmm2, -0x90(%rbp)
00000000000182fe	movaps	%xmm3, -0x80(%rbp)
0000000000018302	movaps	%xmm4, -0x70(%rbp)
0000000000018306	movaps	%xmm5, -0x60(%rbp)
000000000001830a	movaps	%xmm6, -0x50(%rbp)
000000000001830e	movaps	%xmm7, -0x40(%rbp)
0000000000018312	leaq	-0xe0(%rbp), %rax
0000000000018319	movq	%r9, 0x28(%rax)
000000000001831d	movq	%r8, 0x20(%rax)
0000000000018321	movq	%rcx, 0x18(%rax)
0000000000018325	movq	%rdx, 0x10(%rax)
0000000000018329	movq	%rsi, 0x8(%rax)
000000000001832d	movq	%rax, -0x20(%rbp)
0000000000018331	leaq	0x10(%rbp), %rax
0000000000018335	movq	%rax, -0x28(%rbp)
0000000000018339	movabsq	$0x3000000008, %rax
0000000000018343	movq	%rax, -0x30(%rbp)
0000000000018347	movq	_vprintf_stderr_func(%rip), %rax
000000000001834e	testq	%rax, %rax
0000000000018351	je	0x18360
0000000000018353	leaq	-0x30(%rbp), %rsi
0000000000018357	movq	%rbx, %rdi
000000000001835a	callq	*%rax
000000000001835c	movl	%eax, %ebx
000000000001835e	jmp	0x1838c
0000000000018360	leaq	-0x4e0(%rbp), %r14
0000000000018367	leaq	-0x30(%rbp), %rcx
000000000001836b	movl	$0x400, %esi
0000000000018370	movq	%r14, %rdi
0000000000018373	movq	%rbx, %rdx
0000000000018376	callq	__mach_vsnprintf
000000000001837b	movl	%eax, %ebx
000000000001837d	movl	$0x2, %edi
0000000000018382	movq	%r14, %rsi
0000000000018385	movl	%eax, %edx
0000000000018387	callq	_write
000000000001838c	movl	%ebx, %eax
000000000001838e	addq	$0x4d0, %rsp
0000000000018395	popq	%rbx
0000000000018396	popq	%r14
0000000000018398	popq	%rbp
0000000000018399	retq
_guarded_open_dprotected_np:
000000000001839a	pushq	%rbp
000000000001839b	movq	%rsp, %rbp
000000000001839e	subq	$0xe0, %rsp
00000000000183a5	testb	%al, %al
00000000000183a7	je	0x183cf
00000000000183a9	movaps	%xmm0, -0xa0(%rbp)
00000000000183b0	movaps	%xmm1, -0x90(%rbp)
00000000000183b7	movaps	%xmm2, -0x80(%rbp)
00000000000183bb	movaps	%xmm3, -0x70(%rbp)
00000000000183bf	movaps	%xmm4, -0x60(%rbp)
00000000000183c3	movaps	%xmm5, -0x50(%rbp)
00000000000183c7	movaps	%xmm6, -0x40(%rbp)
00000000000183cb	movaps	%xmm7, -0x30(%rbp)
00000000000183cf	xorl	%eax, %eax
00000000000183d1	btl	$0x9, %ecx
00000000000183d5	jae	0x18421
00000000000183d7	movabsq	$0x3000000030, %rax
00000000000183e1	movq	%rax, -0x20(%rbp)
00000000000183e5	leaq	-0xd0(%rbp), %rax
00000000000183ec	movq	%rax, -0x10(%rbp)
00000000000183f0	leaq	0x10(%rbp), %rax
00000000000183f4	movq	%rax, -0x18(%rbp)
00000000000183f8	movslq	-0x20(%rbp), %r10
00000000000183fc	cmpq	$0x28, %r10
0000000000018400	ja	0x18412
0000000000018402	movq	%r10, %r11
0000000000018405	addq	-0x10(%rbp), %r11
0000000000018409	leal	0x8(%r10), %eax
000000000001840d	movl	%eax, -0x20(%rbp)
0000000000018410	jmp	0x1841e
0000000000018412	movq	-0x18(%rbp), %r11
0000000000018416	leaq	0x8(%r11), %rax
000000000001841a	movq	%rax, -0x18(%rbp)
000000000001841e	movl	(%r11), %eax
0000000000018421	movl	%eax, (%rsp)
0000000000018424	callq	___guarded_open_dprotected_np
0000000000018429	addq	$0xe0, %rsp
0000000000018430	popq	%rbp
0000000000018431	retq
_host_get_atm_diagnostic_flag:
0000000000018432	movabsq	$0x7fffffe00048, %rax
000000000001843c	movl	(%rax), %eax
000000000001843e	movl	%eax, (%rsi)
0000000000018440	xorl	%eax, %eax
0000000000018442	retq
_host_get_multiuser_config_flags:
0000000000018443	movl	$0x2e, %eax
0000000000018448	retq
_host_check_multiuser_mode:
0000000000018449	movl	$0x2e, %eax
000000000001844e	retq
_mach_error_type:
000000000001844f	pushq	%rbp
0000000000018450	movq	%rsp, %rbp
0000000000018453	pushq	%r14
0000000000018455	pushq	%rbx
0000000000018456	subq	$0x10, %rsp
000000000001845a	leaq	-0x14(%rbp), %rbx
000000000001845e	movl	%edi, (%rbx)
0000000000018460	movq	%rbx, %rdi
0000000000018463	callq	_do_compat
0000000000018468	movl	(%rbx), %eax
000000000001846a	movq	%rax, %rcx
000000000001846d	shrq	$0x1a, %rcx
0000000000018471	shrl	$0xe, %eax
0000000000018474	andl	$0xfff, %eax
0000000000018479	leaq	(%rcx,%rcx,4), %rbx
000000000001847d	leaq	__mach_errors(%rip), %r14
0000000000018484	movq	0x18(%r14,%rbx,8), %rsi
0000000000018489	testq	%rsi, %rsi
000000000001848c	je	0x1849a
000000000001848e	movl	0x20(%r14,%rbx,8), %edx
0000000000018493	movl	%eax, %edi
0000000000018495	callq	_err_sparse_mapit
000000000001849a	cmpl	(%r14,%rbx,8), %eax
000000000001849e	jge	0x184b1
00000000000184a0	movq	0x10(%r14,%rbx,8), %rcx
00000000000184a5	cltq
00000000000184a7	leaq	(%rax,%rax,4), %rax
00000000000184ab	movq	(%rcx,%rax,8), %rax
00000000000184af	jmp	0x184b8
00000000000184b1	leaq	0xd0aa(%rip), %rax ## literal pool for: "(?/?)"
00000000000184b8	addq	$0x10, %rsp
00000000000184bc	popq	%rbx
00000000000184bd	popq	%r14
00000000000184bf	popq	%rbp
00000000000184c0	retq
_err_sparse_mapit:
00000000000184c1	pushq	%rbp
00000000000184c2	pushq	%r14
00000000000184c4	pushq	%rbx
00000000000184c5	testl	%edx, %edx
00000000000184c7	jle	0x1852a
00000000000184c9	movslq	%edx, %r8
00000000000184cc	xorl	%r11d, %r11d
00000000000184cf	movl	$0x1, %edx
00000000000184d4	movl	$0x1, %r9d
00000000000184da	xorl	%eax, %eax
00000000000184dc	movl	%eax, %r10d
00000000000184df	movl	-0x8(%rsi,%rdx,8), %ecx
00000000000184e3	movl	-0x4(%rsi,%rdx,8), %r14d
00000000000184e8	cmpl	%edi, %ecx
00000000000184ea	seta	%al
00000000000184ed	cmpl	%edi, %r14d
00000000000184f0	setb	%bl
00000000000184f3	orb	%al, %bl
00000000000184f5	movl	%edi, %ebp
00000000000184f7	subl	%ecx, %ebp
00000000000184f9	movl	$0x1, %eax
00000000000184fe	subl	%ecx, %eax
0000000000018500	addl	%r14d, %eax
0000000000018503	testb	%bl, %bl
0000000000018505	cmovel	%ebp, %eax
0000000000018508	cmovel	%r9d, %r11d
000000000001850c	addl	%r10d, %eax
000000000001850f	cmpb	$0x1, %bl
0000000000018512	jne	0x1851d
0000000000018514	cmpq	%r8, %rdx
0000000000018517	leaq	0x1(%rdx), %rdx
000000000001851b	jl	0x184dc
000000000001851d	testl	%r11d, %r11d
0000000000018520	movl	$0x7fffffff, %ecx
0000000000018525	cmovel	%ecx, %eax
0000000000018528	jmp	0x1852f
000000000001852a	movl	$0x7fffffff, %eax
000000000001852f	popq	%rbx
0000000000018530	popq	%r14
0000000000018532	popq	%rbp
0000000000018533	retq
_mach_error:
0000000000018534	pushq	%rbp
0000000000018535	movq	%rsp, %rbp
0000000000018538	pushq	%r15
000000000001853a	pushq	%r14
000000000001853c	pushq	%r12
000000000001853e	pushq	%rbx
000000000001853f	subq	$0x410, %rsp
0000000000018546	movl	%esi, %ebx
0000000000018548	movq	%rdi, %r14
000000000001854b	leaq	-0x24(%rbp), %r12
000000000001854f	movl	%esi, %edi
0000000000018551	movq	%r12, %rsi
0000000000018554	callq	_mach_error_string_int
0000000000018559	movq	%rax, %r15
000000000001855c	cmpl	$0x0, (%r12)
0000000000018561	je	0x18593
0000000000018563	leaq	-0x430(%rbp), %r12
000000000001856a	movl	%ebx, %edi
000000000001856c	callq	_mach_error_type
0000000000018571	movq	%rax, %rcx
0000000000018574	leaq	0xcfed(%rip), %rdx ## literal pool for: "%s %s (%x)"
000000000001857b	movl	$0x400, %esi
0000000000018580	xorl	%eax, %eax
0000000000018582	movq	%r15, %r8
0000000000018585	movq	%r12, %rdi
0000000000018588	movl	%ebx, %r9d
000000000001858b	callq	__mach_snprintf
0000000000018590	movq	%r12, %r15
0000000000018593	leaq	0xcfd9(%rip), %rdi ## literal pool for: "%s %s\n"
000000000001859a	xorl	%eax, %eax
000000000001859c	movq	%r14, %rsi
000000000001859f	movq	%r15, %rdx
00000000000185a2	callq	_fprintf_stderr
00000000000185a7	addq	$0x410, %rsp
00000000000185ae	popq	%rbx
00000000000185af	popq	%r12
00000000000185b1	popq	%r14
00000000000185b3	popq	%r15
00000000000185b5	popq	%rbp
00000000000185b6	retq
_host_page_size:
00000000000185b7	movq	_vm_kernel_page_size(%rip), %rax
00000000000185be	movq	%rax, (%rsi)
00000000000185c1	xorl	%eax, %eax
00000000000185c3	retq
__mach_fork_child:
00000000000185c4	pushq	%rbp
00000000000185c5	movq	%rsp, %rbp
00000000000185c8	callq	_mach_init_doit
00000000000185cd	xorl	%eax, %eax
00000000000185cf	popq	%rbp
00000000000185d0	retq
00000000000185d1	nop
00000000000185d2	nop
00000000000185d3	nop
_mach_msg_server:
00000000000185d4	pushq	%rbp
00000000000185d5	movq	%rsp, %rbp
00000000000185d8	pushq	%r15
00000000000185da	pushq	%r14
00000000000185dc	pushq	%r13
00000000000185de	pushq	%r12
00000000000185e0	pushq	%rbx
00000000000185e1	subq	$0x68, %rsp
00000000000185e5	movl	%edx, -0x38(%rbp)
00000000000185e8	movl	%esi, %r13d
00000000000185eb	movq	%rdi, -0x70(%rbp)
00000000000185ef	movl	$0xffffffff, %edx
00000000000185f4	leaq	_mach_task_self_(%rip), %rax
00000000000185fb	leal	0x44(%r13), %esi
00000000000185ff	movl	%ecx, -0x48(%rbp)
0000000000018602	btl	$0x11, %ecx
0000000000018606	cmovael	%r13d, %esi
000000000001860a	movl	(%rax), %ebx
000000000001860c	leaq	_vm_page_size(%rip), %rax
0000000000018613	movq	(%rax), %r14
0000000000018616	addq	%r14, %rsi
0000000000018619	addq	%rdx, %rsi
000000000001861c	negq	%r14
000000000001861f	andq	%rsi, %r14
0000000000018622	movl	%r14d, %r15d
0000000000018625	leaq	-0x40(%rbp), %rsi
0000000000018629	movl	$0x14000001, %ecx
000000000001862e	movl	%ebx, %edi
0000000000018630	movq	%r15, %rdx
0000000000018633	callq	_vm_allocate
0000000000018638	movl	%eax, %r12d
000000000001863b	testl	%eax, %eax
000000000001863d	jne	0x188d7
0000000000018643	movq	%r14, -0x58(%rbp)
0000000000018647	movq	%r15, -0x60(%rbp)
000000000001864b	movl	$0xffffffff, %edx
0000000000018650	movl	%ebx, -0x34(%rbp)
0000000000018653	movl	-0x48(%rbp), %edi
0000000000018656	movl	%edi, %esi
0000000000018658	andl	$0xffffe7fc, %esi
000000000001865e	movl	%edi, %eax
0000000000018660	shrl	$0x18, %eax
0000000000018663	movl	%eax, %ecx
0000000000018665	andb	$0xf, %cl
0000000000018668	movl	$0x44, %ebx
000000000001866d	cmpb	$0x4, %cl
0000000000018670	ja	0x18687
0000000000018672	movzbl	%al, %eax
0000000000018675	shlq	$0x3c, %rax
0000000000018679	sarq	$0x3c, %rax
000000000001867d	leaq	0x7e8c(%rip), %rcx
0000000000018684	movl	(%rcx,%rax,4), %ebx
0000000000018687	addl	%ebx, %r13d
000000000001868a	leaq	_vm_page_size(%rip), %rax
0000000000018691	movl	(%rax), %r15d
0000000000018694	leal	(%rdx,%r15), %eax
0000000000018698	addl	%r13d, %eax
000000000001869b	negl	%r15d
000000000001869e	andl	%eax, %r15d
00000000000186a1	testb	$0x4, %dil
00000000000186a5	cmovnel	%r15d, %r13d
00000000000186a9	movl	%esi, -0x68(%rbp)
00000000000186ac	orl	$0x802, %esi
00000000000186b2	movl	%esi, -0x4c(%rbp)
00000000000186b5	xorl	%eax, %eax
00000000000186b7	movl	-0x38(%rbp), %r14d
00000000000186bb	movl	%ebx, -0x64(%rbp)
00000000000186be	jmp	0x18705
00000000000186c0	testb	$0x4, -0x48(%rbp)
00000000000186c4	je	0x188b5
00000000000186ca	movq	-0x30(%rbp), %rsi
00000000000186ce	movl	0x4(%rsi), %eax
00000000000186d1	movl	-0x64(%rbp), %r12d
00000000000186d5	addl	%r12d, %eax
00000000000186d8	leaq	_vm_page_size(%rip), %rcx
00000000000186df	movl	(%rcx), %r15d
00000000000186e2	movl	$0xffffffff, %ecx
00000000000186e7	leal	(%rcx,%r15), %ecx
00000000000186eb	addl	%eax, %ecx
00000000000186ed	negl	%r15d
00000000000186f0	andl	%ecx, %r15d
00000000000186f3	movl	-0x44(%rbp), %ebx
00000000000186f6	movl	%ebx, %edx
00000000000186f8	movl	-0x34(%rbp), %edi
00000000000186fb	callq	_vm_deallocate
0000000000018700	movl	%ebx, %eax
0000000000018702	movl	%r15d, %r13d
0000000000018705	cmpl	%r15d, %eax
0000000000018708	jae	0x1872d
000000000001870a	movl	%r15d, %edx
000000000001870d	movl	$0x14000001, %ecx
0000000000018712	movl	-0x34(%rbp), %edi
0000000000018715	leaq	-0x30(%rbp), %rsi
0000000000018719	callq	_vm_allocate
000000000001871e	movl	%eax, %r12d
0000000000018721	movl	%r15d, %eax
0000000000018724	testl	%r12d, %r12d
0000000000018727	jne	0x188e9
000000000001872d	movl	%eax, -0x44(%rbp)
0000000000018730	movq	-0x30(%rbp), %rdi
0000000000018734	movl	$0x0, (%rsp)
000000000001873b	xorl	%edx, %edx
000000000001873d	xorl	%r9d, %r9d
0000000000018740	movl	-0x4c(%rbp), %esi
0000000000018743	movl	%r13d, %ecx
0000000000018746	movl	%r14d, %r8d
0000000000018749	callq	_mach_msg
000000000001874e	movl	%eax, %r12d
0000000000018751	movq	-0x60(%rbp), %rbx
0000000000018755	testl	%r12d, %r12d
0000000000018758	jne	0x188a8
000000000001875e	movq	-0x30(%rbp), %rdi
0000000000018762	callq	_voucher_mach_msg_adopt
0000000000018767	movq	%rax, %r15
000000000001876a	movq	-0x40(%rbp), %rsi
000000000001876e	xorl	%eax, %eax
0000000000018770	movq	%rax, 0x10(%rsi)
0000000000018774	movq	%rax, 0x8(%rsi)
0000000000018778	movq	%rax, (%rsi)
000000000001877b	movq	-0x30(%rbp), %rdi
000000000001877f	callq	*-0x70(%rbp)
0000000000018782	movq	-0x40(%rbp), %rdi
0000000000018786	cmpl	$0x0, (%rdi)
0000000000018789	js	0x187a4
000000000001878b	movl	0x20(%rdi), %eax
000000000001878e	testl	%eax, %eax
0000000000018790	je	0x187a4
0000000000018792	cmpl	$0xfffffecf, %eax
0000000000018797	jne	0x1884d
000000000001879d	movl	$0x0, 0x8(%rdi)
00000000000187a4	movq	-0x58(%rbp), %rbx
00000000000187a8	cmpl	$0x0, 0x8(%rdi)
00000000000187ac	je	0x18891
00000000000187b2	movl	(%rdi), %eax
00000000000187b4	movl	0x4(%rdi), %edx
00000000000187b7	andl	$0x1f, %eax
00000000000187ba	xorl	%esi, %esi
00000000000187bc	cmpl	$0x12, %eax
00000000000187bf	setne	%sil
00000000000187c3	shll	$0x4, %esi
00000000000187c6	orl	-0x68(%rbp), %esi
00000000000187c9	orl	$0x903, %esi
00000000000187cf	cmpl	%ebx, -0x44(%rbp)
00000000000187d2	jne	0x18803
00000000000187d4	movl	$0x0, (%rsp)
00000000000187db	xorl	%r9d, %r9d
00000000000187de	movl	%r13d, %ecx
00000000000187e1	movl	%r14d, %r8d
00000000000187e4	callq	_mach_msg
00000000000187e9	movl	%eax, %r12d
00000000000187ec	movq	-0x30(%rbp), %rax
00000000000187f0	movq	-0x40(%rbp), %rcx
00000000000187f4	movq	%rcx, -0x30(%rbp)
00000000000187f8	movq	%rax, -0x40(%rbp)
00000000000187fc	movl	$0x1, %ebx
0000000000018801	jmp	0x18826
0000000000018803	movq	-0x30(%rbp), %rax
0000000000018807	xorl	%ebx, %ebx
0000000000018809	movl	%ebx, 0x10(%rsp)
000000000001880d	movq	%rax, 0x8(%rsp)
0000000000018812	movl	%ebx, (%rsp)
0000000000018815	xorl	%r9d, %r9d
0000000000018818	movl	%r13d, %ecx
000000000001881b	movl	%r14d, %r8d
000000000001881e	callq	_mach_msg_overwrite
0000000000018823	movl	%eax, %r12d
0000000000018826	leal	-0x10000003(%r12), %eax
000000000001882e	cmpl	$0x2, %eax
0000000000018831	jb	0x18876
0000000000018833	cmpl	$0x10004003, %r12d
000000000001883a	movl	-0x38(%rbp), %r14d
000000000001883e	je	0x1889b
0000000000018840	movq	%r15, %rdi
0000000000018843	callq	_voucher_mach_msg_revert
0000000000018848	jmp	0x18751
000000000001884d	movq	-0x30(%rbp), %rax
0000000000018851	cmpl	$0x0, (%rax)
0000000000018854	movq	-0x58(%rbp), %rbx
0000000000018858	jns	0x187a8
000000000001885e	movl	$0x0, 0x8(%rax)
0000000000018865	movq	%rax, %rdi
0000000000018868	callq	_mach_msg_destroy
000000000001886d	movq	-0x40(%rbp), %rdi
0000000000018871	jmp	0x187a8
0000000000018876	testl	%ebx, %ebx
0000000000018878	je	0x18889
000000000001887a	movq	-0x30(%rbp), %rdi
000000000001887e	cmpl	$0x0, (%rdi)
0000000000018881	movl	-0x38(%rbp), %r14d
0000000000018885	jns	0x1889b
0000000000018887	jmp	0x18896
0000000000018889	movq	-0x40(%rbp), %rdi
000000000001888d	movl	-0x38(%rbp), %r14d
0000000000018891	cmpl	$0x0, (%rdi)
0000000000018894	jns	0x1889b
0000000000018896	callq	_mach_msg_destroy
000000000001889b	movq	%r15, %rdi
000000000001889e	callq	_voucher_mach_msg_revert
00000000000188a3	jmp	0x18730
00000000000188a8	cmpl	$0x10004004, %r12d
00000000000188af	je	0x186c0
00000000000188b5	movq	-0x30(%rbp), %rsi
00000000000188b9	movl	-0x44(%rbp), %edx
00000000000188bc	movl	-0x34(%rbp), %r14d
00000000000188c0	movl	%r14d, %edi
00000000000188c3	callq	_vm_deallocate
00000000000188c8	movq	-0x40(%rbp), %rsi
00000000000188cc	movl	%r14d, %edi
00000000000188cf	movq	%rbx, %rdx
00000000000188d2	callq	_vm_deallocate
00000000000188d7	movl	%r12d, %eax
00000000000188da	addq	$0x68, %rsp
00000000000188de	popq	%rbx
00000000000188df	popq	%r12
00000000000188e1	popq	%r13
00000000000188e3	popq	%r14
00000000000188e5	popq	%r15
00000000000188e7	popq	%rbp
00000000000188e8	retq
00000000000188e9	movq	-0x40(%rbp), %rsi
00000000000188ed	movl	-0x34(%rbp), %edi
00000000000188f0	movq	-0x60(%rbp), %rdx
00000000000188f4	jmp	0x188d2
_mach_msg_server_importance:
00000000000188f6	jmp	_mach_msg_server
_mig_allocate:
00000000000188fb	pushq	%rbp
00000000000188fc	movq	%rsp, %rbp
00000000000188ff	pushq	%rbx
0000000000018900	pushq	%rax
0000000000018901	movq	%rsi, %rax
0000000000018904	movq	%rdi, %rbx
0000000000018907	leaq	_mach_task_self_(%rip), %rcx
000000000001890e	movl	(%rcx), %edi
0000000000018910	movl	$0x14000001, %ecx
0000000000018915	movq	%rbx, %rsi
0000000000018918	movq	%rax, %rdx
000000000001891b	callq	_vm_allocate
0000000000018920	testl	%eax, %eax
0000000000018922	je	0x1892b
0000000000018924	movq	$0x0, (%rbx)
000000000001892b	addq	$0x8, %rsp
000000000001892f	popq	%rbx
0000000000018930	popq	%rbp
0000000000018931	retq
_quota:
0000000000018932	pushq	%rbp
0000000000018933	movq	%rsp, %rbp
0000000000018936	callq	_getpid
000000000001893b	movl	$0xc, %esi
0000000000018940	movl	%eax, %edi
0000000000018942	popq	%rbp
0000000000018943	jmp	_kill
_setquota:
0000000000018948	pushq	%rbp
0000000000018949	movq	%rsp, %rbp
000000000001894c	callq	_getpid
0000000000018951	movl	$0xc, %esi
0000000000018956	movl	%eax, %edi
0000000000018958	popq	%rbp
0000000000018959	jmp	_kill
_panic_init:
000000000001895e	movl	%edi, _master_host_port(%rip)
0000000000018964	retq
_panic:
0000000000018965	pushq	%rbp
0000000000018966	movq	%rsp, %rbp
0000000000018969	pushq	%rbx
000000000001896a	subq	$0x408, %rsp
0000000000018971	movq	%rdi, %rcx
0000000000018974	leaq	0xcbff(%rip), %rdx ## literal pool for: "panic: %s\n"
000000000001897b	leaq	-0x410(%rbp), %rbx
0000000000018982	movl	$0x400, %esi
0000000000018987	xorl	%eax, %eax
0000000000018989	movq	%rbx, %rdi
000000000001898c	callq	__mach_snprintf
0000000000018991	movl	$0x2, %edi
0000000000018996	movq	%rbx, %rsi
0000000000018999	movl	%eax, %edx
000000000001899b	callq	_write
00000000000189a0	movl	_master_host_port(%rip), %edi
00000000000189a6	movl	$0x1000, %esi
00000000000189ab	callq	_host_reboot
00000000000189b0	callq	_abort
_abort:
00000000000189b5	pushq	%rbp
00000000000189b6	movq	%rsp, %rbp
00000000000189b9	callq	_getpid
00000000000189be	movl	$0x6, %esi
00000000000189c3	xorl	%edx, %edx
00000000000189c5	movl	%eax, %edi
00000000000189c7	callq	___kill
00000000000189cc	movl	$0x1, %edi
00000000000189d1	callq	__exit
_port_obj_init:
00000000000189d6	pushq	%rbp
00000000000189d7	movq	%rsp, %rbp
00000000000189da	leaq	_mach_task_self_(%rip), %rax
00000000000189e1	movl	(%rax), %eax
00000000000189e3	movslq	%edi, %rdx
00000000000189e6	shlq	$0x4, %rdx
00000000000189ea	leaq	_port_obj_table(%rip), %rsi
00000000000189f1	movl	$0x1, %ecx
00000000000189f6	movl	%eax, %edi
00000000000189f8	callq	_vm_allocate
00000000000189fd	testl	%eax, %eax
00000000000189ff	je	0x18a10
0000000000018a01	leaq	0xcb7d(%rip), %rdi ## literal pool for: "port_obj_init: can't vm_allocate"
0000000000018a08	xorl	%eax, %eax
0000000000018a0a	popq	%rbp
0000000000018a0b	jmp	_panic
0000000000018a10	popq	%rbp
0000000000018a11	retq
_semaphore_signal_all:
0000000000018a12	jmp	_semaphore_signal_all_trap
_semaphore_signal_thread:
0000000000018a17	jmp	_semaphore_signal_thread_trap
_semaphore_wait_signal:
0000000000018a1c	jmp	_semaphore_wait_signal_trap
_semaphore_timedwait_signal:
0000000000018a21	movq	%rdx, %rcx
0000000000018a24	shrq	$0x20, %rcx
0000000000018a28	jmp	_semaphore_timedwait_signal_trap
_msg_rpc:
0000000000018a2d	movl	$0x5, %eax
0000000000018a32	retq
_msg_send:
0000000000018a33	movl	$0x5, %eax
0000000000018a38	retq
_msg_receive:
0000000000018a39	movl	$0x5, %eax
0000000000018a3e	retq
_task_self_:
0000000000018a3f	leaq	_mach_task_self_(%rip), %rax
0000000000018a46	movl	(%rax), %eax
0000000000018a48	retq
_host_self:
0000000000018a49	jmp	_mach_host_self
__mach_vsnprintf:
0000000000018a4e	pushq	%rbp
0000000000018a4f	pushq	%r15
0000000000018a51	pushq	%r14
0000000000018a53	pushq	%r13
0000000000018a55	pushq	%r12
0000000000018a57	pushq	%rbx
0000000000018a58	movl	%esi, %eax
0000000000018a5a	decl	%eax
0000000000018a5c	jle	0x18beb
0000000000018a62	leaq	-0x8(%rsp), %r8
0000000000018a67	leaq	-0xa(%rsp), %r9
0000000000018a6c	leaq	_hex(%rip), %r10 ## literal pool for: "0123456789abcdef"
0000000000018a73	movl	$0xfffffffe, %r11d
0000000000018a79	movb	(%rdx), %bl
0000000000018a7b	testb	%bl, %bl
0000000000018a7d	je	0x18beb
0000000000018a83	cmpb	$0x25, %bl
0000000000018a86	jne	0x18ab5
0000000000018a88	movsbl	0x1(%rdx), %ebx
0000000000018a8c	addq	$0x2, %rdx
0000000000018a90	cmpl	$0x78, %ebx
0000000000018a93	je	0x18ac4
0000000000018a95	cmpl	$0x73, %ebx
0000000000018a98	jne	0x18be3
0000000000018a9e	movslq	(%rcx), %rbp
0000000000018aa1	cmpq	$0x28, %rbp
0000000000018aa5	ja	0x18adb
0000000000018aa7	movq	%rbp, %rbx
0000000000018aaa	addq	0x10(%rcx), %rbx
0000000000018aae	leal	0x8(%rbp), %ebp
0000000000018ab1	movl	%ebp, (%rcx)
0000000000018ab3	jmp	0x18ae7
0000000000018ab5	incq	%rdx
0000000000018ab8	movb	%bl, (%rdi)
0000000000018aba	incq	%rdi
0000000000018abd	decl	%eax
0000000000018abf	jmp	0x18be3
0000000000018ac4	movslq	(%rcx), %rbp
0000000000018ac7	cmpq	$0x28, %rbp
0000000000018acb	ja	0x18b44
0000000000018acd	movq	%rbp, %rbx
0000000000018ad0	addq	0x10(%rcx), %rbx
0000000000018ad4	leal	0x8(%rbp), %ebp
0000000000018ad7	movl	%ebp, (%rcx)
0000000000018ad9	jmp	0x18b50
0000000000018adb	movq	0x8(%rcx), %rbx
0000000000018adf	leaq	0x8(%rbx), %rbp
0000000000018ae3	movq	%rbp, 0x8(%rcx)
0000000000018ae7	movq	(%rbx), %r14
0000000000018aea	testq	%r14, %r14
0000000000018aed	je	0x18be3
0000000000018af3	leaq	-0x1(%r14), %r15
0000000000018af7	cmpb	$0x0, 0x1(%r15)
0000000000018afc	leaq	0x1(%r15), %r15
0000000000018b00	jne	0x18af7
0000000000018b02	testl	%eax, %eax
0000000000018b04	jle	0x18be3
0000000000018b0a	movl	%r15d, %ebp
0000000000018b0d	subl	%r14d, %ebp
0000000000018b10	testl	%ebp, %ebp
0000000000018b12	jle	0x18be3
0000000000018b18	decl	%r15d
0000000000018b1b	subl	%r14d, %r15d
0000000000018b1e	movb	(%r14), %bl
0000000000018b21	movb	%bl, (%rdi)
0000000000018b23	incq	%rdi
0000000000018b26	decl	%eax
0000000000018b28	testl	%eax, %eax
0000000000018b2a	jle	0x18be3
0000000000018b30	incq	%r14
0000000000018b33	leal	-0x1(%r15), %ebx
0000000000018b37	testl	%r15d, %r15d
0000000000018b3a	movl	%ebx, %r15d
0000000000018b3d	jg	0x18b1e
0000000000018b3f	jmp	0x18be3
0000000000018b44	movq	0x8(%rcx), %rbx
0000000000018b48	leaq	0x8(%rbx), %rbp
0000000000018b4c	movq	%rbp, 0x8(%rcx)
0000000000018b50	movl	(%rbx), %ebx
0000000000018b52	testq	%rbx, %rbx
0000000000018b55	je	0x18bad
0000000000018b57	movb	$0x0, -0x9(%rsp)
0000000000018b5c	movq	%r9, %rbp
0000000000018b5f	movq	%r8, %r14
0000000000018b62	movq	%rbp, %r15
0000000000018b65	movl	%ebx, %ebp
0000000000018b67	andl	$0xf, %ebp
0000000000018b6a	movb	(%rbp,%r10), %r13b
0000000000018b6f	movb	%r13b, -0x2(%r14)
0000000000018b73	shrq	$0x4, %rbx
0000000000018b77	decq	%r14
0000000000018b7a	leaq	-0x1(%r15), %rbp
0000000000018b7e	testq	%rbx, %rbx
0000000000018b81	jne	0x18b62
0000000000018b83	movq	%r14, %rbx
0000000000018b86	decq	%rbx
0000000000018b89	cmpb	$0x0, 0x1(%r15)
0000000000018b8e	leaq	0x1(%r15), %r15
0000000000018b92	jne	0x18b89
0000000000018b94	movl	%r15d, %ebp
0000000000018b97	subl	%ebx, %ebp
0000000000018b99	testl	%ebp, %ebp
0000000000018b9b	jle	0x18bad
0000000000018b9d	leaq	0x1(%rdi), %r12
0000000000018ba1	movb	%r13b, (%rdi)
0000000000018ba4	cmpl	$0x1, %ebp
0000000000018ba7	jne	0x18bb2
0000000000018ba9	decl	%eax
0000000000018bab	jmp	0x18be0
0000000000018bad	movq	%rdi, %r12
0000000000018bb0	jmp	0x18be0
0000000000018bb2	leal	(%r15,%r11), %r13d
0000000000018bb6	subl	%ebx, %r13d
0000000000018bb9	addl	%ebx, %eax
0000000000018bbb	notl	%ebx
0000000000018bbd	addl	%r15d, %ebx
0000000000018bc0	xorl	%ebp, %ebp
0000000000018bc2	movb	(%r14,%rbp), %r11b
0000000000018bc6	movb	%r11b, (%r12,%rbp)
0000000000018bca	incq	%rbp
0000000000018bcd	cmpq	%rbp, %rbx
0000000000018bd0	jne	0x18bc2
0000000000018bd2	leaq	0x2(%rdi,%r13), %r12
0000000000018bd7	subl	%r15d, %eax
0000000000018bda	movl	$0xfffffffe, %r11d
0000000000018be0	movq	%r12, %rdi
0000000000018be3	testl	%eax, %eax
0000000000018be5	jg	0x18a79
0000000000018beb	testl	%esi, %esi
0000000000018bed	jle	0x18bf2
0000000000018bef	movb	$0x0, (%rdi)
0000000000018bf2	notl	%eax
0000000000018bf4	addl	%esi, %eax
0000000000018bf6	popq	%rbx
0000000000018bf7	popq	%r12
0000000000018bf9	popq	%r13
0000000000018bfb	popq	%r14
0000000000018bfd	popq	%r15
0000000000018bff	popq	%rbp
0000000000018c00	retq
__mach_snprintf:
0000000000018c01	pushq	%rbp
0000000000018c02	movq	%rsp, %rbp
0000000000018c05	subq	$0xd0, %rsp
0000000000018c0c	testb	%al, %al
0000000000018c0e	je	0x18c30
0000000000018c10	movaps	%xmm0, -0x80(%rbp)
0000000000018c14	movaps	%xmm1, -0x70(%rbp)
0000000000018c18	movaps	%xmm2, -0x60(%rbp)
0000000000018c1c	movaps	%xmm3, -0x50(%rbp)
0000000000018c20	movaps	%xmm4, -0x40(%rbp)
0000000000018c24	movaps	%xmm5, -0x30(%rbp)
0000000000018c28	movaps	%xmm6, -0x20(%rbp)
0000000000018c2c	movaps	%xmm7, -0x10(%rbp)
0000000000018c30	leaq	-0xb0(%rbp), %rax
0000000000018c37	movq	%r9, 0x28(%rax)
0000000000018c3b	movq	%r8, 0x20(%rax)
0000000000018c3f	movq	%rcx, 0x18(%rax)
0000000000018c43	leaq	-0xd0(%rbp), %rcx
0000000000018c4a	movq	%rax, 0x10(%rcx)
0000000000018c4e	leaq	0x10(%rbp), %rax
0000000000018c52	movq	%rax, 0x8(%rcx)
0000000000018c56	movabsq	$0x3000000018, %rax
0000000000018c60	movq	%rax, (%rcx)
0000000000018c63	callq	__mach_vsnprintf
0000000000018c68	addq	$0xd0, %rsp
0000000000018c6f	popq	%rbp
0000000000018c70	retq
_pselect$DARWIN_EXTSN$NOCANCEL:
0000000000018c71	pushq	%rbp
0000000000018c72	movq	%rsp, %rbp
0000000000018c75	pushq	%r15
0000000000018c77	pushq	%r14
0000000000018c79	pushq	%r13
0000000000018c7b	pushq	%r12
0000000000018c7d	pushq	%rbx
0000000000018c7e	subq	$0x28, %rsp
0000000000018c82	movq	%r9, %rbx
0000000000018c85	movq	%r8, %r15
0000000000018c88	movq	%rsi, %r12
0000000000018c8b	movl	%edi, %r13d
0000000000018c8e	movq	%rdx, -0x38(%rbp)
0000000000018c92	movq	%rcx, -0x40(%rbp)
0000000000018c96	callq	___pselect_nocancel
0000000000018c9b	movl	%eax, %r14d
0000000000018c9e	cmpl	$-0x1, %eax
0000000000018ca1	jne	0x18d5f
0000000000018ca7	callq	___error
0000000000018cac	movl	$0xffffffff, %r14d
0000000000018cb2	cmpl	$0x4e, (%rax)
0000000000018cb5	jne	0x18d5f
0000000000018cbb	testq	%r15, %r15
0000000000018cbe	je	0x18ced
0000000000018cc0	movq	(%r15), %rax
0000000000018cc3	leaq	-0x50(%rbp), %rcx
0000000000018cc7	movq	%rax, (%rcx)
0000000000018cca	movabsq	$0x20c49ba5e353f7cf, %rax
0000000000018cd4	imulq	0x8(%r15)
0000000000018cd8	movq	%rcx, %r15
0000000000018cdb	movq	%rdx, %rax
0000000000018cde	shrq	$0x3f, %rax
0000000000018ce2	shrq	$0x7, %rdx
0000000000018ce6	addl	%eax, %edx
0000000000018ce8	movl	%edx, 0x8(%rcx)
0000000000018ceb	jmp	0x18cf0
0000000000018ced	xorl	%r15d, %r15d
0000000000018cf0	testq	%rbx, %rbx
0000000000018cf3	je	0x18d46
0000000000018cf5	leaq	-0x2c(%rbp), %rdx
0000000000018cf9	movl	$0x3, %edi
0000000000018cfe	movq	%rbx, %rsi
0000000000018d01	callq	___pthread_sigmask
0000000000018d06	movl	%eax, %r14d
0000000000018d09	testl	%eax, %eax
0000000000018d0b	jne	0x18d5f
0000000000018d0d	movl	%r13d, %edi
0000000000018d10	movq	%r12, %rsi
0000000000018d13	movq	-0x38(%rbp), %rdx
0000000000018d17	movq	-0x40(%rbp), %rcx
0000000000018d1b	movq	%r15, %r8
0000000000018d1e	callq	_select$DARWIN_EXTSN$NOCANCEL
0000000000018d23	movl	%eax, %r14d
0000000000018d26	callq	___error
0000000000018d2b	movl	(%rax), %ebx
0000000000018d2d	leaq	-0x2c(%rbp), %rsi
0000000000018d31	movl	$0x3, %edi
0000000000018d36	xorl	%edx, %edx
0000000000018d38	callq	___pthread_sigmask
0000000000018d3d	callq	___error
0000000000018d42	movl	%ebx, (%rax)
0000000000018d44	jmp	0x18d5f
0000000000018d46	movl	%r13d, %edi
0000000000018d49	movq	%r12, %rsi
0000000000018d4c	movq	-0x38(%rbp), %rdx
0000000000018d50	movq	-0x40(%rbp), %rcx
0000000000018d54	movq	%r15, %r8
0000000000018d57	callq	_select$DARWIN_EXTSN$NOCANCEL
0000000000018d5c	movl	%eax, %r14d
0000000000018d5f	movl	%r14d, %eax
0000000000018d62	addq	$0x28, %rsp
0000000000018d66	popq	%rbx
0000000000018d67	popq	%r12
0000000000018d69	popq	%r13
0000000000018d6b	popq	%r14
0000000000018d6d	popq	%r15
0000000000018d6f	popq	%rbp
0000000000018d70	retq
_mach_task_self:
0000000000018d71	jmp	_task_self_trap
_mach_right_recv_construct:
0000000000018d76	pushq	%rbp
0000000000018d77	movq	%rsp, %rbp
0000000000018d7a	pushq	%rbx
0000000000018d7b	subq	$0x28, %rsp
0000000000018d7f	movq	%rsi, %rbx
0000000000018d82	movl	$0x0, -0xc(%rbp)
0000000000018d89	movq	0x77a8(%rip), %rax
0000000000018d90	movq	%rax, -0x18(%rbp)
0000000000018d94	movq	0x7795(%rip), %rax
0000000000018d9b	movq	%rax, -0x20(%rbp)
0000000000018d9f	movq	0x7782(%rip), %rax
0000000000018da6	movq	%rax, -0x28(%rbp)
0000000000018daa	movl	$0x11, %eax
0000000000018daf	testb	$0x1, %dil
0000000000018db3	je	0x18dc1
0000000000018db5	movl	$0x0, -0x28(%rbp)
0000000000018dbc	movl	$0x10, %eax
0000000000018dc1	testq	%rbx, %rbx
0000000000018dc4	je	0x18dc9
0000000000018dc6	movl	%eax, -0x28(%rbp)
0000000000018dc9	leaq	_mach_task_self_(%rip), %rax
0000000000018dd0	movl	(%rax), %edi
0000000000018dd2	leaq	-0x28(%rbp), %rsi
0000000000018dd6	leaq	-0xc(%rbp), %rcx
0000000000018dda	callq	_mach_port_construct
0000000000018ddf	testl	%eax, %eax
0000000000018de1	jne	0x18df4
0000000000018de3	movl	-0xc(%rbp), %eax
0000000000018de6	testq	%rbx, %rbx
0000000000018de9	je	0x18ded
0000000000018deb	movl	%eax, (%rbx)
0000000000018ded	addq	$0x28, %rsp
0000000000018df1	popq	%rbx
0000000000018df2	popq	%rbp
0000000000018df3	retq
0000000000018df4	cltq
0000000000018df6	leaq	0xc7c4(%rip), %rcx ## literal pool for: "construct recv right failed"
0000000000018dfd	movq	%rcx, 0x127a4(%rip)
0000000000018e04	movq	%rax, 0x127cd(%rip)
0000000000018e0b	ud2
_mach_right_recv_destruct:
0000000000018e0d	movq	%rdx, %r8
0000000000018e10	movl	%edi, %ecx
0000000000018e12	testq	%rsi, %rsi
0000000000018e15	je	0x18e39
0000000000018e17	movl	(%rsi), %eax
0000000000018e19	movl	$0xffffffff, %edx
0000000000018e1e	cmpl	%ecx, %eax
0000000000018e20	je	0x18e3b
0000000000018e22	leaq	0xc7b4(%rip), %rcx ## literal pool for: "api misuse: bad send right"
0000000000018e29	movq	%rcx, 0x12778(%rip)
0000000000018e30	movq	%rax, 0x127a1(%rip)
0000000000018e37	ud2
0000000000018e39	xorl	%edx, %edx
0000000000018e3b	pushq	%rbp
0000000000018e3c	movq	%rsp, %rbp
0000000000018e3f	leaq	_mach_task_self_(%rip), %rax
0000000000018e46	movl	(%rax), %edi
0000000000018e48	movl	%ecx, %esi
0000000000018e4a	movq	%r8, %rcx
0000000000018e4d	callq	_mach_port_destruct
0000000000018e52	testl	%eax, %eax
0000000000018e54	popq	%rbp
0000000000018e55	jne	0x18e58
0000000000018e57	retq
0000000000018e58	cltq
0000000000018e5a	leaq	0xc797(%rip), %rcx ## literal pool for: "destruct recv right failed"
0000000000018e61	movq	%rcx, 0x12740(%rip)
0000000000018e68	movq	%rax, 0x12769(%rip)
0000000000018e6f	ud2
_mach_right_send_create:
0000000000018e71	pushq	%rbp
0000000000018e72	movq	%rsp, %rbp
0000000000018e75	pushq	%rbx
0000000000018e76	pushq	%rax
0000000000018e77	movl	%edi, %ebx
0000000000018e79	leaq	_mach_task_self_(%rip), %rax
0000000000018e80	movl	(%rax), %edi
0000000000018e82	movl	$0x14, %ecx
0000000000018e87	movl	%ebx, %esi
0000000000018e89	movl	%ebx, %edx
0000000000018e8b	callq	_mach_port_insert_right
0000000000018e90	testl	%eax, %eax
0000000000018e92	jne	0x18e9d
0000000000018e94	movl	%ebx, %eax
0000000000018e96	addq	$0x8, %rsp
0000000000018e9a	popq	%rbx
0000000000018e9b	popq	%rbp
0000000000018e9c	retq
0000000000018e9d	cltq
0000000000018e9f	leaq	0xc76d(%rip), %rcx ## literal pool for: "create send right failed"
0000000000018ea6	movq	%rcx, 0x126fb(%rip)
0000000000018ead	movq	%rax, 0x12724(%rip)
0000000000018eb4	ud2
_mach_right_send_retain:
0000000000018eb6	pushq	%rbp
0000000000018eb7	movq	%rsp, %rbp
0000000000018eba	pushq	%rbx
0000000000018ebb	pushq	%rax
0000000000018ebc	movl	%edi, %ebx
0000000000018ebe	leaq	_mach_task_self_(%rip), %rax
0000000000018ec5	movl	(%rax), %edi
0000000000018ec7	xorl	%edx, %edx
0000000000018ec9	movl	$0x1, %ecx
0000000000018ece	movl	%ebx, %esi
0000000000018ed0	callq	_mach_port_mod_refs
0000000000018ed5	testl	%eax, %eax
0000000000018ed7	je	0x18ee3
0000000000018ed9	cmpl	$0x11, %eax
0000000000018edc	jne	0x18eec
0000000000018ede	movl	$0xffffffff, %ebx
0000000000018ee3	movl	%ebx, %eax
0000000000018ee5	addq	$0x8, %rsp
0000000000018ee9	popq	%rbx
0000000000018eea	popq	%rbp
0000000000018eeb	retq
0000000000018eec	cltq
0000000000018eee	leaq	0xc737(%rip), %rcx ## literal pool for: "retain send right failed"
0000000000018ef5	movq	%rcx, 0x126ac(%rip)
0000000000018efc	movq	%rax, 0x126d5(%rip)
0000000000018f03	ud2
_mach_right_send_once_create:
0000000000018f05	pushq	%rbp
0000000000018f06	movq	%rsp, %rbp
0000000000018f09	subq	$0x10, %rsp
0000000000018f0d	movl	%edi, %eax
0000000000018f0f	xorl	%edx, %edx
0000000000018f11	leaq	-0x8(%rbp), %r8
0000000000018f15	movl	%edx, (%r8)
0000000000018f18	leaq	-0x4(%rbp), %rcx
0000000000018f1c	movl	%edx, (%rcx)
0000000000018f1e	leaq	_mach_task_self_(%rip), %rdx
0000000000018f25	movl	(%rdx), %edi
0000000000018f27	movl	$0x15, %edx
0000000000018f2c	movl	%eax, %esi
0000000000018f2e	callq	_mach_port_extract_right
0000000000018f33	testl	%eax, %eax
0000000000018f35	jne	0x18f40
0000000000018f37	movl	-0x4(%rbp), %eax
0000000000018f3a	addq	$0x10, %rsp
0000000000018f3e	popq	%rbp
0000000000018f3f	retq
0000000000018f40	cltq
0000000000018f42	leaq	0xc72f(%rip), %rcx ## literal pool for: "create send-once right failed"
0000000000018f49	movq	%rcx, 0x12658(%rip)
0000000000018f50	movq	%rax, 0x12681(%rip)
0000000000018f57	ud2
_mach_right_send_once_consume:
0000000000018f59	pushq	%rbp
0000000000018f5a	movq	%rsp, %rbp
0000000000018f5d	pushq	%r14
0000000000018f5f	pushq	%rbx
0000000000018f60	movl	%edi, %ebx
0000000000018f62	leaq	_mach_task_self_(%rip), %r14
0000000000018f69	movl	(%r14), %edi
0000000000018f6c	movl	$0x2, %edx
0000000000018f71	movl	$0xffffffff, %ecx
0000000000018f76	movl	%ebx, %esi
0000000000018f78	callq	_mach_port_mod_refs
0000000000018f7d	testl	%eax, %eax
0000000000018f7f	je	0x18f9e
0000000000018f81	cmpl	$0x11, %eax
0000000000018f84	jne	0x18fa3
0000000000018f86	movl	(%r14), %edi
0000000000018f89	movl	$0x4, %edx
0000000000018f8e	movl	$0xffffffff, %ecx
0000000000018f93	movl	%ebx, %esi
0000000000018f95	callq	_mach_port_mod_refs
0000000000018f9a	testl	%eax, %eax
0000000000018f9c	jne	0x18fbc
0000000000018f9e	popq	%rbx
0000000000018f9f	popq	%r14
0000000000018fa1	popq	%rbp
0000000000018fa2	retq
0000000000018fa3	cltq
0000000000018fa5	leaq	0xc6ea(%rip), %rcx ## literal pool for: "consume send-once right failed"
0000000000018fac	movq	%rcx, 0x125f5(%rip)
0000000000018fb3	movq	%rax, 0x1261e(%rip)
0000000000018fba	ud2
0000000000018fbc	cltq
0000000000018fbe	leaq	0xc680(%rip), %rcx ## literal pool for: "release dead name failed"
0000000000018fc5	movq	%rcx, 0x125dc(%rip)
0000000000018fcc	movq	%rax, 0x12605(%rip)
0000000000018fd3	ud2
_proc_listallpids:
0000000000018fd5	pushq	%rbp
0000000000018fd6	movq	%rsp, %rbp
0000000000018fd9	pushq	%rbx
0000000000018fda	pushq	%rax
0000000000018fdb	movl	%esi, %r9d
0000000000018fde	movq	%rdi, %rax
0000000000018fe1	xorl	%ebx, %ebx
0000000000018fe3	movl	$0x1, %edi
0000000000018fe8	movl	$0x1, %esi
0000000000018fed	xorl	%edx, %edx
0000000000018fef	xorl	%ecx, %ecx
0000000000018ff1	movq	%rax, %r8
0000000000018ff4	callq	___proc_info
0000000000018ff9	movl	%eax, %ecx
0000000000018ffb	sarl	$0x2, %ecx
0000000000018ffe	cmpl	$-0x1, %eax
0000000000019001	cmovel	%ebx, %ecx
0000000000019004	movl	%ecx, %eax
0000000000019006	addq	$0x8, %rsp
000000000001900a	popq	%rbx
000000000001900b	popq	%rbp
000000000001900c	retq
_proc_listpgrppids:
000000000001900d	pushq	%rbp
000000000001900e	movq	%rsp, %rbp
0000000000019011	pushq	%rbx
0000000000019012	pushq	%rax
0000000000019013	movl	%edx, %r9d
0000000000019016	movq	%rsi, %rax
0000000000019019	movl	%edi, %edx
000000000001901b	xorl	%ebx, %ebx
000000000001901d	movl	$0x1, %edi
0000000000019022	movl	$0x2, %esi
0000000000019027	xorl	%ecx, %ecx
0000000000019029	movq	%rax, %r8
000000000001902c	callq	___proc_info
0000000000019031	movl	%eax, %ecx
0000000000019033	sarl	$0x2, %ecx
0000000000019036	cmpl	$-0x1, %eax
0000000000019039	cmovel	%ebx, %ecx
000000000001903c	movl	%ecx, %eax
000000000001903e	addq	$0x8, %rsp
0000000000019042	popq	%rbx
0000000000019043	popq	%rbp
0000000000019044	retq
_proc_listchildpids:
0000000000019045	pushq	%rbp
0000000000019046	movq	%rsp, %rbp
0000000000019049	pushq	%rbx
000000000001904a	pushq	%rax
000000000001904b	movl	%edx, %r9d
000000000001904e	movq	%rsi, %rax
0000000000019051	movl	%edi, %edx
0000000000019053	xorl	%ebx, %ebx
0000000000019055	movl	$0x1, %edi
000000000001905a	movl	$0x6, %esi
000000000001905f	xorl	%ecx, %ecx
0000000000019061	movq	%rax, %r8
0000000000019064	callq	___proc_info
0000000000019069	movl	%eax, %ecx
000000000001906b	sarl	$0x2, %ecx
000000000001906e	cmpl	$-0x1, %eax
0000000000019071	cmovel	%ebx, %ecx
0000000000019074	movl	%ecx, %eax
0000000000019076	addq	$0x8, %rsp
000000000001907a	popq	%rbx
000000000001907b	popq	%rbp
000000000001907c	retq
_proc_pidoriginatorinfo:
000000000001907d	pushq	%rbp
000000000001907e	movq	%rsp, %rbp
0000000000019081	pushq	%r15
0000000000019083	pushq	%r14
0000000000019085	pushq	%r12
0000000000019087	pushq	%rbx
0000000000019088	movl	%edx, %r14d
000000000001908b	movq	%rsi, %r15
000000000001908e	movl	%edi, %ebx
0000000000019090	callq	_getpid
0000000000019095	xorl	%r12d, %r12d
0000000000019098	movl	$0xa, %edi
000000000001909d	xorl	%ecx, %ecx
000000000001909f	movl	%eax, %esi
00000000000190a1	movl	%ebx, %edx
00000000000190a3	movq	%r15, %r8
00000000000190a6	movl	%r14d, %r9d
00000000000190a9	callq	___proc_info
00000000000190ae	cmpl	$-0x1, %eax
00000000000190b1	cmovel	%r12d, %eax
00000000000190b5	popq	%rbx
00000000000190b6	popq	%r12
00000000000190b8	popq	%r14
00000000000190ba	popq	%r15
00000000000190bc	popq	%rbp
00000000000190bd	retq
_proc_listcoalitions:
00000000000190be	pushq	%rbp
00000000000190bf	movq	%rsp, %rbp
00000000000190c2	pushq	%rbx
00000000000190c3	pushq	%rax
00000000000190c4	movl	%ecx, %r9d
00000000000190c7	movq	%rdx, %rax
00000000000190ca	movl	%esi, %edx
00000000000190cc	movl	%edi, %esi
00000000000190ce	xorl	%ebx, %ebx
00000000000190d0	movl	$0xb, %edi
00000000000190d5	xorl	%ecx, %ecx
00000000000190d7	movq	%rax, %r8
00000000000190da	callq	___proc_info
00000000000190df	cmpl	$-0x1, %eax
00000000000190e2	cmovel	%ebx, %eax
00000000000190e5	addq	$0x8, %rsp
00000000000190e9	popq	%rbx
00000000000190ea	popq	%rbp
00000000000190eb	retq
_proc_setthread_cpupercent:
00000000000190ec	cmpb	$0x63, %dil
00000000000190f0	ja	0x19117
00000000000190f2	movl	%esi, %eax
00000000000190f4	cmpl	$0x1000000, %esi
00000000000190fa	jae	0x19117
00000000000190fc	movzbl	%dil, %ecx
0000000000019100	shll	$0x8, %eax
0000000000019103	orl	%ecx, %eax
0000000000019105	movl	$0xffffffff, %edi
000000000001910a	movl	$0x3, %esi
000000000001910f	movq	%rax, %rdx
0000000000019112	jmp	_proc_rlimit_control
0000000000019117	pushq	%rbp
0000000000019118	movq	%rsp, %rbp
000000000001911b	callq	___error
0000000000019120	movl	$0x16, (%rax)
0000000000019126	movl	$0xffffffff, %eax
000000000001912b	popq	%rbp
000000000001912c	retq
_proc_pidfdinfo:
000000000001912d	pushq	%rbp
000000000001912e	movq	%rsp, %rbp
0000000000019131	movl	%r8d, %r9d
0000000000019134	movq	%rcx, %r8
0000000000019137	movl	%edi, %eax
0000000000019139	movslq	%esi, %rcx
000000000001913c	movl	$0x3, %edi
0000000000019141	movl	%eax, %esi
0000000000019143	callq	___proc_info
0000000000019148	xorl	%ecx, %ecx
000000000001914a	cmpl	$-0x1, %eax
000000000001914d	cmovel	%ecx, %eax
0000000000019150	popq	%rbp
0000000000019151	retq
_proc_pidfileportinfo:
0000000000019152	pushq	%rbp
0000000000019153	movq	%rsp, %rbp
0000000000019156	movl	%r8d, %r9d
0000000000019159	movq	%rcx, %r8
000000000001915c	movl	%edi, %eax
000000000001915e	movl	%esi, %ecx
0000000000019160	movl	$0x6, %edi
0000000000019165	movl	%eax, %esi
0000000000019167	callq	___proc_info
000000000001916c	xorl	%ecx, %ecx
000000000001916e	cmpl	$-0x1, %eax
0000000000019171	cmovel	%ecx, %eax
0000000000019174	popq	%rbp
0000000000019175	retq
_proc_piddynkqueueinfo:
0000000000019176	pushq	%rbp
0000000000019177	movq	%rsp, %rbp
000000000001917a	movl	%r8d, %r9d
000000000001917d	movq	%rcx, %rax
0000000000019180	movq	%rdx, %rcx
0000000000019183	movl	%esi, %edx
0000000000019185	movl	%edi, %esi
0000000000019187	movl	$0xd, %edi
000000000001918c	movq	%rax, %r8
000000000001918f	callq	___proc_info
0000000000019194	xorl	%ecx, %ecx
0000000000019196	cmpl	$-0x1, %eax
0000000000019199	cmovel	%ecx, %eax
000000000001919c	popq	%rbp
000000000001919d	retq
_proc_udata_info:
000000000001919e	movl	%ecx, %r9d
00000000000191a1	movq	%rdx, %rax
00000000000191a4	movl	%esi, %edx
00000000000191a6	movl	%edi, %esi
00000000000191a8	movl	$0xe, %edi
00000000000191ad	xorl	%ecx, %ecx
00000000000191af	movq	%rax, %r8
00000000000191b2	jmp	___proc_info
_proc_regionfilename:
00000000000191b7	pushq	%rbp
00000000000191b8	movq	%rsp, %rbp
00000000000191bb	pushq	%rbx
00000000000191bc	subq	$0x4f8, %rsp
00000000000191c3	cmpl	$0x3ff, %ecx
00000000000191c9	ja	0x191da
00000000000191cb	callq	___error
00000000000191d0	movl	$0xc, (%rax)
00000000000191d6	xorl	%eax, %eax
00000000000191d8	jmp	0x19215
00000000000191da	movq	%rdx, %rbx
00000000000191dd	movq	%rsi, %rax
00000000000191e0	movl	%edi, %esi
00000000000191e2	leaq	-0x500(%rbp), %r8
00000000000191e9	movl	$0x2, %edi
00000000000191ee	movl	$0x16, %edx
00000000000191f3	movl	$0x4f8, %r9d
00000000000191f9	movq	%rax, %rcx
00000000000191fc	callq	___proc_info
0000000000019201	leaq	-0x408(%rbp), %rsi
0000000000019208	movl	$0x400, %edx
000000000001920d	movq	%rbx, %rdi
0000000000019210	callq	_strlcpy
0000000000019215	addq	$0x4f8, %rsp
000000000001921c	popq	%rbx
000000000001921d	popq	%rbp
000000000001921e	retq
_proc_kmsgbuf:
000000000001921f	pushq	%rbp
0000000000019220	movq	%rsp, %rbp
0000000000019223	pushq	%rbx
0000000000019224	pushq	%rax
0000000000019225	movl	%esi, %r9d
0000000000019228	movq	%rdi, %rax
000000000001922b	xorl	%ebx, %ebx
000000000001922d	movl	$0x4, %edi
0000000000019232	xorl	%esi, %esi
0000000000019234	xorl	%edx, %edx
0000000000019236	xorl	%ecx, %ecx
0000000000019238	movq	%rax, %r8
000000000001923b	callq	___proc_info
0000000000019240	cmpl	$-0x1, %eax
0000000000019243	cmovel	%ebx, %eax
0000000000019246	addq	$0x8, %rsp
000000000001924a	popq	%rbx
000000000001924b	popq	%rbp
000000000001924c	retq
_proc_libversion:
000000000001924d	testq	%rdi, %rdi
0000000000019250	je	0x19258
0000000000019252	movl	$0x1, (%rdi)
0000000000019258	testq	%rsi, %rsi
000000000001925b	je	0x19263
000000000001925d	movl	$0x1, (%rsi)
0000000000019263	xorl	%eax, %eax
0000000000019265	retq
_proc_get_dirty:
0000000000019266	pushq	%rbp
0000000000019267	movq	%rsp, %rbp
000000000001926a	pushq	%r14
000000000001926c	pushq	%rbx
000000000001926d	testq	%rsi, %rsi
0000000000019270	je	0x1929c
0000000000019272	movq	%rsi, %rbx
0000000000019275	movl	%edi, %eax
0000000000019277	xorl	%r14d, %r14d
000000000001927a	movl	$0x8, %edi
000000000001927f	movl	$0x3, %edx
0000000000019284	xorl	%ecx, %ecx
0000000000019286	xorl	%r8d, %r8d
0000000000019289	xorl	%r9d, %r9d
000000000001928c	movl	%eax, %esi
000000000001928e	callq	___proc_info
0000000000019293	cmpl	$-0x1, %eax
0000000000019296	je	0x192a4
0000000000019298	movl	%eax, (%rbx)
000000000001929a	jmp	0x192ac
000000000001929c	movl	$0x16, %r14d
00000000000192a2	jmp	0x192ac
00000000000192a4	callq	___error
00000000000192a9	movl	(%rax), %r14d
00000000000192ac	movl	%r14d, %eax
00000000000192af	popq	%rbx
00000000000192b0	popq	%r14
00000000000192b2	popq	%rbp
00000000000192b3	retq
_proc_clear_dirty:
00000000000192b4	pushq	%rbp
00000000000192b5	movq	%rsp, %rbp
00000000000192b8	pushq	%rbx
00000000000192b9	pushq	%rax
00000000000192ba	movl	%edi, %eax
00000000000192bc	movl	%esi, %ecx
00000000000192be	xorl	%ebx, %ebx
00000000000192c0	movl	$0x8, %edi
00000000000192c5	movl	$0x4, %edx
00000000000192ca	xorl	%r8d, %r8d
00000000000192cd	xorl	%r9d, %r9d
00000000000192d0	movl	%eax, %esi
00000000000192d2	callq	___proc_info
00000000000192d7	cmpl	$-0x1, %eax
00000000000192da	jne	0x192e3
00000000000192dc	callq	___error
00000000000192e1	movl	(%rax), %ebx
00000000000192e3	movl	%ebx, %eax
00000000000192e5	addq	$0x8, %rsp
00000000000192e9	popq	%rbx
00000000000192ea	popq	%rbp
00000000000192eb	retq
_proc_terminate:
00000000000192ec	pushq	%rbp
00000000000192ed	movq	%rsp, %rbp
00000000000192f0	pushq	%r14
00000000000192f2	pushq	%rbx
00000000000192f3	testq	%rsi, %rsi
00000000000192f6	je	0x1931f
00000000000192f8	movq	%rsi, %rbx
00000000000192fb	movl	%edi, %eax
00000000000192fd	xorl	%r14d, %r14d
0000000000019300	movl	$0x7, %edi
0000000000019305	xorl	%edx, %edx
0000000000019307	xorl	%ecx, %ecx
0000000000019309	xorl	%r8d, %r8d
000000000001930c	xorl	%r9d, %r9d
000000000001930f	movl	%eax, %esi
0000000000019311	callq	___proc_info
0000000000019316	cmpl	$-0x1, %eax
0000000000019319	je	0x19327
000000000001931b	movl	%eax, (%rbx)
000000000001931d	jmp	0x1932f
000000000001931f	movl	$0x16, %r14d
0000000000019325	jmp	0x1932f
0000000000019327	callq	___error
000000000001932c	movl	(%rax), %r14d
000000000001932f	movl	%r14d, %eax
0000000000019332	popq	%rbx
0000000000019333	popq	%r14
0000000000019335	popq	%rbp
0000000000019336	retq
_proc_resume_cpumon:
0000000000019337	pushq	%rbp
0000000000019338	movq	%rsp, %rbp
000000000001933b	subq	$0x10, %rsp
000000000001933f	movl	%edi, %eax
0000000000019341	movq	$0x0, (%rsp)
0000000000019349	movl	$0x1, %edi
000000000001934e	movl	$0x5, %esi
0000000000019353	movl	$0x4, %edx
0000000000019358	movl	$0x3, %ecx
000000000001935d	xorl	%r8d, %r8d
0000000000019360	movl	%eax, %r9d
0000000000019363	callq	___process_policy
0000000000019368	addq	$0x10, %rsp
000000000001936c	popq	%rbp
000000000001936d	retq
_proc_set_cpumon_params_fatal:
000000000001936e	pushq	%rbp
000000000001936f	movq	%rsp, %rbp
0000000000019372	pushq	%r15
0000000000019374	pushq	%r14
0000000000019376	pushq	%r13
0000000000019378	pushq	%r12
000000000001937a	pushq	%rbx
000000000001937b	subq	$0x28, %rsp
000000000001937f	xorl	%eax, %eax
0000000000019381	movl	%eax, -0x30(%rbp)
0000000000019384	movl	%eax, -0x2c(%rbp)
0000000000019387	testl	%esi, %esi
0000000000019389	jle	0x193c1
000000000001938b	movl	%edx, %r15d
000000000001938e	testl	%edx, %edx
0000000000019390	jle	0x193c1
0000000000019392	movl	%esi, %ebx
0000000000019394	movl	%edi, %r14d
0000000000019397	leaq	-0x30(%rbp), %r12
000000000001939b	leaq	-0x2c(%rbp), %r13
000000000001939f	movq	%r12, %rsi
00000000000193a2	movq	%r13, %rdx
00000000000193a5	callq	_proc_get_cpumon_params
00000000000193aa	movl	(%r13), %eax
00000000000193ae	orl	(%r12), %eax
00000000000193b2	je	0x193e0
00000000000193b4	callq	___error
00000000000193b9	movl	$0x10, (%rax)
00000000000193bf	jmp	0x193cc
00000000000193c1	callq	___error
00000000000193c6	movl	$0x16, (%rax)
00000000000193cc	movl	$0xffffffff, %eax
00000000000193d1	addq	$0x28, %rsp
00000000000193d5	popq	%rbx
00000000000193d6	popq	%r12
00000000000193d8	popq	%r13
00000000000193da	popq	%r14
00000000000193dc	popq	%r15
00000000000193de	popq	%rbp
00000000000193df	retq
00000000000193e0	leaq	-0x48(%rbp), %r8
00000000000193e4	movl	$0x5, (%r8)
00000000000193eb	movl	%ebx, 0x4(%r8)
00000000000193ef	movslq	%r15d, %rax
00000000000193f2	movq	%rax, 0x8(%r8)
00000000000193f6	xorl	%eax, %eax
00000000000193f8	movq	%rax, 0x10(%r8)
00000000000193fc	movq	%rax, (%rsp)
0000000000019400	movl	$0x1, %edi
0000000000019405	movl	$0xa, %esi
000000000001940a	movl	$0x4, %edx
000000000001940f	movl	$0x3, %ecx
0000000000019414	movl	%r14d, %r9d
0000000000019417	callq	___process_policy
000000000001941c	testl	%eax, %eax
000000000001941e	jne	0x193d1
0000000000019420	movl	$0x2, %esi
0000000000019425	movl	$0x1000, %edx
000000000001942a	movl	%r14d, %edi
000000000001942d	callq	_proc_rlimit_control
0000000000019432	movl	%eax, %ebx
0000000000019434	movl	$0x0, %eax
0000000000019439	testl	%ebx, %ebx
000000000001943b	je	0x193d1
000000000001943d	movabsq	$0xff00000005, %rax
0000000000019447	leaq	-0x48(%rbp), %r8
000000000001944b	movq	%rax, (%r8)
000000000001944e	xorl	%eax, %eax
0000000000019450	movq	%rax, 0x10(%r8)
0000000000019454	movq	%rax, 0x8(%r8)
0000000000019458	movq	%rax, (%rsp)
000000000001945c	movl	$0x1, %edi
0000000000019461	movl	$0xa, %esi
0000000000019466	movl	$0x4, %edx
000000000001946b	movl	$0x3, %ecx
0000000000019470	movl	%r14d, %r9d
0000000000019473	callq	___process_policy
0000000000019478	movl	%ebx, %eax
000000000001947a	jmp	0x193d1
_proc_set_wakemon_params:
000000000001947f	pushq	%rbp
0000000000019480	movq	%rsp, %rbp
0000000000019483	subq	$0x10, %rsp
0000000000019487	leaq	-0x8(%rbp), %rdx
000000000001948b	movl	$0x1, (%rdx)
0000000000019491	movl	%esi, 0x4(%rdx)
0000000000019494	movl	$0x1, %esi
0000000000019499	callq	_proc_rlimit_control
000000000001949e	addq	$0x10, %rsp
00000000000194a2	popq	%rbp
00000000000194a3	retq
_proc_get_wakemon_params:
00000000000194a4	pushq	%rbp
00000000000194a5	movq	%rsp, %rbp
00000000000194a8	pushq	%r14
00000000000194aa	pushq	%rbx
00000000000194ab	subq	$0x10, %rsp
00000000000194af	movq	%rdx, %r14
00000000000194b2	movq	%rsi, %rbx
00000000000194b5	leaq	-0x18(%rbp), %rdx
00000000000194b9	movl	$0x4, (%rdx)
00000000000194bf	movl	$0x1, %esi
00000000000194c4	callq	_proc_rlimit_control
00000000000194c9	testl	%eax, %eax
00000000000194cb	jne	0x194d8
00000000000194cd	movl	-0x14(%rbp), %ecx
00000000000194d0	movl	%ecx, (%rbx)
00000000000194d2	movl	-0x18(%rbp), %ecx
00000000000194d5	movl	%ecx, (%r14)
00000000000194d8	addq	$0x10, %rsp
00000000000194dc	popq	%rbx
00000000000194dd	popq	%r14
00000000000194df	popq	%rbp
00000000000194e0	retq
_proc_list_uptrs:
00000000000194e1	movl	%edx, %r9d
00000000000194e4	movq	%rsi, %rax
00000000000194e7	movl	%edi, %esi
00000000000194e9	movl	$0x2, %edi
00000000000194ee	movl	$0x1a, %edx
00000000000194f3	xorl	%ecx, %ecx
00000000000194f5	movq	%rax, %r8
00000000000194f8	jmp	___proc_info
_proc_list_dynkqueueids:
00000000000194fd	movl	%edx, %r9d
0000000000019500	movq	%rsi, %rax
0000000000019503	movl	%edi, %esi
0000000000019505	movl	$0x2, %edi
000000000001950a	movl	$0x1b, %edx
000000000001950f	xorl	%ecx, %ecx
0000000000019511	movq	%rax, %r8
0000000000019514	jmp	___proc_info
_proc_setcpu_percentage:
0000000000019519	pushq	%rbp
000000000001951a	movq	%rsp, %rbp
000000000001951d	pushq	%rbx
000000000001951e	subq	$0x28, %rsp
0000000000019522	movl	%edi, %eax
0000000000019524	xorl	%ebx, %ebx
0000000000019526	leaq	-0x20(%rbp), %r8
000000000001952a	movq	%rbx, 0x10(%r8)
000000000001952e	movq	%rbx, 0x8(%r8)
0000000000019532	movl	%esi, (%r8)
0000000000019535	movl	%edx, 0x4(%r8)
0000000000019539	movq	%rbx, (%rsp)
000000000001953d	movl	$0x1, %edi
0000000000019542	movl	$0x1, %esi
0000000000019547	movl	$0x4, %edx
000000000001954c	movl	$0x3, %ecx
0000000000019551	movl	%eax, %r9d
0000000000019554	callq	___process_policy
0000000000019559	cmpl	$-0x1, %eax
000000000001955c	jne	0x19565
000000000001955e	callq	___error
0000000000019563	movl	(%rax), %ebx
0000000000019565	movl	%ebx, %eax
0000000000019567	addq	$0x28, %rsp
000000000001956b	popq	%rbx
000000000001956c	popq	%rbp
000000000001956d	retq
_proc_reset_footprint_interval:
000000000001956e	movl	$0x4, %esi
0000000000019573	movl	$0x1, %edx
0000000000019578	jmp	_proc_rlimit_control
_proc_clear_cpulimits:
000000000001957d	pushq	%rbp
000000000001957e	movq	%rsp, %rbp
0000000000019581	pushq	%rbx
0000000000019582	pushq	%rax
0000000000019583	movl	%edi, %eax
0000000000019585	movq	$0x0, (%rsp)
000000000001958d	xorl	%ebx, %ebx
000000000001958f	movl	$0x1, %edi
0000000000019594	movl	$0x2, %esi
0000000000019599	movl	$0x4, %edx
000000000001959e	movl	$0x3, %ecx
00000000000195a3	xorl	%r8d, %r8d
00000000000195a6	movl	%eax, %r9d
00000000000195a9	callq	___process_policy
00000000000195ae	cmpl	$-0x1, %eax
00000000000195b1	jne	0x195ba
00000000000195b3	callq	___error
00000000000195b8	movl	(%rax), %ebx
00000000000195ba	movl	%ebx, %eax
00000000000195bc	addq	$0x8, %rsp
00000000000195c0	popq	%rbx
00000000000195c1	popq	%rbp
00000000000195c2	retq
_proc_donate_importance_boost:
00000000000195c3	pushq	%rbp
00000000000195c4	movq	%rsp, %rbp
00000000000195c7	pushq	%rbx
00000000000195c8	pushq	%rax
00000000000195c9	callq	_getpid
00000000000195ce	movq	$0x0, (%rsp)
00000000000195d6	xorl	%ebx, %ebx
00000000000195d8	movl	$0x1, %edi
00000000000195dd	movl	$0xa, %esi
00000000000195e2	movl	$0x7, %edx
00000000000195e7	movl	$0x3, %ecx
00000000000195ec	xorl	%r8d, %r8d
00000000000195ef	movl	%eax, %r9d
00000000000195f2	callq	___process_policy
00000000000195f7	testl	%eax, %eax
00000000000195f9	je	0x19602
00000000000195fb	callq	___error
0000000000019600	movl	(%rax), %ebx
0000000000019602	movl	%ebx, %eax
0000000000019604	addq	$0x8, %rsp
0000000000019608	popq	%rbx
0000000000019609	popq	%rbp
000000000001960a	retq
_proc_clear_vmpressure:
000000000001960b	pushq	%rbp
000000000001960c	movq	%rsp, %rbp
000000000001960f	pushq	%rbx
0000000000019610	pushq	%rax
0000000000019611	movl	%edi, %eax
0000000000019613	movq	$0x0, (%rsp)
000000000001961b	xorl	%ebx, %ebx
000000000001961d	movl	$0x1, %edi
0000000000019622	movl	$0x2, %esi
0000000000019627	movl	$0x3, %edx
000000000001962c	movl	$0x1, %ecx
0000000000019631	xorl	%r8d, %r8d
0000000000019634	movl	%eax, %r9d
0000000000019637	callq	___process_policy
000000000001963c	cmpl	$-0x1, %eax
000000000001963f	jne	0x19648
0000000000019641	callq	___error
0000000000019646	movl	(%rax), %ebx
0000000000019648	movl	%ebx, %eax
000000000001964a	addq	$0x8, %rsp
000000000001964e	popq	%rbx
000000000001964f	popq	%rbp
0000000000019650	retq
_proc_set_owner_vmpressure:
0000000000019651	pushq	%rbp
0000000000019652	movq	%rsp, %rbp
0000000000019655	pushq	%rbx
0000000000019656	pushq	%rax
0000000000019657	callq	_getpid
000000000001965c	xorl	%ebx, %ebx
000000000001965e	movl	$0x5, %edi
0000000000019663	movl	$0x3, %edx
0000000000019668	xorl	%ecx, %ecx
000000000001966a	xorl	%r8d, %r8d
000000000001966d	xorl	%r9d, %r9d
0000000000019670	movl	%eax, %esi
0000000000019672	callq	___proc_info
0000000000019677	cmpl	$-0x1, %eax
000000000001967a	jne	0x19683
000000000001967c	callq	___error
0000000000019681	movl	(%rax), %ebx
0000000000019683	movl	%ebx, %eax
0000000000019685	addq	$0x8, %rsp
0000000000019689	popq	%rbx
000000000001968a	popq	%rbp
000000000001968b	retq
_proc_set_delayidlesleep:
000000000001968c	pushq	%rbp
000000000001968d	movq	%rsp, %rbp
0000000000019690	pushq	%rbx
0000000000019691	pushq	%rax
0000000000019692	callq	_getpid
0000000000019697	xorl	%ebx, %ebx
0000000000019699	movl	$0x5, %edi
000000000001969e	movl	$0x4, %edx
00000000000196a3	movl	$0x1, %ecx
00000000000196a8	xorl	%r8d, %r8d
00000000000196ab	xorl	%r9d, %r9d
00000000000196ae	movl	%eax, %esi
00000000000196b0	callq	___proc_info
00000000000196b5	cmpl	$-0x1, %eax
00000000000196b8	jne	0x196c1
00000000000196ba	callq	___error
00000000000196bf	movl	(%rax), %ebx
00000000000196c1	movl	%ebx, %eax
00000000000196c3	addq	$0x8, %rsp
00000000000196c7	popq	%rbx
00000000000196c8	popq	%rbp
00000000000196c9	retq
_proc_clear_delayidlesleep:
00000000000196ca	pushq	%rbp
00000000000196cb	movq	%rsp, %rbp
00000000000196ce	pushq	%rbx
00000000000196cf	pushq	%rax
00000000000196d0	callq	_getpid
00000000000196d5	xorl	%ebx, %ebx
00000000000196d7	movl	$0x5, %edi
00000000000196dc	movl	$0x4, %edx
00000000000196e1	xorl	%ecx, %ecx
00000000000196e3	xorl	%r8d, %r8d
00000000000196e6	xorl	%r9d, %r9d
00000000000196e9	movl	%eax, %esi
00000000000196eb	callq	___proc_info
00000000000196f0	cmpl	$-0x1, %eax
00000000000196f3	jne	0x196fc
00000000000196f5	callq	___error
00000000000196fa	movl	(%rax), %ebx
00000000000196fc	movl	%ebx, %eax
00000000000196fe	addq	$0x8, %rsp
0000000000019702	popq	%rbx
0000000000019703	popq	%rbp
0000000000019704	retq
_proc_disable_apptype:
0000000000019705	pushq	%rbp
0000000000019706	movq	%rsp, %rbp
0000000000019709	pushq	%rbx
000000000001970a	pushq	%rax
000000000001970b	movl	%esi, %eax
000000000001970d	leal	-0x1(%rax), %ecx
0000000000019710	movl	$0x16, %ebx
0000000000019715	cmpl	$0x1, %ecx
0000000000019718	ja	0x1974c
000000000001971a	movl	%edi, %r9d
000000000001971d	movq	$0x0, (%rsp)
0000000000019725	xorl	%ebx, %ebx
0000000000019727	movl	$0x1, %edi
000000000001972c	movl	$0x6, %esi
0000000000019731	movl	$0x6, %edx
0000000000019736	xorl	%r8d, %r8d
0000000000019739	movl	%eax, %ecx
000000000001973b	callq	___process_policy
0000000000019740	cmpl	$-0x1, %eax
0000000000019743	jne	0x1974c
0000000000019745	callq	___error
000000000001974a	movl	(%rax), %ebx
000000000001974c	movl	%ebx, %eax
000000000001974e	addq	$0x8, %rsp
0000000000019752	popq	%rbx
0000000000019753	popq	%rbp
0000000000019754	retq
_proc_enable_apptype:
0000000000019755	pushq	%rbp
0000000000019756	movq	%rsp, %rbp
0000000000019759	pushq	%rbx
000000000001975a	pushq	%rax
000000000001975b	movl	%esi, %eax
000000000001975d	leal	-0x1(%rax), %ecx
0000000000019760	movl	$0x16, %ebx
0000000000019765	cmpl	$0x1, %ecx
0000000000019768	ja	0x1979c
000000000001976a	movl	%edi, %r9d
000000000001976d	movq	$0x0, (%rsp)
0000000000019775	xorl	%ebx, %ebx
0000000000019777	movl	$0x1, %edi
000000000001977c	movl	$0x5, %esi
0000000000019781	movl	$0x6, %edx
0000000000019786	xorl	%r8d, %r8d
0000000000019789	movl	%eax, %ecx
000000000001978b	callq	___process_policy
0000000000019790	cmpl	$-0x1, %eax
0000000000019793	jne	0x1979c
0000000000019795	callq	___error
000000000001979a	movl	(%rax), %ebx
000000000001979c	movl	%ebx, %eax
000000000001979e	addq	$0x8, %rsp
00000000000197a2	popq	%rbx
00000000000197a3	popq	%rbp
00000000000197a4	retq
_proc_suppress:
00000000000197a5	xorl	%eax, %eax
00000000000197a7	retq
__getprivatesystemidentifier:
00000000000197a8	movl	$0x1, %edx
00000000000197ad	jmp	___gethostuuid
__register_gethostuuid_callback:
00000000000197b2	xorl	%ecx, %ecx
00000000000197b4	xorl	%eax, %eax
00000000000197b6	lock
00000000000197b7	cmpxchgq	%rdi, __gethostuuid_callback(%rip)
00000000000197bf	movl	$0x16, %eax
00000000000197c4	cmovel	%ecx, %eax
00000000000197c7	retq
_mach_boottime_usec:
00000000000197c8	movabsq	$0x7fffffe000c8, %rax
00000000000197d2	movq	(%rax), %rax
00000000000197d5	retq
_futimens:
00000000000197d6	pushq	%rbp
00000000000197d7	movq	%rsp, %rbp
00000000000197da	pushq	%r15
00000000000197dc	pushq	%r14
00000000000197de	pushq	%r12
00000000000197e0	pushq	%rbx
00000000000197e1	subq	$0x60, %rsp
00000000000197e5	movl	%edi, %r14d
00000000000197e8	testq	%rsi, %rsi
00000000000197eb	je	0x1980e
00000000000197ed	movq	0x18(%rsi), %rax
00000000000197f1	movq	%rax, -0x28(%rbp)
00000000000197f5	movq	0x10(%rsi), %rax
00000000000197f9	movq	%rax, -0x30(%rbp)
00000000000197fd	movq	(%rsi), %rax
0000000000019800	movq	0x8(%rsi), %rcx
0000000000019804	movq	%rcx, -0x38(%rbp)
0000000000019808	movq	%rax, -0x40(%rbp)
000000000001980c	jmp	0x19824
000000000001980e	movaps	0x6d3b(%rip), %xmm0
0000000000019815	movaps	%xmm0, -0x30(%rbp)
0000000000019819	movaps	_times_now(%rip), %xmm0
0000000000019820	movaps	%xmm0, -0x40(%rbp)
0000000000019824	leaq	-0x48(%rbp), %r15
0000000000019828	movq	$0x0, (%r15)
000000000001982f	xorps	%xmm0, %xmm0
0000000000019832	leaq	-0x80(%rbp), %r12
0000000000019836	movaps	%xmm0, 0x10(%r12)
000000000001983c	movaps	%xmm0, (%r12)
0000000000019841	movq	0x6d28(%rip), %rax
0000000000019848	leaq	-0x60(%rbp), %rbx
000000000001984c	movq	%rax, 0x10(%rbx)
0000000000019850	movq	0x6d11(%rip), %rax
0000000000019857	movq	%rax, 0x8(%rbx)
000000000001985b	movq	0x6cfe(%rip), %rax
0000000000019862	movq	%rax, (%rbx)
0000000000019865	leaq	-0x40(%rbp), %rdi
0000000000019869	movq	%r12, %rsi
000000000001986c	movq	%r15, %rdx
000000000001986f	callq	_prepare_times_array_and_attrs
0000000000019874	movl	%eax, 0x4(%rbx)
0000000000019877	movq	(%r15), %rcx
000000000001987a	xorl	%r8d, %r8d
000000000001987d	movl	%r14d, %edi
0000000000019880	movq	%rbx, %rsi
0000000000019883	movq	%r12, %rdx
0000000000019886	callq	_fsetattrlist
000000000001988b	addq	$0x60, %rsp
000000000001988f	popq	%rbx
0000000000019890	popq	%r12
0000000000019892	popq	%r14
0000000000019894	popq	%r15
0000000000019896	popq	%rbp
0000000000019897	retq
_prepare_times_array_and_attrs:
0000000000019898	pushq	%rbp
0000000000019899	movq	%rsp, %rbp
000000000001989c	pushq	%r15
000000000001989e	pushq	%r14
00000000000198a0	pushq	%rbx
00000000000198a1	subq	$0x18, %rsp
00000000000198a5	movq	%rdx, %r14
00000000000198a8	movq	%rsi, %r15
00000000000198ab	movq	%rdi, %rbx
00000000000198ae	movq	0x8(%rdi), %rax
00000000000198b2	cmpq	$-0x2, %rax
00000000000198b6	je	0x198c8
00000000000198b8	cmpq	$-0x1, %rax
00000000000198bc	je	0x198e2
00000000000198be	leaq	0x18(%rbx), %rcx
00000000000198c2	movq	0x18(%rbx), %rdx
00000000000198c6	jmp	0x198dc
00000000000198c8	movq	0x18(%rbx), %rdx
00000000000198cc	xorl	%eax, %eax
00000000000198ce	cmpq	$-0x2, %rdx
00000000000198d2	je	0x19977
00000000000198d8	leaq	0x18(%rbx), %rcx
00000000000198dc	cmpq	$-0x1, %rdx
00000000000198e0	jne	0x1992a
00000000000198e2	leaq	-0x28(%rbp), %rdi
00000000000198e6	callq	___commpage_gettimeofday
00000000000198eb	testl	%eax, %eax
00000000000198ed	je	0x198fa
00000000000198ef	leaq	-0x28(%rbp), %rdi
00000000000198f3	xorl	%esi, %esi
00000000000198f5	callq	___gettimeofday
00000000000198fa	movq	-0x28(%rbp), %rax
00000000000198fe	movslq	-0x20(%rbp), %rcx
0000000000019902	imulq	$0x3e8, %rcx, %rdx
0000000000019909	cmpq	$-0x1, 0x8(%rbx)
000000000001990e	jne	0x19917
0000000000019910	movq	%rax, (%rbx)
0000000000019913	movq	%rdx, 0x8(%rbx)
0000000000019917	leaq	0x18(%rbx), %rcx
000000000001991b	cmpq	$-0x1, 0x18(%rbx)
0000000000019920	jne	0x1992a
0000000000019922	movq	%rax, 0x10(%rbx)
0000000000019926	movq	%rdx, 0x18(%rbx)
000000000001992a	movq	$0x0, (%r14)
0000000000019931	xorl	%eax, %eax
0000000000019933	cmpq	$-0x2, (%rcx)
0000000000019937	je	0x19959
0000000000019939	movq	0x10(%rbx), %rax
000000000001993d	movq	0x18(%rbx), %rcx
0000000000019941	movq	%rcx, 0x8(%r15)
0000000000019945	movq	%rax, (%r15)
0000000000019948	leaq	0x10(%r15), %r15
000000000001994c	movl	$0x10, %eax
0000000000019951	addq	%rax, (%r14)
0000000000019954	movl	$0x400, %eax
0000000000019959	cmpq	$-0x2, 0x8(%rbx)
000000000001995e	je	0x19977
0000000000019960	orl	$0x1000, %eax
0000000000019965	movq	(%rbx), %rcx
0000000000019968	movq	0x8(%rbx), %rdx
000000000001996c	movq	%rdx, 0x8(%r15)
0000000000019970	movq	%rcx, (%r15)
0000000000019973	addq	$0x10, (%r14)
0000000000019977	addq	$0x18, %rsp
000000000001997b	popq	%rbx
000000000001997c	popq	%r14
000000000001997e	popq	%r15
0000000000019980	popq	%rbp
0000000000019981	retq
_utimensat:
0000000000019982	pushq	%rbp
0000000000019983	movq	%rsp, %rbp
0000000000019986	pushq	%r15
0000000000019988	pushq	%r14
000000000001998a	pushq	%r13
000000000001998c	pushq	%r12
000000000001998e	pushq	%rbx
000000000001998f	subq	$0x68, %rsp
0000000000019993	movl	%ecx, %ebx
0000000000019995	movq	%rsi, -0x30(%rbp)
0000000000019999	movl	%edi, %r15d
000000000001999c	testq	%rdx, %rdx
000000000001999f	je	0x199c2
00000000000199a1	movq	0x18(%rdx), %rax
00000000000199a5	movq	%rax, -0x38(%rbp)
00000000000199a9	movq	0x10(%rdx), %rax
00000000000199ad	movq	%rax, -0x40(%rbp)
00000000000199b1	movq	(%rdx), %rax
00000000000199b4	movq	0x8(%rdx), %rcx
00000000000199b8	movq	%rcx, -0x48(%rbp)
00000000000199bc	movq	%rax, -0x50(%rbp)
00000000000199c0	jmp	0x199d8
00000000000199c2	movaps	0x6b87(%rip), %xmm0
00000000000199c9	movaps	%xmm0, -0x40(%rbp)
00000000000199cd	movaps	_times_now(%rip), %xmm0
00000000000199d4	movaps	%xmm0, -0x50(%rbp)
00000000000199d8	leaq	-0x58(%rbp), %r12
00000000000199dc	movq	$0x0, (%r12)
00000000000199e4	xorps	%xmm0, %xmm0
00000000000199e7	leaq	-0x90(%rbp), %r13
00000000000199ee	movaps	%xmm0, 0x10(%r13)
00000000000199f3	movaps	%xmm0, (%r13)
00000000000199f8	movq	0x6b71(%rip), %rax
00000000000199ff	leaq	-0x70(%rbp), %r14
0000000000019a03	movq	%rax, 0x10(%r14)
0000000000019a07	movq	0x6b5a(%rip), %rax
0000000000019a0e	movq	%rax, 0x8(%r14)
0000000000019a12	movq	0x6b47(%rip), %rax
0000000000019a19	movq	%rax, (%r14)
0000000000019a1c	leaq	-0x50(%rbp), %rdi
0000000000019a20	movq	%r13, %rsi
0000000000019a23	movq	%r12, %rdx
0000000000019a26	callq	_prepare_times_array_and_attrs
0000000000019a2b	movl	%eax, 0x4(%r14)
0000000000019a2f	shrl	$0x5, %ebx
0000000000019a32	andl	$0x1, %ebx
0000000000019a35	movq	(%r12), %r8
0000000000019a39	movl	%r15d, %edi
0000000000019a3c	movq	-0x30(%rbp), %rsi
0000000000019a40	movq	%r14, %rdx
0000000000019a43	movq	%r13, %rcx
0000000000019a46	movl	%ebx, %r9d
0000000000019a49	callq	_setattrlistat
0000000000019a4e	addq	$0x68, %rsp
0000000000019a52	popq	%rbx
0000000000019a53	popq	%r12
0000000000019a55	popq	%r13
0000000000019a57	popq	%r14
0000000000019a59	popq	%r15
0000000000019a5b	popq	%rbp
0000000000019a5c	retq
_thread_set_policy:
0000000000019a5d	pushq	%rbp
0000000000019a5e	movq	%rsp, %rbp
0000000000019a61	pushq	%rbx
0000000000019a62	pushq	%rax
0000000000019a63	movl	%edi, %ebx
0000000000019a65	movl	0x10(%rbp), %eax
0000000000019a68	movl	%eax, (%rsp)
0000000000019a6b	callq	__kernelrpc_thread_set_policy
0000000000019a70	cmpl	$0x33, %eax
0000000000019a73	je	0x19a80
0000000000019a75	testl	%eax, %eax
0000000000019a77	jne	0x19a82
0000000000019a79	movl	%ebx, %edi
0000000000019a7b	callq	__pthread_clear_qos_tsd
0000000000019a80	xorl	%eax, %eax
0000000000019a82	addq	$0x8, %rsp
0000000000019a86	popq	%rbx
0000000000019a87	popq	%rbp
0000000000019a88	retq
_thread_get_register_pointer_values:
0000000000019a89	pushq	%rbp
0000000000019a8a	movq	%rsp, %rbp
0000000000019a8d	pushq	%r15
0000000000019a8f	pushq	%r14
0000000000019a91	pushq	%r12
0000000000019a93	pushq	%rbx
0000000000019a94	subq	$0xb0, %rsp
0000000000019a9b	movl	$0x4, %eax
0000000000019aa0	testq	%rdx, %rdx
0000000000019aa3	je	0x19d0e
0000000000019aa9	movq	%rcx, %r15
0000000000019aac	movq	%rdx, %r14
0000000000019aaf	movq	%rsi, %rbx
0000000000019ab2	movq	(%rdx), %r12
0000000000019ab5	testq	%rcx, %rcx
0000000000019ab8	jne	0x19ac3
0000000000019aba	testq	%r12, %r12
0000000000019abd	jne	0x19d0e
0000000000019ac3	xorps	%xmm0, %xmm0
0000000000019ac6	leaq	-0xd0(%rbp), %rdx
0000000000019acd	movaps	%xmm0, 0x90(%rdx)
0000000000019ad4	movaps	%xmm0, 0x80(%rdx)
0000000000019adb	movaps	%xmm0, 0x70(%rdx)
0000000000019adf	movaps	%xmm0, 0x60(%rdx)
0000000000019ae3	movaps	%xmm0, 0x50(%rdx)
0000000000019ae7	movaps	%xmm0, 0x40(%rdx)
0000000000019aeb	movaps	%xmm0, 0x30(%rdx)
0000000000019aef	movaps	%xmm0, 0x20(%rdx)
0000000000019af3	movaps	%xmm0, 0x10(%rdx)
0000000000019af7	movaps	%xmm0, (%rdx)
0000000000019afa	movq	$0x0, 0xa0(%rdx)
0000000000019b05	leaq	-0x24(%rbp), %rcx
0000000000019b09	movl	$0x2a, (%rcx)
0000000000019b0f	movl	$0x4, %esi
0000000000019b14	callq	_thread_get_state
0000000000019b19	testl	%eax, %eax
0000000000019b1b	jne	0x19d0e
0000000000019b21	testq	%rbx, %rbx
0000000000019b24	je	0x19b40
0000000000019b26	movq	-0x98(%rbp), %rax
0000000000019b2d	xorl	%ecx, %ecx
0000000000019b2f	cmpq	$0x80, %rax
0000000000019b35	leaq	-0x80(%rax), %rax
0000000000019b39	cmovaq	%rax, %rcx
0000000000019b3d	movq	%rcx, (%rbx)
0000000000019b40	movq	-0xd0(%rbp), %rax
0000000000019b47	cmpq	$0x1001, %rax
0000000000019b4d	jb	0x19b68
0000000000019b4f	movl	$0x1, %ecx
0000000000019b54	testq	%r15, %r15
0000000000019b57	je	0x19b6a
0000000000019b59	testq	%r12, %r12
0000000000019b5c	je	0x19b6a
0000000000019b5e	movq	%rax, (%r15)
0000000000019b61	movl	$0x1, %ecx
0000000000019b66	jmp	0x19b6a
0000000000019b68	xorl	%ecx, %ecx
0000000000019b6a	movq	-0xc8(%rbp), %rax
0000000000019b71	cmpq	$0x1001, %rax
0000000000019b77	jb	0x19b8a
0000000000019b79	testq	%r15, %r15
0000000000019b7c	je	0x19b87
0000000000019b7e	cmpq	%r12, %rcx
0000000000019b81	jae	0x19b87
0000000000019b83	movq	%rax, (%r15,%rcx,8)
0000000000019b87	incq	%rcx
0000000000019b8a	movq	-0xc0(%rbp), %rax
0000000000019b91	cmpq	$0x1001, %rax
0000000000019b97	jb	0x19baa
0000000000019b99	testq	%r15, %r15
0000000000019b9c	je	0x19ba7
0000000000019b9e	cmpq	%r12, %rcx
0000000000019ba1	jae	0x19ba7
0000000000019ba3	movq	%rax, (%r15,%rcx,8)
0000000000019ba7	incq	%rcx
0000000000019baa	movq	-0xb8(%rbp), %rax
0000000000019bb1	cmpq	$0x1001, %rax
0000000000019bb7	jb	0x19bca
0000000000019bb9	testq	%r15, %r15
0000000000019bbc	je	0x19bc7
0000000000019bbe	cmpq	%r12, %rcx
0000000000019bc1	jae	0x19bc7
0000000000019bc3	movq	%rax, (%r15,%rcx,8)
0000000000019bc7	incq	%rcx
0000000000019bca	movq	-0xb0(%rbp), %rax
0000000000019bd1	cmpq	$0x1001, %rax
0000000000019bd7	jb	0x19bea
0000000000019bd9	testq	%r15, %r15
0000000000019bdc	je	0x19be7
0000000000019bde	cmpq	%r12, %rcx
0000000000019be1	jae	0x19be7
0000000000019be3	movq	%rax, (%r15,%rcx,8)
0000000000019be7	incq	%rcx
0000000000019bea	movq	-0xa0(%rbp), %rax
0000000000019bf1	cmpq	$0x1001, %rax
0000000000019bf7	jb	0x19c0a
0000000000019bf9	testq	%r15, %r15
0000000000019bfc	je	0x19c07
0000000000019bfe	cmpq	%r12, %rcx
0000000000019c01	jae	0x19c07
0000000000019c03	movq	%rax, (%r15,%rcx,8)
0000000000019c07	incq	%rcx
0000000000019c0a	movq	-0x90(%rbp), %rax
0000000000019c11	cmpq	$0x1001, %rax
0000000000019c17	jb	0x19c2a
0000000000019c19	testq	%r15, %r15
0000000000019c1c	je	0x19c27
0000000000019c1e	cmpq	%r12, %rcx
0000000000019c21	jae	0x19c27
0000000000019c23	movq	%rax, (%r15,%rcx,8)
0000000000019c27	incq	%rcx
0000000000019c2a	movq	-0x88(%rbp), %rax
0000000000019c31	cmpq	$0x1001, %rax
0000000000019c37	jb	0x19c4a
0000000000019c39	testq	%r15, %r15
0000000000019c3c	je	0x19c47
0000000000019c3e	cmpq	%r12, %rcx
0000000000019c41	jae	0x19c47
0000000000019c43	movq	%rax, (%r15,%rcx,8)
0000000000019c47	incq	%rcx
0000000000019c4a	movq	-0x80(%rbp), %rax
0000000000019c4e	cmpq	$0x1001, %rax
0000000000019c54	jb	0x19c67
0000000000019c56	testq	%r15, %r15
0000000000019c59	je	0x19c64
0000000000019c5b	cmpq	%r12, %rcx
0000000000019c5e	jae	0x19c64
0000000000019c60	movq	%rax, (%r15,%rcx,8)
0000000000019c64	incq	%rcx
0000000000019c67	movq	-0x78(%rbp), %rax
0000000000019c6b	cmpq	$0x1001, %rax
0000000000019c71	jb	0x19c84
0000000000019c73	testq	%r15, %r15
0000000000019c76	je	0x19c81
0000000000019c78	cmpq	%r12, %rcx
0000000000019c7b	jae	0x19c81
0000000000019c7d	movq	%rax, (%r15,%rcx,8)
0000000000019c81	incq	%rcx
0000000000019c84	movq	-0x70(%rbp), %rax
0000000000019c88	cmpq	$0x1001, %rax
0000000000019c8e	jb	0x19ca1
0000000000019c90	testq	%r15, %r15
0000000000019c93	je	0x19c9e
0000000000019c95	cmpq	%r12, %rcx
0000000000019c98	jae	0x19c9e
0000000000019c9a	movq	%rax, (%r15,%rcx,8)
0000000000019c9e	incq	%rcx
0000000000019ca1	movq	-0x68(%rbp), %rax
0000000000019ca5	cmpq	$0x1001, %rax
0000000000019cab	jb	0x19cbe
0000000000019cad	testq	%r15, %r15
0000000000019cb0	je	0x19cbb
0000000000019cb2	cmpq	%r12, %rcx
0000000000019cb5	jae	0x19cbb
0000000000019cb7	movq	%rax, (%r15,%rcx,8)
0000000000019cbb	incq	%rcx
0000000000019cbe	movq	-0x60(%rbp), %rax
0000000000019cc2	cmpq	$0x1001, %rax
0000000000019cc8	jb	0x19cdb
0000000000019cca	testq	%r15, %r15
0000000000019ccd	je	0x19cd8
0000000000019ccf	cmpq	%r12, %rcx
0000000000019cd2	jae	0x19cd8
0000000000019cd4	movq	%rax, (%r15,%rcx,8)
0000000000019cd8	incq	%rcx
0000000000019cdb	movq	-0x58(%rbp), %rax
0000000000019cdf	cmpq	$0x1001, %rax
0000000000019ce5	jb	0x19cf8
0000000000019ce7	testq	%r15, %r15
0000000000019cea	je	0x19cf5
0000000000019cec	cmpq	%r12, %rcx
0000000000019cef	jae	0x19cf5
0000000000019cf1	movq	%rax, (%r15,%rcx,8)
0000000000019cf5	incq	%rcx
0000000000019cf8	xorl	%eax, %eax
0000000000019cfa	cmpq	%r12, %rcx
0000000000019cfd	movl	$0x34, %edx
0000000000019d02	cmoval	%edx, %eax
0000000000019d05	movq	%rcx, (%r14)
0000000000019d08	testq	%r12, %r12
0000000000019d0b	cmovel	%edx, %eax
0000000000019d0e	addq	$0xb0, %rsp
0000000000019d15	popq	%rbx
0000000000019d16	popq	%r12
0000000000019d18	popq	%r14
0000000000019d1a	popq	%r15
0000000000019d1c	popq	%rbp
0000000000019d1d	retq
_renameatx_np:
0000000000019d1e	pushq	%rbp
0000000000019d1f	movq	%rsp, %rbp
0000000000019d22	pushq	%rbx
0000000000019d23	pushq	%rax
0000000000019d24	callq	___renameatx_np
0000000000019d29	movl	%eax, %ebx
0000000000019d2b	testl	%eax, %eax
0000000000019d2d	jne	0x19d34
0000000000019d2f	callq	___inc_remove_counter
0000000000019d34	movl	%ebx, %eax
0000000000019d36	addq	$0x8, %rsp
0000000000019d3a	popq	%rbx
0000000000019d3b	popq	%rbp
0000000000019d3c	retq
_renamex_np:
0000000000019d3d	pushq	%rbp
0000000000019d3e	movq	%rsp, %rbp
0000000000019d41	pushq	%rbx
0000000000019d42	pushq	%rax
0000000000019d43	movl	%edx, %eax
0000000000019d45	movq	%rsi, %rcx
0000000000019d48	movq	%rdi, %rsi
0000000000019d4b	movl	$0xfffffffe, %edi
0000000000019d50	movl	$0xfffffffe, %edx
0000000000019d55	movl	%eax, %r8d
0000000000019d58	callq	___renameatx_np
0000000000019d5d	movl	%eax, %ebx
0000000000019d5f	testl	%eax, %eax
0000000000019d61	jne	0x19d68
0000000000019d63	callq	___inc_remove_counter
0000000000019d68	movl	%ebx, %eax
0000000000019d6a	addq	$0x8, %rsp
0000000000019d6e	popq	%rbx
0000000000019d6f	popq	%rbp
0000000000019d70	retq
_rename_ext:
0000000000019d71	jmp	_renamex_np
_posix_spawnattr_getflags:
0000000000019d76	movl	$0x16, %eax
0000000000019d7b	testq	%rdi, %rdi
0000000000019d7e	je	0x19d90
0000000000019d80	movq	(%rdi), %rcx
0000000000019d83	testq	%rcx, %rcx
0000000000019d86	je	0x19d90
0000000000019d88	movzwl	(%rcx), %eax
0000000000019d8b	movw	%ax, (%rsi)
0000000000019d8e	xorl	%eax, %eax
0000000000019d90	retq
_posix_spawnattr_getsigdefault:
0000000000019d91	movl	$0x16, %eax
0000000000019d96	testq	%rdi, %rdi
0000000000019d99	je	0x19daa
0000000000019d9b	movq	(%rdi), %rcx
0000000000019d9e	testq	%rcx, %rcx
0000000000019da1	je	0x19daa
0000000000019da3	movl	0x4(%rcx), %eax
0000000000019da6	movl	%eax, (%rsi)
0000000000019da8	xorl	%eax, %eax
0000000000019daa	retq
_posix_spawnattr_getpgroup:
0000000000019dab	movl	$0x16, %eax
0000000000019db0	testq	%rdi, %rdi
0000000000019db3	je	0x19dc4
0000000000019db5	movq	(%rdi), %rcx
0000000000019db8	testq	%rcx, %rcx
0000000000019dbb	je	0x19dc4
0000000000019dbd	movl	0xc(%rcx), %eax
0000000000019dc0	movl	%eax, (%rsi)
0000000000019dc2	xorl	%eax, %eax
0000000000019dc4	retq
_posix_spawnattr_getsigmask:
0000000000019dc5	movl	$0x16, %eax
0000000000019dca	testq	%rdi, %rdi
0000000000019dcd	je	0x19dde
0000000000019dcf	movq	(%rdi), %rcx
0000000000019dd2	testq	%rcx, %rcx
0000000000019dd5	je	0x19dde
0000000000019dd7	movl	0x8(%rcx), %eax
0000000000019dda	movl	%eax, (%rsi)
0000000000019ddc	xorl	%eax, %eax
0000000000019dde	retq
_posix_spawnattr_getbinpref_np:
0000000000019ddf	movl	$0x16, %eax
0000000000019de4	testq	%rdi, %rdi
0000000000019de7	je	0x19e1a
0000000000019de9	movq	(%rdi), %r8
0000000000019dec	testq	%r8, %r8
0000000000019def	je	0x19e1a
0000000000019df1	xorl	%eax, %eax
0000000000019df3	xorl	%r9d, %r9d
0000000000019df6	testq	%rsi, %rsi
0000000000019df9	je	0x19e12
0000000000019dfb	movl	0x10(%r8,%r9,4), %edi
0000000000019e00	movl	%edi, (%rdx,%r9,4)
0000000000019e04	incq	%r9
0000000000019e07	cmpq	$0x3, %r9
0000000000019e0b	ja	0x19e12
0000000000019e0d	cmpq	%rsi, %r9
0000000000019e10	jb	0x19dfb
0000000000019e12	testq	%rcx, %rcx
0000000000019e15	je	0x19e1a
0000000000019e17	movq	%r9, (%rcx)
0000000000019e1a	retq
_posix_spawnattr_getpcontrol_np:
0000000000019e1b	movl	$0x16, %eax
0000000000019e20	testq	%rdi, %rdi
0000000000019e23	je	0x19e34
0000000000019e25	movq	(%rdi), %rcx
0000000000019e28	testq	%rcx, %rcx
0000000000019e2b	je	0x19e34
0000000000019e2d	movl	0x20(%rcx), %eax
0000000000019e30	movl	%eax, (%rsi)
0000000000019e32	xorl	%eax, %eax
0000000000019e34	retq
_posix_spawnattr_getprocesstype_np:
0000000000019e35	movl	$0x16, %eax
0000000000019e3a	testq	%rdi, %rdi
0000000000019e3d	je	0x19e4e
0000000000019e3f	movq	(%rdi), %rcx
0000000000019e42	testq	%rcx, %rcx
0000000000019e45	je	0x19e4e
0000000000019e47	movl	0x24(%rcx), %eax
0000000000019e4a	movl	%eax, (%rsi)
0000000000019e4c	xorl	%eax, %eax
0000000000019e4e	retq
_posix_spawnattr_setpgroup:
0000000000019e4f	movl	$0x16, %eax
0000000000019e54	testq	%rdi, %rdi
0000000000019e57	je	0x19e66
0000000000019e59	movq	(%rdi), %rcx
0000000000019e5c	testq	%rcx, %rcx
0000000000019e5f	je	0x19e66
0000000000019e61	movl	%esi, 0xc(%rcx)
0000000000019e64	xorl	%eax, %eax
0000000000019e66	retq
_posix_spawnattr_setpcontrol_np:
0000000000019e67	movl	$0x16, %eax
0000000000019e6c	testq	%rdi, %rdi
0000000000019e6f	je	0x19e7e
0000000000019e71	movq	(%rdi), %rcx
0000000000019e74	testq	%rcx, %rcx
0000000000019e77	je	0x19e7e
0000000000019e79	movl	%esi, 0x20(%rcx)
0000000000019e7c	xorl	%eax, %eax
0000000000019e7e	retq
_posix_spawnattr_setprocesstype_np:
0000000000019e7f	movl	$0x16, %eax
0000000000019e84	testq	%rdi, %rdi
0000000000019e87	je	0x19e96
0000000000019e89	movq	(%rdi), %rcx
0000000000019e8c	testq	%rcx, %rcx
0000000000019e8f	je	0x19e96
0000000000019e91	movl	%esi, 0x24(%rcx)
0000000000019e94	xorl	%eax, %eax
0000000000019e96	retq
_posix_spawnattr_setcpumonitor:
0000000000019e97	movl	$0x16, %eax
0000000000019e9c	testq	%rdi, %rdi
0000000000019e9f	je	0x19eb3
0000000000019ea1	movq	(%rdi), %rcx
0000000000019ea4	testq	%rcx, %rcx
0000000000019ea7	je	0x19eb3
0000000000019ea9	movq	%rsi, 0x28(%rcx)
0000000000019ead	movq	%rdx, 0x30(%rcx)
0000000000019eb1	xorl	%eax, %eax
0000000000019eb3	retq
_posix_spawnattr_getcpumonitor:
0000000000019eb4	movl	$0x16, %eax
0000000000019eb9	testq	%rdi, %rdi
0000000000019ebc	je	0x19ed6
0000000000019ebe	movq	(%rdi), %rcx
0000000000019ec1	testq	%rcx, %rcx
0000000000019ec4	je	0x19ed6
0000000000019ec6	movq	0x28(%rcx), %rax
0000000000019eca	movq	%rax, (%rsi)
0000000000019ecd	movq	0x30(%rcx), %rax
0000000000019ed1	movq	%rax, (%rdx)
0000000000019ed4	xorl	%eax, %eax
0000000000019ed6	retq
_posix_spawnattr_setjetsam_ext:
0000000000019ed7	movl	$0x16, %eax
0000000000019edc	testq	%rdi, %rdi
0000000000019edf	je	0x19eff
0000000000019ee1	movq	(%rdi), %rdi
0000000000019ee4	testq	%rdi, %rdi
0000000000019ee7	je	0x19eff
0000000000019ee9	orl	$0x8000, %esi
0000000000019eef	movw	%si, 0x40(%rdi)
0000000000019ef3	movl	%edx, 0x44(%rdi)
0000000000019ef6	movl	%ecx, 0x48(%rdi)
0000000000019ef9	movl	%r8d, 0x4c(%rdi)
0000000000019efd	xorl	%eax, %eax
0000000000019eff	retq
_posix_spawnattr_set_threadlimit_ext:
0000000000019f00	movl	$0x16, %eax
0000000000019f05	testq	%rdi, %rdi
0000000000019f08	je	0x19f17
0000000000019f0a	movq	(%rdi), %rcx
0000000000019f0d	testq	%rcx, %rcx
0000000000019f10	je	0x19f17
0000000000019f12	movl	%esi, 0x60(%rcx)
0000000000019f15	xorl	%eax, %eax
0000000000019f17	retq
_posix_spawnattr_set_importancewatch_port_np:
0000000000019f18	pushq	%rbp
0000000000019f19	movq	%rsp, %rbp
0000000000019f1c	pushq	%r15
0000000000019f1e	pushq	%r14
0000000000019f20	pushq	%r13
0000000000019f22	pushq	%r12
0000000000019f24	pushq	%rbx
0000000000019f25	subq	$0x18, %rsp
0000000000019f29	movl	$0x16, %eax
0000000000019f2e	cmpl	$0x20, %esi
0000000000019f31	ja	0x19f85
0000000000019f33	xorl	%eax, %eax
0000000000019f35	testl	%esi, %esi
0000000000019f37	je	0x19f85
0000000000019f39	movq	%rdx, %r15
0000000000019f3c	movq	%rdi, %r13
0000000000019f3f	movslq	%esi, %rbx
0000000000019f42	movl	$0x1, %r14d
0000000000019f48	leaq	-0x40(%rbp), %r12
0000000000019f4c	movq	$0x3, -0x40(%rbp)
0000000000019f54	movl	-0x4(%r15,%r14,4), %eax
0000000000019f59	movl	%eax, -0x38(%rbp)
0000000000019f5c	movq	$0x0, -0x34(%rbp)
0000000000019f64	movl	$0x0, -0x2c(%rbp)
0000000000019f6b	movq	%r13, %rdi
0000000000019f6e	movq	%r12, %rsi
0000000000019f71	callq	_posix_spawn_appendportaction_np
0000000000019f76	testl	%eax, %eax
0000000000019f78	jne	0x19f83
0000000000019f7a	cmpq	%rbx, %r14
0000000000019f7d	leaq	0x1(%r14), %r14
0000000000019f81	jl	0x19f4c
0000000000019f83	xorl	%eax, %eax
0000000000019f85	addq	$0x18, %rsp
0000000000019f89	popq	%rbx
0000000000019f8a	popq	%r12
0000000000019f8c	popq	%r13
0000000000019f8e	popq	%r14
0000000000019f90	popq	%r15
0000000000019f92	popq	%rbp
0000000000019f93	retq
_posix_spawnattr_getmacpolicyinfo_np:
0000000000019f94	pushq	%rbp
0000000000019f95	movq	%rsp, %rbp
0000000000019f98	pushq	%r14
0000000000019f9a	pushq	%rbx
0000000000019f9b	movl	$0x16, %eax
0000000000019fa0	testq	%rdi, %rdi
0000000000019fa3	je	0x19ff0
0000000000019fa5	movq	%rdx, %rbx
0000000000019fa8	testq	%rdx, %rdx
0000000000019fab	je	0x19ff0
0000000000019fad	testq	%rsi, %rsi
0000000000019fb0	je	0x19ff0
0000000000019fb2	movq	%rcx, %r14
0000000000019fb5	movq	(%rdi), %rcx
0000000000019fb8	testq	%rcx, %rcx
0000000000019fbb	je	0x19ff0
0000000000019fbd	movq	0x78(%rcx), %rdi
0000000000019fc1	callq	_posix_spawnattr_macpolicyinfo_lookup
0000000000019fc6	testq	%rax, %rax
0000000000019fc9	je	0x19feb
0000000000019fcb	movq	%rax, %rcx
0000000000019fce	movq	0x80(%rax), %rax
0000000000019fd5	movq	%rax, (%rbx)
0000000000019fd8	xorl	%eax, %eax
0000000000019fda	testq	%r14, %r14
0000000000019fdd	je	0x19ff0
0000000000019fdf	movq	0x88(%rcx), %rcx
0000000000019fe6	movq	%rcx, (%r14)
0000000000019fe9	jmp	0x19ff0
0000000000019feb	movl	$0x3, %eax
0000000000019ff0	popq	%rbx
0000000000019ff1	popq	%r14
0000000000019ff3	popq	%rbp
0000000000019ff4	retq
_posix_spawnattr_macpolicyinfo_lookup:
0000000000019ff5	pushq	%rbp
0000000000019ff6	movq	%rsp, %rbp
0000000000019ff9	pushq	%r15
0000000000019ffb	pushq	%r14
0000000000019ffd	pushq	%r13
0000000000019fff	pushq	%r12
000000000001a001	pushq	%rbx
000000000001a002	pushq	%rax
000000000001a003	testq	%rdi, %rdi
000000000001a006	je	0x1a040
000000000001a008	movq	%rdi, %r13
000000000001a00b	movslq	0x4(%rdi), %r12
000000000001a00f	testq	%r12, %r12
000000000001a012	jle	0x1a040
000000000001a014	movq	%rsi, %r15
000000000001a017	addq	$0x8, %r13
000000000001a01b	xorl	%r14d, %r14d
000000000001a01e	xorl	%ebx, %ebx
000000000001a020	movq	%r13, %rdi
000000000001a023	movq	%r15, %rsi
000000000001a026	callq	_strcmp
000000000001a02b	testl	%eax, %eax
000000000001a02d	je	0x1a045
000000000001a02f	incq	%rbx
000000000001a032	addq	$0x90, %r13
000000000001a039	cmpq	%r12, %rbx
000000000001a03c	jl	0x1a020
000000000001a03e	jmp	0x1a048
000000000001a040	xorl	%r14d, %r14d
000000000001a043	jmp	0x1a048
000000000001a045	movq	%r13, %r14
000000000001a048	movq	%r14, %rax
000000000001a04b	addq	$0x8, %rsp
000000000001a04f	popq	%rbx
000000000001a050	popq	%r12
000000000001a052	popq	%r13
000000000001a054	popq	%r14
000000000001a056	popq	%r15
000000000001a058	popq	%rbp
000000000001a059	retq
_posix_spawnattr_setmacpolicyinfo_np:
000000000001a05a	pushq	%rbp
000000000001a05b	movq	%rsp, %rbp
000000000001a05e	pushq	%r15
000000000001a060	pushq	%r14
000000000001a062	pushq	%r13
000000000001a064	pushq	%r12
000000000001a066	pushq	%rbx
000000000001a067	subq	$0x18, %rsp
000000000001a06b	movl	$0x16, %ebx
000000000001a070	testq	%rdi, %rdi
000000000001a073	je	0x1a178
000000000001a079	movq	%rsi, %r13
000000000001a07c	testq	%rsi, %rsi
000000000001a07f	je	0x1a178
000000000001a085	movq	(%rdi), %r14
000000000001a088	testq	%r14, %r14
000000000001a08b	je	0x1a178
000000000001a091	movq	%rdx, %r15
000000000001a094	movq	%rcx, -0x38(%rbp)
000000000001a098	movq	0x78(%r14), %r12
000000000001a09c	movq	%r12, %rdi
000000000001a09f	movq	%r13, %rsi
000000000001a0a2	callq	_posix_spawnattr_macpolicyinfo_lookup
000000000001a0a7	testq	%rax, %rax
000000000001a0aa	je	0x1a0c3
000000000001a0ac	movq	%r15, 0x80(%rax)
000000000001a0b3	movq	-0x38(%rbp), %rcx
000000000001a0b7	movq	%rcx, 0x88(%rax)
000000000001a0be	jmp	0x1a176
000000000001a0c3	testq	%r12, %r12
000000000001a0c6	je	0x1a120
000000000001a0c8	movl	0x4(%r12), %esi
000000000001a0cd	cmpl	(%r12), %esi
000000000001a0d1	jne	0x1a13d
000000000001a0d3	movl	$0xc, %ebx
000000000001a0d8	addl	%esi, %esi
000000000001a0da	jo	0x1a178
000000000001a0e0	movslq	%esi, %rax
000000000001a0e3	movl	$0x90, %ecx
000000000001a0e8	mulq	%rcx
000000000001a0eb	seto	%dl
000000000001a0ee	addq	$0x8, %rax
000000000001a0f2	setb	%cl
000000000001a0f5	testb	%dl, %dl
000000000001a0f7	jne	0x1a178
000000000001a0f9	testb	%cl, %cl
000000000001a0fb	jne	0x1a178
000000000001a0fd	movl	%esi, -0x2c(%rbp)
000000000001a100	movq	%r12, %rdi
000000000001a103	movq	%rax, %rsi
000000000001a106	callq	_reallocf
000000000001a10b	movq	%rax, 0x78(%r14)
000000000001a10f	testq	%rax, %rax
000000000001a112	je	0x1a178
000000000001a114	movq	%rax, %r12
000000000001a117	movl	-0x2c(%rbp), %eax
000000000001a11a	movl	%eax, (%r12)
000000000001a11e	jmp	0x1a13d
000000000001a120	movl	$0x128, %edi
000000000001a125	callq	_malloc
000000000001a12a	movq	%rax, 0x78(%r14)
000000000001a12e	testq	%rax, %rax
000000000001a131	je	0x1a189
000000000001a133	movq	%rax, %r12
000000000001a136	movq	$0x2, (%rax)
000000000001a13d	movslq	0x4(%r12), %rax
000000000001a142	leaq	(%rax,%rax,8), %rax
000000000001a146	shlq	$0x4, %rax
000000000001a14a	leaq	0x8(%r12,%rax), %rbx
000000000001a14f	movl	$0x80, %edx
000000000001a154	movq	%rbx, %rdi
000000000001a157	movq	%r13, %rsi
000000000001a15a	callq	_strlcpy
000000000001a15f	movq	%r15, 0x80(%rbx)
000000000001a166	movq	-0x38(%rbp), %rax
000000000001a16a	movq	%rax, 0x88(%rbx)
000000000001a171	incl	0x4(%r12)
000000000001a176	xorl	%ebx, %ebx
000000000001a178	movl	%ebx, %eax
000000000001a17a	addq	$0x18, %rsp
000000000001a17e	popq	%rbx
000000000001a17f	popq	%r12
000000000001a181	popq	%r13
000000000001a183	popq	%r14
000000000001a185	popq	%r15
000000000001a187	popq	%rbp
000000000001a188	retq
000000000001a189	movl	$0xc, %ebx
000000000001a18e	jmp	0x1a178
_posix_spawnattr_setcoalition_np:
000000000001a190	pushq	%rbp
000000000001a191	movq	%rsp, %rbp
000000000001a194	pushq	%r15
000000000001a196	pushq	%r14
000000000001a198	pushq	%r12
000000000001a19a	pushq	%rbx
000000000001a19b	movl	$0x16, %eax
000000000001a1a0	testq	%rdi, %rdi
000000000001a1a3	je	0x1a209
000000000001a1a5	movl	%edx, %ebx
000000000001a1a7	cmpl	$0x1, %edx
000000000001a1aa	ja	0x1a209
000000000001a1ac	movq	(%rdi), %r12
000000000001a1af	testq	%r12, %r12
000000000001a1b2	je	0x1a209
000000000001a1b4	movl	%ecx, %r14d
000000000001a1b7	movq	%rsi, %r15
000000000001a1ba	movq	0x80(%r12), %rax
000000000001a1c2	testq	%rax, %rax
000000000001a1c5	jne	0x1a1f7
000000000001a1c7	movl	$0x30, %edi
000000000001a1cc	callq	_malloc
000000000001a1d1	testq	%rax, %rax
000000000001a1d4	je	0x1a212
000000000001a1d6	xorl	%ecx, %ecx
000000000001a1d8	movq	%rcx, 0x28(%rax)
000000000001a1dc	movq	%rcx, 0x20(%rax)
000000000001a1e0	movq	%rcx, 0x18(%rax)
000000000001a1e4	movq	%rcx, 0x10(%rax)
000000000001a1e8	movq	%rcx, 0x8(%rax)
000000000001a1ec	movq	%rcx, (%rax)
000000000001a1ef	movq	%rax, 0x80(%r12)
000000000001a1f7	movslq	%ebx, %rcx
000000000001a1fa	leaq	(%rcx,%rcx,2), %rcx
000000000001a1fe	movq	%r15, (%rax,%rcx,8)
000000000001a202	movl	%r14d, 0x8(%rax,%rcx,8)
000000000001a207	xorl	%eax, %eax
000000000001a209	popq	%rbx
000000000001a20a	popq	%r12
000000000001a20c	popq	%r14
000000000001a20e	popq	%r15
000000000001a210	popq	%rbp
000000000001a211	retq
000000000001a212	movl	$0xc, %eax
000000000001a217	jmp	0x1a209
_posix_spawnattr_set_qos_clamp_np:
000000000001a219	movl	$0x16, %eax
000000000001a21e	testq	%rdi, %rdi
000000000001a221	je	0x1a237
000000000001a223	cmpq	$0x3, %rsi
000000000001a227	ja	0x1a237
000000000001a229	movq	(%rdi), %rcx
000000000001a22c	testq	%rcx, %rcx
000000000001a22f	je	0x1a237
000000000001a231	movq	%rsi, 0x50(%rcx)
000000000001a235	xorl	%eax, %eax
000000000001a237	retq
_posix_spawnattr_get_qos_clamp_np:
000000000001a238	movl	$0x16, %eax
000000000001a23d	testq	%rdi, %rdi
000000000001a240	je	0x1a253
000000000001a242	movq	(%rdi), %rcx
000000000001a245	testq	%rcx, %rcx
000000000001a248	je	0x1a253
000000000001a24a	movq	0x50(%rcx), %rax
000000000001a24e	movq	%rax, (%rsi)
000000000001a251	xorl	%eax, %eax
000000000001a253	retq
_posix_spawnattr_set_darwin_role_np:
000000000001a254	movl	$0x16, %eax
000000000001a259	testq	%rdi, %rdi
000000000001a25c	je	0x1a26c
000000000001a25e	movq	(%rdi), %rcx
000000000001a261	testq	%rcx, %rcx
000000000001a264	je	0x1a26c
000000000001a266	movq	%rsi, 0x58(%rcx)
000000000001a26a	xorl	%eax, %eax
000000000001a26c	retq
_posix_spawnattr_get_darwin_role_np:
000000000001a26d	movl	$0x16, %eax
000000000001a272	testq	%rdi, %rdi
000000000001a275	je	0x1a288
000000000001a277	movq	(%rdi), %rcx
000000000001a27a	testq	%rcx, %rcx
000000000001a27d	je	0x1a288
000000000001a27f	movq	0x58(%rcx), %rax
000000000001a283	movq	%rax, (%rsi)
000000000001a286	xorl	%eax, %eax
000000000001a288	retq
_posix_spawnattr_set_persona_np:
000000000001a289	pushq	%rbp
000000000001a28a	movq	%rsp, %rbp
000000000001a28d	pushq	%r15
000000000001a28f	pushq	%r14
000000000001a291	pushq	%rbx
000000000001a292	pushq	%rax
000000000001a293	movl	$0x16, %eax
000000000001a298	testq	%rdi, %rdi
000000000001a29b	je	0x1a2e3
000000000001a29d	movl	%edx, %ebx
000000000001a29f	cmpl	$0x3, %edx
000000000001a2a2	ja	0x1a2e3
000000000001a2a4	movq	(%rdi), %r15
000000000001a2a7	testq	%r15, %r15
000000000001a2aa	je	0x1a2e3
000000000001a2ac	movl	%esi, %r14d
000000000001a2af	movq	0x88(%r15), %rax
000000000001a2b6	testq	%rax, %rax
000000000001a2b9	jne	0x1a2db
000000000001a2bb	movl	$0x58, %edi
000000000001a2c0	callq	_malloc
000000000001a2c5	testq	%rax, %rax
000000000001a2c8	je	0x1a2ee
000000000001a2ca	xorl	%ecx, %ecx
000000000001a2cc	movq	%rcx, 0x10(%rax)
000000000001a2d0	movq	%rcx, 0x8(%rax)
000000000001a2d4	movq	%rax, 0x88(%r15)
000000000001a2db	movl	%r14d, (%rax)
000000000001a2de	movl	%ebx, 0x4(%rax)
000000000001a2e1	xorl	%eax, %eax
000000000001a2e3	addq	$0x8, %rsp
000000000001a2e7	popq	%rbx
000000000001a2e8	popq	%r14
000000000001a2ea	popq	%r15
000000000001a2ec	popq	%rbp
000000000001a2ed	retq
000000000001a2ee	movl	$0xc, %eax
000000000001a2f3	jmp	0x1a2e3
_posix_spawnattr_set_persona_uid_np:
000000000001a2f5	movl	$0x16, %eax
000000000001a2fa	testq	%rdi, %rdi
000000000001a2fd	je	0x1a329
000000000001a2ff	movq	(%rdi), %rcx
000000000001a302	testq	%rcx, %rcx
000000000001a305	je	0x1a329
000000000001a307	movq	0x88(%rcx), %rcx
000000000001a30e	testq	%rcx, %rcx
000000000001a311	je	0x1a329
000000000001a313	movl	0x4(%rcx), %edx
000000000001a316	testb	$0x3, %dl
000000000001a319	je	0x1a329
000000000001a31b	movl	%esi, 0x8(%rcx)
000000000001a31e	orl	$0x10000, %edx
000000000001a324	movl	%edx, 0x4(%rcx)
000000000001a327	xorl	%eax, %eax
000000000001a329	retq
_posix_spawnattr_set_persona_gid_np:
000000000001a32a	movl	$0x16, %eax
000000000001a32f	testq	%rdi, %rdi
000000000001a332	je	0x1a35e
000000000001a334	movq	(%rdi), %rcx
000000000001a337	testq	%rcx, %rcx
000000000001a33a	je	0x1a35e
000000000001a33c	movq	0x88(%rcx), %rcx
000000000001a343	testq	%rcx, %rcx
000000000001a346	je	0x1a35e
000000000001a348	movl	0x4(%rcx), %edx
000000000001a34b	testb	$0x3, %dl
000000000001a34e	je	0x1a35e
000000000001a350	movl	%esi, 0xc(%rcx)
000000000001a353	orl	$0x20000, %edx
000000000001a359	movl	%edx, 0x4(%rcx)
000000000001a35c	xorl	%eax, %eax
000000000001a35e	retq
_posix_spawnattr_set_persona_groups_np:
000000000001a35f	movl	$0x16, %eax
000000000001a364	testq	%rdi, %rdi
000000000001a367	je	0x1a3be
000000000001a369	cmpl	$0x10, %esi
000000000001a36c	ja	0x1a3be
000000000001a36e	testq	%rdx, %rdx
000000000001a371	je	0x1a3be
000000000001a373	movq	(%rdi), %rdi
000000000001a376	testq	%rdi, %rdi
000000000001a379	je	0x1a3be
000000000001a37b	movq	0x88(%rdi), %r9
000000000001a382	testq	%r9, %r9
000000000001a385	je	0x1a3be
000000000001a387	movl	0x4(%r9), %r8d
000000000001a38b	testb	$0x3, %r8b
000000000001a38f	je	0x1a3be
000000000001a391	movl	%esi, 0x10(%r9)
000000000001a395	testl	%esi, %esi
000000000001a397	jle	0x1a3ad
000000000001a399	movl	%esi, %eax
000000000001a39b	xorl	%esi, %esi
000000000001a39d	movl	(%rdx,%rsi,4), %edi
000000000001a3a0	movl	%edi, 0x14(%r9,%rsi,4)
000000000001a3a5	incq	%rsi
000000000001a3a8	cmpq	%rsi, %rax
000000000001a3ab	jne	0x1a39d
000000000001a3ad	movl	%ecx, 0x54(%r9)
000000000001a3b1	orl	$0x40000, %r8d
000000000001a3b8	movl	%r8d, 0x4(%r9)
000000000001a3bc	xorl	%eax, %eax
000000000001a3be	retq
_posix_spawnattr_set_max_addr_np:
000000000001a3bf	movl	$0x16, %eax
000000000001a3c4	testq	%rdi, %rdi
000000000001a3c7	je	0x1a3d7
000000000001a3c9	movq	(%rdi), %rcx
000000000001a3cc	testq	%rcx, %rcx
000000000001a3cf	je	0x1a3d7
000000000001a3d1	movq	%rsi, 0x68(%rcx)
000000000001a3d5	xorl	%eax, %eax
000000000001a3d7	retq
_stackshot_config_create:
000000000001a3d8	pushq	%rbp
000000000001a3d9	movq	%rsp, %rbp
000000000001a3dc	movl	$0x30, %edi
000000000001a3e1	callq	_malloc
000000000001a3e6	testq	%rax, %rax
000000000001a3e9	je	0x1a401
000000000001a3eb	movl	$0xffffffff, (%rax)
000000000001a3f1	xorl	%ecx, %ecx
000000000001a3f3	movq	%rcx, 0x14(%rax)
000000000001a3f7	movq	%rcx, 0xc(%rax)
000000000001a3fb	movq	%rcx, 0x4(%rax)
000000000001a3ff	jmp	0x1a403
000000000001a401	xorl	%eax, %eax
000000000001a403	popq	%rbp
000000000001a404	retq
_stackshot_config_set_pid:
000000000001a405	testq	%rdi, %rdi
000000000001a408	je	0x1a40f
000000000001a40a	movl	%esi, (%rdi)
000000000001a40c	xorl	%eax, %eax
000000000001a40e	retq
000000000001a40f	movl	$0x16, %eax
000000000001a414	retq
_stackshot_config_set_flags:
000000000001a415	testq	%rdi, %rdi
000000000001a418	je	0x1a420
000000000001a41a	movl	%esi, 0x4(%rdi)
000000000001a41d	xorl	%eax, %eax
000000000001a41f	retq
000000000001a420	movl	$0x16, %eax
000000000001a425	retq
_stackshot_capture_with_config:
000000000001a426	pushq	%rbp
000000000001a427	movq	%rsp, %rbp
000000000001a42a	pushq	%r14
000000000001a42c	pushq	%rbx
000000000001a42d	movl	$0x16, %eax
000000000001a432	testq	%rdi, %rdi
000000000001a435	je	0x1a47f
000000000001a437	movq	%rdi, %rcx
000000000001a43a	cmpq	$0x0, 0x10(%rdi)
000000000001a43f	jne	0x1a47f
000000000001a441	leaq	0x10(%rcx), %r14
000000000001a445	movq	%r14, 0x20(%rcx)
000000000001a449	leaq	0x18(%rcx), %rbx
000000000001a44d	movq	%rbx, 0x28(%rcx)
000000000001a451	movl	$0x1, %edi
000000000001a456	movl	$0x30, %edx
000000000001a45b	movq	%rcx, %rsi
000000000001a45e	callq	___stack_snapshot_with_config
000000000001a463	testl	%eax, %eax
000000000001a465	je	0x1a47d
000000000001a467	callq	___error
000000000001a46c	movl	(%rax), %eax
000000000001a46e	movq	$0x0, (%r14)
000000000001a475	movl	$0x0, (%rbx)
000000000001a47b	jmp	0x1a47f
000000000001a47d	xorl	%eax, %eax
000000000001a47f	popq	%rbx
000000000001a480	popq	%r14
000000000001a482	popq	%rbp
000000000001a483	retq
_stackshot_config_get_stackshot_buffer:
000000000001a484	testq	%rdi, %rdi
000000000001a487	je	0x1a48e
000000000001a489	movq	0x10(%rdi), %rax
000000000001a48d	retq
000000000001a48e	xorl	%eax, %eax
000000000001a490	retq
_stackshot_config_get_stackshot_size:
000000000001a491	movl	$0xffffffff, %eax
000000000001a496	testq	%rdi, %rdi
000000000001a499	je	0x1a4a5
000000000001a49b	cmpq	$0x0, 0x10(%rdi)
000000000001a4a0	je	0x1a4a5
000000000001a4a2	movl	0x18(%rdi), %eax
000000000001a4a5	retq
_stackshot_config_set_size_hint:
000000000001a4a6	movl	$0xffffffff, %eax
000000000001a4ab	testq	%rdi, %rdi
000000000001a4ae	je	0x1a4b7
000000000001a4b0	cmpq	$0x0, 0x10(%rdi)
000000000001a4b5	je	0x1a4b8
000000000001a4b7	retq
000000000001a4b8	movl	%esi, 0x18(%rdi)
000000000001a4bb	xorl	%eax, %eax
000000000001a4bd	retq
_stackshot_config_set_delta_timestamp:
000000000001a4be	movl	$0xffffffff, %eax
000000000001a4c3	testq	%rdi, %rdi
000000000001a4c6	je	0x1a4cf
000000000001a4c8	cmpq	$0x0, 0x10(%rdi)
000000000001a4cd	je	0x1a4d0
000000000001a4cf	retq
000000000001a4d0	movq	%rsi, 0x8(%rdi)
000000000001a4d4	xorl	%eax, %eax
000000000001a4d6	retq
_stackshot_config_dealloc_buffer:
000000000001a4d7	testq	%rdi, %rdi
000000000001a4da	je	0x1a51c
000000000001a4dc	pushq	%rbp
000000000001a4dd	movq	%rsp, %rbp
000000000001a4e0	pushq	%rbx
000000000001a4e1	pushq	%rax
000000000001a4e2	movq	%rdi, %rbx
000000000001a4e5	movl	0x18(%rdi), %edx
000000000001a4e8	testq	%rdx, %rdx
000000000001a4eb	je	0x1a504
000000000001a4ed	movq	0x10(%rbx), %rsi
000000000001a4f1	testq	%rsi, %rsi
000000000001a4f4	je	0x1a504
000000000001a4f6	leaq	_mach_task_self_(%rip), %rax
000000000001a4fd	movl	(%rax), %edi
000000000001a4ff	callq	_mach_vm_deallocate
000000000001a504	movq	$0x0, 0x10(%rbx)
000000000001a50c	movl	$0x0, 0x18(%rbx)
000000000001a513	xorl	%eax, %eax
000000000001a515	addq	$0x8, %rsp
000000000001a519	popq	%rbx
000000000001a51a	popq	%rbp
000000000001a51b	retq
000000000001a51c	movl	$0x16, %eax
000000000001a521	retq
_stackshot_config_dealloc:
000000000001a522	testq	%rdi, %rdi
000000000001a525	je	0x1a568
000000000001a527	pushq	%rbp
000000000001a528	movq	%rsp, %rbp
000000000001a52b	pushq	%rbx
000000000001a52c	pushq	%rax
000000000001a52d	movq	%rdi, %rbx
000000000001a530	movl	0x18(%rdi), %edx
000000000001a533	testq	%rdx, %rdx
000000000001a536	je	0x1a54f
000000000001a538	movq	0x10(%rbx), %rsi
000000000001a53c	testq	%rsi, %rsi
000000000001a53f	je	0x1a54f
000000000001a541	leaq	_mach_task_self_(%rip), %rax
000000000001a548	movl	(%rax), %edi
000000000001a54a	callq	_mach_vm_deallocate
000000000001a54f	movq	$0x0, 0x10(%rbx)
000000000001a557	movq	%rbx, %rdi
000000000001a55a	callq	_free
000000000001a55f	xorl	%eax, %eax
000000000001a561	addq	$0x8, %rsp
000000000001a565	popq	%rbx
000000000001a566	popq	%rbp
000000000001a567	retq
000000000001a568	movl	$0x16, %eax
000000000001a56d	retq
_terminate_with_payload:
000000000001a56e	jmp	___terminate_with_payload
_abort_with_reason:
000000000001a573	pushq	%rbp
000000000001a574	movq	%rsp, %rbp
000000000001a577	movq	%rcx, %r9
000000000001a57a	movq	%rdx, %rax
000000000001a57d	xorl	%edx, %edx
000000000001a57f	xorl	%ecx, %ecx
000000000001a581	movq	%rax, %r8
000000000001a584	callq	_abort_with_payload_wrapper_internal
_abort_with_payload_wrapper_internal:
000000000001a589	pushq	%rbp
000000000001a58a	movq	%rsp, %rbp
000000000001a58d	pushq	%r15
000000000001a58f	pushq	%r14
000000000001a591	pushq	%r13
000000000001a593	pushq	%r12
000000000001a595	pushq	%rbx
000000000001a596	subq	$0x18, %rsp
000000000001a59a	movq	%r9, %rbx
000000000001a59d	movq	%r8, -0x30(%rbp)
000000000001a5a1	movl	%ecx, %r12d
000000000001a5a4	movq	%rdx, %r13
000000000001a5a7	movq	%rsi, %r14
000000000001a5aa	movl	%edi, %r15d
000000000001a5ad	leaq	-0x34(%rbp), %rsi
000000000001a5b1	movl	$0x20, (%rsi)
000000000001a5b7	movl	$0x2, %edi
000000000001a5bc	xorl	%edx, %edx
000000000001a5be	callq	_sigprocmask
000000000001a5c3	movl	%r15d, %edi
000000000001a5c6	movq	%r14, %rsi
000000000001a5c9	movq	%r13, %rdx
000000000001a5cc	movl	%r12d, %ecx
000000000001a5cf	movq	-0x30(%rbp), %r8
000000000001a5d3	movq	%rbx, %r9
000000000001a5d6	callq	___abort_with_payload
000000000001a5db	callq	_getpid
000000000001a5e0	orq	$0x200, %rbx
000000000001a5e7	movq	%rbx, (%rsp)
000000000001a5eb	movl	%eax, %edi
000000000001a5ed	movl	%r15d, %esi
000000000001a5f0	movq	%r14, %rdx
000000000001a5f3	movq	%r13, %rcx
000000000001a5f6	movl	%r12d, %r8d
000000000001a5f9	movq	-0x30(%rbp), %r9
000000000001a5fd	callq	_terminate_with_payload
000000000001a602	ud2
_abort_with_payload:
000000000001a604	pushq	%rbp
000000000001a605	movq	%rsp, %rbp
000000000001a608	callq	_abort_with_payload_wrapper_internal
_system_get_sfi_window:
000000000001a60d	movq	%rdi, %rax
000000000001a610	movl	$0x2, %edi
000000000001a615	xorl	%esi, %esi
000000000001a617	xorl	%edx, %edx
000000000001a619	movq	%rax, %rcx
000000000001a61c	jmp	___sfi_ctl
_sfi_get_class_offtime:
000000000001a621	movq	%rsi, %rax
000000000001a624	movl	%edi, %ecx
000000000001a626	movl	$0x4, %edi
000000000001a62b	xorl	%edx, %edx
000000000001a62d	movl	%ecx, %esi
000000000001a62f	movq	%rax, %rcx
000000000001a632	jmp	___sfi_ctl
_sfi_process_set_flags:
000000000001a637	movl	%esi, %eax
000000000001a639	movl	%edi, %edx
000000000001a63b	movl	$0x1, %edi
000000000001a640	xorl	%ecx, %ecx
000000000001a642	movl	%edx, %esi
000000000001a644	movl	%eax, %edx
000000000001a646	jmp	___sfi_pidctl
_sfi_process_get_flags:
000000000001a64b	movq	%rsi, %rax
000000000001a64e	movl	%edi, %ecx
000000000001a650	movl	$0x2, %edi
000000000001a655	xorl	%edx, %edx
000000000001a657	movl	%ecx, %esi
000000000001a659	movq	%rax, %rcx
000000000001a65c	jmp	___sfi_pidctl
000000000001a661	nop
000000000001a662	nop
000000000001a663	nop
_os_channel_create_extended:
000000000001a664	pushq	%rbp
000000000001a665	movq	%rsp, %rbp
000000000001a668	pushq	%r15
000000000001a66a	pushq	%r14
000000000001a66c	pushq	%r13
000000000001a66e	pushq	%r12
000000000001a670	pushq	%rbx
000000000001a671	subq	$0x98, %rsp
000000000001a678	cmpl	$0x2, %edx
000000000001a67b	ja	0x1a7b9
000000000001a681	movl	%ecx, %r13d
000000000001a684	movl	%edx, %r15d
000000000001a687	movl	%esi, %ebx
000000000001a689	movq	%rdi, %r12
000000000001a68c	movq	%r8, -0x38(%rbp)
000000000001a690	movl	$0x180, %edi
000000000001a695	callq	_malloc
000000000001a69a	testq	%rax, %rax
000000000001a69d	je	0x1a7b9
000000000001a6a3	movl	$0x180, %esi
000000000001a6a8	movq	%rax, -0x30(%rbp)
000000000001a6ac	movq	%rax, %rdi
000000000001a6af	callq	_bzero
000000000001a6b4	leaq	-0xc0(%rbp), %r14
000000000001a6bb	movl	$0x48, %esi
000000000001a6c0	movq	%r14, %rdi
000000000001a6c3	callq	_bzero
000000000001a6c8	movl	$0x1, (%r14)
000000000001a6cf	movq	-0x38(%rbp), %rsi
000000000001a6d3	testq	%rsi, %rsi
000000000001a6d6	je	0x1a74a
000000000001a6d8	cmpl	$0x0, 0x1c(%rsi)
000000000001a6dc	je	0x1a6e5
000000000001a6de	orb	$0x2, -0xbb(%rbp)
000000000001a6e5	cmpl	$0x0, 0x60(%rsi)
000000000001a6e9	je	0x1a6f2
000000000001a6eb	orb	$0x8, -0xbc(%rbp)
000000000001a6f2	cmpl	$0x0, 0x68(%rsi)
000000000001a6f6	je	0x1a6ff
000000000001a6f8	orb	$0x10, -0xbc(%rbp)
000000000001a6ff	movl	0x20(%rsi), %eax
000000000001a702	testl	%eax, %eax
000000000001a704	je	0x1a72b
000000000001a706	cmpl	$0x2, %r15d
000000000001a70a	ja	0x1a71f
000000000001a70c	movslq	%r15d, %rcx
000000000001a70f	leaq	0x5e62(%rip), %rdx
000000000001a716	movl	(%rdx,%rcx,4), %ecx
000000000001a719	orl	%ecx, -0xbc(%rbp)
000000000001a71f	cmpl	$0x1, %eax
000000000001a722	jne	0x1a72b
000000000001a724	orb	$0x4, -0xbc(%rbp)
000000000001a72b	movl	0x24(%rsi), %eax
000000000001a72e	movl	%eax, -0x98(%rbp)
000000000001a734	movq	0x28(%rsi), %rax
000000000001a738	movq	%rax, -0xa0(%rbp)
000000000001a73f	movups	0x30(%rsi), %xmm0
000000000001a743	movups	%xmm0, -0x90(%rbp)
000000000001a74a	leaq	-0xb0(%rbp), %rsi
000000000001a751	movl	%r13d, -0x8(%rsi)
000000000001a755	movl	%ebx, -0x4(%rsi)
000000000001a758	movl	$0x10, %edx
000000000001a75d	movq	%r12, %rdi
000000000001a760	callq	_bcopy
000000000001a765	leaq	-0xc0(%rbp), %rdi
000000000001a76c	movl	$0x48, %esi
000000000001a771	callq	___channel_open
000000000001a776	cmpl	$-0x1, %eax
000000000001a779	je	0x1a7a3
000000000001a77b	movl	%eax, %r12d
000000000001a77e	movl	$0x180, %edx
000000000001a783	movl	%eax, %edi
000000000001a785	movq	-0x30(%rbp), %rbx
000000000001a789	movq	%rbx, %rsi
000000000001a78c	callq	___channel_get_info
000000000001a791	testl	%eax, %eax
000000000001a793	je	0x1a7d1
000000000001a795	leaq	-0x80(%rbp), %rsi
000000000001a799	movl	%r12d, %edi
000000000001a79c	callq	_guarded_close_np
000000000001a7a1	jmp	0x1a7b1
000000000001a7a3	callq	___error
000000000001a7a8	cmpl	$0x0, (%rax)
000000000001a7ab	movq	-0x30(%rbp), %rbx
000000000001a7af	je	0x1a7b9
000000000001a7b1	movq	%rbx, %rdi
000000000001a7b4	callq	_free
000000000001a7b9	xorl	%r15d, %r15d
000000000001a7bc	movq	%r15, %rax
000000000001a7bf	addq	$0x98, %rsp
000000000001a7c6	popq	%rbx
000000000001a7c7	popq	%r12
000000000001a7c9	popq	%r13
000000000001a7cb	popq	%r14
000000000001a7cd	popq	%r15
000000000001a7cf	popq	%rbp
000000000001a7d0	retq
000000000001a7d1	movq	0x128(%rbx), %r13
000000000001a7d8	movl	0x130(%rbx), %ecx
000000000001a7de	movl	0x134(%rbx), %esi
000000000001a7e4	movl	0x138(%rbx), %r9d
000000000001a7eb	movl	0x13c(%rbx), %r8d
000000000001a7f2	xorl	%edi, %edi
000000000001a7f4	addq	0x120(%rbx), %r13
000000000001a7fb	testb	$0x8, -0xbc(%rbp)
000000000001a802	jne	0x1a9e9
000000000001a808	movl	$0x1, %edx
000000000001a80d	movl	$0x1, %ebx
000000000001a812	movl	%ecx, -0x58(%rbp)
000000000001a815	subl	%ecx, %ebx
000000000001a817	movq	%rsi, -0x48(%rbp)
000000000001a81b	addl	%esi, %ebx
000000000001a81d	movl	%r9d, -0x50(%rbp)
000000000001a821	subl	%r9d, %edx
000000000001a824	movq	%r8, -0x40(%rbp)
000000000001a828	addl	%r8d, %edx
000000000001a82b	movq	%rbx, -0x68(%rbp)
000000000001a82f	movq	%rdx, -0x60(%rbp)
000000000001a833	leal	(%rdx,%rbx), %eax
000000000001a836	movl	%edi, -0x70(%rbp)
000000000001a839	addl	%edi, %eax
000000000001a83b	leaq	(%rax,%rax,8), %rax
000000000001a83f	leaq	0x40(,%rax,8), %r14
000000000001a847	movq	%r14, %rdi
000000000001a84a	callq	_malloc
000000000001a84f	testq	%rax, %rax
000000000001a852	je	0x1aa12
000000000001a858	movq	%rax, %r15
000000000001a85b	movq	%rax, %rdi
000000000001a85e	movq	%r14, %rsi
000000000001a861	callq	_bzero
000000000001a866	movl	%r12d, (%r15)
000000000001a869	movq	-0x80(%rbp), %rax
000000000001a86d	movq	%rax, 0x8(%r15)
000000000001a871	movq	-0x30(%rbp), %rax
000000000001a875	movq	%rax, 0x10(%r15)
000000000001a879	movq	%r13, 0x18(%r15)
000000000001a87d	mfence
000000000001a880	movq	0x18(%r15), %rax
000000000001a884	cmpl	$0x8, (%rax)
000000000001a887	jne	0x1aa27
000000000001a88d	movl	0x138(%rax), %ecx
000000000001a893	movl	%ecx, 0x38(%r15)
000000000001a897	movl	0x13c(%rax), %ecx
000000000001a89d	movl	%ecx, 0x3c(%r15)
000000000001a8a1	movq	0x140(%rax), %rcx
000000000001a8a8	testq	%rcx, %rcx
000000000001a8ab	movq	-0x38(%rbp), %rsi
000000000001a8af	movq	-0x68(%rbp), %r13
000000000001a8b3	je	0x1a8c4
000000000001a8b5	movq	0x10(%r15), %rdx
000000000001a8b9	addq	0x120(%rdx), %rcx
000000000001a8c0	movq	%rcx, 0x20(%r15)
000000000001a8c4	movq	0x128(%rax), %rcx
000000000001a8cb	testq	%rcx, %rcx
000000000001a8ce	je	0x1a8df
000000000001a8d0	movq	0x10(%r15), %rdx
000000000001a8d4	addq	0x120(%rdx), %rcx
000000000001a8db	movq	%rcx, 0x28(%r15)
000000000001a8df	movq	0x150(%rax), %rax
000000000001a8e6	testq	%rax, %rax
000000000001a8e9	je	0x1a8fa
000000000001a8eb	movq	0x10(%r15), %rcx
000000000001a8ef	addq	0x120(%rcx), %rax
000000000001a8f6	movq	%rax, 0x30(%r15)
000000000001a8fa	testq	%rsi, %rsi
000000000001a8fd	je	0x1a907
000000000001a8ff	movq	%r15, %rdi
000000000001a902	callq	_os_channel_info2attr
000000000001a907	testl	%r13d, %r13d
000000000001a90a	je	0x1a933
000000000001a90c	leaq	0x40(%r15), %r14
000000000001a910	movl	%r13d, %r12d
000000000001a913	xorl	%ebx, %ebx
000000000001a915	movl	$0x1, %edx
000000000001a91a	movq	%r14, %rdi
000000000001a91d	movq	%r15, %rsi
000000000001a920	movl	%ebx, %ecx
000000000001a922	callq	_os_channel_init_ring
000000000001a927	incq	%rbx
000000000001a92a	addq	$0x48, %r14
000000000001a92e	cmpq	%rbx, %r12
000000000001a931	jne	0x1a915
000000000001a933	movq	-0x60(%rbp), %rax
000000000001a937	testl	%eax, %eax
000000000001a939	je	0x1a968
000000000001a93b	leaq	0x40(%r15), %r14
000000000001a93f	movl	%eax, %r12d
000000000001a942	movl	%r13d, %r13d
000000000001a945	xorl	%ebx, %ebx
000000000001a947	leal	(%r13,%rbx), %eax
000000000001a94c	leaq	(%rax,%rax,8), %rax
000000000001a950	leaq	(%r14,%rax,8), %rdi
000000000001a954	xorl	%edx, %edx
000000000001a956	movq	%r15, %rsi
000000000001a959	movl	%ebx, %ecx
000000000001a95b	callq	_os_channel_init_ring
000000000001a960	incq	%rbx
000000000001a963	cmpq	%rbx, %r12
000000000001a966	jne	0x1a947
000000000001a968	movl	-0x70(%rbp), %eax
000000000001a96b	testl	%eax, %eax
000000000001a96d	je	0x1a9b4
000000000001a96f	movq	%r15, %r14
000000000001a972	addq	$0x40, %r14
000000000001a976	movl	%eax, %r12d
000000000001a979	movq	-0x48(%rbp), %rax
000000000001a97d	movq	-0x40(%rbp), %rcx
000000000001a981	leal	0x2(%rcx,%rax), %r13d
000000000001a986	subl	-0x50(%rbp), %r13d
000000000001a98a	subl	-0x58(%rbp), %r13d
000000000001a98e	xorl	%ebx, %ebx
000000000001a990	leal	(%r13,%rbx), %eax
000000000001a995	leaq	(%rax,%rax,8), %rax
000000000001a999	leaq	(%r14,%rax,8), %rdi
000000000001a99d	movl	$0x2, %edx
000000000001a9a2	movq	%r15, %rsi
000000000001a9a5	movl	%ebx, %ecx
000000000001a9a7	callq	_os_channel_init_ring
000000000001a9ac	incq	%rbx
000000000001a9af	cmpq	%rbx, %r12
000000000001a9b2	jne	0x1a990
000000000001a9b4	testb	$0x8, -0xbc(%rbp)
000000000001a9bb	je	0x1a9c5
000000000001a9bd	movl	$0x3, 0x4(%r15)
000000000001a9c5	cmpq	$0x0, 0x112e3(%rip)
000000000001a9cd	jne	0x1a9e1
000000000001a9cf	movq	0x18(%r15), %rax
000000000001a9d3	movq	0x130(%rax), %rax
000000000001a9da	movq	%rax, ___os_ch_md_redzone_cookie(%rip)
000000000001a9e1	mfence
000000000001a9e4	jmp	0x1a7bc
000000000001a9e9	movl	$0x7fffffff, %eax
000000000001a9ee	andl	0x120(%r13), %eax
000000000001a9f5	cmpl	$0x1, %eax
000000000001a9f8	jne	0x1a795
000000000001a9fe	movl	$0x2, %edi
000000000001aa03	testb	$0x8, 0x10(%rbx)
000000000001aa07	je	0x1a795
000000000001aa0d	jmp	0x1a808
000000000001aa12	leaq	-0x80(%rbp), %rsi
000000000001aa16	movl	%r12d, %edi
000000000001aa19	callq	_guarded_close_np
000000000001aa1e	movq	-0x30(%rbp), %rbx
000000000001aa22	jmp	0x1a7b1
000000000001aa27	movl	$0x400, %edi
000000000001aa2c	callq	_malloc
000000000001aa31	movq	%rax, %r12
000000000001aa34	movq	0x18(%r15), %rax
000000000001aa38	movl	(%rax), %ecx
000000000001aa3a	movzbl	0x108(%rax), %edx
000000000001aa41	movq	%rdx, -0x38(%rbp)
000000000001aa45	movzbl	0x109(%rax), %edx
000000000001aa4c	movq	%rdx, -0x30(%rbp)
000000000001aa50	movzbl	0x10a(%rax), %edx
000000000001aa57	movq	%rdx, -0x70(%rbp)
000000000001aa5b	movzbl	0x10b(%rax), %edx
000000000001aa62	movq	%rdx, -0x68(%rbp)
000000000001aa66	movzbl	0x10c(%rax), %edx
000000000001aa6d	movq	%rdx, -0x60(%rbp)
000000000001aa71	movzbl	0x10d(%rax), %edx
000000000001aa78	movq	%rdx, -0x58(%rbp)
000000000001aa7c	movzbl	0x10e(%rax), %edx
000000000001aa83	movq	%rdx, -0x50(%rbp)
000000000001aa87	movzbl	0x10f(%rax), %edx
000000000001aa8e	movq	%rdx, -0x48(%rbp)
000000000001aa92	movzbl	0x110(%rax), %edx
000000000001aa99	movq	%rdx, -0x40(%rbp)
000000000001aa9d	movzbl	0x111(%rax), %edx
000000000001aaa4	movq	%rdx, -0x78(%rbp)
000000000001aaa8	movzbl	0x112(%rax), %r13d
000000000001aab0	movzbl	0x113(%rax), %ebx
000000000001aab7	movzbl	0x114(%rax), %r10d
000000000001aabf	movzbl	0x115(%rax), %r11d
000000000001aac7	movzbl	0x116(%rax), %r15d
000000000001aacf	movzbl	0x117(%rax), %r14d
000000000001aad7	leaq	0x8(%rax), %r9
000000000001aadb	leaq	0xabd3(%rip), %rdx ## literal pool for: "Schema region version mismatch: 0x%x != 0x%x\nKernel version: %s\nKernel UUID: %x%x%x%x-%x%x-%x%x-%x%x-%x%x%x%x%x%x"
000000000001aae2	movl	$0x400, %esi
000000000001aae7	movl	$0x8, %r8d
000000000001aaed	movl	$0x0, %eax
000000000001aaf2	movq	%r12, %rdi
000000000001aaf5	pushq	%r14
000000000001aaf7	pushq	%r15
000000000001aaf9	pushq	%r11
000000000001aafb	pushq	%r10
000000000001aafd	pushq	%rbx
000000000001aafe	pushq	%r13
000000000001ab00	pushq	-0x78(%rbp)
000000000001ab03	pushq	-0x40(%rbp)
000000000001ab06	pushq	-0x48(%rbp)
000000000001ab09	pushq	-0x50(%rbp)
000000000001ab0c	pushq	-0x58(%rbp)
000000000001ab0f	pushq	-0x60(%rbp)
000000000001ab12	pushq	-0x68(%rbp)
000000000001ab15	pushq	-0x70(%rbp)
000000000001ab18	pushq	-0x30(%rbp)
000000000001ab1b	pushq	-0x38(%rbp)
000000000001ab1e	callq	__mach_snprintf
000000000001ab23	addq	$0x80, %rsp
000000000001ab2a	movq	%r12, 0x10a77(%rip)
000000000001ab31	ud2
_os_channel_info2attr:
000000000001ab33	pushq	%rbp
000000000001ab34	movq	%rsp, %rbp
000000000001ab37	pushq	%r15
000000000001ab39	pushq	%r14
000000000001ab3b	pushq	%r13
000000000001ab3d	pushq	%r12
000000000001ab3f	pushq	%rbx
000000000001ab40	pushq	%rax
000000000001ab41	movq	%rsi, %rbx
000000000001ab44	movq	%rdi, %r14
000000000001ab47	movq	0x10(%rdi), %r15
000000000001ab4b	movl	0x24(%rsi), %r12d
000000000001ab4f	movq	0x28(%rsi), %r13
000000000001ab53	movl	$0x70, %esi
000000000001ab58	movq	%rbx, %rdi
000000000001ab5b	callq	_bzero
000000000001ab60	movq	0x10(%r14), %rcx
000000000001ab64	movups	0x98(%rcx), %xmm0
000000000001ab6b	movups	%xmm0, (%rbx)
000000000001ab6e	movl	0xa8(%rcx), %eax
000000000001ab74	movl	%eax, 0x10(%rbx)
000000000001ab77	movl	0xac(%rcx), %eax
000000000001ab7d	movl	%eax, 0x14(%rbx)
000000000001ab80	movl	0xb0(%rcx), %eax
000000000001ab86	movl	%eax, 0x18(%rbx)
000000000001ab89	movl	0xc4(%rcx), %eax
000000000001ab8f	movl	%eax, 0x50(%rbx)
000000000001ab92	movl	0x10(%r15), %eax
000000000001ab96	movl	%eax, %edx
000000000001ab98	shrl	$0x9, %edx
000000000001ab9b	andl	$0x1, %edx
000000000001ab9e	movl	%edx, 0x1c(%rbx)
000000000001aba1	movl	%eax, %edx
000000000001aba3	shrl	$0x3, %edx
000000000001aba6	andl	$0x1, %edx
000000000001aba9	movl	%edx, 0x60(%rbx)
000000000001abac	movl	%eax, %edx
000000000001abae	shrl	$0x4, %edx
000000000001abb1	andl	$0x1, %edx
000000000001abb4	movl	%edx, 0x68(%rbx)
000000000001abb7	movl	0xd0(%rcx), %ecx
000000000001abbd	movl	%ecx, 0x64(%rbx)
000000000001abc0	testb	$0x3, %al
000000000001abc2	je	0x1abd3
000000000001abc4	andl	$0x4, %eax
000000000001abc7	movl	$0x1, %ecx
000000000001abcc	cmpl	%ecx, %eax
000000000001abce	adcl	$0x0, %ecx
000000000001abd1	jmp	0x1abd5
000000000001abd3	xorl	%ecx, %ecx
000000000001abd5	movl	%ecx, 0x20(%rbx)
000000000001abd8	movl	%r12d, 0x24(%rbx)
000000000001abdc	movq	%r13, 0x28(%rbx)
000000000001abe0	movq	0x140(%r15), %rax
000000000001abe7	movq	%rax, 0x30(%rbx)
000000000001abeb	movq	0x148(%r15), %rax
000000000001abf2	movq	%rax, 0x38(%rbx)
000000000001abf6	movq	0x10(%r14), %rax
000000000001abfa	movl	0x84(%rax), %ecx
000000000001ac00	movl	%ecx, 0x40(%rbx)
000000000001ac03	movl	0xb8(%rax), %ecx
000000000001ac09	movl	%ecx, 0x44(%rbx)
000000000001ac0c	movl	0xbc(%rax), %ecx
000000000001ac12	movl	%ecx, 0x48(%rbx)
000000000001ac15	movl	0xc0(%rax), %ecx
000000000001ac1b	movl	%ecx, 0x4c(%rbx)
000000000001ac1e	movl	0x38(%r14), %ecx
000000000001ac22	movl	%ecx, 0x54(%rbx)
000000000001ac25	movl	0x3c(%r14), %ecx
000000000001ac29	movl	%ecx, 0x58(%rbx)
000000000001ac2c	movl	0xcc(%rax), %eax
000000000001ac32	andl	$0x1, %eax
000000000001ac35	movl	%eax, 0x5c(%rbx)
000000000001ac38	addq	$0x8, %rsp
000000000001ac3c	popq	%rbx
000000000001ac3d	popq	%r12
000000000001ac3f	popq	%r13
000000000001ac41	popq	%r14
000000000001ac43	popq	%r15
000000000001ac45	popq	%rbp
000000000001ac46	retq
_os_channel_init_ring:
000000000001ac47	movq	0x10(%rsi), %rax
000000000001ac4b	movl	$0x1, %r10d
000000000001ac51	movl	$0x1, %r11d
000000000001ac57	subl	0x130(%rax), %r11d
000000000001ac5e	addl	0x134(%rax), %r11d
000000000001ac65	subl	0x138(%rax), %r10d
000000000001ac6c	movq	0x18(%rsi), %r8
000000000001ac70	addl	0x13c(%rax), %r10d
000000000001ac77	cmpl	$0x2, %edx
000000000001ac7a	jne	0x1ac99
000000000001ac7c	movl	0x120(%r8), %eax
000000000001ac83	addl	%eax, %eax
000000000001ac85	xorl	%r9d, %r9d
000000000001ac88	movl	$0x0, %edx
000000000001ac8d	cmpl	%ecx, %eax
000000000001ac8f	jbe	0x1acf5
000000000001ac91	addl	%ecx, %r11d
000000000001ac94	addl	%r10d, %r11d
000000000001ac97	jmp	0x1acdb
000000000001ac99	movzwl	%dx, %eax
000000000001ac9c	cmpl	$0x1, %eax
000000000001ac9f	jne	0x1acc2
000000000001aca1	cmpl	%ecx, %r11d
000000000001aca4	jbe	0x1acc2
000000000001aca6	movslq	%ecx, %rax
000000000001aca9	shlq	$0x4, %rax
000000000001acad	movq	0x158(%r8,%rax), %rdx
000000000001acb5	addq	%r8, %rdx
000000000001acb8	movq	0x160(%r8,%rax), %r9
000000000001acc0	jmp	0x1acf2
000000000001acc2	xorl	%r9d, %r9d
000000000001acc5	testw	%dx, %dx
000000000001acc8	jne	0x1ad66
000000000001acce	movl	$0x0, %edx
000000000001acd3	cmpl	%ecx, %r10d
000000000001acd6	jbe	0x1acf5
000000000001acd8	addl	%ecx, %r11d
000000000001acdb	shlq	$0x4, %r11
000000000001acdf	movq	0x158(%r8,%r11), %rdx
000000000001ace7	addq	%r8, %rdx
000000000001acea	movq	0x160(%r8,%r11), %r9
000000000001acf2	addq	%r8, %r9
000000000001acf5	testq	%r9, %r9
000000000001acf8	je	0x1ad6a
000000000001acfa	testq	%rdx, %rdx
000000000001acfd	je	0x1ad6a
000000000001acff	movl	0x138(%r8), %eax
000000000001ad06	leal	-0x1(%rax), %ecx
000000000001ad09	cmpl	$0x2, %ecx
000000000001ad0c	jae	0x1ad7a
000000000001ad0e	movl	0x13c(%r8), %r10d
000000000001ad15	leal	-0x1(%r10), %ecx
000000000001ad19	cmpl	$0x2, %ecx
000000000001ad1c	jae	0x1ad91
000000000001ad1e	movq	%r9, 0x18(%rdi)
000000000001ad22	addq	$0x4, %r8
000000000001ad26	movq	%r8, 0x8(%rdi)
000000000001ad2a	movq	%rsi, (%rdi)
000000000001ad2d	movq	%rdx, 0x10(%rdi)
000000000001ad31	movl	%eax, 0x20(%rdi)
000000000001ad34	movl	%r10d, 0x24(%rdi)
000000000001ad38	movq	0x10(%rsi), %rax
000000000001ad3c	movq	0x120(%rax), %rax
000000000001ad43	movq	%rax, 0x28(%rdi)
000000000001ad47	movq	0x20(%rdx), %rax
000000000001ad4b	addq	%rdx, %rax
000000000001ad4e	movq	%rax, 0x30(%rdi)
000000000001ad52	movq	0x28(%rdx), %rax
000000000001ad56	addq	%rdx, %rax
000000000001ad59	movq	%rax, 0x38(%rdi)
000000000001ad5d	addq	0x30(%rdx), %rdx
000000000001ad61	movq	%rdx, 0x40(%rdi)
000000000001ad65	retq
000000000001ad66	xorl	%edx, %edx
000000000001ad68	jmp	0x1acf5
000000000001ad6a	leaq	0xab6a(%rip), %rcx ## literal pool for: "Channel schema not valid"
000000000001ad71	movq	%rcx, 0x10830(%rip)
000000000001ad78	ud2
000000000001ad7a	leaq	0xab73(%rip), %rcx ## literal pool for: "Metadata type unknown"
000000000001ad81	movq	%rcx, 0x10820(%rip)
000000000001ad88	movq	%rax, 0x10849(%rip)
000000000001ad8f	ud2
000000000001ad91	leaq	0xab72(%rip), %rcx ## literal pool for: "Metadata subtype unknown"
000000000001ad98	movq	%r10, %rax
000000000001ad9b	movq	%rcx, 0x10806(%rip)
000000000001ada2	movq	%rax, 0x1082f(%rip)
000000000001ada9	ud2
_os_channel_create:
000000000001adab	xorl	%edx, %edx
000000000001adad	movl	$0xffffffff, %ecx
000000000001adb2	xorl	%r8d, %r8d
000000000001adb5	jmp	_os_channel_create_extended
_os_channel_get_fd:
000000000001adba	movl	(%rdi), %eax
000000000001adbc	retq
_os_channel_read_attr:
000000000001adbd	pushq	%rbp
000000000001adbe	movq	%rsp, %rbp
000000000001adc1	pushq	%r15
000000000001adc3	pushq	%r14
000000000001adc5	pushq	%rbx
000000000001adc6	pushq	%rax
000000000001adc7	movq	%rsi, %r14
000000000001adca	movq	%rdi, %r15
000000000001adcd	movl	(%rdi), %edi
000000000001adcf	movq	0x10(%r15), %rsi
000000000001add3	movl	$0x180, %edx
000000000001add8	callq	___channel_get_info
000000000001addd	movl	%eax, %ebx
000000000001addf	testl	%eax, %eax
000000000001ade1	jne	0x1adee
000000000001ade3	movq	%r15, %rdi
000000000001ade6	movq	%r14, %rsi
000000000001ade9	callq	_os_channel_info2attr
000000000001adee	movl	%ebx, %eax
000000000001adf0	addq	$0x8, %rsp
000000000001adf4	popq	%rbx
000000000001adf5	popq	%r14
000000000001adf7	popq	%r15
000000000001adf9	popq	%rbp
000000000001adfa	retq
_os_channel_write_attr:
000000000001adfb	pushq	%rbp
000000000001adfc	movq	%rsp, %rbp
000000000001adff	pushq	%r15
000000000001ae01	pushq	%r14
000000000001ae03	pushq	%rbx
000000000001ae04	pushq	%rax
000000000001ae05	movq	%rsi, %rbx
000000000001ae08	movq	%rdi, %r14
000000000001ae0b	movq	0x10(%rdi), %rax
000000000001ae0f	movl	0x140(%rax), %ecx
000000000001ae15	cmpl	0x30(%rsi), %ecx
000000000001ae18	jne	0x1ae25
000000000001ae1a	movl	0x144(%rax), %ecx
000000000001ae20	cmpl	0x34(%rbx), %ecx
000000000001ae23	je	0x1ae54
000000000001ae25	leaq	0x30(%rbx), %r15
000000000001ae29	movl	(%r14), %edi
000000000001ae2c	movl	$0x1, %esi
000000000001ae31	movl	$0x8, %ecx
000000000001ae36	movq	%r15, %rdx
000000000001ae39	callq	___channel_set_opt
000000000001ae3e	testl	%eax, %eax
000000000001ae40	jne	0x1ae99
000000000001ae42	movq	0x10(%r14), %rax
000000000001ae46	movq	(%r15), %rcx
000000000001ae49	movq	%rcx, 0x140(%rax)
000000000001ae50	movq	0x10(%r14), %rax
000000000001ae54	movl	0x148(%rax), %ecx
000000000001ae5a	cmpl	0x38(%rbx), %ecx
000000000001ae5d	jne	0x1ae6c
000000000001ae5f	movl	0x14c(%rax), %ecx
000000000001ae65	xorl	%eax, %eax
000000000001ae67	cmpl	0x3c(%rbx), %ecx
000000000001ae6a	je	0x1ae99
000000000001ae6c	addq	$0x38, %rbx
000000000001ae70	movl	(%r14), %edi
000000000001ae73	movl	$0x2, %esi
000000000001ae78	movl	$0x8, %ecx
000000000001ae7d	movq	%rbx, %rdx
000000000001ae80	callq	___channel_set_opt
000000000001ae85	testl	%eax, %eax
000000000001ae87	jne	0x1ae99
000000000001ae89	movq	0x10(%r14), %rax
000000000001ae8d	movq	(%rbx), %rcx
000000000001ae90	movq	%rcx, 0x148(%rax)
000000000001ae97	xorl	%eax, %eax
000000000001ae99	addq	$0x8, %rsp
000000000001ae9d	popq	%rbx
000000000001ae9e	popq	%r14
000000000001aea0	popq	%r15
000000000001aea2	popq	%rbp
000000000001aea3	retq
_os_channel_read_nexus_extension_info:
000000000001aea4	movq	0x10(%rdi), %rax
000000000001aea8	testq	%rsi, %rsi
000000000001aeab	je	0x1aeb5
000000000001aead	movl	0x84(%rax), %ecx
000000000001aeb3	movl	%ecx, (%rsi)
000000000001aeb5	testq	%rdx, %rdx
000000000001aeb8	je	0x1aec3
000000000001aeba	movl	0xb8(%rax), %eax
000000000001aec0	movq	%rax, (%rdx)
000000000001aec3	xorl	%eax, %eax
000000000001aec5	retq
_os_channel_sync:
000000000001aec6	cmpl	$0x1, %esi
000000000001aec9	ja	0x1aee1
000000000001aecb	movl	(%rdi), %eax
000000000001aecd	movl	0x4(%rdi), %ecx
000000000001aed0	movl	%ecx, %edx
000000000001aed2	andl	$-0x2, %edx
000000000001aed5	testl	%esi, %esi
000000000001aed7	cmovel	%ecx, %edx
000000000001aeda	movl	%eax, %edi
000000000001aedc	jmp	___channel_sync
000000000001aee1	movl	$0x16, %eax
000000000001aee6	retq
_os_channel_destroy:
000000000001aee7	pushq	%rbp
000000000001aee8	movq	%rsp, %rbp
000000000001aeeb	pushq	%rbx
000000000001aeec	pushq	%rax
000000000001aeed	movq	%rdi, %rbx
000000000001aef0	movl	(%rdi), %edi
000000000001aef2	cmpl	$-0x1, %edi
000000000001aef5	je	0x1af00
000000000001aef7	leaq	0x8(%rbx), %rsi
000000000001aefb	callq	_guarded_close_np
000000000001af00	movq	0x10(%rbx), %rdi
000000000001af04	testq	%rdi, %rdi
000000000001af07	je	0x1af16
000000000001af09	callq	_free
000000000001af0e	movq	$0x0, 0x10(%rbx)
000000000001af16	movq	%rbx, %rdi
000000000001af19	addq	$0x8, %rsp
000000000001af1d	popq	%rbx
000000000001af1e	popq	%rbp
000000000001af1f	jmp	_free
_os_channel_is_defunct:
000000000001af24	movq	0x18(%rdi), %rax
000000000001af28	movl	0x4(%rax), %eax
000000000001af2b	shrl	$0x1f, %eax
000000000001af2e	xorl	$0x1, %eax
000000000001af31	retq
_os_channel_ring_id:
000000000001af32	cmpl	$0x3, %esi
000000000001af35	ja	0x1af54
000000000001af37	movq	0x10(%rdi), %rax
000000000001af3b	movl	%esi, %ecx
000000000001af3d	leaq	0x2c(%rip), %rdx
000000000001af44	movslq	(%rdx,%rcx,4), %rcx
000000000001af48	addq	%rdx, %rcx
000000000001af4b	jmpq	*%rcx
000000000001af4d	movl	0x130(%rax), %eax
000000000001af53	retq
000000000001af54	movl	$0xffffffff, %eax
000000000001af59	retq
000000000001af5a	movl	0x134(%rax), %eax
000000000001af60	retq
000000000001af61	movl	0x138(%rax), %eax
000000000001af67	retq
000000000001af68	movl	0x13c(%rax), %eax
000000000001af6e	retq
000000000001af6f	nop
000000000001af70	.byte 0xdd #bad opcode
000000000001af71	.byte 0xff #bad opcode
000000000001af72	.byte 0xff #bad opcode
000000000001af73	.byte 0xff #bad opcode
000000000001af74	.byte 0xea #bad opcode
000000000001af75	.byte 0xff #bad opcode
000000000001af76	.byte 0xff #bad opcode
000000000001af77	pushq	%rcx
000000000001af79	.byte 0xff #bad opcode
000000000001af7a	.byte 0xff #bad opcode
000000000001af7b	.byte 0xff #bad opcode
000000000001af7c	clc
000000000001af7d	.byte 0xff #bad opcode
000000000001af7e	.byte 0xff #bad opcode
000000000001af7f	decl	-0x75(%rax)
_os_channel_tx_ring:
000000000001af80	movq	0x10(%rdi), %rax
000000000001af84	movl	0x14(%rax), %ecx
000000000001af87	cmpl	$-0x1, %ecx
000000000001af8a	je	0x1af90
000000000001af8c	cmpl	%esi, %ecx
000000000001af8e	jne	0x1afae
000000000001af90	movl	0x130(%rax), %ecx
000000000001af96	cmpl	%esi, %ecx
000000000001af98	ja	0x1afae
000000000001af9a	cmpl	%esi, 0x134(%rax)
000000000001afa0	jb	0x1afae
000000000001afa2	subl	%ecx, %esi
000000000001afa4	leaq	(%rsi,%rsi,8), %rax
000000000001afa8	leaq	0x40(%rdi,%rax,8), %rax
000000000001afad	retq
000000000001afae	xorl	%eax, %eax
000000000001afb0	retq
_os_channel_rx_ring:
000000000001afb1	movq	0x10(%rdi), %rax
000000000001afb5	movl	0x14(%rax), %ecx
000000000001afb8	cmpl	$-0x1, %ecx
000000000001afbb	je	0x1afc1
000000000001afbd	cmpl	%esi, %ecx
000000000001afbf	jne	0x1afed
000000000001afc1	movl	0x138(%rax), %ecx
000000000001afc7	cmpl	%esi, %ecx
000000000001afc9	ja	0x1afed
000000000001afcb	cmpl	%esi, 0x13c(%rax)
000000000001afd1	jb	0x1afed
000000000001afd3	incl	%esi
000000000001afd5	subl	%ecx, %esi
000000000001afd7	subl	0x130(%rax), %esi
000000000001afdd	addl	0x134(%rax), %esi
000000000001afe3	leaq	(%rsi,%rsi,8), %rax
000000000001afe7	leaq	0x40(%rdi,%rax,8), %rax
000000000001afec	retq
000000000001afed	xorl	%eax, %eax
000000000001afef	retq
_os_channel_pending:
000000000001aff0	movq	0x10(%rdi), %rcx
000000000001aff4	movl	(%rcx), %edx
000000000001aff6	xorl	%eax, %eax
000000000001aff8	cmpl	0x8(%rcx), %edx
000000000001affb	setne	%al
000000000001affe	retq
_os_channel_ring_sync_time:
000000000001afff	movq	0x10(%rdi), %rax
000000000001b003	movq	0x38(%rax), %rax
000000000001b007	retq
_os_channel_ring_notify_time:
000000000001b008	movq	0x10(%rdi), %rax
000000000001b00c	movq	0x40(%rax), %rax
000000000001b010	retq
_os_channel_available_slot_count:
000000000001b011	movq	0x10(%rdi), %rcx
000000000001b015	movzwl	0x1a(%rcx), %eax
000000000001b019	cmpl	$0x1, %eax
000000000001b01c	jne	0x1b035
000000000001b01e	movl	(%rcx), %edx
000000000001b020	movl	0xc(%rcx), %esi
000000000001b023	subl	0x8(%rcx), %edx
000000000001b026	movl	%edx, %eax
000000000001b028	sarl	$0x1f, %eax
000000000001b02b	andl	%esi, %eax
000000000001b02d	addl	%edx, %eax
000000000001b02f	notl	%eax
000000000001b031	addl	%esi, %eax
000000000001b033	jmp	0x1b03f
000000000001b035	movl	0x4(%rcx), %eax
000000000001b038	subl	(%rcx), %eax
000000000001b03a	jns	0x1b03f
000000000001b03c	addl	0xc(%rcx), %eax
000000000001b03f	movq	0x8(%rdi), %rcx
000000000001b043	xorl	%edx, %edx
000000000001b045	cmpl	%edx, (%rcx)
000000000001b047	cmovnsl	%edx, %eax
000000000001b04a	retq
_os_channel_advance_slot:
000000000001b04b	movq	0x10(%rdi), %rcx
000000000001b04f	subq	0x18(%rdi), %rsi
000000000001b053	shrq	$0x3, %rsi
000000000001b057	movl	(%rcx), %eax
000000000001b059	cmpl	0x4(%rcx), %eax
000000000001b05c	jbe	0x1b080
000000000001b05e	movl	0x4(%rcx), %eax
000000000001b061	cmpl	%esi, %eax
000000000001b063	ja	0x1b08d
000000000001b065	movl	(%rcx), %eax
000000000001b067	cmpl	%esi, %eax
000000000001b069	ja	0x1b070
000000000001b06b	cmpl	%esi, 0xc(%rcx)
000000000001b06e	ja	0x1b08d
000000000001b070	movq	0x8(%rdi), %rax
000000000001b074	movl	(%rax), %eax
000000000001b076	shrl	$0x1b, %eax
000000000001b079	andl	$-0x10, %eax
000000000001b07c	orl	$0x6, %eax
000000000001b07f	retq
000000000001b080	movl	(%rcx), %eax
000000000001b082	cmpl	%esi, %eax
000000000001b084	ja	0x1b070
000000000001b086	movl	0x4(%rcx), %eax
000000000001b089	cmpl	%esi, %eax
000000000001b08b	jbe	0x1b070
000000000001b08d	incl	%esi
000000000001b08f	xorl	%eax, %eax
000000000001b091	cmpl	0xc(%rcx), %esi
000000000001b094	cmovel	%eax, %esi
000000000001b097	movl	%esi, (%rcx)
000000000001b099	retq
_os_channel_get_next_slot:
000000000001b09a	pushq	%rbx
000000000001b09b	movq	0x10(%rdi), %r11
000000000001b09f	testq	%rsi, %rsi
000000000001b0a2	je	0x1b1e2
000000000001b0a8	subq	0x18(%rdi), %rsi
000000000001b0ac	shrq	$0x3, %rsi
000000000001b0b0	movl	(%r11), %eax
000000000001b0b3	leaq	0x4(%r11), %r8
000000000001b0b7	cmpl	0x4(%r11), %eax
000000000001b0bb	jbe	0x1b0e3
000000000001b0bd	movl	(%r8), %eax
000000000001b0c0	cmpl	%esi, %eax
000000000001b0c2	ja	0x1b0f1
000000000001b0c4	movl	(%r11), %eax
000000000001b0c7	cmpl	%esi, %eax
000000000001b0c9	ja	0x1b0d1
000000000001b0cb	cmpl	%esi, 0xc(%r11)
000000000001b0cf	ja	0x1b0f1
000000000001b0d1	movq	0x8(%rdi), %rax
000000000001b0d5	cmpl	$0x0, (%rax)
000000000001b0d8	js	0x1b265
000000000001b0de	movl	(%r8), %esi
000000000001b0e1	jmp	0x1b0fd
000000000001b0e3	movl	(%r11), %eax
000000000001b0e6	cmpl	%esi, %eax
000000000001b0e8	ja	0x1b0d1
000000000001b0ea	movl	(%r8), %eax
000000000001b0ed	cmpl	%esi, %eax
000000000001b0ef	jbe	0x1b0d1
000000000001b0f1	leal	0x1(%rsi), %eax
000000000001b0f4	xorl	%esi, %esi
000000000001b0f6	cmpl	0xc(%r11), %eax
000000000001b0fa	cmovnel	%eax, %esi
000000000001b0fd	cmpl	(%r8), %esi
000000000001b100	je	0x1b1ee
000000000001b106	movq	0x18(%rdi), %r10
000000000001b10a	movl	%esi, %eax
000000000001b10c	leaq	(%r10,%rax,8), %r8
000000000001b110	testq	%rdx, %rdx
000000000001b113	je	0x1b1d3
000000000001b119	testq	%r8, %r8
000000000001b11c	je	0x1b1d3
000000000001b122	movl	%esi, 0x4(%rdx)
000000000001b125	movw	$0x0, (%rdx)
000000000001b12a	movzwl	0x1a(%r11), %r9d
000000000001b12f	cmpl	$0x1, %r9d
000000000001b133	jne	0x1b156
000000000001b135	movq	(%rdi), %rsi
000000000001b138	movq	0x10(%rsi), %rsi
000000000001b13c	testb	$0x8, 0x10(%rsi)
000000000001b140	movzwl	0x4(%r8), %esi
000000000001b145	jne	0x1b24d
000000000001b14b	testb	$0x1, %sil
000000000001b14f	jne	0x1b161
000000000001b151	jmp	0x1b1f3
000000000001b156	testb	$0x1, 0x4(%r8)
000000000001b15b	je	0x1b1f3
000000000001b161	movq	0x38(%rdi), %rbx
000000000001b165	movl	0x14(%r11), %esi
000000000001b169	imull	(%r10,%rax,8), %esi
000000000001b16e	leaq	0x20(%rbx,%rsi), %rcx
000000000001b173	movq	-0x8(%rcx), %rax
000000000001b177	movq	%rcx, %rsi
000000000001b17a	subq	%rbx, %rsi
000000000001b17d	xorq	___os_ch_md_redzone_cookie(%rip), %rsi
000000000001b184	cmpq	%rsi, %rax
000000000001b187	jne	0x1b210
000000000001b18d	movzwl	%r9w, %eax
000000000001b191	leaq	0x14(%rcx), %rsi
000000000001b195	leaq	0x10(%r11), %rbx
000000000001b199	cmpl	$0x1, %eax
000000000001b19c	cmoveq	%rbx, %rsi
000000000001b1a0	movzwl	(%rsi), %eax
000000000001b1a3	movw	%ax, 0x2(%rdx)
000000000001b1a7	cmpl	$0x2, 0x20(%rdi)
000000000001b1ab	jne	0x1b234
000000000001b1b1	movl	0x10(%r11), %eax
000000000001b1b5	imull	0x60(%rcx), %eax
000000000001b1b9	movzwl	0x68(%rcx), %esi
000000000001b1bd	addq	0x30(%rdi), %rax
000000000001b1c1	movq	%rax, 0x58(%rcx)
000000000001b1c5	movzwl	%si, %esi
000000000001b1c8	addq	%rax, %rsi
000000000001b1cb	movq	%rsi, 0x10(%rdx)
000000000001b1cf	movq	%rcx, 0x18(%rdx)
000000000001b1d3	movq	0x8(%rdi), %rcx
000000000001b1d7	xorl	%eax, %eax
000000000001b1d9	cmpl	$0x0, (%rcx)
000000000001b1dc	cmovsq	%r8, %rax
000000000001b1e0	popq	%rbx
000000000001b1e1	retq
000000000001b1e2	movl	(%r11), %esi
000000000001b1e5	leaq	0x4(%r11), %r8
000000000001b1e9	jmp	0x1b0fd
000000000001b1ee	xorl	%r8d, %r8d
000000000001b1f1	jmp	0x1b1d3
000000000001b1f3	movq	0x8(%rdi), %rsi
000000000001b1f7	cmpl	$0x0, (%rsi)
000000000001b1fa	jns	0x1b161
000000000001b200	leaq	0xa559(%rip), %rcx ## literal pool for: "Slot descriptor has no metadata"
000000000001b207	movq	%rcx, 0x1039a(%rip)
000000000001b20e	ud2
000000000001b210	movq	0x8(%rdi), %rsi
000000000001b214	cmpl	$0x0, (%rsi)
000000000001b217	jns	0x1b18d
000000000001b21d	leaq	0xa55c(%rip), %rcx ## literal pool for: "Metadata redzone corrupted"
000000000001b224	movq	%rcx, 0x1037d(%rip)
000000000001b22b	movq	%rax, 0x103a6(%rip)
000000000001b232	ud2
000000000001b234	movl	0x10(%r11), %eax
000000000001b238	imull	0x28(%rcx), %eax
000000000001b23c	movzwl	0x30(%rcx), %esi
000000000001b240	addq	0x30(%rdi), %rax
000000000001b244	movq	%rax, 0x20(%rcx)
000000000001b248	jmp	0x1b1c5
000000000001b24d	testb	$0x1, %sil
000000000001b251	jne	0x1b27e
000000000001b253	xorps	%xmm0, %xmm0
000000000001b256	movups	%xmm0, 0x10(%rdx)
000000000001b25a	movw	$0x0, 0x2(%rdx)
000000000001b260	jmp	0x1b1d3
000000000001b265	movl	%esi, %eax
000000000001b267	leaq	0xa4b9(%rip), %rcx ## literal pool for: "Index out of bounds in gns"
000000000001b26e	movq	%rcx, 0x10333(%rip)
000000000001b275	movq	%rax, 0x1035c(%rip)
000000000001b27c	ud2
000000000001b27e	leaq	0xa4bd(%rip), %rcx ## literal pool for: "Tx slot has attached metadata"
000000000001b285	movq	%rcx, 0x1031c(%rip)
000000000001b28c	movq	%rax, 0x10345(%rip)
000000000001b293	ud2
_os_channel_set_slot_properties:
000000000001b295	movq	0x10(%rdi), %r10
000000000001b299	movq	0x18(%rdi), %r8
000000000001b29d	subq	%r8, %rsi
000000000001b2a0	shrq	$0x3, %rsi
000000000001b2a4	movl	(%r10), %eax
000000000001b2a7	cmpl	0x4(%r10), %eax
000000000001b2ab	jbe	0x1b2d0
000000000001b2ad	movl	0x4(%r10), %eax
000000000001b2b1	cmpl	%esi, %eax
000000000001b2b3	ja	0x1b2df
000000000001b2b5	movl	(%r10), %eax
000000000001b2b8	cmpl	%esi, %eax
000000000001b2ba	ja	0x1b2c2
000000000001b2bc	cmpl	%esi, 0xc(%r10)
000000000001b2c0	ja	0x1b2df
000000000001b2c2	movq	0x8(%rdi), %rax
000000000001b2c6	cmpl	$0x0, (%rax)
000000000001b2c9	js	0x1b370
000000000001b2cf	retq
000000000001b2d0	movl	(%r10), %eax
000000000001b2d3	cmpl	%esi, %eax
000000000001b2d5	ja	0x1b2c2
000000000001b2d7	movl	0x4(%r10), %eax
000000000001b2db	cmpl	%esi, %eax
000000000001b2dd	jbe	0x1b2c2
000000000001b2df	movq	0x18(%rdx), %rcx
000000000001b2e3	movq	-0x8(%rcx), %rax
000000000001b2e7	movq	0x38(%rdi), %r9
000000000001b2eb	subq	%r9, %rcx
000000000001b2ee	xorq	___os_ch_md_redzone_cookie(%rip), %rcx
000000000001b2f5	cmpq	%rcx, %rax
000000000001b2f8	jne	0x1b32d
000000000001b2fa	movl	%esi, %eax
000000000001b2fc	testb	$0x1, 0x4(%r8,%rax,8)
000000000001b302	je	0x1b34d
000000000001b304	movl	0x14(%r10), %ecx
000000000001b308	imull	(%r8,%rax,8), %ecx
000000000001b30d	leaq	0x20(%r9,%rcx), %rax
000000000001b312	movzwl	0x2(%rdx), %ecx
000000000001b316	movl	%ecx, 0x14(%rax)
000000000001b319	cmpl	$0x2, 0x20(%rdi)
000000000001b31d	jne	0x1b366
000000000001b31f	movw	%cx, 0x66(%rax)
000000000001b323	addq	$0x68, %rax
000000000001b327	movw	$0x0, (%rax)
000000000001b32c	retq
000000000001b32d	movq	0x8(%rdi), %rcx
000000000001b331	cmpl	$0x0, (%rcx)
000000000001b334	jns	0x1b2fa
000000000001b336	leaq	0xa443(%rip), %rcx ## literal pool for: "Metadata redzone corrupted"
000000000001b33d	movq	%rcx, 0x10264(%rip)
000000000001b344	movq	%rax, 0x1028d(%rip)
000000000001b34b	ud2
000000000001b34d	movq	0x8(%rdi), %rcx
000000000001b351	cmpl	$0x0, (%rcx)
000000000001b354	jns	0x1b304
000000000001b356	leaq	0xa403(%rip), %rcx ## literal pool for: "Slot descriptor has no metadata"
000000000001b35d	movq	%rcx, 0x10244(%rip)
000000000001b364	ud2
000000000001b366	movw	%cx, 0x2e(%rax)
000000000001b36a	addq	$0x30, %rax
000000000001b36e	jmp	0x1b327
000000000001b370	movl	%esi, %eax
000000000001b372	leaq	0xa422(%rip), %rcx ## literal pool for: "Index out of bounds in ssp"
000000000001b379	movq	%rcx, 0x10228(%rip)
000000000001b380	movq	%rax, 0x10251(%rip)
000000000001b387	ud2
_os_channel_slot_get_packet:
000000000001b389	testq	%rsi, %rsi
000000000001b38c	je	0x1b444
000000000001b392	movq	0x10(%rdi), %rax
000000000001b396	movq	0x18(%rdi), %r8
000000000001b39a	subq	%r8, %rsi
000000000001b39d	shrq	$0x3, %rsi
000000000001b3a1	movl	(%rax), %ecx
000000000001b3a3	cmpl	0x4(%rax), %ecx
000000000001b3a6	jbe	0x1b3dc
000000000001b3a8	movl	0x4(%rax), %ecx
000000000001b3ab	cmpl	%esi, %ecx
000000000001b3ad	ja	0x1b3e9
000000000001b3af	movl	(%rax), %ecx
000000000001b3b1	cmpl	%esi, %ecx
000000000001b3b3	ja	0x1b3ba
000000000001b3b5	cmpl	%esi, 0xc(%rax)
000000000001b3b8	ja	0x1b3e9
000000000001b3ba	movq	0x8(%rdi), %rcx
000000000001b3be	cmpl	$0x0, (%rcx)
000000000001b3c1	jns	0x1b3e9
000000000001b3c3	movl	%esi, %eax
000000000001b3c5	leaq	0xa3ea(%rip), %rcx ## literal pool for: "Index out of bounds in sgp"
000000000001b3cc	movq	%rcx, 0x101d5(%rip)
000000000001b3d3	movq	%rax, 0x101fe(%rip)
000000000001b3da	ud2
000000000001b3dc	movl	(%rax), %ecx
000000000001b3de	cmpl	%esi, %ecx
000000000001b3e0	ja	0x1b3ba
000000000001b3e2	movl	0x4(%rax), %ecx
000000000001b3e5	cmpl	%esi, %ecx
000000000001b3e7	jbe	0x1b3ba
000000000001b3e9	movl	%esi, %ecx
000000000001b3eb	testb	$0x1, 0x4(%r8,%rcx,8)
000000000001b3f1	je	0x1b444
000000000001b3f3	movq	0x38(%rdi), %r9
000000000001b3f7	movl	0x14(%rax), %esi
000000000001b3fa	movl	(%r8,%rcx,8), %eax
000000000001b3fe	imull	%esi, %eax
000000000001b401	leaq	0x20(%r9,%rax), %rdx
000000000001b406	movq	-0x8(%rdx), %rax
000000000001b40a	movq	%rdx, %rcx
000000000001b40d	subq	%r9, %rcx
000000000001b410	xorq	___os_ch_md_redzone_cookie(%rip), %rcx
000000000001b417	cmpq	%rcx, %rax
000000000001b41a	jne	0x1b447
000000000001b41c	movl	0x18(%rdx), %eax
000000000001b41f	imull	%eax, %esi
000000000001b422	leaq	0x20(%r9,%rsi), %rcx
000000000001b427	cmpq	%rcx, %rdx
000000000001b42a	jne	0x1b467
000000000001b42c	andq	$-0x10, %rdx
000000000001b430	movl	0x20(%rdi), %eax
000000000001b433	movl	0x24(%rdi), %ecx
000000000001b436	andl	$0x3, %eax
000000000001b439	orq	%rdx, %rax
000000000001b43c	andl	$0x3, %ecx
000000000001b43f	leaq	(%rax,%rcx,4), %rax
000000000001b443	retq
000000000001b444	xorl	%eax, %eax
000000000001b446	retq
000000000001b447	movq	0x8(%rdi), %rcx
000000000001b44b	cmpl	$0x0, (%rcx)
000000000001b44e	jns	0x1b41c
000000000001b450	leaq	0xa329(%rip), %rcx ## literal pool for: "Metadata redzone corrupted"
000000000001b457	movq	%rcx, 0x1014a(%rip)
000000000001b45e	movq	%rax, 0x10173(%rip)
000000000001b465	ud2
000000000001b467	movq	0x8(%rdi), %rcx
000000000001b46b	cmpl	$0x0, (%rcx)
000000000001b46e	jns	0x1b42c
000000000001b470	leaq	0xa35a(%rip), %rcx ## literal pool for: "bad packet handle"
000000000001b477	movq	%rcx, 0x1012a(%rip)
000000000001b47e	movq	%rax, 0x10153(%rip)
000000000001b485	ud2
_os_channel_get_stats_region:
000000000001b487	movq	0x20(%rdi), %rcx
000000000001b48b	testq	%rcx, %rcx
000000000001b48e	je	0x1b4c2
000000000001b490	movq	0x18(%rdi), %rax
000000000001b494	cmpl	$0x1, 0x148(%rax)
000000000001b49b	jne	0x1b4c2
000000000001b49d	xorl	%eax, %eax
000000000001b49f	cmpl	$0xc8, %esi
000000000001b4a5	jg	0x1b4c5
000000000001b4a7	cmpl	$0x64, %esi
000000000001b4aa	je	0x1b4ff
000000000001b4ac	cmpl	$0x65, %esi
000000000001b4af	je	0x1b4e6
000000000001b4b1	cmpl	$0xc8, %esi
000000000001b4b7	jne	0x1b502
000000000001b4b9	addq	$0x280, %rcx
000000000001b4c0	jmp	0x1b4ff
000000000001b4c2	xorl	%eax, %eax
000000000001b4c4	retq
000000000001b4c5	cmpl	$0xc9, %esi
000000000001b4cb	je	0x1b4ef
000000000001b4cd	cmpl	$0xca, %esi
000000000001b4d3	je	0x1b4f8
000000000001b4d5	cmpl	$0x12c, %esi
000000000001b4db	jne	0x1b502
000000000001b4dd	addq	$0x9f0, %rcx
000000000001b4e4	jmp	0x1b4ff
000000000001b4e6	addq	$0x160, %rcx
000000000001b4ed	jmp	0x1b4ff
000000000001b4ef	addq	$0x8f0, %rcx
000000000001b4f6	jmp	0x1b4ff
000000000001b4f8	addq	$0x9a0, %rcx
000000000001b4ff	movq	%rcx, %rax
000000000001b502	retq
_os_channel_get_advisory_region:
000000000001b503	movq	0x30(%rdi), %rax
000000000001b507	retq
_os_channel_flow_admissible:
000000000001b508	movq	(%rdi), %rcx
000000000001b50b	movq	0x28(%rcx), %r8
000000000001b50f	testq	%r8, %r8
000000000001b512	je	0x1b573
000000000001b514	movq	0x10(%rdi), %rax
000000000001b518	movzwl	0x1a(%rax), %edi
000000000001b51c	movl	$0x16, %eax
000000000001b521	cmpl	$0x1, %edi
000000000001b524	jne	0x1b572
000000000001b526	movq	0x10(%rcx), %rcx
000000000001b52a	cmpl	%edx, 0xc4(%rcx)
000000000001b530	jbe	0x1b572
000000000001b532	movl	%edx, %eax
000000000001b534	leaq	(%rax,%rax,2), %rdx
000000000001b538	movl	$0x2, %eax
000000000001b53d	cmpl	$0x0, 0x10(%r8,%rdx,8)
000000000001b543	je	0x1b572
000000000001b545	leaq	(%r8,%rdx,8), %rdi
000000000001b549	testb	$0x7, %sil
000000000001b54d	jne	0x1b579
000000000001b54f	movq	(%rdi), %rcx
000000000001b552	cmpq	(%rsi), %rcx
000000000001b555	jne	0x1b572
000000000001b557	movq	0x8(%r8,%rdx,8), %rcx
000000000001b55c	cmpq	0x8(%rsi), %rcx
000000000001b560	jne	0x1b572
000000000001b562	leaq	0x10(%r8,%rdx,8), %rax
000000000001b567	movl	(%rax), %eax
000000000001b569	shll	$0x1e, %eax
000000000001b56c	sarl	$0x1f, %eax
000000000001b56f	andl	$0x37, %eax
000000000001b572	retq
000000000001b573	movl	$0x6, %eax
000000000001b578	retq
000000000001b579	testb	$0x3, %sil
000000000001b57d	jne	0x1b5a1
000000000001b57f	movl	(%rdi), %ecx
000000000001b581	cmpl	(%rsi), %ecx
000000000001b583	jne	0x1b572
000000000001b585	movl	0x4(%rdi), %ecx
000000000001b588	cmpl	0x4(%rsi), %ecx
000000000001b58b	jne	0x1b572
000000000001b58d	movl	0x8(%r8,%rdx,8), %ecx
000000000001b592	cmpl	0x8(%rsi), %ecx
000000000001b595	jne	0x1b572
000000000001b597	movl	0xc(%rdi), %ecx
000000000001b59a	cmpl	0xc(%rsi), %ecx
000000000001b59d	je	0x1b562
000000000001b59f	jmp	0x1b572
000000000001b5a1	movb	(%rdi), %cl
000000000001b5a3	cmpb	(%rsi), %cl
000000000001b5a5	jne	0x1b572
000000000001b5a7	movb	0x1(%rdi), %cl
000000000001b5aa	cmpb	0x1(%rsi), %cl
000000000001b5ad	jne	0x1b572
000000000001b5af	movb	0x2(%rdi), %cl
000000000001b5b2	cmpb	0x2(%rsi), %cl
000000000001b5b5	jne	0x1b572
000000000001b5b7	movb	0x3(%rdi), %cl
000000000001b5ba	cmpb	0x3(%rsi), %cl
000000000001b5bd	jne	0x1b572
000000000001b5bf	movb	0x4(%rdi), %cl
000000000001b5c2	cmpb	0x4(%rsi), %cl
000000000001b5c5	jne	0x1b572
000000000001b5c7	movb	0x5(%rdi), %cl
000000000001b5ca	cmpb	0x5(%rsi), %cl
000000000001b5cd	jne	0x1b572
000000000001b5cf	movb	0x6(%rdi), %cl
000000000001b5d2	cmpb	0x6(%rsi), %cl
000000000001b5d5	jne	0x1b572
000000000001b5d7	movb	0x7(%rdi), %cl
000000000001b5da	cmpb	0x7(%rsi), %cl
000000000001b5dd	jne	0x1b572
000000000001b5df	movb	0x8(%r8,%rdx,8), %cl
000000000001b5e4	cmpb	0x8(%rsi), %cl
000000000001b5e7	jne	0x1b572
000000000001b5e9	movb	0x9(%rdi), %cl
000000000001b5ec	cmpb	0x9(%rsi), %cl
000000000001b5ef	jne	0x1b572
000000000001b5f1	movb	0xa(%rdi), %cl
000000000001b5f4	cmpb	0xa(%rsi), %cl
000000000001b5f7	jne	0x1b572
000000000001b5fd	movb	0xb(%rdi), %cl
000000000001b600	cmpb	0xb(%rsi), %cl
000000000001b603	jne	0x1b572
000000000001b609	movb	0xc(%rdi), %cl
000000000001b60c	cmpb	0xc(%rsi), %cl
000000000001b60f	jne	0x1b572
000000000001b615	movb	0xd(%rdi), %cl
000000000001b618	cmpb	0xd(%rsi), %cl
000000000001b61b	jne	0x1b572
000000000001b621	movb	0xe(%rdi), %cl
000000000001b624	cmpb	0xe(%rsi), %cl
000000000001b627	jne	0x1b572
000000000001b62d	movb	0xf(%rdi), %cl
000000000001b630	cmpb	0xf(%rsi), %cl
000000000001b633	je	0x1b562
000000000001b639	jmp	0x1b572
_os_channel_attr_create:
000000000001b63e	pushq	%rbp
000000000001b63f	movq	%rsp, %rbp
000000000001b642	pushq	%rbx
000000000001b643	pushq	%rax
000000000001b644	movl	$0x70, %edi
000000000001b649	callq	_malloc
000000000001b64e	movq	%rax, %rbx
000000000001b651	testq	%rax, %rax
000000000001b654	je	0x1b663
000000000001b656	movl	$0x70, %esi
000000000001b65b	movq	%rbx, %rdi
000000000001b65e	callq	_bzero
000000000001b663	movq	%rbx, %rax
000000000001b666	addq	$0x8, %rsp
000000000001b66a	popq	%rbx
000000000001b66b	popq	%rbp
000000000001b66c	retq
_os_channel_attr_clone:
000000000001b66d	pushq	%rbp
000000000001b66e	movq	%rsp, %rbp
000000000001b671	pushq	%r14
000000000001b673	pushq	%rbx
000000000001b674	movq	%rdi, %rbx
000000000001b677	callq	_os_channel_attr_create
000000000001b67c	movq	%rax, %r14
000000000001b67f	testq	%rbx, %rbx
000000000001b682	je	0x1b6d0
000000000001b684	testq	%r14, %r14
000000000001b687	je	0x1b6d0
000000000001b689	movl	$0x70, %edx
000000000001b68e	movq	%rbx, %rdi
000000000001b691	movq	%r14, %rsi
000000000001b694	callq	_bcopy
000000000001b699	movq	$0x0, 0x28(%r14)
000000000001b6a1	movl	$0x0, 0x24(%r14)
000000000001b6a9	movq	0x28(%rbx), %rsi
000000000001b6ad	testq	%rsi, %rsi
000000000001b6b0	je	0x1b6d0
000000000001b6b2	movl	0x24(%rbx), %edx
000000000001b6b5	testl	%edx, %edx
000000000001b6b7	je	0x1b6d0
000000000001b6b9	movq	%r14, %rdi
000000000001b6bc	callq	_os_channel_attr_set_key
000000000001b6c1	testl	%eax, %eax
000000000001b6c3	je	0x1b6d0
000000000001b6c5	movq	%r14, %rdi
000000000001b6c8	callq	_os_channel_attr_destroy
000000000001b6cd	xorl	%r14d, %r14d
000000000001b6d0	movq	%r14, %rax
000000000001b6d3	popq	%rbx
000000000001b6d4	popq	%r14
000000000001b6d6	popq	%rbp
000000000001b6d7	retq
_os_channel_attr_set_key:
000000000001b6d8	pushq	%rbp
000000000001b6d9	movq	%rsp, %rbp
000000000001b6dc	pushq	%r15
000000000001b6de	pushq	%r14
000000000001b6e0	pushq	%r13
000000000001b6e2	pushq	%r12
000000000001b6e4	pushq	%rbx
000000000001b6e5	pushq	%rax
000000000001b6e6	movl	%edx, %ebx
000000000001b6e8	movq	%rsi, %r12
000000000001b6eb	movq	%rdi, %r14
000000000001b6ee	movl	$0x16, %r15d
000000000001b6f4	testq	%rsi, %rsi
000000000001b6f7	jne	0x1b70f
000000000001b6f9	testl	%ebx, %ebx
000000000001b6fb	je	0x1b70f
000000000001b6fd	movl	%r15d, %eax
000000000001b700	addq	$0x8, %rsp
000000000001b704	popq	%rbx
000000000001b705	popq	%r12
000000000001b707	popq	%r13
000000000001b709	popq	%r14
000000000001b70b	popq	%r15
000000000001b70d	popq	%rbp
000000000001b70e	retq
000000000001b70f	testq	%r12, %r12
000000000001b712	setne	%al
000000000001b715	testl	%ebx, %ebx
000000000001b717	sete	%cl
000000000001b71a	cmpl	$0x400, %ebx
000000000001b720	ja	0x1b6fd
000000000001b722	andb	%cl, %al
000000000001b724	jne	0x1b6fd
000000000001b726	xorl	%r15d, %r15d
000000000001b729	movl	%r15d, 0x24(%r14)
000000000001b72d	testl	%ebx, %ebx
000000000001b72f	je	0x1b770
000000000001b731	testq	%r12, %r12
000000000001b734	je	0x1b6fd
000000000001b736	testl	%ebx, %ebx
000000000001b738	je	0x1b6fd
000000000001b73a	movq	0x28(%r14), %rdi
000000000001b73e	testq	%rdi, %rdi
000000000001b741	je	0x1b748
000000000001b743	callq	_free
000000000001b748	movl	%ebx, %r13d
000000000001b74b	movq	%r13, %rdi
000000000001b74e	callq	_malloc
000000000001b753	movq	%rax, 0x28(%r14)
000000000001b757	testq	%rax, %rax
000000000001b75a	je	0x1b78b
000000000001b75c	movl	%ebx, 0x24(%r14)
000000000001b760	movq	%r12, %rdi
000000000001b763	movq	%rax, %rsi
000000000001b766	movq	%r13, %rdx
000000000001b769	callq	_bcopy
000000000001b76e	jmp	0x1b6fd
000000000001b770	movq	0x28(%r14), %rdi
000000000001b774	testq	%rdi, %rdi
000000000001b777	je	0x1b731
000000000001b779	callq	_free
000000000001b77e	movq	$0x0, 0x28(%r14)
000000000001b786	jmp	0x1b6fd
000000000001b78b	movl	$0xc, %r15d
000000000001b791	jmp	0x1b6fd
_os_channel_attr_destroy:
000000000001b796	pushq	%rbp
000000000001b797	movq	%rsp, %rbp
000000000001b79a	pushq	%rbx
000000000001b79b	pushq	%rax
000000000001b79c	movq	%rdi, %rbx
000000000001b79f	movq	0x28(%rdi), %rdi
000000000001b7a3	testq	%rdi, %rdi
000000000001b7a6	je	0x1b7b5
000000000001b7a8	callq	_free
000000000001b7ad	movq	$0x0, 0x28(%rbx)
000000000001b7b5	movq	%rbx, %rdi
000000000001b7b8	addq	$0x8, %rsp
000000000001b7bc	popq	%rbx
000000000001b7bd	popq	%rbp
000000000001b7be	jmp	_free
_os_channel_attr_set:
000000000001b7c3	cmpl	$0x1a, %esi
000000000001b7c6	ja	0x1b843
000000000001b7c8	movl	$0x2d, %eax
000000000001b7cd	movl	%esi, %ecx
000000000001b7cf	leaq	0x7a(%rip), %r8
000000000001b7d6	movslq	(%r8,%rcx,4), %rcx
000000000001b7da	addq	%r8, %rcx
000000000001b7dd	jmpq	*%rcx
000000000001b7df	retq
000000000001b7e0	movl	$0x16, %eax
000000000001b7e5	cmpq	$0x1, %rdx
000000000001b7e9	ja	0x1b7df
000000000001b7eb	cmpl	$0x9, %esi
000000000001b7ee	jne	0x1b849
000000000001b7f0	movl	%edx, 0x30(%rdi)
000000000001b7f3	xorl	%eax, %eax
000000000001b7f5	retq
000000000001b7f6	movl	%edx, 0x1c(%rdi)
000000000001b7f9	xorl	%eax, %eax
000000000001b7fb	retq
000000000001b7fc	xorl	%ecx, %ecx
000000000001b7fe	testq	%rdx, %rdx
000000000001b801	movl	$0x2d, %eax
000000000001b806	cmovnel	%ecx, %eax
000000000001b809	retq
000000000001b80a	movl	$0x16, %eax
000000000001b80f	cmpq	$0x2, %rdx
000000000001b813	ja	0x1b7df
000000000001b815	movl	%edx, 0x20(%rdi)
000000000001b818	xorl	%eax, %eax
000000000001b81a	retq
000000000001b81b	movl	%edx, 0x34(%rdi)
000000000001b81e	xorl	%eax, %eax
000000000001b820	retq
000000000001b821	movl	%edx, 0x3c(%rdi)
000000000001b824	xorl	%eax, %eax
000000000001b826	retq
000000000001b827	xorl	%eax, %eax
000000000001b829	testq	%rdx, %rdx
000000000001b82c	setne	%al
000000000001b82f	movl	%eax, 0x60(%rdi)
000000000001b832	xorl	%eax, %eax
000000000001b834	retq
000000000001b835	xorl	%eax, %eax
000000000001b837	testq	%rdx, %rdx
000000000001b83a	setne	%al
000000000001b83d	movl	%eax, 0x68(%rdi)
000000000001b840	xorl	%eax, %eax
000000000001b842	retq
000000000001b843	movl	$0x16, %eax
000000000001b848	retq
000000000001b849	movl	%edx, 0x38(%rdi)
000000000001b84c	xorl	%eax, %eax
000000000001b84e	retq
000000000001b84f	nop
000000000001b850	.byte 0x8f #bad opcode
000000000001b851	.byte 0xff #bad opcode
000000000001b852	.byte 0xff #bad opcode
000000000001b853	decl	-0x70000001(%rdi)
000000000001b859	.byte 0xff #bad opcode
000000000001b85a	.byte 0xff #bad opcode
000000000001b85b	decl	-0x70000001(%rdi)
000000000001b861	.byte 0xff #bad opcode
000000000001b862	.byte 0xff #bad opcode
000000000001b863	decl	-0x59000001(%rdi)
000000000001b869	.byte 0xff #bad opcode
000000000001b86a	.byte 0xff #bad opcode
000000000001b86b	ljmpl	*-0x450001(%rdi,%rdi,8)
000000000001b872	.byte 0xff #bad opcode
000000000001b873	callq	*-0x34000001(%rax)
000000000001b879	.byte 0xff #bad opcode
000000000001b87a	.byte 0xff #bad opcode
000000000001b87b	callq	*-0x2e000001(%rax)
000000000001b881	.byte 0xff #bad opcode
000000000001b882	.byte 0xff #bad opcode
000000000001b883	pushq	%rbx
000000000001b885	.byte 0xff #bad opcode
000000000001b886	.byte 0xff #bad opcode
000000000001b887	decl	-0x70000001(%rdi)
000000000001b88d	.byte 0xff #bad opcode
000000000001b88e	.byte 0xff #bad opcode
000000000001b88f	pushq	%rbx
000000000001b891	.byte 0xff #bad opcode
000000000001b892	.byte 0xff #bad opcode
000000000001b893	pushq	%rbx
000000000001b895	.byte 0xff #bad opcode
000000000001b896	.byte 0xff #bad opcode
000000000001b897	decl	-0x70000001(%rdi)
000000000001b89d	.byte 0xff #bad opcode
000000000001b89e	.byte 0xff #bad opcode
000000000001b89f	decl	-0x70000001(%rdi)
000000000001b8a5	.byte 0xff #bad opcode
000000000001b8a6	.byte 0xff #bad opcode
000000000001b8a7	decl	-0x70000001(%rdi)
000000000001b8ad	.byte 0xff #bad opcode
000000000001b8ae	.byte 0xff #bad opcode
000000000001b8af	callq	*%rdi
000000000001b8b1	.byte 0xff #bad opcode
000000000001b8b2	.byte 0xff #bad opcode
000000000001b8b3	decl	-0x1a000001(%rdi)
000000000001b8b9	.byte 0xff #bad opcode
000000000001b8ba	.byte 0xff #bad opcode
000000000001b8bb	.byte 0xff #bad opcode
_os_channel_attr_get:
000000000001b8bc	movl	$0x16, %eax
000000000001b8c1	cmpl	$0x1a, %esi
000000000001b8c4	ja	0x1b984
000000000001b8ca	movl	$0x1, %r8d
000000000001b8d0	movl	%esi, %esi
000000000001b8d2	leaq	0xaf(%rip), %rcx
000000000001b8d9	movslq	(%rcx,%rsi,4), %rsi
000000000001b8dd	addq	%rcx, %rsi
000000000001b8e0	jmpq	*%rsi
000000000001b8e2	movl	(%rdi), %r8d
000000000001b8e5	jmp	0x1b97f
000000000001b8ea	movl	0x4(%rdi), %r8d
000000000001b8ee	jmp	0x1b97f
000000000001b8f3	movl	0x8(%rdi), %r8d
000000000001b8f7	jmp	0x1b97f
000000000001b8fc	movl	0xc(%rdi), %r8d
000000000001b900	jmp	0x1b97f
000000000001b902	movl	0x10(%rdi), %r8d
000000000001b906	jmp	0x1b97f
000000000001b908	movl	0x14(%rdi), %r8d
000000000001b90c	jmp	0x1b97f
000000000001b90e	movl	0x1c(%rdi), %r8d
000000000001b912	jmp	0x1b97f
000000000001b914	movl	0x20(%rdi), %r8d
000000000001b918	jmp	0x1b97f
000000000001b91a	movl	0x30(%rdi), %r8d
000000000001b91e	jmp	0x1b97f
000000000001b920	movl	0x34(%rdi), %r8d
000000000001b924	jmp	0x1b97f
000000000001b926	movl	0x38(%rdi), %r8d
000000000001b92a	jmp	0x1b97f
000000000001b92c	movl	0x3c(%rdi), %r8d
000000000001b930	jmp	0x1b97f
000000000001b932	movl	0x40(%rdi), %r8d
000000000001b936	jmp	0x1b97f
000000000001b938	movl	0x44(%rdi), %r8d
000000000001b93c	jmp	0x1b97f
000000000001b93e	movl	0x48(%rdi), %r8d
000000000001b942	jmp	0x1b97f
000000000001b944	movl	0x4c(%rdi), %r8d
000000000001b948	jmp	0x1b97f
000000000001b94a	movl	0x18(%rdi), %r8d
000000000001b94e	jmp	0x1b97f
000000000001b950	movl	0x50(%rdi), %r8d
000000000001b954	jmp	0x1b97f
000000000001b956	movl	0x54(%rdi), %r8d
000000000001b95a	jmp	0x1b97f
000000000001b95c	movl	0x58(%rdi), %r8d
000000000001b960	jmp	0x1b97f
000000000001b962	movl	0x5c(%rdi), %r8d
000000000001b966	jmp	0x1b97f
000000000001b968	xorl	%r8d, %r8d
000000000001b96b	cmpl	$0x0, 0x60(%rdi)
000000000001b96f	setne	%r8b
000000000001b973	jmp	0x1b97f
000000000001b975	movl	0x64(%rdi), %r8d
000000000001b979	jmp	0x1b97f
000000000001b97b	movl	0x68(%rdi), %r8d
000000000001b97f	movq	%r8, (%rdx)
000000000001b982	xorl	%eax, %eax
000000000001b984	retq
000000000001b985	nopl	(%rax)
000000000001b988	popq	%rdx
000000000001b989	.byte 0xff #bad opcode
000000000001b98a	.byte 0xff #bad opcode
000000000001b98b	jmpq	*-0x1(%rdx)
000000000001b98e	.byte 0xff #bad opcode
000000000001b98f	ljmpl	*-0x1(%rbx)
000000000001b992	.byte 0xff #bad opcode
000000000001b993	pushq	-0x1(%rdi,%rdi,8)
000000000001b997	.byte 0xff #bad opcode
000000000001b998	jp	0x1b999
000000000001b99a	.byte 0xff #bad opcode
000000000001b99b	incl	-0x79000001(%rax)
000000000001b9a1	.byte 0xff #bad opcode
000000000001b9a2	.byte 0xff #bad opcode
000000000001b9a3	pushq	%rdi
000000000001b9a5	.byte 0xff #bad opcode
000000000001b9a6	.byte 0xff #bad opcode
000000000001b9a7	decl	-0x6d0001(%rdi,%rdi,8)
000000000001b9ae	.byte 0xff #bad opcode
000000000001b9af	lcalll	*-0x61000001(%rax)
000000000001b9b5	.byte 0xff #bad opcode
000000000001b9b6	.byte 0xff #bad opcode
000000000001b9b7	jmpq	*-0x550001(%rdi,%rdi,8)
000000000001b9be	.byte 0xff #bad opcode
000000000001b9bf	pushq	-0x49000001(%rax)
000000000001b9c5	.byte 0xff #bad opcode
000000000001b9c6	.byte 0xff #bad opcode
000000000001b9c7	.byte 0xff #bad opcode
000000000001b9c8	cld
000000000001b9c9	.byte 0xff #bad opcode
000000000001b9ca	.byte 0xff #bad opcode
000000000001b9cb	.byte 0xff #bad opcode
000000000001b9cc	cld
000000000001b9cd	.byte 0xff #bad opcode
000000000001b9ce	.byte 0xff #bad opcode
000000000001b9cf	.byte 0xff #bad opcode
000000000001b9d0	movl	$0xc2ffffff, %esp
000000000001b9d5	.byte 0xff #bad opcode
000000000001b9d6	.byte 0xff #bad opcode
000000000001b9d7	decl	%eax
000000000001b9d9	.byte 0xff #bad opcode
000000000001b9da	.byte 0xff #bad opcode
000000000001b9db	decl	%esi
000000000001b9dd	.byte 0xff #bad opcode
000000000001b9de	.byte 0xff #bad opcode
000000000001b9df	callq	*%rsp
000000000001b9e1	.byte 0xff #bad opcode
000000000001b9e2	.byte 0xff #bad opcode
000000000001b9e3	.byte 0xff #bad opcode
000000000001b9e4	.byte 0xda #bad opcode
000000000001b9e5	.byte 0xff #bad opcode
000000000001b9e6	.byte 0xff #bad opcode
000000000001b9e7	jmpq	*%rax
000000000001b9e9	.byte 0xff #bad opcode
000000000001b9ea	.byte 0xff #bad opcode
000000000001b9eb	.byte 0xff #bad opcode
000000000001b9ec	inl	%dx, %eax
000000000001b9ed	.byte 0xff #bad opcode
000000000001b9ee	.byte 0xff #bad opcode
000000000001b9ef	pushq	%rbx
000000000001b9f1	.byte 0xff #bad opcode
000000000001b9f2	.byte 0xff #bad opcode
000000000001b9f3	callq	*0x48(%rbp)
_os_channel_attr_get_key:
000000000001b9f4	pushq	%rbp
000000000001b9f5	movq	%rsp, %rbp
000000000001b9f8	pushq	%r14
000000000001b9fa	pushq	%rbx
000000000001b9fb	testq	%rdx, %rdx
000000000001b9fe	je	0x1ba28
000000000001ba00	movq	%rdx, %rbx
000000000001ba03	movq	%rdi, %r14
000000000001ba06	movq	0x28(%rdi), %rdi
000000000001ba0a	testq	%rsi, %rsi
000000000001ba0d	je	0x1ba2f
000000000001ba0f	testq	%rdi, %rdi
000000000001ba12	je	0x1ba3a
000000000001ba14	movl	0x24(%r14), %edx
000000000001ba18	movl	$0xc, %eax
000000000001ba1d	cmpl	%edx, (%rbx)
000000000001ba1f	jb	0x1ba40
000000000001ba21	callq	_bcopy
000000000001ba26	jmp	0x1ba34
000000000001ba28	movl	$0x16, %eax
000000000001ba2d	jmp	0x1ba40
000000000001ba2f	testq	%rdi, %rdi
000000000001ba32	je	0x1ba3a
000000000001ba34	movl	0x24(%r14), %eax
000000000001ba38	jmp	0x1ba3c
000000000001ba3a	xorl	%eax, %eax
000000000001ba3c	movl	%eax, (%rbx)
000000000001ba3e	xorl	%eax, %eax
000000000001ba40	popq	%rbx
000000000001ba41	popq	%r14
000000000001ba43	popq	%rbp
000000000001ba44	retq
_os_channel_packet_alloc:
000000000001ba45	pushq	%rbp
000000000001ba46	movq	%rsp, %rbp
000000000001ba49	pushq	%r15
000000000001ba4b	pushq	%r14
000000000001ba4d	pushq	%r13
000000000001ba4f	pushq	%r12
000000000001ba51	pushq	%rbx
000000000001ba52	pushq	%rax
000000000001ba53	movq	0x10(%rdi), %rax
000000000001ba57	testb	$0x8, 0x10(%rax)
000000000001ba5b	je	0x1bb73
000000000001ba61	movq	%rsi, %r14
000000000001ba64	movq	%rdi, %r15
000000000001ba67	movl	$0x2, %ecx
000000000001ba6c	subl	0x130(%rax), %ecx
000000000001ba72	addl	0x134(%rax), %ecx
000000000001ba78	subl	0x138(%rax), %ecx
000000000001ba7e	addl	0x13c(%rax), %ecx
000000000001ba84	leaq	(%rcx,%rcx,8), %r13
000000000001ba88	movq	0x50(%rdi,%r13,8), %r12
000000000001ba8d	movl	(%r12), %ebx
000000000001ba91	cmpl	0x4(%r12), %ebx
000000000001ba96	je	0x1bb7a
000000000001ba9c	cmpl	0x4(%r12), %ebx
000000000001baa1	je	0x1bbb6
000000000001baa7	movq	0x58(%r15,%r13,8), %r8
000000000001baac	testb	$0x1, 0x4(%r8,%rbx,8)
000000000001bab2	je	0x1bbcd
000000000001bab8	movq	0x78(%r15,%r13,8), %rsi
000000000001babd	movl	0x14(%r12), %eax
000000000001bac2	imull	(%r8,%rbx,8), %eax
000000000001bac7	leaq	0x20(%rsi,%rax), %rcx
000000000001bacc	movq	-0x8(%rcx), %rax
000000000001bad0	movq	%rcx, %rdi
000000000001bad3	subq	%rsi, %rdi
000000000001bad6	xorq	___os_ch_md_redzone_cookie(%rip), %rdi
000000000001badd	cmpq	%rdi, %rax
000000000001bae0	jne	0x1bbeb
000000000001bae6	leaq	0x58(%r15,%r13,8), %rax
000000000001baeb	movq	%rcx, %rsi
000000000001baee	andq	$-0x10, %rsi
000000000001baf2	movl	0x8(%rax), %edi
000000000001baf5	movl	0xc(%rax), %edx
000000000001baf8	andl	$0x3, %edi
000000000001bafb	orq	%rsi, %rdi
000000000001bafe	andl	$0x3, %edx
000000000001bb01	leaq	(%rdi,%rdx,4), %rdx
000000000001bb05	movq	%rdx, (%r14)
000000000001bb08	movl	$0xffffffff, (%r8,%rbx,8)
000000000001bb10	movq	(%rax), %rdx
000000000001bb13	andw	$-0x2, 0x4(%rdx,%rbx,8)
000000000001bb19	cmpl	$0x2, 0x8(%rax)
000000000001bb1d	jne	0x1bb33
000000000001bb1f	movl	0x10(%r12), %eax
000000000001bb24	imull	0x60(%rcx), %eax
000000000001bb28	addq	0x70(%r15,%r13,8), %rax
000000000001bb2d	movq	%rax, 0x58(%rcx)
000000000001bb31	jmp	0x1bb45
000000000001bb33	movl	0x10(%r12), %eax
000000000001bb38	imull	0x28(%rcx), %eax
000000000001bb3c	addq	0x70(%r15,%r13,8), %rax
000000000001bb41	movq	%rax, 0x20(%rcx)
000000000001bb45	incl	%ebx
000000000001bb47	xorl	%ecx, %ecx
000000000001bb49	cmpl	0xc(%r12), %ebx
000000000001bb4e	cmovel	%ecx, %ebx
000000000001bb51	movl	%ebx, (%r12)
000000000001bb55	movq	0x18(%r15), %rax
000000000001bb59	cmpl	%ecx, 0x4(%rax)
000000000001bb5c	movl	$0x6, %eax
000000000001bb61	cmovsl	%ecx, %eax
000000000001bb64	addq	$0x8, %rsp
000000000001bb68	popq	%rbx
000000000001bb69	popq	%r12
000000000001bb6b	popq	%r13
000000000001bb6d	popq	%r14
000000000001bb6f	popq	%r15
000000000001bb71	popq	%rbp
000000000001bb72	retq
000000000001bb73	movl	$0x2d, %eax
000000000001bb78	jmp	0x1bb64
000000000001bb7a	movl	(%r15), %edi
000000000001bb7d	movl	0x4(%r15), %edx
000000000001bb81	movl	$0x2, %esi
000000000001bb86	callq	___channel_sync
000000000001bb8b	testl	%eax, %eax
000000000001bb8d	je	0x1ba9c
000000000001bb93	movq	0x18(%r15), %rcx
000000000001bb97	cmpl	$0x0, 0x4(%rcx)
000000000001bb9b	jns	0x1bb64
000000000001bb9d	cltq
000000000001bb9f	leaq	0x9c3d(%rip), %rcx ## literal pool for: "packet pool alloc sync failed"
000000000001bba6	movq	%rcx, 0xf9fb(%rip)
000000000001bbad	movq	%rax, 0xfa24(%rip)
000000000001bbb4	ud2
000000000001bbb6	movq	0x18(%r15), %rax
000000000001bbba	cmpl	$0x0, 0x4(%rax)
000000000001bbbe	movl	$0x6, %ecx
000000000001bbc3	movl	$0xc, %eax
000000000001bbc8	cmovnsl	%ecx, %eax
000000000001bbcb	jmp	0x1bb64
000000000001bbcd	movq	0x48(%r15,%r13,8), %rax
000000000001bbd2	cmpl	$0x0, (%rax)
000000000001bbd5	jns	0x1bab8
000000000001bbdb	leaq	0x9b7e(%rip), %rcx ## literal pool for: "Slot descriptor has no metadata"
000000000001bbe2	movq	%rcx, 0xf9bf(%rip)
000000000001bbe9	ud2
000000000001bbeb	movq	0x48(%r15,%r13,8), %rsi
000000000001bbf0	cmpl	$0x0, (%rsi)
000000000001bbf3	jns	0x1bae6
000000000001bbf9	leaq	0x9b80(%rip), %rcx ## literal pool for: "Metadata redzone corrupted"
000000000001bc00	movq	%rcx, 0xf9a1(%rip)
000000000001bc07	movq	%rax, 0xf9ca(%rip)
000000000001bc0e	ud2
_os_channel_packet_free:
000000000001bc10	pushq	%rbp
000000000001bc11	movq	%rsp, %rbp
000000000001bc14	pushq	%r15
000000000001bc16	pushq	%r14
000000000001bc18	pushq	%r13
000000000001bc1a	pushq	%r12
000000000001bc1c	pushq	%rbx
000000000001bc1d	pushq	%rax
000000000001bc1e	movq	0x10(%rdi), %rax
000000000001bc22	testb	$0x8, 0x10(%rax)
000000000001bc26	je	0x1bcd7
000000000001bc2c	movq	%rsi, %r14
000000000001bc2f	movq	%rdi, %r15
000000000001bc32	movl	$0x3, %ecx
000000000001bc37	subl	0x130(%rax), %ecx
000000000001bc3d	addl	0x134(%rax), %ecx
000000000001bc43	subl	0x138(%rax), %ecx
000000000001bc49	addl	0x13c(%rax), %ecx
000000000001bc4f	leaq	(%rcx,%rcx,8), %r13
000000000001bc53	movq	0x50(%rdi,%r13,8), %r12
000000000001bc58	movl	(%r12), %ebx
000000000001bc5c	cmpl	0x4(%r12), %ebx
000000000001bc61	je	0x1bcde
000000000001bc63	cmpl	0x4(%r12), %ebx
000000000001bc68	je	0x1bd1f
000000000001bc6e	leaq	0x50(%r15,%r13,8), %rcx
000000000001bc73	andq	$-0x10, %r14
000000000001bc77	movl	0x18(%r14), %eax
000000000001bc7b	movq	0x28(%rcx), %rdx
000000000001bc7f	movq	(%rcx), %rsi
000000000001bc82	movl	0x14(%rsi), %esi
000000000001bc85	imull	%eax, %esi
000000000001bc88	leaq	0x20(%rdx,%rsi), %rdx
000000000001bc8d	cmpq	%rdx, %r14
000000000001bc90	jne	0x1bd3d
000000000001bc96	movq	0x58(%r15,%r13,8), %rdx
000000000001bc9b	movl	%eax, (%rdx,%rbx,8)
000000000001bc9e	movq	0x58(%r15,%r13,8), %rax
000000000001bca3	orw	$0x1, 0x4(%rax,%rbx,8)
000000000001bca9	leal	0x1(%rbx), %eax
000000000001bcac	xorl	%edx, %edx
000000000001bcae	cmpl	0xc(%r12), %eax
000000000001bcb3	cmovel	%edx, %eax
000000000001bcb6	movl	%eax, (%r12)
000000000001bcba	movq	-0x8(%rcx), %rax
000000000001bcbe	cmpl	%edx, (%rax)
000000000001bcc0	movl	$0x6, %eax
000000000001bcc5	cmovsl	%edx, %eax
000000000001bcc8	addq	$0x8, %rsp
000000000001bccc	popq	%rbx
000000000001bccd	popq	%r12
000000000001bccf	popq	%r13
000000000001bcd1	popq	%r14
000000000001bcd3	popq	%r15
000000000001bcd5	popq	%rbp
000000000001bcd6	retq
000000000001bcd7	movl	$0x2d, %eax
000000000001bcdc	jmp	0x1bcc8
000000000001bcde	movl	(%r15), %edi
000000000001bce1	movl	$0x2, %esi
000000000001bce6	movl	$0x2, %edx
000000000001bceb	callq	___channel_sync
000000000001bcf0	testl	%eax, %eax
000000000001bcf2	je	0x1bc63
000000000001bcf8	movq	0x18(%r15), %rcx
000000000001bcfc	cmpl	$0x0, 0x4(%rcx)
000000000001bd00	jns	0x1bc63
000000000001bd06	cltq
000000000001bd08	leaq	0x9af2(%rip), %rcx ## literal pool for: "packet pool free sync failed"
000000000001bd0f	movq	%rcx, 0xf892(%rip)
000000000001bd16	movq	%rax, 0xf8bb(%rip)
000000000001bd1d	ud2
000000000001bd1f	movq	0x18(%r15), %rax
000000000001bd23	cmpl	$0x0, 0x4(%rax)
000000000001bd27	jns	0x1bc6e
000000000001bd2d	leaq	0x9aea(%rip), %rcx ## literal pool for: "no free ring space"
000000000001bd34	movq	%rcx, 0xf86d(%rip)
000000000001bd3b	ud2
000000000001bd3d	movq	-0x8(%rcx), %rdx
000000000001bd41	cmpl	$0x0, (%rdx)
000000000001bd44	jns	0x1bc96
000000000001bd4a	leaq	0x9a80(%rip), %rcx ## literal pool for: "bad packet handle"
000000000001bd51	movq	%rcx, 0xf850(%rip)
000000000001bd58	movq	%rax, 0xf879(%rip)
000000000001bd5f	ud2
_os_channel_slot_attach_packet:
000000000001bd61	movq	(%rdi), %rax
000000000001bd64	movq	0x10(%rax), %rax
000000000001bd68	testb	$0x8, 0x10(%rax)
000000000001bd6c	je	0x1be1e
000000000001bd72	andq	$-0x10, %rdx
000000000001bd76	testb	$0x1, 0x12(%rdx)
000000000001bd7a	je	0x1be24
000000000001bd80	movq	%rsi, %rax
000000000001bd83	subq	0x18(%rdi), %rax
000000000001bd87	shrq	$0x3, %rax
000000000001bd8b	movq	0x10(%rdi), %r9
000000000001bd8f	movl	(%r9), %ecx
000000000001bd92	cmpl	0x4(%r9), %ecx
000000000001bd96	jbe	0x1bdd0
000000000001bd98	movl	0x4(%r9), %ecx
000000000001bd9c	cmpl	%eax, %ecx
000000000001bd9e	ja	0x1bddf
000000000001bda0	movl	(%r9), %ecx
000000000001bda3	cmpl	%eax, %ecx
000000000001bda5	ja	0x1bdad
000000000001bda7	cmpl	%eax, 0xc(%r9)
000000000001bdab	ja	0x1bddf
000000000001bdad	movq	0x8(%rdi), %rax
000000000001bdb1	cmpl	$0x0, (%rax)
000000000001bdb4	jns	0x1be11
000000000001bdb6	leaq	0x9a89(%rip), %rcx ## literal pool for: "Invalid slot"
000000000001bdbd	movq	%rsi, %rax
000000000001bdc0	movq	%rcx, 0xf7e1(%rip)
000000000001bdc7	movq	%rax, 0xf80a(%rip)
000000000001bdce	ud2
000000000001bdd0	movl	(%r9), %ecx
000000000001bdd3	cmpl	%eax, %ecx
000000000001bdd5	ja	0x1bdad
000000000001bdd7	movl	0x4(%r9), %ecx
000000000001bddb	cmpl	%eax, %ecx
000000000001bddd	jbe	0x1bdad
000000000001bddf	movzwl	0x4(%rsi), %r8d
000000000001bde4	testb	$0x1, %r8b
000000000001bde8	jne	0x1be3d
000000000001bdea	movl	0x18(%rdx), %eax
000000000001bded	movq	0x38(%rdi), %r10
000000000001bdf1	movl	0x14(%r9), %ecx
000000000001bdf5	imull	%eax, %ecx
000000000001bdf8	leaq	0x20(%r10,%rcx), %rcx
000000000001bdfd	cmpq	%rcx, %rdx
000000000001be00	jne	0x1be60
000000000001be02	movl	%eax, (%rsi)
000000000001be04	orl	$0x1, %r8d
000000000001be08	movw	%r8w, 0x4(%rsi)
000000000001be0d	movq	0x8(%rdi), %rax
000000000001be11	xorl	%ecx, %ecx
000000000001be13	cmpl	%ecx, (%rax)
000000000001be15	movl	$0x6, %eax
000000000001be1a	cmovsl	%ecx, %eax
000000000001be1d	retq
000000000001be1e	movl	$0x2d, %eax
000000000001be23	retq
000000000001be24	movq	0x8(%rdi), %rax
000000000001be28	cmpl	$0x0, (%rax)
000000000001be2b	jns	0x1be11
000000000001be2d	leaq	0x99fd(%rip), %rcx ## literal pool for: "packet not finalized"
000000000001be34	movq	%rcx, 0xf76d(%rip)
000000000001be3b	ud2
000000000001be3d	movq	0x8(%rdi), %rax
000000000001be41	cmpl	$0x0, (%rax)
000000000001be44	jns	0x1be11
000000000001be46	leaq	0x9a06(%rip), %rcx ## literal pool for: "Slot has attached packet"
000000000001be4d	movq	%rsi, %rax
000000000001be50	movq	%rcx, 0xf751(%rip)
000000000001be57	movq	%rax, 0xf77a(%rip)
000000000001be5e	ud2
000000000001be60	movq	0x8(%rdi), %rcx
000000000001be64	cmpl	$0x0, (%rcx)
000000000001be67	jns	0x1be02
000000000001be69	leaq	0x9961(%rip), %rcx ## literal pool for: "bad packet handle"
000000000001be70	movq	%rcx, 0xf731(%rip)
000000000001be77	movq	%rax, 0xf75a(%rip)
000000000001be7e	ud2
_os_channel_slot_detach_packet:
000000000001be80	movq	(%rdi), %rax
000000000001be83	movq	0x10(%rax), %rax
000000000001be87	testb	$0x8, 0x10(%rax)
000000000001be8b	je	0x1bf61
000000000001be91	movq	0x10(%rdi), %r10
000000000001be95	movq	0x18(%rdi), %r8
000000000001be99	movq	%rsi, %rax
000000000001be9c	subq	%r8, %rax
000000000001be9f	shrq	$0x3, %rax
000000000001bea3	movl	(%r10), %ecx
000000000001bea6	cmpl	0x4(%r10), %ecx
000000000001beaa	jbe	0x1bee8
000000000001beac	movl	0x4(%r10), %ecx
000000000001beb0	cmpl	%eax, %ecx
000000000001beb2	ja	0x1bef7
000000000001beb4	movl	(%r10), %ecx
000000000001beb7	cmpl	%eax, %ecx
000000000001beb9	ja	0x1bec1
000000000001bebb	cmpl	%eax, 0xc(%r10)
000000000001bebf	ja	0x1bef7
000000000001bec1	movq	0x8(%rdi), %rax
000000000001bec5	cmpl	$0x0, (%rax)
000000000001bec8	jns	0x1bf54
000000000001bece	leaq	0x9971(%rip), %rcx ## literal pool for: "Invalid slot"
000000000001bed5	movq	%rsi, %rax
000000000001bed8	movq	%rcx, 0xf6c9(%rip)
000000000001bedf	movq	%rax, 0xf6f2(%rip)
000000000001bee6	ud2
000000000001bee8	movl	(%r10), %ecx
000000000001beeb	cmpl	%eax, %ecx
000000000001beed	ja	0x1bec1
000000000001beef	movl	0x4(%r10), %ecx
000000000001bef3	cmpl	%eax, %ecx
000000000001bef5	jbe	0x1bec1
000000000001bef7	movzwl	0x4(%rsi), %r9d
000000000001befc	testb	$0x1, %r9b
000000000001bf00	je	0x1bf67
000000000001bf02	movq	0x38(%rdi), %r11
000000000001bf06	movl	%eax, %eax
000000000001bf08	movl	0x14(%r10), %ecx
000000000001bf0c	imull	(%r8,%rax,8), %ecx
000000000001bf11	leaq	0x20(%r11,%rcx), %rax
000000000001bf16	andq	$-0x10, %rax
000000000001bf1a	movl	0x20(%rdi), %ecx
000000000001bf1d	movl	0x24(%rdi), %r8d
000000000001bf21	andl	$0x3, %ecx
000000000001bf24	orq	%rax, %rcx
000000000001bf27	andl	$0x3, %r8d
000000000001bf2b	leaq	(%rcx,%r8,4), %rax
000000000001bf2f	cmpq	%rdx, %rax
000000000001bf32	jne	0x1bf8a
000000000001bf34	andq	$-0x10, %rdx
000000000001bf38	testb	$0x1, 0x12(%rdx)
000000000001bf3c	je	0x1bfa3
000000000001bf3e	movl	$0xffffffff, (%rsi)
000000000001bf44	andl	$0xfffe, %r9d
000000000001bf4b	movw	%r9w, 0x4(%rsi)
000000000001bf50	movq	0x8(%rdi), %rax
000000000001bf54	xorl	%ecx, %ecx
000000000001bf56	cmpl	%ecx, (%rax)
000000000001bf58	movl	$0x6, %eax
000000000001bf5d	cmovsl	%ecx, %eax
000000000001bf60	retq
000000000001bf61	movl	$0x2d, %eax
000000000001bf66	retq
000000000001bf67	movq	0x8(%rdi), %rax
000000000001bf6b	cmpl	$0x0, (%rax)
000000000001bf6e	jns	0x1bf54
000000000001bf70	leaq	0x98f5(%rip), %rcx ## literal pool for: "Slot has no attached packet"
000000000001bf77	movq	%rsi, %rax
000000000001bf7a	movq	%rcx, 0xf627(%rip)
000000000001bf81	movq	%rax, 0xf650(%rip)
000000000001bf88	ud2
000000000001bf8a	movq	0x8(%rdi), %rax
000000000001bf8e	cmpl	$0x0, (%rax)
000000000001bf91	jns	0x1bf54
000000000001bf93	leaq	0x98ee(%rip), %rcx ## literal pool for: "packet handle mismatch"
000000000001bf9a	movq	%rcx, 0xf607(%rip)
000000000001bfa1	ud2
000000000001bfa3	movq	0x8(%rdi), %rax
000000000001bfa7	cmpl	$0x0, (%rax)
000000000001bfaa	jns	0x1bf54
000000000001bfac	leaq	0x987e(%rip), %rcx ## literal pool for: "packet not finalized"
000000000001bfb3	movq	%rcx, 0xf5ee(%rip)
000000000001bfba	ud2
_os_channel_packet_pool_purge:
000000000001bfbc	pushq	%rbp
000000000001bfbd	movq	%rsp, %rbp
000000000001bfc0	pushq	%r15
000000000001bfc2	pushq	%r14
000000000001bfc4	pushq	%r13
000000000001bfc6	pushq	%r12
000000000001bfc8	pushq	%rbx
000000000001bfc9	subq	$0x18, %rsp
000000000001bfcd	movq	0x10(%rdi), %rax
000000000001bfd1	testb	$0x8, 0x10(%rax)
000000000001bfd5	je	0x1c19d
000000000001bfdb	movq	%rdi, %rbx
000000000001bfde	movl	$0x2, %ecx
000000000001bfe3	subl	0x130(%rax), %ecx
000000000001bfe9	addl	0x134(%rax), %ecx
000000000001bfef	subl	0x138(%rax), %ecx
000000000001bff5	addl	0x13c(%rax), %ecx
000000000001bffb	leaq	(%rcx,%rcx,8), %r14
000000000001bfff	movq	0x50(%rdi,%r14,8), %r15
000000000001c004	movl	(%r15), %r13d
000000000001c007	movl	(%rdi), %edi
000000000001c009	movl	$0x2, %esi
000000000001c00e	movl	$0x5, %edx
000000000001c013	callq	___channel_sync
000000000001c018	testl	%eax, %eax
000000000001c01a	jne	0x1c1a4
000000000001c020	movl	0x4(%r15), %r12d
000000000001c024	subl	%r13d, %r12d
000000000001c027	jns	0x1c02d
000000000001c029	addl	0xc(%r15), %r12d
000000000001c02d	movl	0x48(%r15), %eax
000000000001c031	movl	%eax, -0x34(%rbp)
000000000001c034	movq	%rbx, -0x30(%rbp)
000000000001c038	leaq	0x58(%rbx,%r14,8), %r14
000000000001c03d	incl	%r12d
000000000001c040	decl	%r12d
000000000001c043	cmpl	-0x34(%rbp), %r12d
000000000001c047	jbe	0x1c13b
000000000001c04d	movq	(%r14), %rsi
000000000001c050	movl	%r13d, %edx
000000000001c053	testb	$0x1, 0x4(%rsi,%rdx,8)
000000000001c058	je	0x1c105
000000000001c05e	movq	0x20(%r14), %rdi
000000000001c062	movl	0x14(%r15), %eax
000000000001c066	imull	(%rsi,%rdx,8), %eax
000000000001c06a	leaq	0x20(%rdi,%rax), %rbx
000000000001c06f	movq	-0x8(%rbx), %rax
000000000001c073	movq	%rbx, %rcx
000000000001c076	subq	%rdi, %rcx
000000000001c079	xorq	___os_ch_md_redzone_cookie(%rip), %rcx
000000000001c080	cmpq	%rcx, %rax
000000000001c083	jne	0x1c117
000000000001c089	movl	0x8(%r14), %eax
000000000001c08d	movl	0xc(%r14), %edi
000000000001c091	movl	$0xffffffff, (%rsi,%rdx,8)
000000000001c098	movq	(%r14), %rcx
000000000001c09b	andw	$-0x2, 0x4(%rcx,%rdx,8)
000000000001c0a1	movq	%rbx, %rcx
000000000001c0a4	andq	$-0x10, %rcx
000000000001c0a8	andl	$0x3, %eax
000000000001c0ab	orq	%rcx, %rax
000000000001c0ae	andl	$0x3, %edi
000000000001c0b1	cmpl	$0x2, 0x8(%r14)
000000000001c0b6	jne	0x1c0ca
000000000001c0b8	movl	0x10(%r15), %ecx
000000000001c0bc	imull	0x60(%rbx), %ecx
000000000001c0c0	addq	0x18(%r14), %rcx
000000000001c0c4	movq	%rcx, 0x58(%rbx)
000000000001c0c8	jmp	0x1c0da
000000000001c0ca	movl	0x10(%r15), %ecx
000000000001c0ce	imull	0x28(%rbx), %ecx
000000000001c0d2	addq	0x18(%r14), %rcx
000000000001c0d6	movq	%rcx, 0x20(%rbx)
000000000001c0da	leaq	(%rax,%rdi,4), %rsi
000000000001c0de	incl	%r13d
000000000001c0e1	xorl	%ebx, %ebx
000000000001c0e3	cmpl	0xc(%r15), %r13d
000000000001c0e7	je	0x1c0ec
000000000001c0e9	movl	%r13d, %ebx
000000000001c0ec	movl	%ebx, (%r15)
000000000001c0ef	movq	-0x30(%rbp), %rdi
000000000001c0f3	callq	_os_channel_packet_free
000000000001c0f8	movl	%ebx, %r13d
000000000001c0fb	testl	%eax, %eax
000000000001c0fd	je	0x1c040
000000000001c103	jmp	0x1c176
000000000001c105	movq	-0x10(%r14), %rax
000000000001c109	cmpl	$0x0, (%rax)
000000000001c10c	jns	0x1c05e
000000000001c112	jmp	0x1c1e4
000000000001c117	movq	-0x10(%r14), %rcx
000000000001c11b	cmpl	$0x0, (%rcx)
000000000001c11e	jns	0x1c089
000000000001c124	leaq	0x9655(%rip), %rcx ## literal pool for: "Metadata redzone corrupted"
000000000001c12b	movq	%rcx, 0xf476(%rip)
000000000001c132	movq	%rax, 0xf49f(%rip)
000000000001c139	ud2
000000000001c13b	movq	-0x30(%rbp), %rbx
000000000001c13f	movl	(%rbx), %edi
000000000001c141	movl	$0x2, %esi
000000000001c146	movl	$0x2, %edx
000000000001c14b	callq	___channel_sync
000000000001c150	movq	0x18(%rbx), %rcx
000000000001c154	movl	0x4(%rcx), %ecx
000000000001c157	testl	%eax, %eax
000000000001c159	jne	0x1c1c7
000000000001c15b	xorl	%edx, %edx
000000000001c15d	testl	%ecx, %ecx
000000000001c15f	movl	$0x6, %eax
000000000001c164	cmovsl	%edx, %eax
000000000001c167	addq	$0x18, %rsp
000000000001c16b	popq	%rbx
000000000001c16c	popq	%r12
000000000001c16e	popq	%r13
000000000001c170	popq	%r14
000000000001c172	popq	%r15
000000000001c174	popq	%rbp
000000000001c175	retq
000000000001c176	movq	-0x30(%rbp), %rcx
000000000001c17a	movq	0x18(%rcx), %rcx
000000000001c17e	cmpl	$0x0, 0x4(%rcx)
000000000001c182	jns	0x1c167
000000000001c184	cltq
000000000001c186	leaq	0x9730(%rip), %rcx ## literal pool for: "packet pool purge free failed"
000000000001c18d	movq	%rcx, 0xf414(%rip)
000000000001c194	movq	%rax, 0xf43d(%rip)
000000000001c19b	ud2
000000000001c19d	movl	$0x2d, %eax
000000000001c1a2	jmp	0x1c167
000000000001c1a4	movq	0x18(%rbx), %rcx
000000000001c1a8	cmpl	$0x0, 0x4(%rcx)
000000000001c1ac	jns	0x1c167
000000000001c1ae	cltq
000000000001c1b0	leaq	0x96e8(%rip), %rcx ## literal pool for: "packet pool purge sync failed"
000000000001c1b7	movq	%rcx, 0xf3ea(%rip)
000000000001c1be	movq	%rax, 0xf413(%rip)
000000000001c1c5	ud2
000000000001c1c7	testl	%ecx, %ecx
000000000001c1c9	jns	0x1c167
000000000001c1cb	cltq
000000000001c1cd	leaq	0x962d(%rip), %rcx ## literal pool for: "packet pool free sync failed"
000000000001c1d4	movq	%rcx, 0xf3cd(%rip)
000000000001c1db	movq	%rax, 0xf3f6(%rip)
000000000001c1e2	ud2
000000000001c1e4	leaq	0x9575(%rip), %rcx ## literal pool for: "Slot descriptor has no metadata"
000000000001c1eb	movq	%rcx, 0xf3b6(%rip)
000000000001c1f2	ud2
_sem_destroy:
000000000001c1f4	pushq	%rbp
000000000001c1f5	movq	%rsp, %rbp
000000000001c1f8	callq	___error
000000000001c1fd	movl	$0x4e, (%rax)
000000000001c203	movl	$0xffffffff, %eax
000000000001c208	popq	%rbp
000000000001c209	retq
_sem_getvalue:
000000000001c20a	pushq	%rbp
000000000001c20b	movq	%rsp, %rbp
000000000001c20e	callq	___error
000000000001c213	movl	$0x4e, (%rax)
000000000001c219	movl	$0xffffffff, %eax
000000000001c21e	popq	%rbp
000000000001c21f	retq
_sem_init:
000000000001c220	pushq	%rbp
000000000001c221	movq	%rsp, %rbp
000000000001c224	callq	___error
000000000001c229	movl	$0x4e, (%rax)
000000000001c22f	movl	$0xffffffff, %eax
000000000001c234	popq	%rbp
000000000001c235	retq
_pid_shutdown_networking:
000000000001c236	jmp	_pid_shutdown_sockets
_coalition_create:
000000000001c23b	movl	%esi, %eax
000000000001c23d	movq	%rdi, %rcx
000000000001c240	movl	$0x1, %edi
000000000001c245	movq	%rcx, %rsi
000000000001c248	movl	%eax, %edx
000000000001c24a	jmp	___coalition
_coalition_terminate:
000000000001c24f	pushq	%rbp
000000000001c250	movq	%rsp, %rbp
000000000001c253	subq	$0x10, %rsp
000000000001c257	movl	%esi, %eax
000000000001c259	leaq	-0x8(%rbp), %rsi
000000000001c25d	movq	%rdi, (%rsi)
000000000001c260	movl	$0x2, %edi
000000000001c265	movl	%eax, %edx
000000000001c267	callq	___coalition
000000000001c26c	addq	$0x10, %rsp
000000000001c270	popq	%rbp
000000000001c271	retq
_coalition_reap:
000000000001c272	pushq	%rbp
000000000001c273	movq	%rsp, %rbp
000000000001c276	subq	$0x10, %rsp
000000000001c27a	movl	%esi, %eax
000000000001c27c	leaq	-0x8(%rbp), %rsi
000000000001c280	movq	%rdi, (%rsi)
000000000001c283	movl	$0x3, %edi
000000000001c288	movl	%eax, %edx
000000000001c28a	callq	___coalition
000000000001c28f	addq	$0x10, %rsp
000000000001c293	popq	%rbp
000000000001c294	retq
_coalition_info_resource_usage:
000000000001c295	pushq	%rbp
000000000001c296	movq	%rsp, %rbp
000000000001c299	subq	$0x10, %rsp
000000000001c29d	movq	%rsi, %rax
000000000001c2a0	leaq	-0x10(%rbp), %rsi
000000000001c2a4	movq	%rdi, (%rsi)
000000000001c2a7	leaq	-0x8(%rbp), %rcx
000000000001c2ab	movq	%rdx, (%rcx)
000000000001c2ae	movl	$0x1, %edi
000000000001c2b3	movq	%rax, %rdx
000000000001c2b6	callq	___coalition_info
000000000001c2bb	addq	$0x10, %rsp
000000000001c2bf	popq	%rbp
000000000001c2c0	retq
_coalition_info_set_name:
000000000001c2c1	pushq	%rbp
000000000001c2c2	movq	%rsp, %rbp
000000000001c2c5	subq	$0x10, %rsp
000000000001c2c9	movq	%rsi, %rax
000000000001c2cc	leaq	-0x10(%rbp), %rsi
000000000001c2d0	movq	%rdi, (%rsi)
000000000001c2d3	leaq	-0x8(%rbp), %rcx
000000000001c2d7	movq	%rdx, (%rcx)
000000000001c2da	movl	$0x2, %edi
000000000001c2df	movq	%rax, %rdx
000000000001c2e2	callq	___coalition_info
000000000001c2e7	addq	$0x10, %rsp
000000000001c2eb	popq	%rbp
000000000001c2ec	retq
_coalition_info_set_efficiency:
000000000001c2ed	pushq	%rbp
000000000001c2ee	movq	%rsp, %rbp
000000000001c2f1	subq	$0x20, %rsp
000000000001c2f5	leaq	-0x18(%rbp), %rax
000000000001c2f9	movq	%rdi, (%rax)
000000000001c2fc	leaq	-0x10(%rbp), %rdx
000000000001c300	movq	%rsi, (%rdx)
000000000001c303	leaq	-0x8(%rbp), %rcx
000000000001c307	movq	$0x8, (%rcx)
000000000001c30e	movl	$0x3, %edi
000000000001c313	movq	%rax, %rsi
000000000001c316	callq	___coalition_info
000000000001c31b	addq	$0x20, %rsp
000000000001c31f	popq	%rbp
000000000001c320	retq
_csr_get_active_config:
000000000001c321	movq	%rdi, %rax
000000000001c324	movl	$0x1, %edi
000000000001c329	movl	$0x4, %edx
000000000001c32e	movq	%rax, %rsi
000000000001c331	jmp	___csrctl
_fs_snapshot_create:
000000000001c336	movl	%edx, %eax
000000000001c338	movq	%rsi, %rdx
000000000001c33b	movl	%edi, %esi
000000000001c33d	movl	$0x1, %edi
000000000001c342	xorl	%ecx, %ecx
000000000001c344	xorl	%r8d, %r8d
000000000001c347	movl	%eax, %r9d
000000000001c34a	jmp	___fs_snapshot
_fs_snapshot_delete:
000000000001c34f	movl	%edx, %eax
000000000001c351	movq	%rsi, %rdx
000000000001c354	movl	%edi, %esi
000000000001c356	movl	$0x2, %edi
000000000001c35b	xorl	%ecx, %ecx
000000000001c35d	xorl	%r8d, %r8d
000000000001c360	movl	%eax, %r9d
000000000001c363	jmp	___fs_snapshot
_fs_snapshot_rename:
000000000001c368	movl	%ecx, %eax
000000000001c36a	movq	%rdx, %rcx
000000000001c36d	movq	%rsi, %rdx
000000000001c370	movl	%edi, %esi
000000000001c372	movl	$0x3, %edi
000000000001c377	xorl	%r8d, %r8d
000000000001c37a	movl	%eax, %r9d
000000000001c37d	jmp	___fs_snapshot
_fs_snapshot_revert:
000000000001c382	movl	%edx, %eax
000000000001c384	movq	%rsi, %rdx
000000000001c387	movl	%edi, %esi
000000000001c389	movl	$0x5, %edi
000000000001c38e	xorl	%ecx, %ecx
000000000001c390	xorl	%r8d, %r8d
000000000001c393	movl	%eax, %r9d
000000000001c396	jmp	___fs_snapshot
_fs_snapshot_root:
000000000001c39b	movl	%edx, %eax
000000000001c39d	movq	%rsi, %rdx
000000000001c3a0	movl	%edi, %esi
000000000001c3a2	movl	$0x6, %edi
000000000001c3a7	xorl	%ecx, %ecx
000000000001c3a9	xorl	%r8d, %r8d
000000000001c3ac	movl	%eax, %r9d
000000000001c3af	jmp	___fs_snapshot
_fs_snapshot_mount:
000000000001c3b4	movl	%ecx, %eax
000000000001c3b6	movq	%rsi, %rcx
000000000001c3b9	movl	%edi, %esi
000000000001c3bb	movl	$0x4, %edi
000000000001c3c0	xorl	%r8d, %r8d
000000000001c3c3	movl	%eax, %r9d
000000000001c3c6	jmp	___fs_snapshot
_pselect:
000000000001c3cb	pushq	%rbp
000000000001c3cc	movq	%rsp, %rbp
000000000001c3cf	pushq	%r15
000000000001c3d1	pushq	%r14
000000000001c3d3	pushq	%r13
000000000001c3d5	pushq	%r12
000000000001c3d7	pushq	%rbx
000000000001c3d8	subq	$0x38, %rsp
000000000001c3dc	movq	%r9, %rbx
000000000001c3df	movq	%rsi, %r12
000000000001c3e2	movl	%edi, %r13d
000000000001c3e5	testq	%r8, %r8
000000000001c3e8	je	0x1c41c
000000000001c3ea	movq	%r8, %r14
000000000001c3ed	cmpq	$0x0, (%r8)
000000000001c3f1	jne	0x1c41f
000000000001c3f3	movq	0x8(%r14), %rax
000000000001c3f7	decq	%rax
000000000001c3fa	cmpq	$0x98967e, %rax
000000000001c400	ja	0x1c41f
000000000001c402	leaq	-0x50(%rbp), %r14
000000000001c406	movl	$0x989680, %eax
000000000001c40b	movq	%rax, %xmm0
000000000001c410	pslldq	$0x8, %xmm0
000000000001c415	movdqa	%xmm0, (%r14)
000000000001c41a	jmp	0x1c41f
000000000001c41c	xorl	%r14d, %r14d
000000000001c41f	movl	%r13d, %edi
000000000001c422	movq	%r12, %rsi
000000000001c425	movq	%rdx, -0x30(%rbp)
000000000001c429	movq	%rcx, -0x38(%rbp)
000000000001c42d	movq	%r14, %r8
000000000001c430	movq	%rbx, %r9
000000000001c433	callq	___pselect
000000000001c438	movl	%eax, %r15d
000000000001c43b	cmpl	$-0x1, %eax
000000000001c43e	jne	0x1c4fc
000000000001c444	callq	___error
000000000001c449	movl	$0xffffffff, %r15d
000000000001c44f	cmpl	$0x4e, (%rax)
000000000001c452	jne	0x1c4fc
000000000001c458	testq	%r14, %r14
000000000001c45b	je	0x1c48a
000000000001c45d	movq	(%r14), %rax
000000000001c460	leaq	-0x60(%rbp), %rcx
000000000001c464	movq	%rax, (%rcx)
000000000001c467	movabsq	$0x20c49ba5e353f7cf, %rax
000000000001c471	imulq	0x8(%r14)
000000000001c475	movq	%rcx, %r14
000000000001c478	movq	%rdx, %rax
000000000001c47b	shrq	$0x3f, %rax
000000000001c47f	shrq	$0x7, %rdx
000000000001c483	addl	%eax, %edx
000000000001c485	movl	%edx, 0x8(%rcx)
000000000001c488	jmp	0x1c48d
000000000001c48a	xorl	%r14d, %r14d
000000000001c48d	movq	-0x38(%rbp), %rcx
000000000001c491	movq	-0x30(%rbp), %rdx
000000000001c495	testq	%rbx, %rbx
000000000001c498	je	0x1c4eb
000000000001c49a	leaq	-0x3c(%rbp), %rdx
000000000001c49e	movl	$0x3, %edi
000000000001c4a3	movq	%rbx, %rsi
000000000001c4a6	callq	___pthread_sigmask
000000000001c4ab	movl	%eax, %r15d
000000000001c4ae	testl	%eax, %eax
000000000001c4b0	jne	0x1c4fc
000000000001c4b2	movl	%r13d, %edi
000000000001c4b5	movq	%r12, %rsi
000000000001c4b8	movq	-0x30(%rbp), %rdx
000000000001c4bc	movq	-0x38(%rbp), %rcx
000000000001c4c0	movq	%r14, %r8
000000000001c4c3	callq	_select
000000000001c4c8	movl	%eax, %r15d
000000000001c4cb	callq	___error
000000000001c4d0	movl	(%rax), %ebx
000000000001c4d2	leaq	-0x3c(%rbp), %rsi
000000000001c4d6	movl	$0x3, %edi
000000000001c4db	xorl	%edx, %edx
000000000001c4dd	callq	___pthread_sigmask
000000000001c4e2	callq	___error
000000000001c4e7	movl	%ebx, (%rax)
000000000001c4e9	jmp	0x1c4fc
000000000001c4eb	movl	%r13d, %edi
000000000001c4ee	movq	%r12, %rsi
000000000001c4f1	movq	%r14, %r8
000000000001c4f4	callq	_select
000000000001c4f9	movl	%eax, %r15d
000000000001c4fc	movl	%r15d, %eax
000000000001c4ff	addq	$0x38, %rsp
000000000001c503	popq	%rbx
000000000001c504	popq	%r12
000000000001c506	popq	%r13
000000000001c508	popq	%r14
000000000001c50a	popq	%r15
000000000001c50c	popq	%rbp
000000000001c50d	retq
_kdebug_trace_string:
000000000001c50e	pushq	%rbp
000000000001c50f	movq	%rsp, %rbp
000000000001c512	pushq	%r15
000000000001c514	pushq	%r14
000000000001c516	pushq	%rbx
000000000001c517	pushq	%rax
000000000001c518	movq	%rdx, %r14
000000000001c51b	movq	%rsi, %r15
000000000001c51e	movl	%edi, %ebx
000000000001c520	callq	_kdebug_is_enabled
000000000001c525	testb	%al, %al
000000000001c527	je	0x1c54d
000000000001c529	cmpq	$-0x1, %r15
000000000001c52d	je	0x1c539
000000000001c52f	testq	%r15, %r15
000000000001c532	jne	0x1c55a
000000000001c534	testq	%r14, %r14
000000000001c537	jne	0x1c55a
000000000001c539	callq	___error
000000000001c53e	movl	$0x16, (%rax)
000000000001c544	movq	$-0x1, %rax
000000000001c54b	jmp	0x1c54f
000000000001c54d	xorl	%eax, %eax
000000000001c54f	addq	$0x8, %rsp
000000000001c553	popq	%rbx
000000000001c554	popq	%r14
000000000001c556	popq	%r15
000000000001c558	popq	%rbp
000000000001c559	retq
000000000001c55a	movl	%ebx, %edi
000000000001c55c	movq	%r15, %rsi
000000000001c55f	movq	%r14, %rdx
000000000001c562	addq	$0x8, %rsp
000000000001c566	popq	%rbx
000000000001c567	popq	%r14
000000000001c569	popq	%r15
000000000001c56b	popq	%rbp
000000000001c56c	jmp	___kdebug_trace_string
_kdebug_signpost:
000000000001c571	shll	$0x2, %edi
000000000001c574	jmp	_kdebug_signpost_internal
_pselect$1050:
000000000001c579	pushq	%rbp
000000000001c57a	movq	%rsp, %rbp
000000000001c57d	pushq	%r15
000000000001c57f	pushq	%r14
000000000001c581	pushq	%r13
000000000001c583	pushq	%r12
000000000001c585	pushq	%rbx
000000000001c586	subq	$0x28, %rsp
000000000001c58a	cmpl	$0x401, %edi
000000000001c590	jl	0x1c5a8
000000000001c592	callq	___error
000000000001c597	movl	$0x16, (%rax)
000000000001c59d	movl	$0xffffffff, %r14d
000000000001c5a3	jmp	0x1c682
000000000001c5a8	movq	%r9, %r13
000000000001c5ab	movq	%r8, %r15
000000000001c5ae	movq	%rsi, %r12
000000000001c5b1	movl	%edi, %ebx
000000000001c5b3	movq	%rdx, -0x30(%rbp)
000000000001c5b7	movq	%rcx, -0x38(%rbp)
000000000001c5bb	callq	___pselect
000000000001c5c0	movl	%eax, %r14d
000000000001c5c3	cmpl	$-0x1, %eax
000000000001c5c6	jne	0x1c682
000000000001c5cc	callq	___error
000000000001c5d1	movl	$0xffffffff, %r14d
000000000001c5d7	cmpl	$0x4e, (%rax)
000000000001c5da	jne	0x1c682
000000000001c5e0	testq	%r15, %r15
000000000001c5e3	je	0x1c612
000000000001c5e5	movq	(%r15), %rax
000000000001c5e8	leaq	-0x50(%rbp), %rcx
000000000001c5ec	movq	%rax, (%rcx)
000000000001c5ef	movabsq	$0x20c49ba5e353f7cf, %rax
000000000001c5f9	imulq	0x8(%r15)
000000000001c5fd	movq	%rcx, %r15
000000000001c600	movq	%rdx, %rax
000000000001c603	shrq	$0x3f, %rax
000000000001c607	shrq	$0x7, %rdx
000000000001c60b	addl	%eax, %edx
000000000001c60d	movl	%edx, 0x8(%rcx)
000000000001c610	jmp	0x1c615
000000000001c612	xorl	%r15d, %r15d
000000000001c615	movq	-0x38(%rbp), %rcx
000000000001c619	movq	-0x30(%rbp), %rdx
000000000001c61d	testq	%r13, %r13
000000000001c620	je	0x1c672
000000000001c622	leaq	-0x3c(%rbp), %rdx
000000000001c626	movl	$0x3, %edi
000000000001c62b	movq	%r13, %rsi
000000000001c62e	callq	___pthread_sigmask
000000000001c633	movl	%eax, %r14d
000000000001c636	testl	%eax, %eax
000000000001c638	jne	0x1c682
000000000001c63a	movl	%ebx, %edi
000000000001c63c	movq	%r12, %rsi
000000000001c63f	movq	-0x30(%rbp), %rdx
000000000001c643	movq	-0x38(%rbp), %rcx
000000000001c647	movq	%r15, %r8
000000000001c64a	callq	_select$DARWIN_EXTSN
000000000001c64f	movl	%eax, %r14d
000000000001c652	callq	___error
000000000001c657	movl	(%rax), %ebx
000000000001c659	leaq	-0x3c(%rbp), %rsi
000000000001c65d	movl	$0x3, %edi
000000000001c662	xorl	%edx, %edx
000000000001c664	callq	___pthread_sigmask
000000000001c669	callq	___error
000000000001c66e	movl	%ebx, (%rax)
000000000001c670	jmp	0x1c682
000000000001c672	movl	%ebx, %edi
000000000001c674	movq	%r12, %rsi
000000000001c677	movq	%r15, %r8
000000000001c67a	callq	_select$DARWIN_EXTSN
000000000001c67f	movl	%eax, %r14d
000000000001c682	movl	%r14d, %eax
000000000001c685	addq	$0x28, %rsp
000000000001c689	popq	%rbx
000000000001c68a	popq	%r12
000000000001c68c	popq	%r13
000000000001c68e	popq	%r14
000000000001c690	popq	%r15
000000000001c692	popq	%rbp
000000000001c693	retq
_pselect$NOCANCEL:
000000000001c694	pushq	%rbp
000000000001c695	movq	%rsp, %rbp
000000000001c698	pushq	%r15
000000000001c69a	pushq	%r14
000000000001c69c	pushq	%r13
000000000001c69e	pushq	%r12
000000000001c6a0	pushq	%rbx
000000000001c6a1	subq	$0x28, %rsp
000000000001c6a5	cmpl	$0x401, %edi
000000000001c6ab	jl	0x1c6c3
000000000001c6ad	callq	___error
000000000001c6b2	movl	$0x16, (%rax)
000000000001c6b8	movl	$0xffffffff, %r14d
000000000001c6be	jmp	0x1c79d
000000000001c6c3	movq	%r9, %r13
000000000001c6c6	movq	%r8, %r15
000000000001c6c9	movq	%rsi, %r12
000000000001c6cc	movl	%edi, %ebx
000000000001c6ce	movq	%rdx, -0x30(%rbp)
000000000001c6d2	movq	%rcx, -0x38(%rbp)
000000000001c6d6	callq	___pselect_nocancel
000000000001c6db	movl	%eax, %r14d
000000000001c6de	cmpl	$-0x1, %eax
000000000001c6e1	jne	0x1c79d
000000000001c6e7	callq	___error
000000000001c6ec	movl	$0xffffffff, %r14d
000000000001c6f2	cmpl	$0x4e, (%rax)
000000000001c6f5	jne	0x1c79d
000000000001c6fb	testq	%r15, %r15
000000000001c6fe	je	0x1c72d
000000000001c700	movq	(%r15), %rax
000000000001c703	leaq	-0x50(%rbp), %rcx
000000000001c707	movq	%rax, (%rcx)
000000000001c70a	movabsq	$0x20c49ba5e353f7cf, %rax
000000000001c714	imulq	0x8(%r15)
000000000001c718	movq	%rcx, %r15
000000000001c71b	movq	%rdx, %rax
000000000001c71e	shrq	$0x3f, %rax
000000000001c722	shrq	$0x7, %rdx
000000000001c726	addl	%eax, %edx
000000000001c728	movl	%edx, 0x8(%rcx)
000000000001c72b	jmp	0x1c730
000000000001c72d	xorl	%r15d, %r15d
000000000001c730	movq	-0x38(%rbp), %rcx
000000000001c734	movq	-0x30(%rbp), %rdx
000000000001c738	testq	%r13, %r13
000000000001c73b	je	0x1c78d
000000000001c73d	leaq	-0x3c(%rbp), %rdx
000000000001c741	movl	$0x3, %edi
000000000001c746	movq	%r13, %rsi
000000000001c749	callq	___pthread_sigmask
000000000001c74e	movl	%eax, %r14d
000000000001c751	testl	%eax, %eax
000000000001c753	jne	0x1c79d
000000000001c755	movl	%ebx, %edi
000000000001c757	movq	%r12, %rsi
000000000001c75a	movq	-0x30(%rbp), %rdx
000000000001c75e	movq	-0x38(%rbp), %rcx
000000000001c762	movq	%r15, %r8
000000000001c765	callq	_select$DARWIN_EXTSN$NOCANCEL
000000000001c76a	movl	%eax, %r14d
000000000001c76d	callq	___error
000000000001c772	movl	(%rax), %ebx
000000000001c774	leaq	-0x3c(%rbp), %rsi
000000000001c778	movl	$0x3, %edi
000000000001c77d	xorl	%edx, %edx
000000000001c77f	callq	___pthread_sigmask
000000000001c784	callq	___error
000000000001c789	movl	%ebx, (%rax)
000000000001c78b	jmp	0x1c79d
000000000001c78d	movl	%ebx, %edi
000000000001c78f	movq	%r12, %rsi
000000000001c792	movq	%r15, %r8
000000000001c795	callq	_select$DARWIN_EXTSN$NOCANCEL
000000000001c79a	movl	%eax, %r14d
000000000001c79d	movl	%r14d, %eax
000000000001c7a0	addq	$0x28, %rsp
000000000001c7a4	popq	%rbx
000000000001c7a5	popq	%r12
000000000001c7a7	popq	%r13
000000000001c7a9	popq	%r14
000000000001c7ab	popq	%r15
000000000001c7ad	popq	%rbp
000000000001c7ae	retq
000000000001c7af	nop
_os_nexus_attr_create:
000000000001c7b0	pushq	%rbp
000000000001c7b1	movq	%rsp, %rbp
000000000001c7b4	pushq	%rbx
000000000001c7b5	pushq	%rax
000000000001c7b6	movl	$0x98, %edi
000000000001c7bb	callq	_malloc
000000000001c7c0	movq	%rax, %rbx
000000000001c7c3	testq	%rax, %rax
000000000001c7c6	je	0x1c7d5
000000000001c7c8	movl	$0x98, %esi
000000000001c7cd	movq	%rbx, %rdi
000000000001c7d0	callq	_bzero
000000000001c7d5	movq	%rbx, %rax
000000000001c7d8	addq	$0x8, %rsp
000000000001c7dc	popq	%rbx
000000000001c7dd	popq	%rbp
000000000001c7de	retq
_os_nexus_attr_clone:
000000000001c7df	pushq	%rbp
000000000001c7e0	movq	%rsp, %rbp
000000000001c7e3	pushq	%r14
000000000001c7e5	pushq	%rbx
000000000001c7e6	movq	%rdi, %r14
000000000001c7e9	callq	_os_nexus_attr_create
000000000001c7ee	movq	%rax, %rbx
000000000001c7f1	testq	%r14, %r14
000000000001c7f4	je	0x1c80b
000000000001c7f6	testq	%rbx, %rbx
000000000001c7f9	je	0x1c80b
000000000001c7fb	movl	$0x98, %edx
000000000001c800	movq	%r14, %rdi
000000000001c803	movq	%rbx, %rsi
000000000001c806	callq	_bcopy
000000000001c80b	movq	%rbx, %rax
000000000001c80e	popq	%rbx
000000000001c80f	popq	%r14
000000000001c811	popq	%rbp
000000000001c812	retq
_os_nexus_attr_set:
000000000001c813	movl	$0x16, %eax
000000000001c818	testq	%rdi, %rdi
000000000001c81b	je	0x1c839
000000000001c81d	cmpl	$0x11, %esi
000000000001c820	ja	0x1c839
000000000001c822	movl	$0x2d, %eax
000000000001c827	movl	%esi, %ecx
000000000001c829	leaq	0x78(%rip), %rsi
000000000001c830	movslq	(%rsi,%rcx,4), %rcx
000000000001c834	addq	%rsi, %rcx
000000000001c837	jmpq	*%rcx
000000000001c839	retq
000000000001c83a	orb	$0x1, (%rdi)
000000000001c83d	movq	%rdx, 0x8(%rdi)
000000000001c841	jmp	0x1c8a3
000000000001c843	orb	$0x2, (%rdi)
000000000001c846	movq	%rdx, 0x10(%rdi)
000000000001c84a	jmp	0x1c8a3
000000000001c84c	orb	$0x4, (%rdi)
000000000001c84f	movq	%rdx, 0x18(%rdi)
000000000001c853	jmp	0x1c8a3
000000000001c855	orb	$0x8, (%rdi)
000000000001c858	movq	%rdx, 0x20(%rdi)
000000000001c85c	jmp	0x1c8a3
000000000001c85e	orb	$0x10, (%rdi)
000000000001c861	movq	%rdx, 0x28(%rdi)
000000000001c865	jmp	0x1c8a3
000000000001c867	orb	$-0x80, (%rdi)
000000000001c86a	movq	%rdx, 0x40(%rdi)
000000000001c86e	jmp	0x1c8a3
000000000001c870	orb	$0x4, 0x1(%rdi)
000000000001c874	movq	%rdx, 0x58(%rdi)
000000000001c878	jmp	0x1c8a3
000000000001c87a	orb	$0x1, 0x1(%rdi)
000000000001c87e	movq	%rdx, 0x48(%rdi)
000000000001c882	jmp	0x1c8a3
000000000001c884	orb	$0x2, 0x1(%rdi)
000000000001c888	movq	%rdx, 0x50(%rdi)
000000000001c88c	jmp	0x1c8a3
000000000001c88e	orb	$0x10, 0x1(%rdi)
000000000001c892	movq	%rdx, 0x70(%rdi)
000000000001c896	jmp	0x1c8a3
000000000001c898	orb	$0x4, 0x2(%rdi)
000000000001c89c	movq	%rdx, 0x90(%rdi)
000000000001c8a3	xorl	%eax, %eax
000000000001c8a5	retq
000000000001c8a6	nop
000000000001c8a8	xchgl	%edx, %eax
000000000001c8a9	.byte 0xff #bad opcode
000000000001c8aa	.byte 0xff #bad opcode
000000000001c8ab	lcalll	*-0x5b000001(%rbx)
000000000001c8b1	.byte 0xff #bad opcode
000000000001c8b2	.byte 0xff #bad opcode
000000000001c8b3	ljmpl	*-0x49000001(%rbp)
000000000001c8b9	.byte 0xff #bad opcode
000000000001c8ba	.byte 0xff #bad opcode
000000000001c8bb	callq	*-0x40000001(%rcx)
000000000001c8c1	.byte 0xff #bad opcode
000000000001c8c2	.byte 0xff #bad opcode
000000000001c8c3	decl	%eax
000000000001c8c5	.byte 0xff #bad opcode
000000000001c8c6	.byte 0xff #bad opcode
000000000001c8c7	callq	*%rdx
000000000001c8c9	.byte 0xff #bad opcode
000000000001c8ca	.byte 0xff #bad opcode
000000000001c8cb	.byte 0xff #bad opcode
000000000001c8cc	fdivr	%st(0), %st(7)
000000000001c8ce	.byte 0xff #bad opcode
000000000001c8cf	callq	*-0x6e000001(%rcx)
000000000001c8d5	.byte 0xff #bad opcode
000000000001c8d6	.byte 0xff #bad opcode
000000000001c8d7	callq	*-0x19000001(%rcx)
000000000001c8dd	.byte 0xff #bad opcode
000000000001c8de	.byte 0xff #bad opcode
000000000001c8df	callq	*-0x6e000001(%rcx)
000000000001c8e5	.byte 0xff #bad opcode
000000000001c8e6	.byte 0xff #bad opcode
000000000001c8e7	callq	*-0xf000001(%rcx)
000000000001c8ed	.byte 0xff #bad opcode
000000000001c8ee	.byte 0xff #bad opcode
000000000001c8ef	.byte 0xff #bad opcode
_os_nexus_attr_get:
000000000001c8f0	movl	$0x16, %eax
000000000001c8f5	testq	%rdi, %rdi
000000000001c8f8	je	0x1c99a
000000000001c8fe	testq	%rdx, %rdx
000000000001c901	je	0x1c99a
000000000001c907	cmpl	$0x11, %esi
000000000001c90a	ja	0x1c99a
000000000001c910	movl	%esi, %eax
000000000001c912	leaq	0x83(%rip), %rcx
000000000001c919	movslq	(%rcx,%rax,4), %rax
000000000001c91d	addq	%rcx, %rax
000000000001c920	jmpq	*%rax
000000000001c922	movq	0x8(%rdi), %rax
000000000001c926	jmp	0x1c995
000000000001c928	movq	0x10(%rdi), %rax
000000000001c92c	jmp	0x1c995
000000000001c92e	movq	0x18(%rdi), %rax
000000000001c932	jmp	0x1c995
000000000001c934	movq	0x20(%rdi), %rax
000000000001c938	jmp	0x1c995
000000000001c93a	movq	0x28(%rdi), %rax
000000000001c93e	jmp	0x1c995
000000000001c940	movq	0x30(%rdi), %rax
000000000001c944	jmp	0x1c995
000000000001c946	movq	0x40(%rdi), %rax
000000000001c94a	jmp	0x1c995
000000000001c94c	movq	0x58(%rdi), %rax
000000000001c950	jmp	0x1c995
000000000001c952	movq	0x48(%rdi), %rax
000000000001c956	jmp	0x1c995
000000000001c958	movq	0x50(%rdi), %rax
000000000001c95c	jmp	0x1c995
000000000001c95e	movq	0x60(%rdi), %rax
000000000001c962	jmp	0x1c995
000000000001c964	movq	0x38(%rdi), %rax
000000000001c968	jmp	0x1c995
000000000001c96a	movq	0x68(%rdi), %rax
000000000001c96e	jmp	0x1c995
000000000001c970	movq	0x70(%rdi), %rax
000000000001c974	jmp	0x1c995
000000000001c976	movq	0x78(%rdi), %rax
000000000001c97a	jmp	0x1c995
000000000001c97c	movq	0x80(%rdi), %rax
000000000001c983	jmp	0x1c995
000000000001c985	movq	0x88(%rdi), %rax
000000000001c98c	jmp	0x1c995
000000000001c98e	movq	0x90(%rdi), %rax
000000000001c995	movq	%rax, (%rdx)
000000000001c998	xorl	%eax, %eax
000000000001c99a	retq
000000000001c99b	nop
000000000001c99c	xchgb	%bh, %bh
000000000001c99e	.byte 0xff #bad opcode
000000000001c99f	decl	-0x6d0001(%rdi,%rdi,8)
000000000001c9a6	.byte 0xff #bad opcode
000000000001c9a7	lcalll	*-0x61000001(%rax)
000000000001c9ad	.byte 0xff #bad opcode
000000000001c9ae	.byte 0xff #bad opcode
000000000001c9af	jmpq	*-0x550001(%rdi,%rdi,8)
000000000001c9b6	.byte 0xff #bad opcode
000000000001c9b7	pushq	-0x49000001(%rax)
000000000001c9bd	.byte 0xff #bad opcode
000000000001c9be	.byte 0xff #bad opcode
000000000001c9bf	.byte 0xff #bad opcode
000000000001c9c0	movl	$0xc2ffffff, %esp
000000000001c9c5	.byte 0xff #bad opcode
000000000001c9c6	.byte 0xff #bad opcode
000000000001c9c7	decl	%eax
000000000001c9c9	.byte 0xff #bad opcode
000000000001c9ca	.byte 0xff #bad opcode
000000000001c9cb	decl	%esi
000000000001c9cd	.byte 0xff #bad opcode
000000000001c9ce	.byte 0xff #bad opcode
000000000001c9cf	callq	*%rsp
000000000001c9d1	.byte 0xff #bad opcode
000000000001c9d2	.byte 0xff #bad opcode
000000000001c9d3	.byte 0xff #bad opcode
000000000001c9d4	.byte 0xda #bad opcode
000000000001c9d5	.byte 0xff #bad opcode
000000000001c9d6	.byte 0xff #bad opcode
000000000001c9d7	jmpq	*%rax
000000000001c9d9	.byte 0xff #bad opcode
000000000001c9da	.byte 0xff #bad opcode
000000000001c9db	.byte 0xff #bad opcode
000000000001c9dc	jmp	0xfffffffff301c9e0
000000000001c9e1	.byte 0xff #bad opcode
000000000001c9e2	.byte 0xff #bad opcode
000000000001c9e3	.byte 0xff #bad opcode
_os_nexus_attr_destroy:
000000000001c9e4	jmp	_free
_os_nexus_controller_create:
000000000001c9e9	pushq	%rbp
000000000001c9ea	movq	%rsp, %rbp
000000000001c9ed	pushq	%r14
000000000001c9ef	pushq	%rbx
000000000001c9f0	subq	$0x10, %rsp
000000000001c9f4	leaq	-0x20(%rbp), %rbx
000000000001c9f8	movl	$0x10, %esi
000000000001c9fd	movq	%rbx, %rdi
000000000001ca00	callq	_bzero
000000000001ca05	movl	$0x1, (%rbx)
000000000001ca0b	movl	$0x10, %esi
000000000001ca10	movq	%rbx, %rdi
000000000001ca13	callq	___nexus_open
000000000001ca18	cmpl	$-0x1, %eax
000000000001ca1b	je	0x1ca4c
000000000001ca1d	movl	%eax, %r14d
000000000001ca20	movl	$0x10, %edi
000000000001ca25	callq	_malloc
000000000001ca2a	movq	%rax, %rbx
000000000001ca2d	testq	%rax, %rax
000000000001ca30	je	0x1ca50
000000000001ca32	movl	$0x10, %esi
000000000001ca37	movq	%rbx, %rdi
000000000001ca3a	callq	_bzero
000000000001ca3f	movl	%r14d, (%rbx)
000000000001ca42	movq	-0x18(%rbp), %rax
000000000001ca46	movq	%rax, 0x8(%rbx)
000000000001ca4a	jmp	0x1ca5c
000000000001ca4c	xorl	%ebx, %ebx
000000000001ca4e	jmp	0x1ca5c
000000000001ca50	leaq	-0x18(%rbp), %rsi
000000000001ca54	movl	%r14d, %edi
000000000001ca57	callq	_guarded_close_np
000000000001ca5c	movq	%rbx, %rax
000000000001ca5f	addq	$0x10, %rsp
000000000001ca63	popq	%rbx
000000000001ca64	popq	%r14
000000000001ca66	popq	%rbp
000000000001ca67	retq
_os_nexus_controller_get_fd:
000000000001ca68	movl	(%rdi), %eax
000000000001ca6a	retq
_os_nexus_controller_register_provider:
000000000001ca6b	pushq	%rbp
000000000001ca6c	movq	%rsp, %rbp
000000000001ca6f	pushq	%r15
000000000001ca71	pushq	%r14
000000000001ca73	pushq	%r13
000000000001ca75	pushq	%r12
000000000001ca77	pushq	%rbx
000000000001ca78	andq	$-0x40, %rsp
000000000001ca7c	subq	$0x180, %rsp
000000000001ca83	movq	%r8, 0x38(%rsp)
000000000001ca88	movq	%rcx, %r13
000000000001ca8b	movl	%edx, %r12d
000000000001ca8e	movq	%rsi, %rbx
000000000001ca91	movq	%rdi, %r15
000000000001ca94	leaq	0x40(%rsp), %r14
000000000001ca99	movl	$0x100, %esi
000000000001ca9e	movq	%r14, %rdi
000000000001caa1	callq	_bzero
000000000001caa6	movl	$0x1, (%r14)
000000000001caad	leaq	0x80(%rsp), %r14
000000000001cab5	movl	$0x40, %edx
000000000001caba	movq	%r14, %rdi
000000000001cabd	movq	%rbx, %rsi
000000000001cac0	callq	_strlcpy
000000000001cac5	movq	%rax, %rcx
000000000001cac8	movl	%ecx, 0x40(%r14)
000000000001cacc	movl	$0x16, %eax
000000000001cad1	testl	%ecx, %ecx
000000000001cad3	je	0x1cc54
000000000001cad9	movl	%r12d, 0xc4(%rsp)
000000000001cae1	testq	%r13, %r13
000000000001cae4	je	0x1cc37
000000000001caea	movq	(%r13), %rcx
000000000001caee	testb	$0x1, %cl
000000000001caf1	je	0x1cb03
000000000001caf3	orb	$0x1, 0x44(%rsp)
000000000001caf8	movl	0x8(%r13), %edx
000000000001cafc	movl	%edx, 0xd8(%rsp)
000000000001cb03	testb	$0x2, %cl
000000000001cb06	je	0x1cb18
000000000001cb08	orb	$0x2, 0x44(%rsp)
000000000001cb0d	movl	0x10(%r13), %edx
000000000001cb11	movl	%edx, 0xdc(%rsp)
000000000001cb18	testb	$0x4, %cl
000000000001cb1b	je	0x1cb2d
000000000001cb1d	orb	$0x4, 0x44(%rsp)
000000000001cb22	movl	0x18(%r13), %edx
000000000001cb26	movl	%edx, 0xe0(%rsp)
000000000001cb2d	testb	$0x8, %cl
000000000001cb30	je	0x1cb42
000000000001cb32	orb	$0x8, 0x44(%rsp)
000000000001cb37	movl	0x20(%r13), %edx
000000000001cb3b	movl	%edx, 0xe4(%rsp)
000000000001cb42	testb	$0x10, %cl
000000000001cb45	je	0x1cb57
000000000001cb47	orb	$0x10, 0x44(%rsp)
000000000001cb4c	movl	0x28(%r13), %edx
000000000001cb50	movl	%edx, 0xe8(%rsp)
000000000001cb57	testb	%cl, %cl
000000000001cb59	jns	0x1cb7e
000000000001cb5b	orb	$-0x80, 0x44(%rsp)
000000000001cb60	movl	0xd0(%rsp), %edx
000000000001cb67	movl	%edx, %esi
000000000001cb69	andl	$-0x2, %esi
000000000001cb6c	orl	$0x1, %edx
000000000001cb6f	cmpq	$0x0, 0x40(%r13)
000000000001cb74	cmovel	%esi, %edx
000000000001cb77	movl	%edx, 0xd0(%rsp)
000000000001cb7e	btl	$0x8, %ecx
000000000001cb82	jae	0x1cb94
000000000001cb84	orb	$0x1, 0x45(%rsp)
000000000001cb89	movl	0x48(%r13), %edx
000000000001cb8d	movl	%edx, 0xf4(%rsp)
000000000001cb94	btl	$0x9, %ecx
000000000001cb98	jae	0x1cbaa
000000000001cb9a	orb	$0x2, 0x45(%rsp)
000000000001cb9f	movl	0x50(%r13), %edx
000000000001cba3	movl	%edx, 0xf8(%rsp)
000000000001cbaa	btl	$0xa, %ecx
000000000001cbae	jae	0x1cbc0
000000000001cbb0	orb	$0x4, 0x45(%rsp)
000000000001cbb5	movl	0x58(%r13), %edx
000000000001cbb9	movl	%edx, 0xfc(%rsp)
000000000001cbc0	btl	$0xc, %ecx
000000000001cbc4	jae	0x1cbf0
000000000001cbc6	cmpl	$0x2, %r12d
000000000001cbca	jne	0x1cc54
000000000001cbd0	movq	0x70(%r13), %rdx
000000000001cbd4	cmpq	$0x2, %rdx
000000000001cbd8	jne	0x1cbe4
000000000001cbda	cmpl	$0x4, 0xd8(%rsp)
000000000001cbe2	jne	0x1cc54
000000000001cbe4	orb	$0x10, 0x45(%rsp)
000000000001cbe9	movl	%edx, 0x108(%rsp)
000000000001cbf0	btl	$0x11, %ecx
000000000001cbf4	jae	0x1cc0c
000000000001cbf6	cmpl	$0x2, %r12d
000000000001cbfa	jne	0x1cc54
000000000001cbfc	orb	$0x2, 0x46(%rsp)
000000000001cc01	movl	0x60(%r13), %eax
000000000001cc05	movl	%eax, 0x100(%rsp)
000000000001cc0c	btl	$0x12, %ecx
000000000001cc10	jae	0x1cc37
000000000001cc12	orb	$0x4, 0x46(%rsp)
000000000001cc17	cmpq	$0x0, 0x90(%r13)
000000000001cc1f	movl	0xd0(%rsp), %eax
000000000001cc26	je	0x1cc2d
000000000001cc28	orl	$0x2, %eax
000000000001cc2b	jmp	0x1cc30
000000000001cc2d	andl	$-0x3, %eax
000000000001cc30	movl	%eax, 0xd0(%rsp)
000000000001cc37	movl	(%r15), %edi
000000000001cc3a	leaq	0x40(%rsp), %rsi
000000000001cc3f	movl	$0x100, %edx
000000000001cc44	movl	$0x10, %r8d
000000000001cc4a	movq	0x38(%rsp), %rcx
000000000001cc4f	callq	___nexus_register
000000000001cc54	leaq	-0x28(%rbp), %rsp
000000000001cc58	popq	%rbx
000000000001cc59	popq	%r12
000000000001cc5b	popq	%r13
000000000001cc5d	popq	%r14
000000000001cc5f	popq	%r15
000000000001cc61	popq	%rbp
000000000001cc62	retq
_os_nexus_controller_deregister_provider:
000000000001cc63	movl	(%rdi), %edi
000000000001cc65	movl	$0x10, %edx
000000000001cc6a	jmp	___nexus_deregister
_os_nexus_controller_alloc_provider_instance:
000000000001cc6f	movq	%rdx, %rax
000000000001cc72	movl	(%rdi), %edi
000000000001cc74	movl	$0x10, %edx
000000000001cc79	movl	$0x10, %r8d
000000000001cc7f	movq	%rax, %rcx
000000000001cc82	jmp	___nexus_create
_os_nexus_controller_free_provider_instance:
000000000001cc87	movl	(%rdi), %edi
000000000001cc89	movl	$0x10, %edx
000000000001cc8e	jmp	___nexus_destroy
_os_nexus_controller_bind_provider_instance:
000000000001cc93	pushq	%rbp
000000000001cc94	movq	%rsp, %rbp
000000000001cc97	pushq	%r15
000000000001cc99	pushq	%r14
000000000001cc9b	pushq	%r13
000000000001cc9d	pushq	%r12
000000000001cc9f	pushq	%rbx
000000000001cca0	subq	$0x48, %rsp
000000000001cca4	movq	%r9, -0x30(%rbp)
000000000001cca8	movq	%r8, %rbx
000000000001ccab	movl	%ecx, %r12d
000000000001ccae	movl	%edx, %r13d
000000000001ccb1	movq	%rsi, %r14
000000000001ccb4	movq	%rdi, %r15
000000000001ccb7	leaq	-0x68(%rbp), %rdi
000000000001ccbb	movl	$0x38, %esi
000000000001ccc0	callq	_bzero
000000000001ccc5	testq	%r14, %r14
000000000001ccc8	je	0x1ccdb
000000000001ccca	leaq	-0x68(%rbp), %rsi
000000000001ccce	movl	$0x10, %edx
000000000001ccd3	movq	%r14, %rdi
000000000001ccd6	callq	_bcopy
000000000001ccdb	movl	0x18(%rbp), %r14d
000000000001ccdf	testq	%rbx, %rbx
000000000001cce2	je	0x1ccf5
000000000001cce4	leaq	-0x50(%rbp), %rsi
000000000001cce8	movl	$0x10, %edx
000000000001cced	movq	%rbx, %rdi
000000000001ccf0	callq	_bcopy
000000000001ccf5	movl	%r13d, -0x58(%rbp)
000000000001ccf9	movl	%r12d, -0x34(%rbp)
000000000001ccfd	testb	$0x1, %r14b
000000000001cd01	je	0x1cd07
000000000001cd03	orb	$0x1, -0x54(%rbp)
000000000001cd07	testb	$0x2, %r14b
000000000001cd0b	je	0x1cd11
000000000001cd0d	orb	$0x2, -0x54(%rbp)
000000000001cd11	testb	$0x4, %r14b
000000000001cd15	je	0x1cd29
000000000001cd17	orb	$0x4, -0x54(%rbp)
000000000001cd1b	movl	0x10(%rbp), %eax
000000000001cd1e	movq	-0x30(%rbp), %rcx
000000000001cd22	movq	%rcx, -0x40(%rbp)
000000000001cd26	movl	%eax, -0x38(%rbp)
000000000001cd29	movl	(%r15), %edi
000000000001cd2c	leaq	-0x68(%rbp), %rdx
000000000001cd30	movl	$0x15, %esi
000000000001cd35	movl	$0x38, %ecx
000000000001cd3a	callq	___nexus_set_opt
000000000001cd3f	addq	$0x48, %rsp
000000000001cd43	popq	%rbx
000000000001cd44	popq	%r12
000000000001cd46	popq	%r13
000000000001cd48	popq	%r14
000000000001cd4a	popq	%r15
000000000001cd4c	popq	%rbp
000000000001cd4d	retq
_os_nexus_controller_unbind_provider_instance:
000000000001cd4e	pushq	%rbp
000000000001cd4f	movq	%rsp, %rbp
000000000001cd52	pushq	%r15
000000000001cd54	pushq	%r14
000000000001cd56	pushq	%rbx
000000000001cd57	subq	$0x18, %rsp
000000000001cd5b	movl	%edx, %r14d
000000000001cd5e	movq	%rsi, %rbx
000000000001cd61	movq	%rdi, %r15
000000000001cd64	leaq	-0x30(%rbp), %rdi
000000000001cd68	movl	$0x14, %esi
000000000001cd6d	callq	_bzero
000000000001cd72	testq	%rbx, %rbx
000000000001cd75	je	0x1cd88
000000000001cd77	leaq	-0x30(%rbp), %rsi
000000000001cd7b	movl	$0x10, %edx
000000000001cd80	movq	%rbx, %rdi
000000000001cd83	callq	_bcopy
000000000001cd88	leaq	-0x30(%rbp), %rdx
000000000001cd8c	movl	%r14d, 0x10(%rdx)
000000000001cd90	movl	(%r15), %edi
000000000001cd93	movl	$0x16, %esi
000000000001cd98	movl	$0x14, %ecx
000000000001cd9d	callq	___nexus_set_opt
000000000001cda2	addq	$0x18, %rsp
000000000001cda6	popq	%rbx
000000000001cda7	popq	%r14
000000000001cda9	popq	%r15
000000000001cdab	popq	%rbp
000000000001cdac	retq
_os_nexus_controller_read_provider_attr:
000000000001cdad	pushq	%rbp
000000000001cdae	movq	%rsp, %rbp
000000000001cdb1	pushq	%r15
000000000001cdb3	pushq	%r14
000000000001cdb5	pushq	%r12
000000000001cdb7	pushq	%rbx
000000000001cdb8	andq	$-0x40, %rsp
000000000001cdbc	subq	$0x180, %rsp
000000000001cdc3	movl	$0x100, 0x3c(%rsp)
000000000001cdcb	testq	%rdx, %rdx
000000000001cdce	je	0x1ced8
000000000001cdd4	movq	%rdx, %rbx
000000000001cdd7	movq	%rsi, %r15
000000000001cdda	movq	%rdi, %r14
000000000001cddd	leaq	0x40(%rsp), %r12
000000000001cde2	movl	$0x100, %esi
000000000001cde7	movq	%r12, %rdi
000000000001cdea	callq	_bzero
000000000001cdef	movl	$0x10, %edx
000000000001cdf4	movq	%r15, %rdi
000000000001cdf7	movq	%r12, %rsi
000000000001cdfa	callq	_bcopy
000000000001cdff	movl	(%r14), %edi
000000000001ce02	leaq	0x3c(%rsp), %rcx
000000000001ce07	movl	$0x2, %esi
000000000001ce0c	movq	%r12, %rdx
000000000001ce0f	callq	___nexus_get_opt
000000000001ce14	testl	%eax, %eax
000000000001ce16	jne	0x1cedd
000000000001ce1c	movl	$0x98, %esi
000000000001ce21	movq	%rbx, %rdi
000000000001ce24	callq	_bzero
000000000001ce29	pmovzxdq	0xd8(%rsp), %xmm0
000000000001ce33	movdqu	%xmm0, 0x8(%rbx)
000000000001ce38	pmovzxdq	0xe0(%rsp), %xmm0
000000000001ce42	movdqu	%xmm0, 0x18(%rbx)
000000000001ce47	pmovzxdq	0xe8(%rsp), %xmm0
000000000001ce51	movdqu	%xmm0, 0x28(%rbx)
000000000001ce56	movl	0xf0(%rsp), %eax
000000000001ce5d	movq	%rax, 0x38(%rbx)
000000000001ce61	movl	0xd0(%rsp), %eax
000000000001ce68	movl	%eax, %ecx
000000000001ce6a	andl	$0x1, %ecx
000000000001ce6d	movq	%rcx, 0x40(%rbx)
000000000001ce71	pmovzxdq	0xf4(%rsp), %xmm0
000000000001ce7b	movdqu	%xmm0, 0x48(%rbx)
000000000001ce80	pmovzxdq	0xfc(%rsp), %xmm0
000000000001ce8a	movdqu	%xmm0, 0x58(%rbx)
000000000001ce8f	pmovzxdq	0x104(%rsp), %xmm0
000000000001ce99	movdqu	%xmm0, 0x68(%rbx)
000000000001ce9e	movl	0x10c(%rsp), %ecx
000000000001cea5	movl	%ecx, %edx
000000000001cea7	andl	$0x1, %edx
000000000001ceaa	movq	%rdx, 0x78(%rbx)
000000000001ceae	shrl	%ecx
000000000001ceb0	andl	$0x1, %ecx
000000000001ceb3	movq	%rcx, 0x80(%rbx)
000000000001ceba	movl	0x110(%rsp), %ecx
000000000001cec1	movq	%rcx, 0x88(%rbx)
000000000001cec8	shrl	%eax
000000000001ceca	andl	$0x1, %eax
000000000001cecd	movq	%rax, 0x90(%rbx)
000000000001ced4	xorl	%eax, %eax
000000000001ced6	jmp	0x1cedd
000000000001ced8	movl	$0x16, %eax
000000000001cedd	leaq	-0x20(%rbp), %rsp
000000000001cee1	popq	%rbx
000000000001cee2	popq	%r12
000000000001cee4	popq	%r14
000000000001cee6	popq	%r15
000000000001cee8	popq	%rbp
000000000001cee9	retq
_os_nexus_controller_destroy:
000000000001ceea	pushq	%rbp
000000000001ceeb	movq	%rsp, %rbp
000000000001ceee	pushq	%rbx
000000000001ceef	pushq	%rax
000000000001cef0	movq	%rdi, %rbx
000000000001cef3	movl	(%rdi), %edi
000000000001cef5	cmpl	$-0x1, %edi
000000000001cef8	je	0x1cf03
000000000001cefa	leaq	0x8(%rbx), %rsi
000000000001cefe	callq	_guarded_close_np
000000000001cf03	movq	%rbx, %rdi
000000000001cf06	addq	$0x8, %rsp
000000000001cf0a	popq	%rbx
000000000001cf0b	popq	%rbp
000000000001cf0c	jmp	_free
___os_nexus_ifattach:
000000000001cf11	pushq	%rbp
000000000001cf12	movq	%rsp, %rbp
000000000001cf15	pushq	%r15
000000000001cf17	pushq	%r14
000000000001cf19	pushq	%r13
000000000001cf1b	pushq	%r12
000000000001cf1d	pushq	%rbx
000000000001cf1e	subq	$0x88, %rsp
000000000001cf25	movq	%r9, -0x30(%rbp)
000000000001cf29	movl	%r8d, %ebx
000000000001cf2c	movq	%rcx, %r14
000000000001cf2f	movq	%rdx, %r15
000000000001cf32	movq	%rsi, %r13
000000000001cf35	movq	%rdi, %r12
000000000001cf38	leaq	-0xa8(%rbp), %rdi
000000000001cf3f	movl	$0x58, %esi
000000000001cf44	callq	_bzero
000000000001cf49	testq	%r15, %r15
000000000001cf4c	je	0x1cf64
000000000001cf4e	leaq	-0xa8(%rbp), %rdi
000000000001cf55	movl	$0x40, %edx
000000000001cf5a	movq	%r15, %rsi
000000000001cf5d	callq	_strlcpy
000000000001cf62	jmp	0x1cf80
000000000001cf64	leaq	-0xa8(%rbp), %r15
000000000001cf6b	movl	$0x10, %edx
000000000001cf70	movq	%r14, %rdi
000000000001cf73	movq	%r15, %rsi
000000000001cf76	callq	_bcopy
000000000001cf7b	orb	$0x1, 0x40(%r15)
000000000001cf80	testl	%ebx, %ebx
000000000001cf82	je	0x1cf88
000000000001cf84	orb	$0x2, -0x68(%rbp)
000000000001cf88	leaq	-0x50(%rbp), %rdi
000000000001cf8c	movl	$0x20, %esi
000000000001cf91	callq	_bzero
000000000001cf96	testq	%r13, %r13
000000000001cf99	je	0x1cfac
000000000001cf9b	leaq	-0x50(%rbp), %rsi
000000000001cf9f	movl	$0x10, %edx
000000000001cfa4	movq	%r13, %rdi
000000000001cfa7	callq	_bcopy
000000000001cfac	movabsq	$0x5800000000, %rax
000000000001cfb6	leaq	-0x50(%rbp), %rdx
000000000001cfba	movq	%rax, 0x10(%rdx)
000000000001cfbe	leaq	-0xa8(%rbp), %rax
000000000001cfc5	movq	%rax, 0x18(%rdx)
000000000001cfc9	movl	(%r12), %edi
000000000001cfcd	movl	$0x28, %esi
000000000001cfd2	movl	$0x20, %ecx
000000000001cfd7	callq	___nexus_set_opt
000000000001cfdc	movl	%eax, %ebx
000000000001cfde	testl	%eax, %eax
000000000001cfe0	jne	0x1cff4
000000000001cfe2	leaq	-0x64(%rbp), %rdi
000000000001cfe6	movl	$0x10, %edx
000000000001cfeb	movq	-0x30(%rbp), %rsi
000000000001cfef	callq	_bcopy
000000000001cff4	movl	%ebx, %eax
000000000001cff6	addq	$0x88, %rsp
000000000001cffd	popq	%rbx
000000000001cffe	popq	%r12
000000000001d000	popq	%r13
000000000001d002	popq	%r14
000000000001d004	popq	%r15
000000000001d006	popq	%rbp
000000000001d007	retq
___os_nexus_ifdetach:
000000000001d008	pushq	%rbp
000000000001d009	movq	%rsp, %rbp
000000000001d00c	pushq	%r15
000000000001d00e	pushq	%r14
000000000001d010	pushq	%r12
000000000001d012	pushq	%rbx
000000000001d013	subq	$0x80, %rsp
000000000001d01a	movq	%rdx, %rbx
000000000001d01d	movq	%rsi, %r12
000000000001d020	movq	%rdi, %r15
000000000001d023	leaq	-0x98(%rbp), %r14
000000000001d02a	movl	$0x58, %esi
000000000001d02f	movq	%r14, %rdi
000000000001d032	callq	_bzero
000000000001d037	leaq	-0x54(%rbp), %rsi
000000000001d03b	movl	$0x10, %edx
000000000001d040	movq	%rbx, %rdi
000000000001d043	callq	_bcopy
000000000001d048	leaq	-0x40(%rbp), %rdi
000000000001d04c	movl	$0x20, %esi
000000000001d051	callq	_bzero
000000000001d056	testq	%r12, %r12
000000000001d059	je	0x1d06c
000000000001d05b	leaq	-0x40(%rbp), %rsi
000000000001d05f	movl	$0x10, %edx
000000000001d064	movq	%r12, %rdi
000000000001d067	callq	_bcopy
000000000001d06c	movabsq	$0x5800000001, %rax
000000000001d076	leaq	-0x40(%rbp), %rdx
000000000001d07a	movq	%rax, 0x10(%rdx)
000000000001d07e	movq	%r14, 0x18(%rdx)
000000000001d082	movl	(%r15), %edi
000000000001d085	movl	$0x28, %esi
000000000001d08a	movl	$0x20, %ecx
000000000001d08f	callq	___nexus_set_opt
000000000001d094	addq	$0x80, %rsp
000000000001d09b	popq	%rbx
000000000001d09c	popq	%r12
000000000001d09e	popq	%r14
000000000001d0a0	popq	%r15
000000000001d0a2	popq	%rbp
000000000001d0a3	retq
___os_nexus_nsbind:
000000000001d0a4	pushq	%rbp
000000000001d0a5	movq	%rsp, %rbp
000000000001d0a8	pushq	%r15
000000000001d0aa	pushq	%r14
000000000001d0ac	pushq	%rbx
000000000001d0ad	subq	$0x28, %rsp
000000000001d0b1	movq	%rdx, %r14
000000000001d0b4	movq	%rsi, %rbx
000000000001d0b7	movq	%rdi, %r15
000000000001d0ba	leaq	-0x38(%rbp), %rdi
000000000001d0be	movl	$0x20, %esi
000000000001d0c3	callq	_bzero
000000000001d0c8	testq	%rbx, %rbx
000000000001d0cb	je	0x1d0de
000000000001d0cd	leaq	-0x38(%rbp), %rsi
000000000001d0d1	movl	$0x10, %edx
000000000001d0d6	movq	%rbx, %rdi
000000000001d0d9	callq	_bcopy
000000000001d0de	movabsq	$0x7800000014, %rax
000000000001d0e8	leaq	-0x38(%rbp), %rdx
000000000001d0ec	movq	%rax, 0x10(%rdx)
000000000001d0f0	movq	%r14, 0x18(%rdx)
000000000001d0f4	movl	(%r15), %edi
000000000001d0f7	movl	$0x28, %esi
000000000001d0fc	movl	$0x20, %ecx
000000000001d101	callq	___nexus_set_opt
000000000001d106	addq	$0x28, %rsp
000000000001d10a	popq	%rbx
000000000001d10b	popq	%r14
000000000001d10d	popq	%r15
000000000001d10f	popq	%rbp
000000000001d110	retq
___os_nexus_nsunbind:
000000000001d111	pushq	%rbp
000000000001d112	movq	%rsp, %rbp
000000000001d115	pushq	%r15
000000000001d117	pushq	%r14
000000000001d119	pushq	%rbx
000000000001d11a	subq	$0x28, %rsp
000000000001d11e	movq	%rdx, %r14
000000000001d121	movq	%rsi, %rbx
000000000001d124	movq	%rdi, %r15
000000000001d127	leaq	-0x38(%rbp), %rdi
000000000001d12b	movl	$0x20, %esi
000000000001d130	callq	_bzero
000000000001d135	testq	%rbx, %rbx
000000000001d138	je	0x1d14b
000000000001d13a	leaq	-0x38(%rbp), %rsi
000000000001d13e	movl	$0x10, %edx
000000000001d143	movq	%rbx, %rdi
000000000001d146	callq	_bcopy
000000000001d14b	movabsq	$0x7800000015, %rax
000000000001d155	leaq	-0x38(%rbp), %rdx
000000000001d159	movq	%rax, 0x10(%rdx)
000000000001d15d	movq	%r14, 0x18(%rdx)
000000000001d161	movl	(%r15), %edi
000000000001d164	movl	$0x28, %esi
000000000001d169	movl	$0x20, %ecx
000000000001d16e	callq	___nexus_set_opt
000000000001d173	addq	$0x28, %rsp
000000000001d177	popq	%rbx
000000000001d178	popq	%r14
000000000001d17a	popq	%r15
000000000001d17c	popq	%rbp
000000000001d17d	retq
___os_nexus_connect:
000000000001d17e	pushq	%rbp
000000000001d17f	movq	%rsp, %rbp
000000000001d182	pushq	%r15
000000000001d184	pushq	%r14
000000000001d186	pushq	%rbx
000000000001d187	subq	$0x28, %rsp
000000000001d18b	movq	%rdx, %r14
000000000001d18e	movq	%rsi, %rbx
000000000001d191	movq	%rdi, %r15
000000000001d194	leaq	-0x38(%rbp), %rdi
000000000001d198	movl	$0x20, %esi
000000000001d19d	callq	_bzero
000000000001d1a2	testq	%rbx, %rbx
000000000001d1a5	je	0x1d1b8
000000000001d1a7	leaq	-0x38(%rbp), %rsi
000000000001d1ab	movl	$0x10, %edx
000000000001d1b0	movq	%rbx, %rdi
000000000001d1b3	callq	_bcopy
000000000001d1b8	movabsq	$0x7800000016, %rax
000000000001d1c2	leaq	-0x38(%rbp), %rdx
000000000001d1c6	movq	%rax, 0x10(%rdx)
000000000001d1ca	movq	%r14, 0x18(%rdx)
000000000001d1ce	movl	(%r15), %edi
000000000001d1d1	movl	$0x28, %esi
000000000001d1d6	movl	$0x20, %ecx
000000000001d1db	callq	___nexus_set_opt
000000000001d1e0	addq	$0x28, %rsp
000000000001d1e4	popq	%rbx
000000000001d1e5	popq	%r14
000000000001d1e7	popq	%r15
000000000001d1e9	popq	%rbp
000000000001d1ea	retq
___os_nexus_disconnect:
000000000001d1eb	pushq	%rbp
000000000001d1ec	movq	%rsp, %rbp
000000000001d1ef	pushq	%r15
000000000001d1f1	pushq	%r14
000000000001d1f3	pushq	%rbx
000000000001d1f4	subq	$0x28, %rsp
000000000001d1f8	movq	%rdx, %r14
000000000001d1fb	movq	%rsi, %rbx
000000000001d1fe	movq	%rdi, %r15
000000000001d201	leaq	-0x38(%rbp), %rdi
000000000001d205	movl	$0x20, %esi
000000000001d20a	callq	_bzero
000000000001d20f	testq	%rbx, %rbx
000000000001d212	je	0x1d225
000000000001d214	leaq	-0x38(%rbp), %rsi
000000000001d218	movl	$0x10, %edx
000000000001d21d	movq	%rbx, %rdi
000000000001d220	callq	_bcopy
000000000001d225	movabsq	$0x7800000017, %rax
000000000001d22f	leaq	-0x38(%rbp), %rdx
000000000001d233	movq	%rax, 0x10(%rdx)
000000000001d237	movq	%r14, 0x18(%rdx)
000000000001d23b	movl	(%r15), %edi
000000000001d23e	movl	$0x28, %esi
000000000001d243	movl	$0x20, %ecx
000000000001d248	callq	___nexus_set_opt
000000000001d24d	addq	$0x28, %rsp
000000000001d251	popq	%rbx
000000000001d252	popq	%r14
000000000001d254	popq	%r15
000000000001d256	popq	%rbp
000000000001d257	retq
_sigsuspend:
000000000001d258	testq	%rdi, %rdi
000000000001d25b	je	0x1d264
000000000001d25d	movl	(%rdi), %edi
000000000001d25f	jmp	___sigsuspend
000000000001d264	xorl	%edi, %edi
000000000001d266	jmp	___sigsuspend
__kernelrpc_mach_voucher_extract_attr_recipe:
000000000001d26b	pushq	%rbp
000000000001d26c	movq	%rsp, %rbp
000000000001d26f	pushq	%r15
000000000001d271	pushq	%r14
000000000001d273	pushq	%r12
000000000001d275	pushq	%rbx
000000000001d276	subq	$0x1040, %rsp
000000000001d27d	movq	%rcx, %r15
000000000001d280	leaq	_NDR_record(%rip), %rax
000000000001d287	movq	(%rax), %rax
000000000001d28a	leaq	-0x1050(%rbp), %rbx
000000000001d291	movq	%rax, 0x18(%rbx)
000000000001d295	movl	%esi, 0x20(%rbx)
000000000001d298	movl	(%rcx), %eax
000000000001d29a	movl	$0x1000, %ecx
000000000001d29f	cmpl	%ecx, %eax
000000000001d2a1	cmovbl	%eax, %ecx
000000000001d2a4	movq	%rdx, %r14
000000000001d2a7	movl	%ecx, 0x24(%rbx)
000000000001d2aa	movl	$0x1513, (%rbx)
000000000001d2b0	movl	%edi, 0x8(%rbx)
000000000001d2b3	callq	_mig_get_reply_port
000000000001d2b8	movl	%eax, 0xc(%rbx)
000000000001d2bb	movabsq	$0x151900000000, %rcx
000000000001d2c5	movq	%rcx, 0x10(%rbx)
000000000001d2c9	movl	$0x0, (%rsp)
000000000001d2d0	movl	$0x3, %esi
000000000001d2d5	movl	$0x28, %edx
000000000001d2da	movl	$0x1030, %ecx
000000000001d2df	xorl	%r9d, %r9d
000000000001d2e2	movq	%rbx, %rdi
000000000001d2e5	movl	%eax, %r8d
000000000001d2e8	callq	_mach_msg
000000000001d2ed	movl	%eax, %ebx
000000000001d2ef	leal	-0x10000002(%rbx), %eax
000000000001d2f5	cmpl	$0xe, %eax
000000000001d2f8	ja	0x1d314
000000000001d2fa	movl	$0x4003, %ecx
000000000001d2ff	btl	%eax, %ecx
000000000001d302	jae	0x1d314
000000000001d304	movl	-0x1044(%rbp), %edi
000000000001d30a	callq	_mig_put_reply_port
000000000001d30f	jmp	0x1d3e5
000000000001d314	testl	%ebx, %ebx
000000000001d316	jne	0x1d368
000000000001d318	movl	-0x103c(%rbp), %eax
000000000001d31e	cmpl	$0x47, %eax
000000000001d321	je	0x1d375
000000000001d323	cmpl	$0x157d, %eax
000000000001d328	jne	0x1d37c
000000000001d32a	cmpl	$0x0, -0x1050(%rbp)
000000000001d331	js	0x1d3d4
000000000001d337	movl	-0x104c(%rbp), %eax
000000000001d33d	leal	-0x28(%rax), %ecx
000000000001d340	cmpl	$0x1001, %ecx
000000000001d346	jb	0x1d383
000000000001d348	movl	$0xfffffed4, %ebx
000000000001d34d	cmpl	$0x24, %eax
000000000001d350	jne	0x1d3d9
000000000001d356	movl	-0x1030(%rbp), %eax
000000000001d35c	testl	%eax, %eax
000000000001d35e	movl	$0xfffffed4, %ebx
000000000001d363	cmovnel	%eax, %ebx
000000000001d366	jmp	0x1d3d9
000000000001d368	movl	-0x1044(%rbp), %edi
000000000001d36e	callq	_mig_dealloc_reply_port
000000000001d373	jmp	0x1d3e5
000000000001d375	movl	$0xfffffecc, %ebx
000000000001d37a	jmp	0x1d3d9
000000000001d37c	movl	$0xfffffed3, %ebx
000000000001d381	jmp	0x1d3d9
000000000001d383	movl	-0x1030(%rbp), %ebx
000000000001d389	testl	%ebx, %ebx
000000000001d38b	jne	0x1d3d9
000000000001d38d	movl	-0x102c(%rbp), %r12d
000000000001d394	cmpq	$0x1000, %r12
000000000001d39b	ja	0x1d3d4
000000000001d39d	cmpl	%r12d, %ecx
000000000001d3a0	jb	0x1d3d4
000000000001d3a2	leal	0x2b(%r12), %ecx
000000000001d3a7	andl	$-0x4, %ecx
000000000001d3aa	movl	$0xfffffed4, %ebx
000000000001d3af	cmpl	%ecx, %eax
000000000001d3b1	jne	0x1d3d9
000000000001d3b3	movl	(%r15), %edx
000000000001d3b6	leaq	-0x1028(%rbp), %rsi
000000000001d3bd	movq	%r14, %rdi
000000000001d3c0	cmpl	%edx, %r12d
000000000001d3c3	jbe	0x1d3f7
000000000001d3c5	callq	_memcpy
000000000001d3ca	movl	%r12d, (%r15)
000000000001d3cd	movl	$0xfffffecd, %ebx
000000000001d3d2	jmp	0x1d3e5
000000000001d3d4	movl	$0xfffffed4, %ebx
000000000001d3d9	leaq	-0x1050(%rbp), %rdi
000000000001d3e0	callq	_mach_msg_destroy
000000000001d3e5	movl	%ebx, %eax
000000000001d3e7	addq	$0x1040, %rsp
000000000001d3ee	popq	%rbx
000000000001d3ef	popq	%r12
000000000001d3f1	popq	%r14
000000000001d3f3	popq	%r15
000000000001d3f5	popq	%rbp
000000000001d3f6	retq
000000000001d3f7	movq	%r12, %rdx
000000000001d3fa	callq	_memcpy
000000000001d3ff	movl	%r12d, (%r15)
000000000001d402	xorl	%ebx, %ebx
000000000001d404	jmp	0x1d3e5
_mach_voucher_extract_all_attr_recipes:
000000000001d406	pushq	%rbp
000000000001d407	movq	%rsp, %rbp
000000000001d40a	pushq	%r15
000000000001d40c	pushq	%r14
000000000001d40e	pushq	%r12
000000000001d410	pushq	%rbx
000000000001d411	subq	$0x1440, %rsp
000000000001d418	movq	%rdx, %r15
000000000001d41b	leaq	_NDR_record(%rip), %rax
000000000001d422	movq	(%rax), %rax
000000000001d425	leaq	-0x1450(%rbp), %rbx
000000000001d42c	movq	%rax, 0x18(%rbx)
000000000001d430	movl	(%rdx), %eax
000000000001d432	movl	$0x1400, %ecx
000000000001d437	cmpl	%ecx, %eax
000000000001d439	cmovbl	%eax, %ecx
000000000001d43c	movq	%rsi, %r14
000000000001d43f	movl	%ecx, 0x20(%rbx)
000000000001d442	movl	$0x1513, (%rbx)
000000000001d448	movl	%edi, 0x8(%rbx)
000000000001d44b	callq	_mig_get_reply_port
000000000001d450	movl	%eax, 0xc(%rbx)
000000000001d453	movabsq	$0x151a00000000, %rcx
000000000001d45d	movq	%rcx, 0x10(%rbx)
000000000001d461	movl	$0x0, (%rsp)
000000000001d468	movl	$0x3, %esi
000000000001d46d	movl	$0x24, %edx
000000000001d472	movl	$0x1430, %ecx
000000000001d477	xorl	%r9d, %r9d
000000000001d47a	movq	%rbx, %rdi
000000000001d47d	movl	%eax, %r8d
000000000001d480	callq	_mach_msg
000000000001d485	movl	%eax, %ebx
000000000001d487	leal	-0x10000002(%rbx), %eax
000000000001d48d	cmpl	$0xe, %eax
000000000001d490	ja	0x1d4ac
000000000001d492	movl	$0x4003, %ecx
000000000001d497	btl	%eax, %ecx
000000000001d49a	jae	0x1d4ac
000000000001d49c	movl	-0x1444(%rbp), %edi
000000000001d4a2	callq	_mig_put_reply_port
000000000001d4a7	jmp	0x1d57d
000000000001d4ac	testl	%ebx, %ebx
000000000001d4ae	jne	0x1d500
000000000001d4b0	movl	-0x143c(%rbp), %eax
000000000001d4b6	cmpl	$0x47, %eax
000000000001d4b9	je	0x1d50d
000000000001d4bb	cmpl	$0x157e, %eax
000000000001d4c0	jne	0x1d514
000000000001d4c2	cmpl	$0x0, -0x1450(%rbp)
000000000001d4c9	js	0x1d56c
000000000001d4cf	movl	-0x144c(%rbp), %eax
000000000001d4d5	leal	-0x28(%rax), %ecx
000000000001d4d8	cmpl	$0x1401, %ecx
000000000001d4de	jb	0x1d51b
000000000001d4e0	movl	$0xfffffed4, %ebx
000000000001d4e5	cmpl	$0x24, %eax
000000000001d4e8	jne	0x1d571
000000000001d4ee	movl	-0x1430(%rbp), %eax
000000000001d4f4	testl	%eax, %eax
000000000001d4f6	movl	$0xfffffed4, %ebx
000000000001d4fb	cmovnel	%eax, %ebx
000000000001d4fe	jmp	0x1d571
000000000001d500	movl	-0x1444(%rbp), %edi
000000000001d506	callq	_mig_dealloc_reply_port
000000000001d50b	jmp	0x1d57d
000000000001d50d	movl	$0xfffffecc, %ebx
000000000001d512	jmp	0x1d571
000000000001d514	movl	$0xfffffed3, %ebx
000000000001d519	jmp	0x1d571
000000000001d51b	movl	-0x1430(%rbp), %ebx
000000000001d521	testl	%ebx, %ebx
000000000001d523	jne	0x1d571
000000000001d525	movl	-0x142c(%rbp), %r12d
000000000001d52c	cmpq	$0x1400, %r12
000000000001d533	ja	0x1d56c
000000000001d535	cmpl	%r12d, %ecx
000000000001d538	jb	0x1d56c
000000000001d53a	leal	0x2b(%r12), %ecx
000000000001d53f	andl	$-0x4, %ecx
000000000001d542	movl	$0xfffffed4, %ebx
000000000001d547	cmpl	%ecx, %eax
000000000001d549	jne	0x1d571
000000000001d54b	movl	(%r15), %edx
000000000001d54e	leaq	-0x1428(%rbp), %rsi
000000000001d555	movq	%r14, %rdi
000000000001d558	cmpl	%edx, %r12d
000000000001d55b	jbe	0x1d58f
000000000001d55d	callq	_memcpy
000000000001d562	movl	%r12d, (%r15)
000000000001d565	movl	$0xfffffecd, %ebx
000000000001d56a	jmp	0x1d57d
000000000001d56c	movl	$0xfffffed4, %ebx
000000000001d571	leaq	-0x1450(%rbp), %rdi
000000000001d578	callq	_mach_msg_destroy
000000000001d57d	movl	%ebx, %eax
000000000001d57f	addq	$0x1440, %rsp
000000000001d586	popq	%rbx
000000000001d587	popq	%r12
000000000001d589	popq	%r14
000000000001d58b	popq	%r15
000000000001d58d	popq	%rbp
000000000001d58e	retq
000000000001d58f	movq	%r12, %rdx
000000000001d592	callq	_memcpy
000000000001d597	movl	%r12d, (%r15)
000000000001d59a	xorl	%ebx, %ebx
000000000001d59c	jmp	0x1d57d
_mach_voucher_debug_info:
000000000001d59e	pushq	%rbp
000000000001d59f	movq	%rsp, %rbp
000000000001d5a2	pushq	%r15
000000000001d5a4	pushq	%r14
000000000001d5a6	pushq	%r12
000000000001d5a8	pushq	%rbx
000000000001d5a9	subq	$0x1440, %rsp
000000000001d5b0	movq	%rcx, %r15
000000000001d5b3	leaq	_NDR_record(%rip), %rax
000000000001d5ba	movq	(%rax), %rax
000000000001d5bd	leaq	-0x1450(%rbp), %rbx
000000000001d5c4	movq	%rax, 0x18(%rbx)
000000000001d5c8	movl	%esi, 0x20(%rbx)
000000000001d5cb	movl	(%rcx), %eax
000000000001d5cd	movl	$0x1400, %ecx
000000000001d5d2	cmpl	%ecx, %eax
000000000001d5d4	cmovbl	%eax, %ecx
000000000001d5d7	movq	%rdx, %r14
000000000001d5da	movl	%ecx, 0x24(%rbx)
000000000001d5dd	movl	$0x1513, (%rbx)
000000000001d5e3	movl	%edi, 0x8(%rbx)
000000000001d5e6	callq	_mig_get_reply_port
000000000001d5eb	movl	%eax, 0xc(%rbx)
000000000001d5ee	movabsq	$0x151c00000000, %rcx
000000000001d5f8	movq	%rcx, 0x10(%rbx)
000000000001d5fc	movl	$0x0, (%rsp)
000000000001d603	movl	$0x3, %esi
000000000001d608	movl	$0x28, %edx
000000000001d60d	movl	$0x1430, %ecx
000000000001d612	xorl	%r9d, %r9d
000000000001d615	movq	%rbx, %rdi
000000000001d618	movl	%eax, %r8d
000000000001d61b	callq	_mach_msg
000000000001d620	movl	%eax, %ebx
000000000001d622	leal	-0x10000002(%rbx), %eax
000000000001d628	cmpl	$0xe, %eax
000000000001d62b	ja	0x1d647
000000000001d62d	movl	$0x4003, %ecx
000000000001d632	btl	%eax, %ecx
000000000001d635	jae	0x1d647
000000000001d637	movl	-0x1444(%rbp), %edi
000000000001d63d	callq	_mig_put_reply_port
000000000001d642	jmp	0x1d718
000000000001d647	testl	%ebx, %ebx
000000000001d649	jne	0x1d69b
000000000001d64b	movl	-0x143c(%rbp), %eax
000000000001d651	cmpl	$0x47, %eax
000000000001d654	je	0x1d6a8
000000000001d656	cmpl	$0x1580, %eax
000000000001d65b	jne	0x1d6af
000000000001d65d	cmpl	$0x0, -0x1450(%rbp)
000000000001d664	js	0x1d707
000000000001d66a	movl	-0x144c(%rbp), %eax
000000000001d670	leal	-0x28(%rax), %ecx
000000000001d673	cmpl	$0x1401, %ecx
000000000001d679	jb	0x1d6b6
000000000001d67b	movl	$0xfffffed4, %ebx
000000000001d680	cmpl	$0x24, %eax
000000000001d683	jne	0x1d70c
000000000001d689	movl	-0x1430(%rbp), %eax
000000000001d68f	testl	%eax, %eax
000000000001d691	movl	$0xfffffed4, %ebx
000000000001d696	cmovnel	%eax, %ebx
000000000001d699	jmp	0x1d70c
000000000001d69b	movl	-0x1444(%rbp), %edi
000000000001d6a1	callq	_mig_dealloc_reply_port
000000000001d6a6	jmp	0x1d718
000000000001d6a8	movl	$0xfffffecc, %ebx
000000000001d6ad	jmp	0x1d70c
000000000001d6af	movl	$0xfffffed3, %ebx
000000000001d6b4	jmp	0x1d70c
000000000001d6b6	movl	-0x1430(%rbp), %ebx
000000000001d6bc	testl	%ebx, %ebx
000000000001d6be	jne	0x1d70c
000000000001d6c0	movl	-0x142c(%rbp), %r12d
000000000001d6c7	cmpq	$0x1400, %r12
000000000001d6ce	ja	0x1d707
000000000001d6d0	cmpl	%r12d, %ecx
000000000001d6d3	jb	0x1d707
000000000001d6d5	leal	0x2b(%r12), %ecx
000000000001d6da	andl	$-0x4, %ecx
000000000001d6dd	movl	$0xfffffed4, %ebx
000000000001d6e2	cmpl	%ecx, %eax
000000000001d6e4	jne	0x1d70c
000000000001d6e6	movl	(%r15), %edx
000000000001d6e9	leaq	-0x1428(%rbp), %rsi
000000000001d6f0	movq	%r14, %rdi
000000000001d6f3	cmpl	%edx, %r12d
000000000001d6f6	jbe	0x1d72a
000000000001d6f8	callq	_memcpy
000000000001d6fd	movl	%r12d, (%r15)
000000000001d700	movl	$0xfffffecd, %ebx
000000000001d705	jmp	0x1d718
000000000001d707	movl	$0xfffffed4, %ebx
000000000001d70c	leaq	-0x1450(%rbp), %rdi
000000000001d713	callq	_mach_msg_destroy
000000000001d718	movl	%ebx, %eax
000000000001d71a	addq	$0x1440, %rsp
000000000001d721	popq	%rbx
000000000001d722	popq	%r12
000000000001d724	popq	%r14
000000000001d726	popq	%r15
000000000001d728	popq	%rbp
000000000001d729	retq
000000000001d72a	movq	%r12, %rdx
000000000001d72d	callq	_memcpy
000000000001d732	movl	%r12d, (%r15)
000000000001d735	xorl	%ebx, %ebx
000000000001d737	jmp	0x1d718
_work_interval_create:
000000000001d739	pushq	%rbp
000000000001d73a	movq	%rsp, %rbp
000000000001d73d	pushq	%r15
000000000001d73f	pushq	%r14
000000000001d741	pushq	%rbx
000000000001d742	subq	$0x18, %rsp
000000000001d746	testq	%rdi, %rdi
000000000001d749	je	0x1d7b5
000000000001d74b	movq	%rdi, %r14
000000000001d74e	leaq	-0x28(%rbp), %rdx
000000000001d752	movq	$0x0, (%rdx)
000000000001d759	movl	$0x0, 0x8(%rdx)
000000000001d760	movl	%esi, 0xc(%rdx)
000000000001d763	movl	$0x4, %edi
000000000001d768	xorl	%esi, %esi
000000000001d76a	movl	$0x10, %ecx
000000000001d76f	callq	___work_interval_ctl
000000000001d774	movl	$0xffffffff, %r15d
000000000001d77a	cmpl	$-0x1, %eax
000000000001d77d	je	0x1d7d3
000000000001d77f	movl	$0x18, %edi
000000000001d784	callq	_malloc
000000000001d789	testq	%rax, %rax
000000000001d78c	je	0x1d7c8
000000000001d78e	movq	%rax, %rbx
000000000001d791	callq	___thread_selfid
000000000001d796	movq	%rax, (%rbx)
000000000001d799	movq	-0x28(%rbp), %rax
000000000001d79d	movq	%rax, 0x8(%rbx)
000000000001d7a1	movl	-0x1c(%rbp), %eax
000000000001d7a4	movl	%eax, 0x10(%rbx)
000000000001d7a7	movl	-0x20(%rbp), %eax
000000000001d7aa	movl	%eax, 0x14(%rbx)
000000000001d7ad	movq	%rbx, (%r14)
000000000001d7b0	xorl	%r15d, %r15d
000000000001d7b3	jmp	0x1d7d3
000000000001d7b5	callq	___error
000000000001d7ba	movl	$0x16, (%rax)
000000000001d7c0	movl	$0xffffffff, %r15d
000000000001d7c6	jmp	0x1d7d3
000000000001d7c8	callq	___error
000000000001d7cd	movl	$0xc, (%rax)
000000000001d7d3	movl	%r15d, %eax
000000000001d7d6	addq	$0x18, %rsp
000000000001d7da	popq	%rbx
000000000001d7db	popq	%r14
000000000001d7dd	popq	%r15
000000000001d7df	popq	%rbp
000000000001d7e0	retq
_work_interval_notify:
000000000001d7e1	pushq	%rbp
000000000001d7e2	movq	%rsp, %rbp
000000000001d7e5	subq	$0x30, %rsp
000000000001d7e9	movq	%rsi, -0x28(%rbp)
000000000001d7ed	movq	%rdx, -0x20(%rbp)
000000000001d7f1	movq	%rcx, -0x18(%rbp)
000000000001d7f5	movq	%r8, -0x10(%rbp)
000000000001d7f9	movl	%r9d, -0x8(%rbp)
000000000001d7fd	movl	$0x0, -0x4(%rbp)
000000000001d804	testq	%rdi, %rdi
000000000001d807	je	0x1d828
000000000001d809	movl	0x10(%rdi), %eax
000000000001d80c	leaq	-0x28(%rbp), %rdx
000000000001d810	movl	%eax, 0x24(%rdx)
000000000001d813	movq	0x8(%rdi), %rsi
000000000001d817	movl	$0x3, %edi
000000000001d81c	movl	$0x28, %ecx
000000000001d821	callq	___work_interval_ctl
000000000001d826	jmp	0x1d838
000000000001d828	callq	___error
000000000001d82d	movl	$0x16, (%rax)
000000000001d833	movl	$0xffffffff, %eax
000000000001d838	addq	$0x30, %rsp
000000000001d83c	popq	%rbp
000000000001d83d	retq
_work_interval_notify_simple:
000000000001d83e	pushq	%rbp
000000000001d83f	movq	%rsp, %rbp
000000000001d842	pushq	%r15
000000000001d844	pushq	%r14
000000000001d846	pushq	%r12
000000000001d848	pushq	%rbx
000000000001d849	movq	%rcx, %r14
000000000001d84c	movq	%rdx, %r15
000000000001d84f	movq	%rsi, %r12
000000000001d852	movq	%rdi, %rbx
000000000001d855	callq	_mach_absolute_time
000000000001d85a	xorl	%r9d, %r9d
000000000001d85d	movq	%rbx, %rdi
000000000001d860	movq	%r12, %rsi
000000000001d863	movq	%rax, %rdx
000000000001d866	movq	%r15, %rcx
000000000001d869	movq	%r14, %r8
000000000001d86c	popq	%rbx
000000000001d86d	popq	%r12
000000000001d86f	popq	%r14
000000000001d871	popq	%r15
000000000001d873	popq	%rbp
000000000001d874	jmp	_work_interval_notify
_work_interval_instance_alloc:
000000000001d879	pushq	%rbp
000000000001d87a	movq	%rsp, %rbp
000000000001d87d	pushq	%rbx
000000000001d87e	pushq	%rax
000000000001d87f	movq	%rdi, %rbx
000000000001d882	movl	$0x38, %edi
000000000001d887	callq	_malloc
000000000001d88c	xorl	%ecx, %ecx
000000000001d88e	movq	%rcx, 0x30(%rax)
000000000001d892	movq	%rcx, 0x28(%rax)
000000000001d896	movq	%rcx, 0x20(%rax)
000000000001d89a	movq	%rcx, 0x18(%rax)
000000000001d89e	movq	%rcx, 0x10(%rax)
000000000001d8a2	movq	%rcx, 0x8(%rax)
000000000001d8a6	movl	0x10(%rbx), %ecx
000000000001d8a9	movl	%ecx, 0x30(%rax)
000000000001d8ac	movq	0x8(%rbx), %rcx
000000000001d8b0	movq	%rcx, (%rax)
000000000001d8b3	addq	$0x8, %rsp
000000000001d8b7	popq	%rbx
000000000001d8b8	popq	%rbp
000000000001d8b9	retq
_work_interval_instance_clear:
000000000001d8ba	xorl	%eax, %eax
000000000001d8bc	movq	%rax, 0x28(%rdi)
000000000001d8c0	movq	%rax, 0x20(%rdi)
000000000001d8c4	movq	%rax, 0x18(%rdi)
000000000001d8c8	movq	%rax, 0x10(%rdi)
000000000001d8cc	movq	%rax, 0x8(%rdi)
000000000001d8d0	retq
_work_interval_instance_free:
000000000001d8d1	jmp	_free
_work_interval_instance_set_start:
000000000001d8d6	movq	%rsi, 0x10(%rdi)
000000000001d8da	retq
_work_interval_instance_set_deadline:
000000000001d8db	movq	%rsi, 0x20(%rdi)
000000000001d8df	retq
_work_interval_instance_set_finish:
000000000001d8e0	movq	%rsi, 0x18(%rdi)
000000000001d8e4	retq
_work_interval_instance_set_complexity:
000000000001d8e5	movq	%rsi, 0x28(%rdi)
000000000001d8e9	retq
_work_interval_instance_get_start:
000000000001d8ea	cmpq	$0x0, 0x8(%rdi)
000000000001d8ef	je	0x1d8f6
000000000001d8f1	movq	0x10(%rdi), %rax
000000000001d8f5	retq
000000000001d8f6	xorl	%eax, %eax
000000000001d8f8	retq
_work_interval_instance_get_deadline:
000000000001d8f9	cmpq	$0x0, 0x8(%rdi)
000000000001d8fe	je	0x1d905
000000000001d900	movq	0x20(%rdi), %rax
000000000001d904	retq
000000000001d905	xorl	%eax, %eax
000000000001d907	retq
_work_interval_instance_get_finish:
000000000001d908	cmpq	$0x0, 0x8(%rdi)
000000000001d90d	je	0x1d914
000000000001d90f	movq	0x18(%rdi), %rax
000000000001d913	retq
000000000001d914	xorl	%eax, %eax
000000000001d916	retq
_work_interval_instance_get_complexity:
000000000001d917	cmpq	$0x0, 0x8(%rdi)
000000000001d91c	je	0x1d923
000000000001d91e	movq	0x28(%rdi), %rax
000000000001d922	retq
000000000001d923	xorl	%eax, %eax
000000000001d925	retq
_work_interval_instance_get_id:
000000000001d926	movq	0x8(%rdi), %rax
000000000001d92a	retq
_work_interval_instance_start:
000000000001d92b	testq	%rdi, %rdi
000000000001d92e	je	0x1d948
000000000001d930	movq	%rdi, %rax
000000000001d933	movq	(%rdi), %rsi
000000000001d936	movl	$0x6, %edi
000000000001d93b	movl	$0x38, %ecx
000000000001d940	movq	%rax, %rdx
000000000001d943	jmp	___work_interval_ctl
000000000001d948	pushq	%rbp
000000000001d949	movq	%rsp, %rbp
000000000001d94c	callq	___error
000000000001d951	movl	$0x16, (%rax)
000000000001d957	movl	$0xffffffff, %eax
000000000001d95c	popq	%rbp
000000000001d95d	retq
_work_interval_instance_update:
000000000001d95e	testq	%rdi, %rdi
000000000001d961	je	0x1d982
000000000001d963	movq	%rdi, %rax
000000000001d966	cmpq	$0x0, 0x8(%rdi)
000000000001d96b	je	0x1d998
000000000001d96d	movq	(%rax), %rsi
000000000001d970	movl	$0x7, %edi
000000000001d975	movl	$0x38, %ecx
000000000001d97a	movq	%rax, %rdx
000000000001d97d	jmp	___work_interval_ctl
000000000001d982	pushq	%rbp
000000000001d983	movq	%rsp, %rbp
000000000001d986	callq	___error
000000000001d98b	movl	$0x16, (%rax)
000000000001d991	movl	$0xffffffff, %eax
000000000001d996	popq	%rbp
000000000001d997	retq
000000000001d998	xorl	%eax, %eax
000000000001d99a	retq
_work_interval_instance_finish:
000000000001d99b	pushq	%rbp
000000000001d99c	movq	%rsp, %rbp
000000000001d99f	pushq	%rbx
000000000001d9a0	pushq	%rax
000000000001d9a1	testq	%rdi, %rdi
000000000001d9a4	je	0x1d9d9
000000000001d9a6	movq	%rdi, %rbx
000000000001d9a9	cmpq	$0x0, 0x8(%rdi)
000000000001d9ae	je	0x1d9eb
000000000001d9b0	movq	(%rbx), %rsi
000000000001d9b3	movl	$0x8, %edi
000000000001d9b8	movl	$0x38, %ecx
000000000001d9bd	movq	%rbx, %rdx
000000000001d9c0	callq	___work_interval_ctl
000000000001d9c5	xorl	%ecx, %ecx
000000000001d9c7	movq	%rcx, 0x28(%rbx)
000000000001d9cb	movq	%rcx, 0x20(%rbx)
000000000001d9cf	movq	%rcx, 0x18(%rbx)
000000000001d9d3	movq	%rcx, 0x10(%rbx)
000000000001d9d7	jmp	0x1d9ed
000000000001d9d9	callq	___error
000000000001d9de	movl	$0x16, (%rax)
000000000001d9e4	movl	$0xffffffff, %eax
000000000001d9e9	jmp	0x1d9ed
000000000001d9eb	xorl	%eax, %eax
000000000001d9ed	addq	$0x8, %rsp
000000000001d9f1	popq	%rbx
000000000001d9f2	popq	%rbp
000000000001d9f3	retq
_work_interval_destroy:
000000000001d9f4	pushq	%rbp
000000000001d9f5	movq	%rsp, %rbp
000000000001d9f8	pushq	%r15
000000000001d9fa	pushq	%r14
000000000001d9fc	pushq	%rbx
000000000001d9fd	pushq	%rax
000000000001d9fe	testq	%rdi, %rdi
000000000001da01	je	0x1da5b
000000000001da03	movq	%rdi, %rbx
000000000001da06	testb	$0x1, 0x10(%rdi)
000000000001da0a	jne	0x1da46
000000000001da0c	movq	0x8(%rbx), %rsi
000000000001da10	movl	$0x2, %edi
000000000001da15	xorl	%edx, %edx
000000000001da17	xorl	%ecx, %ecx
000000000001da19	callq	___work_interval_ctl
000000000001da1e	movl	%eax, %r14d
000000000001da21	movq	$0x0, 0x8(%rbx)
000000000001da29	callq	___error
000000000001da2e	movl	(%rax), %r15d
000000000001da31	movq	%rbx, %rdi
000000000001da34	callq	_free
000000000001da39	callq	___error
000000000001da3e	movl	%r15d, (%rax)
000000000001da41	movl	%r14d, %eax
000000000001da44	jmp	0x1da6b
000000000001da46	movl	0x14(%rbx), %esi
000000000001da49	leaq	_mach_task_self_(%rip), %rax
000000000001da50	movl	(%rax), %edi
000000000001da52	callq	_mach_port_deallocate
000000000001da57	testl	%eax, %eax
000000000001da59	je	0x1da76
000000000001da5b	callq	___error
000000000001da60	movl	$0x16, (%rax)
000000000001da66	movl	$0xffffffff, %eax
000000000001da6b	addq	$0x8, %rsp
000000000001da6f	popq	%rbx
000000000001da70	popq	%r14
000000000001da72	popq	%r15
000000000001da74	popq	%rbp
000000000001da75	retq
000000000001da76	movq	%rbx, %rdi
000000000001da79	callq	_free
000000000001da7e	xorl	%eax, %eax
000000000001da80	jmp	0x1da6b
_work_interval_join:
000000000001da82	pushq	%rbp
000000000001da83	movq	%rsp, %rbp
000000000001da86	testq	%rdi, %rdi
000000000001da89	je	0x1daa6
000000000001da8b	testb	$0x1, 0x10(%rdi)
000000000001da8f	je	0x1daa6
000000000001da91	movl	0x14(%rdi), %edi
000000000001da94	leal	0x1(%rdi), %eax
000000000001da97	movl	$0x1, %ecx
000000000001da9c	cmpl	%ecx, %eax
000000000001da9e	jbe	0x1daa6
000000000001daa0	popq	%rbp
000000000001daa1	jmp	_work_interval_join_port
000000000001daa6	callq	___error
000000000001daab	movl	$0x16, (%rax)
000000000001dab1	movl	$0xffffffff, %eax
000000000001dab6	popq	%rbp
000000000001dab7	retq
_work_interval_join_port:
000000000001dab8	testl	%edi, %edi
000000000001daba	je	0x1dacc
000000000001dabc	movl	%edi, %esi
000000000001dabe	movl	$0x5, %edi
000000000001dac3	xorl	%edx, %edx
000000000001dac5	xorl	%ecx, %ecx
000000000001dac7	jmp	___work_interval_ctl
000000000001dacc	pushq	%rbp
000000000001dacd	movq	%rsp, %rbp
000000000001dad0	callq	___error
000000000001dad5	movl	$0x16, (%rax)
000000000001dadb	movl	$0xffffffff, %eax
000000000001dae0	popq	%rbp
000000000001dae1	retq
_work_interval_leave:
000000000001dae2	movl	$0x5, %edi
000000000001dae7	xorl	%esi, %esi
000000000001dae9	xorl	%edx, %edx
000000000001daeb	xorl	%ecx, %ecx
000000000001daed	jmp	___work_interval_ctl
_work_interval_copy_port:
000000000001daf2	pushq	%rbp
000000000001daf3	movq	%rsp, %rbp
000000000001daf6	pushq	%r15
000000000001daf8	pushq	%r14
000000000001dafa	pushq	%rbx
000000000001dafb	pushq	%rax
000000000001dafc	testq	%rsi, %rsi
000000000001daff	je	0x1db38
000000000001db01	movq	%rsi, %rbx
000000000001db04	testq	%rdi, %rdi
000000000001db07	je	0x1db32
000000000001db09	testb	$0x1, 0x10(%rdi)
000000000001db0d	je	0x1db32
000000000001db0f	movl	0x14(%rdi), %r15d
000000000001db13	leaq	_mach_task_self_(%rip), %rax
000000000001db1a	movl	(%rax), %edi
000000000001db1c	xorl	%r14d, %r14d
000000000001db1f	xorl	%edx, %edx
000000000001db21	movl	$0x1, %ecx
000000000001db26	movl	%r15d, %esi
000000000001db29	callq	_mach_port_mod_refs
000000000001db2e	testl	%eax, %eax
000000000001db30	je	0x1db57
000000000001db32	movl	$0x0, (%rbx)
000000000001db38	callq	___error
000000000001db3d	movl	$0x16, (%rax)
000000000001db43	movl	$0xffffffff, %r14d
000000000001db49	movl	%r14d, %eax
000000000001db4c	addq	$0x8, %rsp
000000000001db50	popq	%rbx
000000000001db51	popq	%r14
000000000001db53	popq	%r15
000000000001db55	popq	%rbp
000000000001db56	retq
000000000001db57	movl	%r15d, (%rbx)
000000000001db5a	jmp	0x1db49
000000000001db5c	nop
000000000001db5d	nop
000000000001db5e	nop
000000000001db5f	nop
_os_cpu_copy_in_cksum:
000000000001db60	pushq	%rbp
000000000001db61	movq	%rsp, %rbp
000000000001db64	movq	$0x0, %r10
000000000001db6b	movq	$0x0, %r8
000000000001db72	cmpq	$0x0, %rdx
000000000001db76	je	0x1e013
000000000001db7c	testq	$0x1, %rdi
000000000001db83	je	0x1dba9
000000000001db85	movzbq	(%rdi), %r10
000000000001db89	addq	$0x1, %rdi
000000000001db8d	movb	%r10b, (%rsi)
000000000001db90	addq	$0x1, %rsi
000000000001db94	shlq	$0x8, %r10
000000000001db98	movq	$0x1, %r8
000000000001db9f	subq	$0x1, %rdx
000000000001dba3	je	0x1e013
000000000001dba9	pxor	%xmm0, %xmm0
000000000001dbad	pxor	%xmm1, %xmm1
000000000001dbb1	cmpq	$0x80, %rdx
000000000001dbb8	movq	%r10, %xmm0
000000000001dbbd	jl	0x1de6c
000000000001dbc3	pxor	%xmm2, %xmm2
000000000001dbc7	pxor	%xmm3, %xmm3
000000000001dbcb	movups	(%rdi), %xmm4
000000000001dbce	movups	0x10(%rdi), %xmm5
000000000001dbd2	movups	0x20(%rdi), %xmm6
000000000001dbd6	movups	0x30(%rdi), %xmm7
000000000001dbda	movups	0x40(%rdi), %xmm8
000000000001dbdf	movups	0x50(%rdi), %xmm9
000000000001dbe4	movups	0x60(%rdi), %xmm10
000000000001dbe9	movups	0x70(%rdi), %xmm11
000000000001dbee	addq	$0x80, %rdi
000000000001dbf5	subq	$0x100, %rdx
000000000001dbfc	jl	0x1dd4b
000000000001dc02	movups	%xmm4, (%rsi)
000000000001dc05	movdqa	%xmm4, %xmm12
000000000001dc0a	psrlq	$0x20, %xmm4
000000000001dc0f	movups	%xmm5, 0x10(%rsi)
000000000001dc13	movdqa	%xmm5, %xmm13
000000000001dc18	psrlq	$0x20, %xmm5
000000000001dc1d	movups	%xmm6, 0x20(%rsi)
000000000001dc21	movdqa	%xmm6, %xmm14
000000000001dc26	psrlq	$0x20, %xmm6
000000000001dc2b	movups	%xmm7, 0x30(%rsi)
000000000001dc2f	movdqa	%xmm7, %xmm15
000000000001dc34	psrlq	$0x20, %xmm7
000000000001dc39	movups	%xmm8, 0x40(%rsi)
000000000001dc3e	pand	0x2949(%rip), %xmm12
000000000001dc47	paddq	%xmm4, %xmm0
000000000001dc4b	movups	%xmm9, 0x50(%rsi)
000000000001dc50	pand	0x2937(%rip), %xmm13
000000000001dc59	paddq	%xmm5, %xmm1
000000000001dc5d	movups	%xmm10, 0x60(%rsi)
000000000001dc62	pand	0x2925(%rip), %xmm14
000000000001dc6b	paddq	%xmm6, %xmm2
000000000001dc6f	movups	%xmm11, 0x70(%rsi)
000000000001dc74	pand	0x2913(%rip), %xmm15
000000000001dc7d	paddq	%xmm7, %xmm3
000000000001dc81	addq	$0x80, %rsi
000000000001dc88	paddq	%xmm12, %xmm0
000000000001dc8d	movdqa	%xmm8, %xmm12
000000000001dc92	psrlq	$0x20, %xmm8
000000000001dc98	paddq	%xmm13, %xmm1
000000000001dc9d	movdqa	%xmm9, %xmm13
000000000001dca2	psrlq	$0x20, %xmm9
000000000001dca8	paddq	%xmm14, %xmm2
000000000001dcad	movdqa	%xmm10, %xmm14
000000000001dcb2	psrlq	$0x20, %xmm10
000000000001dcb8	paddq	%xmm15, %xmm3
000000000001dcbd	movdqa	%xmm11, %xmm15
000000000001dcc2	psrlq	$0x20, %xmm11
000000000001dcc8	movups	(%rdi), %xmm4
000000000001dccb	paddq	%xmm8, %xmm0
000000000001dcd0	pand	0x28b7(%rip), %xmm12
000000000001dcd9	movups	0x10(%rdi), %xmm5
000000000001dcdd	paddq	%xmm9, %xmm1
000000000001dce2	pand	0x28a5(%rip), %xmm13
000000000001dceb	movups	0x20(%rdi), %xmm6
000000000001dcef	paddq	%xmm10, %xmm2
000000000001dcf4	pand	0x2893(%rip), %xmm14
000000000001dcfd	movups	0x30(%rdi), %xmm7
000000000001dd01	paddq	%xmm11, %xmm3
000000000001dd06	pand	0x2881(%rip), %xmm15
000000000001dd0f	movups	0x40(%rdi), %xmm8
000000000001dd14	paddq	%xmm12, %xmm0
000000000001dd19	movups	0x50(%rdi), %xmm9
000000000001dd1e	paddq	%xmm13, %xmm1
000000000001dd23	movups	0x60(%rdi), %xmm10
000000000001dd28	paddq	%xmm14, %xmm2
000000000001dd2d	movups	0x70(%rdi), %xmm11
000000000001dd32	paddq	%xmm15, %xmm3
000000000001dd37	addq	$0x80, %rdi
000000000001dd3e	subq	$0x80, %rdx
000000000001dd45	jge	0x1dc02
000000000001dd4b	movups	%xmm4, (%rsi)
000000000001dd4e	movdqa	%xmm4, %xmm12
000000000001dd53	psrlq	$0x20, %xmm4
000000000001dd58	movups	%xmm5, 0x10(%rsi)
000000000001dd5c	movdqa	%xmm5, %xmm13
000000000001dd61	psrlq	$0x20, %xmm5
000000000001dd66	movups	%xmm6, 0x20(%rsi)
000000000001dd6a	movdqa	%xmm6, %xmm14
000000000001dd6f	psrlq	$0x20, %xmm6
000000000001dd74	movups	%xmm7, 0x30(%rsi)
000000000001dd78	movdqa	%xmm7, %xmm15
000000000001dd7d	psrlq	$0x20, %xmm7
000000000001dd82	pand	0x2805(%rip), %xmm12
000000000001dd8b	paddq	%xmm4, %xmm0
000000000001dd8f	movups	%xmm8, 0x40(%rsi)
000000000001dd94	pand	0x27f3(%rip), %xmm13
000000000001dd9d	paddq	%xmm5, %xmm1
000000000001dda1	movups	%xmm9, 0x50(%rsi)
000000000001dda6	pand	0x27e1(%rip), %xmm14
000000000001ddaf	paddq	%xmm6, %xmm2
000000000001ddb3	movups	%xmm10, 0x60(%rsi)
000000000001ddb8	pand	0x27cf(%rip), %xmm15
000000000001ddc1	paddq	%xmm7, %xmm3
000000000001ddc5	movups	%xmm11, 0x70(%rsi)
000000000001ddca	addq	$0x80, %rsi
000000000001ddd1	paddq	%xmm12, %xmm0
000000000001ddd6	movdqa	%xmm8, %xmm12
000000000001dddb	psrlq	$0x20, %xmm8
000000000001dde1	paddq	%xmm13, %xmm1
000000000001dde6	movdqa	%xmm9, %xmm13
000000000001ddeb	psrlq	$0x20, %xmm9
000000000001ddf1	paddq	%xmm14, %xmm2
000000000001ddf6	movdqa	%xmm10, %xmm14
000000000001ddfb	psrlq	$0x20, %xmm10
000000000001de01	paddq	%xmm15, %xmm3
000000000001de06	movdqa	%xmm11, %xmm15
000000000001de0b	psrlq	$0x20, %xmm11
000000000001de11	paddq	%xmm8, %xmm0
000000000001de16	pand	0x2771(%rip), %xmm12
000000000001de1f	paddq	%xmm9, %xmm1
000000000001de24	pand	0x2763(%rip), %xmm13
000000000001de2d	paddq	%xmm10, %xmm2
000000000001de32	pand	0x2755(%rip), %xmm14
000000000001de3b	paddq	%xmm11, %xmm3
000000000001de40	pand	0x2747(%rip), %xmm15
000000000001de49	paddq	%xmm12, %xmm0
000000000001de4e	paddq	%xmm13, %xmm1
000000000001de53	paddq	%xmm14, %xmm2
000000000001de58	paddq	%xmm15, %xmm3
000000000001de5d	addq	$0x80, %rdx
000000000001de64	paddq	%xmm2, %xmm0
000000000001de68	paddq	%xmm3, %xmm1
000000000001de6c	cmpq	$0x40, %rdx
000000000001de70	jl	0x1df10
000000000001de76	movups	(%rdi), %xmm4
000000000001de79	movups	0x10(%rdi), %xmm5
000000000001de7d	movups	0x20(%rdi), %xmm6
000000000001de81	movups	0x30(%rdi), %xmm7
000000000001de85	addq	$0x40, %rdi
000000000001de89	movups	%xmm4, (%rsi)
000000000001de8c	movups	%xmm5, 0x10(%rsi)
000000000001de90	movups	%xmm6, 0x20(%rsi)
000000000001de94	movups	%xmm7, 0x30(%rsi)
000000000001de98	addq	$0x40, %rsi
000000000001de9c	movdqa	%xmm4, %xmm12
000000000001dea1	psrlq	$0x20, %xmm4
000000000001dea6	movdqa	%xmm5, %xmm13
000000000001deab	psrlq	$0x20, %xmm5
000000000001deb0	movdqa	%xmm6, %xmm14
000000000001deb5	psrlq	$0x20, %xmm6
000000000001deba	movdqa	%xmm7, %xmm15
000000000001debf	psrlq	$0x20, %xmm7
000000000001dec4	pand	0x26c3(%rip), %xmm12
000000000001decd	paddq	%xmm4, %xmm0
000000000001ded1	pand	0x26b6(%rip), %xmm13
000000000001deda	paddq	%xmm5, %xmm1
000000000001dede	pand	0x26a9(%rip), %xmm14
000000000001dee7	paddq	%xmm6, %xmm0
000000000001deeb	pand	0x269c(%rip), %xmm15
000000000001def4	paddq	%xmm7, %xmm1
000000000001def8	paddq	%xmm12, %xmm0
000000000001defd	paddq	%xmm13, %xmm1
000000000001df02	paddq	%xmm14, %xmm0
000000000001df07	paddq	%xmm15, %xmm1
000000000001df0c	subq	$0x40, %rdx
000000000001df10	cmpq	$0x20, %rdx
000000000001df14	jl	0x1df68
000000000001df16	movups	(%rdi), %xmm4
000000000001df19	movups	0x10(%rdi), %xmm5
000000000001df1d	addq	$0x20, %rdi
000000000001df21	movups	%xmm4, (%rsi)
000000000001df24	movups	%xmm5, 0x10(%rsi)
000000000001df28	addq	$0x20, %rsi
000000000001df2c	movdqa	%xmm4, %xmm12
000000000001df31	movdqa	%xmm5, %xmm13
000000000001df36	psrlq	$0x20, %xmm4
000000000001df3b	psrlq	$0x20, %xmm5
000000000001df40	pand	0x2647(%rip), %xmm12
000000000001df49	pand	0x263e(%rip), %xmm13
000000000001df52	paddq	%xmm4, %xmm0
000000000001df56	paddq	%xmm5, %xmm1
000000000001df5a	paddq	%xmm12, %xmm0
000000000001df5f	paddq	%xmm13, %xmm1
000000000001df64	subq	$0x20, %rdx
000000000001df68	paddq	%xmm1, %xmm0
000000000001df6c	cmpq	$0x10, %rdx
000000000001df70	jl	0x1dfa0
000000000001df72	movups	(%rdi), %xmm4
000000000001df75	addq	$0x10, %rdi
000000000001df79	movups	%xmm4, (%rsi)
000000000001df7c	addq	$0x10, %rsi
000000000001df80	movdqa	%xmm4, %xmm12
000000000001df85	psrlq	$0x20, %xmm4
000000000001df8a	pand	0x25fd(%rip), %xmm12
000000000001df93	paddq	%xmm4, %xmm0
000000000001df97	paddq	%xmm12, %xmm0
000000000001df9c	subq	$0x10, %rdx
000000000001dfa0	movq	%xmm0, %r10
000000000001dfa5	psrldq	$0x8, %xmm0
000000000001dfaa	movq	%xmm0, %r9
000000000001dfaf	addq	%r9, %r10
000000000001dfb2	subq	$0x4, %rdx
000000000001dfb6	jl	0x1dfcf
000000000001dfb8	movl	(%rdi), %r9d
000000000001dfbb	addq	%r9, %r10
000000000001dfbe	movl	%r9d, (%rsi)
000000000001dfc1	addq	$0x4, %rdi
000000000001dfc5	addq	$0x4, %rsi
000000000001dfc9	subq	$0x4, %rdx
000000000001dfcd	jge	0x1dfb8
000000000001dfcf	testq	$0x2, %rdx
000000000001dfd6	je	0x1dfeb
000000000001dfd8	movzwl	(%rdi), %r9d
000000000001dfdc	addq	%r9, %r10
000000000001dfdf	movw	%r9w, (%rsi)
000000000001dfe3	addq	$0x2, %rdi
000000000001dfe7	addq	$0x2, %rsi
000000000001dfeb	testq	$0x1, %rdx
000000000001dff2	je	0x1dffe
000000000001dff4	movzbl	(%rdi), %r9d
000000000001dff8	movb	%r9b, (%rsi)
000000000001dffb	addq	%r9, %r10
000000000001dffe	movl	%r10d, %eax
000000000001e001	shrq	$0x20, %r10
000000000001e005	addq	%rax, %r10
000000000001e008	movzwl	%r10w, %eax
000000000001e00c	shrq	$0x10, %r10
000000000001e010	addq	%rax, %r10
000000000001e013	cmpq	$0x0, %r8
000000000001e017	je	0x1e027
000000000001e019	movq	%r10, %rax
000000000001e01c	shlq	$0x8, %rax
000000000001e020	shrq	$0x18, %r10
000000000001e024	addq	%rax, %r10
000000000001e027	movzwl	%cx, %eax
000000000001e02a	shrl	$0x10, %ecx
000000000001e02d	addl	%ecx, %eax
000000000001e02f	movzwl	%r10w, %ecx
000000000001e033	shrq	$0x10, %r10
000000000001e037	addl	%ecx, %eax
000000000001e039	addl	%r10d, %eax
000000000001e03c	movzwl	%ax, %ecx
000000000001e03f	shrl	$0x10, %eax
000000000001e042	addl	%ecx, %eax
000000000001e044	movzwl	%ax, %ecx
000000000001e047	shrl	$0x10, %eax
000000000001e04a	addl	%ecx, %eax
000000000001e04c	popq	%rbp
000000000001e04d	retq
_os_cpu_in_cksum:
000000000001e04e	movl	%edx, %eax
000000000001e050	testb	$0x3, %sil
000000000001e054	jne	0x1e0b3
000000000001e056	cmpl	$0x40, %esi
000000000001e059	ja	0x1e0b3
000000000001e05b	movl	%edi, %ecx
000000000001e05d	andl	$0x3, %ecx
000000000001e060	testq	%rcx, %rcx
000000000001e063	jne	0x1e0b3
000000000001e065	movl	%eax, %eax
000000000001e067	cmpl	$0x14, %esi
000000000001e06a	jne	0x1e0e1
000000000001e06c	movl	(%rdi), %ecx
000000000001e06e	movl	0x4(%rdi), %edx
000000000001e071	addq	%rax, %rcx
000000000001e074	addq	%rcx, %rdx
000000000001e077	movl	0x8(%rdi), %eax
000000000001e07a	addq	%rdx, %rax
000000000001e07d	movl	0xc(%rdi), %ecx
000000000001e080	addq	%rax, %rcx
000000000001e083	movl	0x10(%rdi), %eax
000000000001e086	addq	%rcx, %rax
000000000001e089	movq	%rax, %rcx
000000000001e08c	shrq	$0x20, %rcx
000000000001e090	movl	%eax, %eax
000000000001e092	addq	%rcx, %rax
000000000001e095	movzwl	%ax, %ecx
000000000001e098	shrq	$0x10, %rax
000000000001e09c	addq	%rax, %rcx
000000000001e09f	movzwl	%cx, %eax
000000000001e0a2	shrq	$0x10, %rcx
000000000001e0a6	addl	%eax, %ecx
000000000001e0a8	movl	%ecx, %eax
000000000001e0aa	shrl	$0x10, %eax
000000000001e0ad	addl	%ecx, %eax
000000000001e0af	movzwl	%ax, %eax
000000000001e0b2	retq
000000000001e0b3	pushq	%rbp
000000000001e0b4	movq	%rsp, %rbp
000000000001e0b7	subq	$0x20, %rsp
000000000001e0bb	xorl	%edx, %edx
000000000001e0bd	leaq	-0x20(%rbp), %rcx
000000000001e0c1	movq	%rdx, (%rcx)
000000000001e0c4	movq	%rdx, 0x8(%rcx)
000000000001e0c8	movq	%rdi, 0x10(%rcx)
000000000001e0cc	movl	%esi, 0x18(%rcx)
000000000001e0cf	xorl	%edx, %edx
000000000001e0d1	movq	%rcx, %rdi
000000000001e0d4	movl	%eax, %ecx
000000000001e0d6	callq	_os_cpu_in_cksum_mbuf
000000000001e0db	addq	$0x20, %rsp
000000000001e0df	popq	%rbp
000000000001e0e0	retq
000000000001e0e1	testl	%esi, %esi
000000000001e0e3	je	0x1e089
000000000001e0e5	movl	%esi, %ecx
000000000001e0e7	xorl	%edx, %edx
000000000001e0e9	movl	(%rdi,%rdx), %esi
000000000001e0ec	addq	%rsi, %rax
000000000001e0ef	addq	$0x4, %rdx
000000000001e0f3	cmpl	%edx, %ecx
000000000001e0f5	jne	0x1e0e9
000000000001e0f7	jmp	0x1e089
_os_cpu_in_cksum_mbuf:
000000000001e0f9	testl	%esi, %esi
000000000001e0fb	js	0x1e3c4
000000000001e101	testl	%edx, %edx
000000000001e103	js	0x1e3d4
000000000001e109	pushq	%rbp
000000000001e10a	movq	%rsp, %rbp
000000000001e10d	pushq	%r15
000000000001e10f	pushq	%r14
000000000001e111	pushq	%r12
000000000001e113	pushq	%rbx
000000000001e114	testq	%rdi, %rdi
000000000001e117	je	0x1e3a8
000000000001e11d	movl	%ecx, %r8d
000000000001e120	movl	%edx, %eax
000000000001e122	movl	0x18(%rdi), %r11d
000000000001e126	subl	%r11d, %eax
000000000001e129	jl	0x1e142
000000000001e12b	testl	%esi, %esi
000000000001e12d	je	0x1e36c
000000000001e133	movq	(%rdi), %rdi
000000000001e136	movl	%eax, %edx
000000000001e138	testq	%rdi, %rdi
000000000001e13b	jne	0x1e122
000000000001e13d	jmp	0x1e3a8
000000000001e142	subl	%edx, %r11d
000000000001e145	movslq	%edx, %r15
000000000001e148	addq	0x10(%rdi), %r15
000000000001e14c	xorl	%ebx, %ebx
000000000001e14e	jmp	0x1e164
000000000001e150	movq	(%rdi), %rdi
000000000001e153	testq	%rdi, %rdi
000000000001e156	je	0x1e3a8
000000000001e15c	movl	0x18(%rdi), %r11d
000000000001e160	movq	0x10(%rdi), %r15
000000000001e164	testl	%r11d, %r11d
000000000001e167	je	0x1e364
000000000001e16d	cmpl	%esi, %r11d
000000000001e170	cmovgl	%esi, %r11d
000000000001e174	testb	$0x1, %r15b
000000000001e178	jne	0x1e184
000000000001e17a	movl	%r11d, %r12d
000000000001e17d	xorl	%eax, %eax
000000000001e17f	movl	%ebx, %r9d
000000000001e182	jmp	0x1e19c
000000000001e184	xorl	%r9d, %r9d
000000000001e187	testl	%ebx, %ebx
000000000001e189	sete	%r9b
000000000001e18d	movzbl	(%r15), %eax
000000000001e191	shlq	$0x8, %rax
000000000001e195	incq	%r15
000000000001e198	leal	-0x1(%r11), %r12d
000000000001e19c	testb	$0x2, %r15b
000000000001e1a0	je	0x1e1bf
000000000001e1a2	cmpl	$0x2, %r12d
000000000001e1a6	jge	0x1e1b0
000000000001e1a8	movl	%r12d, %r10d
000000000001e1ab	jmp	0x1e325
000000000001e1b0	movzwl	(%r15), %ebx
000000000001e1b4	addq	%rbx, %rax
000000000001e1b7	addq	$0x2, %r15
000000000001e1bb	addl	$-0x2, %r12d
000000000001e1bf	cmpl	$0x40, %r12d
000000000001e1c3	jl	0x1e1d7
000000000001e1c5	leal	-0x40(%r12), %r10d
000000000001e1ca	movl	%r10d, %r14d
000000000001e1cd	andl	$-0x40, %r14d
000000000001e1d1	leaq	0x40(%r15), %rbx
000000000001e1d5	jmp	0x1e1fc
000000000001e1d7	movl	%r12d, %r10d
000000000001e1da	jmp	0x1e287
000000000001e1df	testl	%r9d, %r9d
000000000001e1e2	je	0x1e1e8
000000000001e1e4	rolq	$0x8, %rax
000000000001e1e8	movq	%rax, %rcx
000000000001e1eb	shrq	$0x20, %rcx
000000000001e1ef	addq	%r8, %rcx
000000000001e1f2	movl	%eax, %r8d
000000000001e1f5	addq	%rcx, %r8
000000000001e1f8	xorl	%eax, %eax
000000000001e1fa	jmp	0x1e274
000000000001e1fc	prefetcht0	-0x20(%rbx)
000000000001e200	prefetcht0	(%rbx)
000000000001e203	movl	-0x40(%rbx), %edx
000000000001e206	movl	-0x3c(%rbx), %ecx
000000000001e209	addq	%rax, %rdx
000000000001e20c	addq	%rdx, %rcx
000000000001e20f	movl	-0x38(%rbx), %eax
000000000001e212	addq	%rcx, %rax
000000000001e215	movl	-0x34(%rbx), %ecx
000000000001e218	addq	%rax, %rcx
000000000001e21b	movl	-0x30(%rbx), %eax
000000000001e21e	addq	%rcx, %rax
000000000001e221	movl	-0x2c(%rbx), %ecx
000000000001e224	addq	%rax, %rcx
000000000001e227	movl	-0x28(%rbx), %eax
000000000001e22a	addq	%rcx, %rax
000000000001e22d	movl	-0x24(%rbx), %ecx
000000000001e230	addq	%rax, %rcx
000000000001e233	movl	-0x20(%rbx), %eax
000000000001e236	addq	%rcx, %rax
000000000001e239	movl	-0x1c(%rbx), %ecx
000000000001e23c	addq	%rax, %rcx
000000000001e23f	movl	-0x18(%rbx), %eax
000000000001e242	addq	%rcx, %rax
000000000001e245	movl	-0x14(%rbx), %ecx
000000000001e248	addq	%rax, %rcx
000000000001e24b	movl	-0x10(%rbx), %eax
000000000001e24e	addq	%rcx, %rax
000000000001e251	movl	-0xc(%rbx), %ecx
000000000001e254	addq	%rax, %rcx
000000000001e257	movl	-0x8(%rbx), %edx
000000000001e25a	addq	%rcx, %rdx
000000000001e25d	movl	-0x4(%rbx), %eax
000000000001e260	addq	%rdx, %rax
000000000001e263	addl	$-0x40, %r12d
000000000001e267	movq	%rax, %rcx
000000000001e26a	shrq	$0x3e, %rcx
000000000001e26e	jne	0x1e1df
000000000001e274	addq	$0x40, %rbx
000000000001e278	cmpl	$0x3f, %r12d
000000000001e27c	jg	0x1e1fc
000000000001e282	leaq	0x40(%r15,%r14), %r15
000000000001e287	testb	$0x20, %r10b
000000000001e28b	je	0x1e2c8
000000000001e28d	movl	(%r15), %ecx
000000000001e290	movl	0x4(%r15), %edx
000000000001e294	addq	%rcx, %rax
000000000001e297	addq	%rax, %rdx
000000000001e29a	movl	0x8(%r15), %eax
000000000001e29e	addq	%rdx, %rax
000000000001e2a1	movl	0xc(%r15), %ecx
000000000001e2a5	addq	%rax, %rcx
000000000001e2a8	movl	0x10(%r15), %eax
000000000001e2ac	addq	%rcx, %rax
000000000001e2af	movl	0x14(%r15), %ecx
000000000001e2b3	addq	%rax, %rcx
000000000001e2b6	movl	0x18(%r15), %edx
000000000001e2ba	addq	%rcx, %rdx
000000000001e2bd	movl	0x1c(%r15), %eax
000000000001e2c1	addq	%rdx, %rax
000000000001e2c4	addq	$0x20, %r15
000000000001e2c8	testb	$0x10, %r10b
000000000001e2cc	je	0x1e2ed
000000000001e2ce	movl	(%r15), %ecx
000000000001e2d1	movl	0x4(%r15), %edx
000000000001e2d5	addq	%rcx, %rax
000000000001e2d8	addq	%rax, %rdx
000000000001e2db	movl	0x8(%r15), %ecx
000000000001e2df	addq	%rdx, %rcx
000000000001e2e2	movl	0xc(%r15), %eax
000000000001e2e6	addq	%rcx, %rax
000000000001e2e9	addq	$0x10, %r15
000000000001e2ed	testb	$0x8, %r10b
000000000001e2f1	je	0x1e304
000000000001e2f3	movl	(%r15), %ecx
000000000001e2f6	movl	0x4(%r15), %edx
000000000001e2fa	addq	%rcx, %rax
000000000001e2fd	addq	%rdx, %rax
000000000001e300	addq	$0x8, %r15
000000000001e304	testb	$0x4, %r10b
000000000001e308	je	0x1e314
000000000001e30a	movl	(%r15), %ecx
000000000001e30d	addq	%rcx, %rax
000000000001e310	addq	$0x4, %r15
000000000001e314	testb	$0x2, %r10b
000000000001e318	je	0x1e325
000000000001e31a	movzwl	(%r15), %ecx
000000000001e31e	addq	%rcx, %rax
000000000001e321	addq	$0x2, %r15
000000000001e325	testb	$0x1, %r10b
000000000001e329	jne	0x1e330
000000000001e32b	movl	%r9d, %ebx
000000000001e32e	jmp	0x1e33f
000000000001e330	movzbl	(%r15), %ecx
000000000001e334	addq	%rcx, %rax
000000000001e337	xorl	%ebx, %ebx
000000000001e339	testl	%r9d, %r9d
000000000001e33c	sete	%bl
000000000001e33f	testl	%r9d, %r9d
000000000001e342	je	0x1e348
000000000001e344	rolq	$0x8, %rax
000000000001e348	subl	%r11d, %esi
000000000001e34b	movq	%rax, %rcx
000000000001e34e	shrq	$0x20, %rcx
000000000001e352	movl	%eax, %eax
000000000001e354	addq	%r8, %rax
000000000001e357	addq	%rcx, %rax
000000000001e35a	movl	%eax, %r8d
000000000001e35d	shrq	$0x20, %rax
000000000001e361	addq	%rax, %r8
000000000001e364	testl	%esi, %esi
000000000001e366	jg	0x1e150
000000000001e36c	movq	%r8, %rax
000000000001e36f	shrq	$0x30, %rax
000000000001e373	movq	%r8, %rcx
000000000001e376	shrq	$0x20, %rcx
000000000001e37a	movzwl	%cx, %ecx
000000000001e37d	movl	%r8d, %edx
000000000001e380	shrl	$0x10, %edx
000000000001e383	movzwl	%r8w, %esi
000000000001e387	addl	%esi, %eax
000000000001e389	addl	%ecx, %eax
000000000001e38b	addl	%edx, %eax
000000000001e38d	movzwl	%ax, %ecx
000000000001e390	shrl	$0x10, %eax
000000000001e393	addl	%eax, %ecx
000000000001e395	movl	%ecx, %eax
000000000001e397	shrl	$0x10, %eax
000000000001e39a	addl	%ecx, %eax
000000000001e39c	movzwl	%ax, %eax
000000000001e39f	popq	%rbx
000000000001e3a0	popq	%r12
000000000001e3a2	popq	%r14
000000000001e3a4	popq	%r15
000000000001e3a6	popq	%rbp
000000000001e3a7	retq
000000000001e3a8	leaq	0x75aa(%rip), %rdi ## literal pool for: "%s: out of data\n"
000000000001e3af	leaq	0x75b4(%rip), %rsi ## literal pool for: "os_cpu_in_cksum_mbuf"
000000000001e3b6	xorl	%eax, %eax
000000000001e3b8	callq	_fprintf_stderr
000000000001e3bd	movl	$0xffffffff, %eax
000000000001e3c2	jmp	0x1e39f
000000000001e3c4	leaq	0x7558(%rip), %rcx ## literal pool for: "assertion failed: len >= 0"
000000000001e3cb	movq	%rcx, 0xd1d6(%rip)
000000000001e3d2	ud2
000000000001e3d4	leaq	0x7563(%rip), %rcx ## literal pool for: "assertion failed: off >= 0"
000000000001e3db	movq	%rcx, 0xd1c6(%rip)
000000000001e3e2	ud2
_proc_listpidspath:
000000000001e3e4	pushq	%rbp
000000000001e3e5	movq	%rsp, %rbp
000000000001e3e8	pushq	%r15
000000000001e3ea	pushq	%r14
000000000001e3ec	pushq	%r13
000000000001e3ee	pushq	%r12
000000000001e3f0	pushq	%rbx
000000000001e3f1	subq	$0xa48, %rsp
000000000001e3f8	movl	%esi, %r14d
000000000001e3fb	movl	%edi, %r15d
000000000001e3fe	testq	%r8, %r8
000000000001e401	je	0x1e41e
000000000001e403	cmpl	$0x3, %r9d
000000000001e407	ja	0x1e43e
000000000001e409	callq	___error
000000000001e40e	movl	$0xc, (%rax)
000000000001e414	movl	$0xffffffff, %eax
000000000001e419	jmp	0x1eae4
000000000001e41e	xorl	%edx, %edx
000000000001e420	xorl	%ecx, %ecx
000000000001e422	movl	%r15d, %edi
000000000001e425	movl	%r14d, %esi
000000000001e428	addq	$0xa48, %rsp
000000000001e42f	popq	%rbx
000000000001e430	popq	%r12
000000000001e432	popq	%r13
000000000001e434	popq	%r14
000000000001e436	popq	%r15
000000000001e438	popq	%rbp
000000000001e439	jmp	_proc_listpids
000000000001e43e	movl	%ecx, %r13d
000000000001e441	movq	%rdx, %rbx
000000000001e444	movq	%r8, -0x48(%rbp)
000000000001e448	movl	%r9d, -0x2c(%rbp)
000000000001e44c	movl	$0xe0, %edi
000000000001e451	callq	_malloc
000000000001e456	movq	%rax, %r12
000000000001e459	movl	$0xffffffff, %eax
000000000001e45e	testq	%r12, %r12
000000000001e461	je	0x1eae4
000000000001e467	xorl	%eax, %eax
000000000001e469	movq	%rax, (%r12)
000000000001e46d	movl	%eax, 0x8(%r12)
000000000001e472	movq	%rax, 0x40(%r12)
000000000001e477	leaq	0x48(%r12), %rsi
000000000001e47c	movl	%eax, 0x20(%r12)
000000000001e481	movq	%rax, 0x18(%r12)
000000000001e486	movq	%rax, 0x10(%r12)
000000000001e48b	movl	%eax, 0x38(%r12)
000000000001e490	movq	%rax, 0x30(%r12)
000000000001e495	movq	%rax, 0x28(%r12)
000000000001e49a	movq	%rbx, %rdi
000000000001e49d	movq	%rsi, -0x40(%rbp)
000000000001e4a1	callq	_stat64
000000000001e4a6	cmpl	$-0x1, %eax
000000000001e4a9	je	0x1e943
000000000001e4af	movl	%r13d, 0xd8(%r12)
000000000001e4b7	xorl	%edx, %edx
000000000001e4b9	xorl	%ecx, %ecx
000000000001e4bb	movl	%r15d, %edi
000000000001e4be	movl	%r14d, %esi
000000000001e4c1	callq	_proc_listpids
000000000001e4c6	movl	$0xffffffff, %ecx
000000000001e4cb	movq	%rcx, -0x38(%rbp)
000000000001e4cf	testl	%eax, %eax
000000000001e4d1	jle	0x1eaa9
000000000001e4d7	andl	$-0x4, -0x2c(%rbp)
000000000001e4db	leaq	0x10(%r12), %rbx
000000000001e4e0	movq	%r12, %rcx
000000000001e4e3	addq	$0x28, %rcx
000000000001e4e7	movq	%rcx, -0x50(%rbp)
000000000001e4eb	movq	(%rbx), %rcx
000000000001e4ee	cltq
000000000001e4f0	cmpq	%rax, %rcx
000000000001e4f3	jae	0x1e516
000000000001e4f5	subq	$-0x80, %rcx
000000000001e4f9	cmpq	%rax, %rcx
000000000001e4fc	jb	0x1e4f5
000000000001e4fe	movq	%rcx, 0x10(%r12)
000000000001e503	movq	(%r12), %rdi
000000000001e507	testq	%rdi, %rdi
000000000001e50a	je	0x1e51c
000000000001e50c	movq	%rcx, %rsi
000000000001e50f	callq	_reallocf
000000000001e514	jmp	0x1e524
000000000001e516	movq	(%r12), %rdx
000000000001e51a	jmp	0x1e537
000000000001e51c	movq	%rcx, %rdi
000000000001e51f	callq	_malloc
000000000001e524	movq	%rax, %rdx
000000000001e527	movq	%rax, (%r12)
000000000001e52b	testq	%rax, %rax
000000000001e52e	je	0x1eaf6
000000000001e534	movq	(%rbx), %rcx
000000000001e537	movl	%r15d, %edi
000000000001e53a	movl	%r14d, %esi
000000000001e53d	callq	_proc_listpids
000000000001e542	testl	%eax, %eax
000000000001e544	jle	0x1eaa9
000000000001e54a	movl	%eax, %r13d
000000000001e54d	movslq	%eax, %rdx
000000000001e550	addq	$0x4, %rdx
000000000001e554	movq	(%rbx), %rcx
000000000001e557	leal	0x4(%rcx), %eax
000000000001e55a	cmpq	%rcx, %rdx
000000000001e55d	jae	0x1e4ee
000000000001e55f	shrl	$0x2, %r13d
000000000001e563	movl	%r13d, 0x8(%r12)
000000000001e568	xorl	%eax, %eax
000000000001e56a	testl	%r13d, %r13d
000000000001e56d	jle	0x1e954
000000000001e573	movq	%rax, -0x38(%rbp)
000000000001e577	movslq	%r13d, %r13
000000000001e57a	movq	(%r12), %rax
000000000001e57e	movl	-0x4(%rax,%r13,4), %r14d
000000000001e583	decq	%r13
000000000001e586	testl	%r14d, %r14d
000000000001e589	je	0x1e7cb
000000000001e58f	movl	$0x9, %esi
000000000001e594	xorl	%edx, %edx
000000000001e596	movl	$0x930, %r8d
000000000001e59c	movl	%r14d, %edi
000000000001e59f	leaq	-0xa68(%rbp), %rcx
000000000001e5a6	callq	_proc_pidinfo
000000000001e5ab	testl	%eax, %eax
000000000001e5ad	jle	0x1e5cb
000000000001e5af	movl	$0xffffffff, %r15d
000000000001e5b5	cmpl	$0x930, %eax
000000000001e5ba	jae	0x1e5da
000000000001e5bc	cmpl	$0x1, %r15d
000000000001e5c0	jne	0x1e7cb
000000000001e5c6	jmp	0x1e922
000000000001e5cb	callq	___error
000000000001e5d0	cmpl	$0x3, (%rax)
000000000001e5d3	je	0x1e63c
000000000001e5d5	jmp	0x1e7cb
000000000001e5da	movl	-0xa68(%rbp), %eax
000000000001e5e0	testl	%eax, %eax
000000000001e5e2	je	0x1e60b
000000000001e5e4	movq	-0x40(%rbp), %rcx
000000000001e5e8	cmpl	(%rcx), %eax
000000000001e5ea	jne	0x1e60b
000000000001e5ec	movl	$0x1, %r15d
000000000001e5f2	testb	$0x1, 0xd8(%r12)
000000000001e5fb	jne	0x1e5bc
000000000001e5fd	movq	-0xa60(%rbp), %rax
000000000001e604	cmpq	0x50(%r12), %rax
000000000001e609	je	0x1e5bc
000000000001e60b	movl	-0x5d0(%rbp), %eax
000000000001e611	testl	%eax, %eax
000000000001e613	je	0x1e63c
000000000001e615	movq	-0x40(%rbp), %rcx
000000000001e619	cmpl	(%rcx), %eax
000000000001e61b	jne	0x1e63c
000000000001e61d	movl	$0x1, %r15d
000000000001e623	testb	$0x1, 0xd8(%r12)
000000000001e62c	jne	0x1e5bc
000000000001e62e	movq	-0x5c8(%rbp), %rax
000000000001e635	cmpq	0x50(%r12), %rax
000000000001e63a	je	0x1e5bc
000000000001e63c	movl	$0x1, %esi
000000000001e641	xorl	%edx, %edx
000000000001e643	xorl	%ecx, %ecx
000000000001e645	xorl	%r8d, %r8d
000000000001e648	movl	%r14d, %edi
000000000001e64b	callq	_proc_pidinfo
000000000001e650	testl	%eax, %eax
000000000001e652	jle	0x1e7cb
000000000001e658	movl	%eax, %ecx
000000000001e65a	movq	0x40(%r12), %r8
000000000001e65f	movslq	%ecx, %rax
000000000001e662	cmpq	%rax, %r8
000000000001e665	jae	0x1e68c
000000000001e667	addq	$0x100, %r8
000000000001e66e	cmpq	%rax, %r8
000000000001e671	jb	0x1e667
000000000001e673	movq	%r8, 0x40(%r12)
000000000001e678	movq	0x30(%r12), %rdi
000000000001e67d	testq	%rdi, %rdi
000000000001e680	je	0x1e693
000000000001e682	movq	%r8, %rsi
000000000001e685	callq	_reallocf
000000000001e68a	jmp	0x1e69b
000000000001e68c	movq	0x30(%r12), %rcx
000000000001e691	jmp	0x1e6b1
000000000001e693	movq	%r8, %rdi
000000000001e696	callq	_malloc
000000000001e69b	movq	%rax, %rcx
000000000001e69e	movq	%rax, 0x30(%r12)
000000000001e6a3	testq	%rax, %rax
000000000001e6a6	je	0x1e7cb
000000000001e6ac	movq	0x40(%r12), %r8
000000000001e6b1	movl	$0x1, %esi
000000000001e6b6	xorl	%edx, %edx
000000000001e6b8	movl	%r14d, %edi
000000000001e6bb	callq	_proc_pidinfo
000000000001e6c0	testl	%eax, %eax
000000000001e6c2	jle	0x1e7cb
000000000001e6c8	movslq	%eax, %rdx
000000000001e6cb	addq	$0x8, %rdx
000000000001e6cf	movq	0x40(%r12), %r8
000000000001e6d4	leal	0x8(%r8), %ecx
000000000001e6d8	cmpq	%r8, %rdx
000000000001e6db	jae	0x1e65f
000000000001e6dd	shrl	$0x3, %eax
000000000001e6e0	movl	%eax, 0x38(%r12)
000000000001e6e5	je	0x1e789
000000000001e6eb	xorl	%ebx, %ebx
000000000001e6ed	movq	0x30(%r12), %rax
000000000001e6f2	cmpl	$0x1, 0x4(%rax,%rbx,8)
000000000001e6f7	jne	0x1e778
000000000001e6f9	movl	(%rax,%rbx,8), %esi
000000000001e6fc	movl	$0x1, %edx
000000000001e701	movl	$0xb0, %r8d
000000000001e707	movl	%r14d, %edi
000000000001e70a	leaq	-0xa68(%rbp), %rcx
000000000001e711	callq	_proc_pidfdinfo
000000000001e716	testl	%eax, %eax
000000000001e718	jle	0x1e76e
000000000001e71a	cmpl	$0xb0, %eax
000000000001e71f	jb	0x1e7f0
000000000001e725	movl	0xd8(%r12), %eax
000000000001e72d	testb	$0x2, %al
000000000001e72f	je	0x1e73b
000000000001e731	cmpw	$0x0, -0xa68(%rbp)
000000000001e739	js	0x1e778
000000000001e73b	movl	-0xa50(%rbp), %ecx
000000000001e741	testl	%ecx, %ecx
000000000001e743	je	0x1e778
000000000001e745	movq	-0x40(%rbp), %rdx
000000000001e749	cmpl	(%rdx), %ecx
000000000001e74b	jne	0x1e778
000000000001e74d	movl	$0x1, %r15d
000000000001e753	testb	$0x1, %al
000000000001e755	jne	0x1e5bc
000000000001e75b	movq	-0xa48(%rbp), %rax
000000000001e762	cmpq	0x50(%r12), %rax
000000000001e767	jne	0x1e778
000000000001e769	jmp	0x1e5bc
000000000001e76e	callq	___error
000000000001e773	cmpl	$0x2, (%rax)
000000000001e776	jne	0x1e7cb
000000000001e778	incq	%rbx
000000000001e77b	movslq	0x38(%r12), %rax
000000000001e780	cmpq	%rax, %rbx
000000000001e783	jl	0x1e6ed
000000000001e789	movl	$0x2, %esi
000000000001e78e	xorl	%edx, %edx
000000000001e790	movl	$0xe8, %r8d
000000000001e796	movl	%r14d, %edi
000000000001e799	leaq	-0x138(%rbp), %rcx
000000000001e7a0	callq	_proc_pidinfo
000000000001e7a5	testl	%eax, %eax
000000000001e7a7	jle	0x1e7d9
000000000001e7a9	movl	$0xffffffff, %r15d
000000000001e7af	cmpl	$0xe8, %eax
000000000001e7b4	jb	0x1e5bc
000000000001e7ba	testb	$0x1, -0x137(%rbp)
000000000001e7c1	jne	0x1e7fb
000000000001e7c3	xorl	%r15d, %r15d
000000000001e7c6	jmp	0x1e5bc
000000000001e7cb	testq	%r13, %r13
000000000001e7ce	jg	0x1e57a
000000000001e7d4	jmp	0x1e950
000000000001e7d9	callq	___error
000000000001e7de	xorl	%r15d, %r15d
000000000001e7e1	cmpl	$0x3, (%rax)
000000000001e7e4	setne	%r15b
000000000001e7e8	negl	%r15d
000000000001e7eb	jmp	0x1e5bc
000000000001e7f0	movl	$0xffffffff, %r15d
000000000001e7f6	jmp	0x1e5bc
000000000001e7fb	movl	-0x5c(%rbp), %ecx
000000000001e7fe	shll	$0x3, %ecx
000000000001e801	movq	-0x50(%rbp), %rbx
000000000001e805	movq	(%rbx), %r8
000000000001e808	movslq	%ecx, %rax
000000000001e80b	cmpq	%rax, %r8
000000000001e80e	jae	0x1e835
000000000001e810	addq	$0x100, %r8
000000000001e817	cmpq	%rax, %r8
000000000001e81a	jb	0x1e810
000000000001e81c	movq	%r8, 0x28(%r12)
000000000001e821	movq	0x18(%r12), %rdi
000000000001e826	testq	%rdi, %rdi
000000000001e829	je	0x1e83c
000000000001e82b	movq	%r8, %rsi
000000000001e82e	callq	_reallocf
000000000001e833	jmp	0x1e844
000000000001e835	movq	0x18(%r12), %rcx
000000000001e83a	jmp	0x1e858
000000000001e83c	movq	%r8, %rdi
000000000001e83f	callq	_malloc
000000000001e844	movq	%rax, %rcx
000000000001e847	movq	%rax, 0x18(%r12)
000000000001e84c	testq	%rax, %rax
000000000001e84f	je	0x1e5bc
000000000001e855	movq	(%rbx), %r8
000000000001e858	movl	$0x6, %esi
000000000001e85d	xorl	%edx, %edx
000000000001e85f	movl	%r14d, %edi
000000000001e862	callq	_proc_pidinfo
000000000001e867	testl	%eax, %eax
000000000001e869	jle	0x1e5bc
000000000001e86f	movslq	%eax, %rdx
000000000001e872	addq	$0x8, %rdx
000000000001e876	movq	(%rbx), %r8
000000000001e879	leal	0x8(%r8), %ecx
000000000001e87d	cmpq	%r8, %rdx
000000000001e880	jae	0x1e808
000000000001e882	shrl	$0x3, %eax
000000000001e885	movl	%eax, 0x20(%r12)
000000000001e88a	je	0x1e7c3
000000000001e890	xorl	%ebx, %ebx
000000000001e892	movq	0x18(%r12), %rax
000000000001e897	movq	(%rax,%rbx,8), %rdx
000000000001e89b	movl	$0xa, %esi
000000000001e8a0	movl	$0x508, %r8d
000000000001e8a6	movl	%r14d, %edi
000000000001e8a9	leaq	-0xa68(%rbp), %rcx
000000000001e8b0	callq	_proc_pidinfo
000000000001e8b5	testl	%eax, %eax
000000000001e8b7	jle	0x1e8f1
000000000001e8b9	cmpl	$0xe7, %eax
000000000001e8be	jbe	0x1e5bc
000000000001e8c4	movl	-0x9f8(%rbp), %eax
000000000001e8ca	testl	%eax, %eax
000000000001e8cc	je	0x1e905
000000000001e8ce	movq	-0x40(%rbp), %rcx
000000000001e8d2	cmpl	(%rcx), %eax
000000000001e8d4	jne	0x1e905
000000000001e8d6	testb	$0x1, 0xd8(%r12)
000000000001e8df	jne	0x1e917
000000000001e8e1	movq	-0x9f0(%rbp), %rax
000000000001e8e8	cmpq	0x50(%r12), %rax
000000000001e8ed	jne	0x1e905
000000000001e8ef	jmp	0x1e917
000000000001e8f1	callq	___error
000000000001e8f6	cmpl	$0x3, (%rax)
000000000001e8f9	je	0x1e905
000000000001e8fb	callq	___error
000000000001e900	cmpl	$0x16, (%rax)
000000000001e903	jne	0x1e8c4
000000000001e905	incq	%rbx
000000000001e908	movslq	0x20(%r12), %rax
000000000001e90d	cmpq	%rax, %rbx
000000000001e910	jl	0x1e892
000000000001e912	jmp	0x1e7c3
000000000001e917	movl	$0x1, %r15d
000000000001e91d	jmp	0x1e5bc
000000000001e922	movq	-0x48(%rbp), %rax
000000000001e926	movl	%r14d, (%rax)
000000000001e929	addq	$0x4, %rax
000000000001e92d	movq	%rax, -0x48(%rbp)
000000000001e931	movq	-0x38(%rbp), %rax
000000000001e935	addl	$0x4, %eax
000000000001e938	cmpl	-0x2c(%rbp), %eax
000000000001e93b	jl	0x1e56a
000000000001e941	jmp	0x1e954
000000000001e943	movq	%r12, %rdi
000000000001e946	callq	_free
000000000001e94b	jmp	0x1e414
000000000001e950	movq	-0x38(%rbp), %rax
000000000001e954	movq	%rax, -0x38(%rbp)
000000000001e958	cmpl	-0x2c(%rbp), %eax
000000000001e95b	jge	0x1eaa9
000000000001e961	movl	0x8(%r12), %r15d
000000000001e966	leaq	-0xa68(%rbp), %r14
000000000001e96d	movq	-0x40(%rbp), %r13
000000000001e971	testl	%r15d, %r15d
000000000001e974	jle	0x1eaa9
000000000001e97a	movslq	%r15d, %r15
000000000001e97d	movq	(%r12), %rax
000000000001e981	movl	-0x4(%rax,%r15,4), %ebx
000000000001e986	decq	%r15
000000000001e989	testl	%ebx, %ebx
000000000001e98b	je	0x1ea7c
000000000001e991	testb	$0x1, 0xd8(%r12)
000000000001e99a	jne	0x1ea0a
000000000001e99c	movl	$0x16, %esi
000000000001e9a1	xorl	%edx, %edx
000000000001e9a3	jmp	0x1e9b8
000000000001e9a5	movq	-0xa10(%rbp), %rdx
000000000001e9ac	addq	-0xa18(%rbp), %rdx
000000000001e9b3	movl	$0x16, %esi
000000000001e9b8	movl	$0x4f8, %r8d
000000000001e9be	movl	%ebx, %edi
000000000001e9c0	movq	%r14, %rcx
000000000001e9c3	callq	_proc_pidinfo
000000000001e9c8	testl	%eax, %eax
000000000001e9ca	jle	0x1ea59
000000000001e9d0	cmpl	$0x4f8, %eax
000000000001e9d5	jb	0x1ea7c
000000000001e9db	movl	-0xa08(%rbp), %eax
000000000001e9e1	testl	%eax, %eax
000000000001e9e3	je	0x1e9a5
000000000001e9e5	cmpl	(%r13), %eax
000000000001e9e9	jne	0x1e9a5
000000000001e9eb	testb	$0x1, 0xd8(%r12)
000000000001e9f4	jne	0x1ea87
000000000001e9fa	movq	-0xa00(%rbp), %rax
000000000001ea01	cmpq	0x50(%r12), %rax
000000000001ea06	jne	0x1e9a5
000000000001ea08	jmp	0x1ea87
000000000001ea0a	movslq	(%r13), %rdx
000000000001ea0e	movl	$0x17, %esi
000000000001ea13	movl	$0x4f8, %r8d
000000000001ea19	movl	%ebx, %edi
000000000001ea1b	movq	%r14, %rcx
000000000001ea1e	callq	_proc_pidinfo
000000000001ea23	testl	%eax, %eax
000000000001ea25	jle	0x1ea6d
000000000001ea27	cmpl	$0x4f8, %eax
000000000001ea2c	jb	0x1ea7c
000000000001ea2e	movl	-0xa08(%rbp), %eax
000000000001ea34	testl	%eax, %eax
000000000001ea36	je	0x1ea7c
000000000001ea38	cmpl	(%r13), %eax
000000000001ea3c	jne	0x1ea7c
000000000001ea3e	testb	$0x1, 0xd8(%r12)
000000000001ea47	jne	0x1ea87
000000000001ea49	movq	-0xa00(%rbp), %rax
000000000001ea50	cmpq	0x50(%r12), %rax
000000000001ea55	jne	0x1ea7c
000000000001ea57	jmp	0x1ea87
000000000001ea59	callq	___error
000000000001ea5e	cmpl	$0x3, (%rax)
000000000001ea61	je	0x1ea7c
000000000001ea63	callq	___error
000000000001ea68	cmpl	$0x16, (%rax)
000000000001ea6b	jmp	0x1ea7c
000000000001ea6d	callq	___error
000000000001ea72	cmpl	$0x3, (%rax)
000000000001ea75	je	0x1ea7c
000000000001ea77	callq	___error
000000000001ea7c	testq	%r15, %r15
000000000001ea7f	jg	0x1e97d
000000000001ea85	jmp	0x1eaa9
000000000001ea87	movq	-0x48(%rbp), %rax
000000000001ea8b	movl	%ebx, (%rax)
000000000001ea8d	addq	$0x4, %rax
000000000001ea91	movq	%rax, -0x48(%rbp)
000000000001ea95	movq	-0x38(%rbp), %rax
000000000001ea99	addl	$0x4, %eax
000000000001ea9c	movq	%rax, -0x38(%rbp)
000000000001eaa0	cmpl	-0x2c(%rbp), %eax
000000000001eaa3	jl	0x1e971
000000000001eaa9	movq	(%r12), %rdx
000000000001eaad	testq	%rdx, %rdx
000000000001eab0	je	0x1eaba
000000000001eab2	movq	%rdx, %rdi
000000000001eab5	callq	_free
000000000001eaba	movq	0x18(%r12), %rdi
000000000001eabf	testq	%rdi, %rdi
000000000001eac2	je	0x1eac9
000000000001eac4	callq	_free
000000000001eac9	movq	0x30(%r12), %rdi
000000000001eace	testq	%rdi, %rdi
000000000001ead1	je	0x1ead8
000000000001ead3	callq	_free
000000000001ead8	movq	%r12, %rdi
000000000001eadb	callq	_free
000000000001eae0	movq	-0x38(%rbp), %rax
000000000001eae4	addq	$0xa48, %rsp
000000000001eaeb	popq	%rbx
000000000001eaec	popq	%r12
000000000001eaee	popq	%r13
000000000001eaf0	popq	%r14
000000000001eaf2	popq	%r15
000000000001eaf4	popq	%rbp
000000000001eaf5	retq
000000000001eaf6	movl	$0xffffffff, %eax
000000000001eafb	movq	%rax, -0x38(%rbp)
000000000001eaff	jmp	0x1eaad
_mach_port_names:
000000000001eb01	jmp	__kernelrpc_mach_port_names
_mach_port_rename:
000000000001eb06	jmp	__kernelrpc_mach_port_rename
_mach_port_allocate_name:
000000000001eb0b	jmp	__kernelrpc_mach_port_allocate_name
_mach_port_peek:
000000000001eb10	jmp	__kernelrpc_mach_port_peek
_mach_port_set_mscount:
000000000001eb15	jmp	__kernelrpc_mach_port_set_mscount
_mach_port_set_seqno:
000000000001eb1a	jmp	__kernelrpc_mach_port_set_seqno
_mach_port_allocate_qos:
000000000001eb1f	jmp	__kernelrpc_mach_port_allocate_qos
_mach_port_allocate_full:
000000000001eb24	jmp	__kernelrpc_mach_port_allocate_full
_task_set_port_space:
000000000001eb29	jmp	__kernelrpc_task_set_port_space
_mach_port_get_srights:
000000000001eb2e	jmp	__kernelrpc_mach_port_get_srights
_mach_port_space_info:
000000000001eb33	jmp	__kernelrpc_mach_port_space_info
_mach_port_space_basic_info:
000000000001eb38	jmp	__kernelrpc_mach_port_space_basic_info
_mig_dealloc_special_reply_port:
000000000001eb3d	pushq	%rbp
000000000001eb3e	movq	%rsp, %rbp
000000000001eb41	pushq	%r15
000000000001eb43	pushq	%r14
000000000001eb45	pushq	%rbx
000000000001eb46	pushq	%rax
000000000001eb47	movl	%gs:0x40, %ebx
000000000001eb4f	leal	0x1(%rbx), %eax
000000000001eb52	cmpl	$0x2, %eax
000000000001eb55	jb	0x1eb8f
000000000001eb57	movl	%edi, %r14d
000000000001eb5a	leaq	_mach_task_self_(%rip), %r15
000000000001eb61	movl	(%r15), %edi
000000000001eb64	movl	$0xffffffff, %edx
000000000001eb69	xorl	%ecx, %ecx
000000000001eb6b	movl	%ebx, %esi
000000000001eb6d	callq	_mach_port_destruct
000000000001eb72	cmpl	%r14d, %ebx
000000000001eb75	je	0x1eb82
000000000001eb77	movl	(%r15), %edi
000000000001eb7a	movl	%r14d, %esi
000000000001eb7d	callq	_mach_port_deallocate
000000000001eb82	movq	$0x0, %gs:0x40
000000000001eb8f	addq	$0x8, %rsp
000000000001eb93	popq	%rbx
000000000001eb94	popq	%r14
000000000001eb96	popq	%r15
000000000001eb98	popq	%rbp
000000000001eb99	retq
_mach_sync_ipc_link_monitoring_start:
000000000001eb9a	pushq	%rbp
000000000001eb9b	movq	%rsp, %rbp
000000000001eb9e	pushq	%r15
000000000001eba0	pushq	%r14
000000000001eba2	pushq	%r12
000000000001eba4	pushq	%rbx
000000000001eba5	subq	$0x10, %rsp
000000000001eba9	movq	%rdi, %r14
000000000001ebac	movl	$0xffffffff, (%rdi)
000000000001ebb2	movl	%gs:0x40, %r15d
000000000001ebbb	leal	0x1(%r15), %eax
000000000001ebbf	movl	$0x1, %ecx
000000000001ebc4	cmpl	%ecx, %eax
000000000001ebc6	ja	0x1ebdb
000000000001ebc8	callq	_thread_get_special_reply_port
000000000001ebcd	movl	%eax, %r15d
000000000001ebd0	movl	%eax, %eax
000000000001ebd2	movq	%rax, %gs:0x40
000000000001ebdb	leaq	_mach_task_self_(%rip), %r12
000000000001ebe2	movl	(%r12), %edi
000000000001ebe6	xorl	%edx, %edx
000000000001ebe8	movl	$0x1, %ecx
000000000001ebed	movl	%r15d, %esi
000000000001ebf0	callq	_mach_port_mod_refs
000000000001ebf5	movl	%eax, %ebx
000000000001ebf7	testl	%eax, %eax
000000000001ebf9	jne	0x1ec24
000000000001ebfb	movl	(%r12), %edi
000000000001ebff	leaq	-0x24(%rbp), %rdx
000000000001ec03	movl	%r15d, %esi
000000000001ec06	callq	__kernelrpc_mach_port_special_reply_port_reset_link
000000000001ec0b	testl	%eax, %eax
000000000001ec0d	je	0x1ec1f
000000000001ec0f	movl	%eax, %ebx
000000000001ec11	movl	(%r12), %edi
000000000001ec15	movl	%r15d, %esi
000000000001ec18	callq	_mach_port_deallocate
000000000001ec1d	jmp	0x1ec24
000000000001ec1f	movl	%r15d, (%r14)
000000000001ec22	xorl	%ebx, %ebx
000000000001ec24	movl	%ebx, %eax
000000000001ec26	addq	$0x10, %rsp
000000000001ec2a	popq	%rbx
000000000001ec2b	popq	%r12
000000000001ec2d	popq	%r14
000000000001ec2f	popq	%r15
000000000001ec31	popq	%rbp
000000000001ec32	retq
_mach_sync_ipc_link_monitoring_stop:
000000000001ec33	pushq	%rbp
000000000001ec34	movq	%rsp, %rbp
000000000001ec37	pushq	%r15
000000000001ec39	pushq	%r14
000000000001ec3b	pushq	%r12
000000000001ec3d	pushq	%rbx
000000000001ec3e	subq	$0x10, %rsp
000000000001ec42	movq	%rsi, %r14
000000000001ec45	movl	%edi, %ebx
000000000001ec47	leaq	-0x24(%rbp), %r15
000000000001ec4b	movl	$0x1, (%r15)
000000000001ec52	leaq	_mach_task_self_(%rip), %r12
000000000001ec59	movl	(%r12), %edi
000000000001ec5d	movl	%ebx, %esi
000000000001ec5f	movq	%r15, %rdx
000000000001ec62	callq	__kernelrpc_mach_port_special_reply_port_reset_link
000000000001ec67	xorl	%ecx, %ecx
000000000001ec69	cmpl	$0x0, (%r15)
000000000001ec6d	movl	%eax, %r15d
000000000001ec70	sete	%cl
000000000001ec73	movl	%ecx, (%r14)
000000000001ec76	movl	(%r12), %edi
000000000001ec7a	movl	%ebx, %esi
000000000001ec7c	callq	_mach_port_deallocate
000000000001ec81	movl	%r15d, %eax
000000000001ec84	addq	$0x10, %rsp
000000000001ec88	popq	%rbx
000000000001ec89	popq	%r12
000000000001ec8b	popq	%r14
000000000001ec8d	popq	%r15
000000000001ec8f	popq	%rbp
000000000001ec90	retq
_mach_port_dnrequest_info:
000000000001ec91	jmp	__kernelrpc_mach_port_dnrequest_info
_mach_port_kernel_object:
000000000001ec96	jmp	__kernelrpc_mach_port_kernel_object
_mach_port_kobject:
000000000001ec9b	jmp	__kernelrpc_mach_port_kobject
_mach_port_unguard:
000000000001eca0	pushq	%rbp
000000000001eca1	movq	%rsp, %rbp
000000000001eca4	pushq	%r15
000000000001eca6	pushq	%r14
000000000001eca8	pushq	%rbx
000000000001eca9	pushq	%rax
000000000001ecaa	movq	%rdx, %r14
000000000001ecad	movl	%esi, %r15d
000000000001ecb0	movl	%edi, %ebx
000000000001ecb2	callq	__kernelrpc_mach_port_unguard_trap
000000000001ecb7	cmpl	$0x10000003, %eax
000000000001ecbc	jne	0x1ecd5
000000000001ecbe	movl	%ebx, %edi
000000000001ecc0	movl	%r15d, %esi
000000000001ecc3	movq	%r14, %rdx
000000000001ecc6	addq	$0x8, %rsp
000000000001ecca	popq	%rbx
000000000001eccb	popq	%r14
000000000001eccd	popq	%r15
000000000001eccf	popq	%rbp
000000000001ecd0	jmp	__kernelrpc_mach_port_unguard
000000000001ecd5	addq	$0x8, %rsp
000000000001ecd9	popq	%rbx
000000000001ecda	popq	%r14
000000000001ecdc	popq	%r15
000000000001ecde	popq	%rbp
000000000001ecdf	retq
_mach_vm_remap:
000000000001ece0	pushq	%rbp
000000000001ece1	movq	%rsp, %rbp
000000000001ece4	pushq	%r15
000000000001ece6	pushq	%r14
000000000001ece8	pushq	%r13
000000000001ecea	pushq	%r12
000000000001ecec	pushq	%rbx
000000000001eced	pushq	%rax
000000000001ecee	movl	%r8d, %ebx
000000000001ecf1	movq	%rdx, %r14
000000000001ecf4	movq	%rsi, %r15
000000000001ecf7	movl	%edi, %r12d
000000000001ecfa	movl	0x18(%rbp), %r10d
000000000001ecfe	movl	0x30(%rbp), %eax
000000000001ed01	subq	$0x8, %rsp
000000000001ed05	pushq	%rax
000000000001ed06	pushq	0x28(%rbp)
000000000001ed09	pushq	0x20(%rbp)
000000000001ed0c	pushq	%r10
000000000001ed0e	pushq	0x10(%rbp)
000000000001ed11	callq	__kernelrpc_mach_vm_remap
000000000001ed16	addq	$0x30, %rsp
000000000001ed1a	movl	%eax, %r13d
000000000001ed1d	movq	___syscall_logger(%rip), %rax
000000000001ed24	testq	%rax, %rax
000000000001ed27	je	0x1ed47
000000000001ed29	andl	$0xff000000, %ebx
000000000001ed2f	orl	$0x90, %ebx
000000000001ed35	movl	%r12d, %esi
000000000001ed38	movq	(%r15), %r8
000000000001ed3b	xorl	%ecx, %ecx
000000000001ed3d	xorl	%r9d, %r9d
000000000001ed40	movl	%ebx, %edi
000000000001ed42	movq	%r14, %rdx
000000000001ed45	callq	*%rax
000000000001ed47	movl	%r13d, %eax
000000000001ed4a	addq	$0x8, %rsp
000000000001ed4e	popq	%rbx
000000000001ed4f	popq	%r12
000000000001ed51	popq	%r13
000000000001ed53	popq	%r14
000000000001ed55	popq	%r15
000000000001ed57	popq	%rbp
000000000001ed58	retq
_mach_vm_read:
000000000001ed59	pushq	%rbp
000000000001ed5a	movq	%rsp, %rbp
000000000001ed5d	pushq	%r15
000000000001ed5f	pushq	%r14
000000000001ed61	pushq	%rbx
000000000001ed62	pushq	%rax
000000000001ed63	movq	%r8, %rbx
000000000001ed66	movq	%rcx, %r15
000000000001ed69	callq	__kernelrpc_mach_vm_read
000000000001ed6e	movl	%eax, %r14d
000000000001ed71	movq	___syscall_logger(%rip), %rax
000000000001ed78	testq	%rax, %rax
000000000001ed7b	je	0x1ed97
000000000001ed7d	leaq	_mach_task_self_(%rip), %rcx
000000000001ed84	movl	(%rcx), %esi
000000000001ed86	movl	(%rbx), %edx
000000000001ed88	movq	(%r15), %r8
000000000001ed8b	movl	$0x90, %edi
000000000001ed90	xorl	%ecx, %ecx
000000000001ed92	xorl	%r9d, %r9d
000000000001ed95	callq	*%rax
000000000001ed97	movl	%r14d, %eax
000000000001ed9a	addq	$0x8, %rsp
000000000001ed9e	popq	%rbx
000000000001ed9f	popq	%r14
000000000001eda1	popq	%r15
000000000001eda3	popq	%rbp
000000000001eda4	retq
_getaudit:
000000000001eda5	pushq	%rbp
000000000001eda6	movq	%rsp, %rbp
000000000001eda9	pushq	%rbx
000000000001edaa	subq	$0x38, %rsp
000000000001edae	movq	%rdi, %rbx
000000000001edb1	leaq	-0x38(%rbp), %rdi
000000000001edb5	movl	$0x30, %esi
000000000001edba	callq	_getaudit_addr
000000000001edbf	testl	%eax, %eax
000000000001edc1	jne	0x1ede2
000000000001edc3	movl	-0x38(%rbp), %ecx
000000000001edc6	movl	%ecx, (%rbx)
000000000001edc8	movq	-0x34(%rbp), %rcx
000000000001edcc	movq	%rcx, 0x4(%rbx)
000000000001edd0	movl	-0x2c(%rbp), %ecx
000000000001edd3	movl	%ecx, 0xc(%rbx)
000000000001edd6	movl	-0x24(%rbp), %ecx
000000000001edd9	movl	%ecx, 0x10(%rbx)
000000000001eddc	movl	-0x14(%rbp), %ecx
000000000001eddf	movl	%ecx, 0x14(%rbx)
000000000001ede2	addq	$0x38, %rsp
000000000001ede6	popq	%rbx
000000000001ede7	popq	%rbp
000000000001ede8	retq
_setaudit:
000000000001ede9	pushq	%rbp
000000000001edea	movq	%rsp, %rbp
000000000001eded	pushq	%rbx
000000000001edee	subq	$0x38, %rsp
000000000001edf2	movq	%rdi, %rbx
000000000001edf5	leaq	-0x38(%rbp), %rdi
000000000001edf9	movl	$0x30, %esi
000000000001edfe	callq	_getaudit_addr
000000000001ee03	testl	%eax, %eax
000000000001ee05	jne	0x1ee46
000000000001ee07	movl	(%rbx), %eax
000000000001ee09	leaq	-0x38(%rbp), %rdi
000000000001ee0d	movl	%eax, (%rdi)
000000000001ee0f	movq	0x4(%rbx), %rax
000000000001ee13	movq	%rax, 0x4(%rdi)
000000000001ee17	movl	0xc(%rbx), %eax
000000000001ee1a	movl	%eax, 0xc(%rdi)
000000000001ee1d	movl	$0x4, 0x10(%rdi)
000000000001ee24	movl	0x10(%rbx), %eax
000000000001ee27	movl	%eax, 0x14(%rdi)
000000000001ee2a	movl	0x14(%rbx), %eax
000000000001ee2d	movl	%eax, 0x24(%rdi)
000000000001ee30	movl	$0x30, %esi
000000000001ee35	callq	_setaudit_addr
000000000001ee3a	testl	%eax, %eax
000000000001ee3c	jne	0x1ee46
000000000001ee3e	movl	-0x14(%rbp), %eax
000000000001ee41	movl	%eax, 0x14(%rbx)
000000000001ee44	xorl	%eax, %eax
000000000001ee46	addq	$0x38, %rsp
000000000001ee4a	popq	%rbx
000000000001ee4b	popq	%rbp
000000000001ee4c	retq
_kpersona_alloc:
000000000001ee4d	pushq	%rbp
000000000001ee4e	movq	%rsp, %rbp
000000000001ee51	subq	$0x10, %rsp
000000000001ee55	movq	%rsi, %rax
000000000001ee58	movq	%rdi, %rcx
000000000001ee5b	leaq	-0x8(%rbp), %r8
000000000001ee5f	movq	$0x1, (%r8)
000000000001ee66	movl	$0x1, %edi
000000000001ee6b	xorl	%esi, %esi
000000000001ee6d	movq	%rcx, %rdx
000000000001ee70	movq	%rax, %rcx
000000000001ee73	callq	___persona
000000000001ee78	addq	$0x10, %rsp
000000000001ee7c	popq	%rbp
000000000001ee7d	retq
_kpersona_dealloc:
000000000001ee7e	pushq	%rbp
000000000001ee7f	movq	%rsp, %rbp
000000000001ee82	subq	$0x10, %rsp
000000000001ee86	leaq	-0x4(%rbp), %rcx
000000000001ee8a	movl	%edi, (%rcx)
000000000001ee8c	leaq	-0x10(%rbp), %r8
000000000001ee90	movq	$0x1, (%r8)
000000000001ee97	movl	$0x2, %edi
000000000001ee9c	xorl	%esi, %esi
000000000001ee9e	xorl	%edx, %edx
000000000001eea0	callq	___persona
000000000001eea5	addq	$0x10, %rsp
000000000001eea9	popq	%rbp
000000000001eeaa	retq
_kpersona_get:
000000000001eeab	pushq	%rbp
000000000001eeac	movq	%rsp, %rbp
000000000001eeaf	pushq	%rbx
000000000001eeb0	pushq	%rax
000000000001eeb1	movq	%rdi, %rbx
000000000001eeb4	movl	_kpersona_get.p_id(%rip), %eax
000000000001eeba	cmpl	$-0x1, %eax
000000000001eebd	je	0x1eec5
000000000001eebf	movl	%eax, (%rbx)
000000000001eec1	xorl	%eax, %eax
000000000001eec3	jmp	0x1eee9
000000000001eec5	leaq	-0x10(%rbp), %r8
000000000001eec9	movq	$0x1, (%r8)
000000000001eed0	leaq	_kpersona_get.p_id(%rip), %rcx
000000000001eed7	movl	$0x3, %edi
000000000001eedc	xorl	%esi, %esi
000000000001eede	xorl	%edx, %edx
000000000001eee0	callq	___persona
000000000001eee5	testl	%eax, %eax
000000000001eee7	je	0x1eef0
000000000001eee9	addq	$0x8, %rsp
000000000001eeed	popq	%rbx
000000000001eeee	popq	%rbp
000000000001eeef	retq
000000000001eef0	movl	_kpersona_get.p_id(%rip), %eax
000000000001eef6	jmp	0x1eebf
_kpersona_info:
000000000001eef8	pushq	%rbp
000000000001eef9	movq	%rsp, %rbp
000000000001eefc	subq	$0x10, %rsp
000000000001ef00	movq	%rsi, %rax
000000000001ef03	leaq	-0x4(%rbp), %rcx
000000000001ef07	movl	%edi, (%rcx)
000000000001ef09	leaq	-0x10(%rbp), %r8
000000000001ef0d	movq	$0x1, (%r8)
000000000001ef14	movl	$0x4, %edi
000000000001ef19	xorl	%esi, %esi
000000000001ef1b	movq	%rax, %rdx
000000000001ef1e	callq	___persona
000000000001ef23	addq	$0x10, %rsp
000000000001ef27	popq	%rbp
000000000001ef28	retq
_kpersona_pidinfo:
000000000001ef29	pushq	%rbp
000000000001ef2a	movq	%rsp, %rbp
000000000001ef2d	subq	$0x10, %rsp
000000000001ef31	movq	%rsi, %rax
000000000001ef34	leaq	-0x10(%rbp), %r8
000000000001ef38	movq	$0x1, (%r8)
000000000001ef3f	leaq	-0x4(%rbp), %rcx
000000000001ef43	movl	%edi, (%rcx)
000000000001ef45	movl	$0x5, %edi
000000000001ef4a	xorl	%esi, %esi
000000000001ef4c	movq	%rax, %rdx
000000000001ef4f	callq	___persona
000000000001ef54	addq	$0x10, %rsp
000000000001ef58	popq	%rbp
000000000001ef59	retq
_kpersona_find:
000000000001ef5a	pushq	%rbp
000000000001ef5b	movq	%rsp, %rbp
000000000001ef5e	pushq	%r14
000000000001ef60	pushq	%rbx
000000000001ef61	subq	$0x160, %rsp
000000000001ef68	movq	%rcx, %rbx
000000000001ef6b	movq	%rdx, %r14
000000000001ef6e	movl	$0x1, -0x168(%rbp)
000000000001ef78	movl	%esi, -0x164(%rbp)
000000000001ef7e	movb	$0x0, -0x110(%rbp)
000000000001ef85	xorl	%ecx, %ecx
000000000001ef87	movq	%rcx, -0x158(%rbp)
000000000001ef8e	movq	%rcx, -0x160(%rbp)
000000000001ef95	testq	%rdi, %rdi
000000000001ef98	je	0x1efb1
000000000001ef9a	movq	%rdi, %rax
000000000001ef9d	leaq	-0x110(%rbp), %rdi
000000000001efa4	movl	$0x100, %edx
000000000001efa9	movq	%rax, %rsi
000000000001efac	callq	_strlcpy
000000000001efb1	leaq	-0x168(%rbp), %rdx
000000000001efb8	movl	$0x6, %edi
000000000001efbd	xorl	%esi, %esi
000000000001efbf	movq	%r14, %rcx
000000000001efc2	movq	%rbx, %r8
000000000001efc5	callq	___persona
000000000001efca	testl	%eax, %eax
000000000001efcc	js	0x1efd0
000000000001efce	movl	(%rbx), %eax
000000000001efd0	addq	$0x160, %rsp
000000000001efd7	popq	%rbx
000000000001efd8	popq	%r14
000000000001efda	popq	%rbp
000000000001efdb	retq
_____old_semwait_signal_nocancel:
000000000001efdc	movl	$0x2000173, %eax
000000000001efe1	movq	%rcx, %r10
000000000001efe4	syscall
000000000001efe6	jae	0x1eff0
000000000001efe8	movq	%rax, %rdi
000000000001efeb	jmp	_cerror_nocancel
000000000001eff0	retq
000000000001eff1	nop
000000000001eff2	nop
000000000001eff3	nop
_____sigwait_nocancel:
000000000001eff4	movl	$0x20001a6, %eax
000000000001eff9	movq	%rcx, %r10
000000000001effc	syscall
000000000001effe	jae	0x1f008
000000000001f000	movq	%rax, %rdi
000000000001f003	jmp	_cerror_nocancel
000000000001f008	retq
000000000001f009	nop
000000000001f00a	nop
000000000001f00b	nop
___abort_with_payload:
000000000001f00c	movl	$0x2000209, %eax
000000000001f011	movq	%rcx, %r10
000000000001f014	syscall
000000000001f016	jae	0x1f020
000000000001f018	movq	%rax, %rdi
000000000001f01b	jmp	_cerror_nocancel
000000000001f020	retq
000000000001f021	nop
000000000001f022	nop
000000000001f023	nop
___accept_nocancel:
_accept$NOCANCEL:
000000000001f024	movl	$0x2000194, %eax
000000000001f029	movq	%rcx, %r10
000000000001f02c	syscall
000000000001f02e	jae	0x1f038
000000000001f030	movq	%rax, %rdi
000000000001f033	jmp	_cerror_nocancel
000000000001f038	retq
000000000001f039	nop
000000000001f03a	nop
000000000001f03b	nop
___access_extended:
_accessx_np:
000000000001f03c	movl	$0x200011c, %eax
000000000001f041	movq	%rcx, %r10
000000000001f044	syscall
000000000001f046	jae	0x1f050
000000000001f048	movq	%rax, %rdi
000000000001f04b	jmp	_cerror_nocancel
000000000001f050	retq
000000000001f051	nop
000000000001f052	nop
000000000001f053	nop
___aio_suspend_nocancel:
_aio_suspend$NOCANCEL:
000000000001f054	movl	$0x20001a5, %eax
000000000001f059	movq	%rcx, %r10
000000000001f05c	syscall
000000000001f05e	jae	0x1f068
000000000001f060	movq	%rax, %rdi
000000000001f063	jmp	_cerror_nocancel
000000000001f068	retq
000000000001f069	nop
000000000001f06a	nop
000000000001f06b	nop
___channel_get_info:
000000000001f06c	movl	$0x20001ff, %eax
000000000001f071	movq	%rcx, %r10
000000000001f074	syscall
000000000001f076	jae	0x1f080
000000000001f078	movq	%rax, %rdi
000000000001f07b	jmp	_cerror_nocancel
000000000001f080	retq
000000000001f081	nop
000000000001f082	nop
000000000001f083	nop
___channel_get_opt:
000000000001f084	movl	$0x2000201, %eax
000000000001f089	movq	%rcx, %r10
000000000001f08c	syscall
000000000001f08e	jae	0x1f098
000000000001f090	movq	%rax, %rdi
000000000001f093	jmp	_cerror_nocancel
000000000001f098	retq
000000000001f099	nop
000000000001f09a	nop
000000000001f09b	nop
___channel_open:
000000000001f09c	movl	$0x20001fe, %eax
000000000001f0a1	movq	%rcx, %r10
000000000001f0a4	syscall
000000000001f0a6	jae	0x1f0b0
000000000001f0a8	movq	%rax, %rdi
000000000001f0ab	jmp	_cerror_nocancel
000000000001f0b0	retq
000000000001f0b1	nop
000000000001f0b2	nop
000000000001f0b3	nop
___channel_set_opt:
000000000001f0b4	movl	$0x2000202, %eax
000000000001f0b9	movq	%rcx, %r10
000000000001f0bc	syscall
000000000001f0be	jae	0x1f0c8
000000000001f0c0	movq	%rax, %rdi
000000000001f0c3	jmp	_cerror_nocancel
000000000001f0c8	retq
000000000001f0c9	nop
000000000001f0ca	nop
000000000001f0cb	nop
___channel_sync:
000000000001f0cc	movl	$0x2000200, %eax
000000000001f0d1	movq	%rcx, %r10
000000000001f0d4	syscall
000000000001f0d6	jae	0x1f0e0
000000000001f0d8	movq	%rax, %rdi
000000000001f0db	jmp	_cerror_nocancel
000000000001f0e0	retq
000000000001f0e1	nop
000000000001f0e2	nop
000000000001f0e3	nop
___coalition:
000000000001f0e4	movl	$0x20001ca, %eax
000000000001f0e9	movq	%rcx, %r10
000000000001f0ec	syscall
000000000001f0ee	jae	0x1f0f8
000000000001f0f0	movq	%rax, %rdi
000000000001f0f3	jmp	_cerror_nocancel
000000000001f0f8	retq
000000000001f0f9	nop
000000000001f0fa	nop
000000000001f0fb	nop
___coalition_info:
000000000001f0fc	movl	$0x20001cb, %eax
000000000001f101	movq	%rcx, %r10
000000000001f104	syscall
000000000001f106	jae	0x1f110
000000000001f108	movq	%rax, %rdi
000000000001f10b	jmp	_cerror_nocancel
000000000001f110	retq
000000000001f111	nop
000000000001f112	nop
000000000001f113	nop
___copyfile:
000000000001f114	movl	$0x20000e3, %eax
000000000001f119	movq	%rcx, %r10
000000000001f11c	syscall
000000000001f11e	jae	0x1f128
000000000001f120	movq	%rax, %rdi
000000000001f123	jmp	_cerror_nocancel
000000000001f128	retq
000000000001f129	nop
000000000001f12a	nop
000000000001f12b	nop
___fs_snapshot:
000000000001f12c	movl	$0x2000206, %eax
000000000001f131	movq	%rcx, %r10
000000000001f134	syscall
000000000001f136	jae	0x1f140
000000000001f138	movq	%rax, %rdi
000000000001f13b	jmp	_cerror_nocancel
000000000001f140	retq
000000000001f141	nop
000000000001f142	nop
000000000001f143	nop
___fstat_extended:
000000000001f144	movl	$0x2000119, %eax
000000000001f149	movq	%rcx, %r10
000000000001f14c	syscall
000000000001f14e	jae	0x1f158
000000000001f150	movq	%rax, %rdi
000000000001f153	jmp	_cerror_nocancel
000000000001f158	retq
000000000001f159	nop
000000000001f15a	nop
000000000001f15b	nop
_fsync$NOCANCEL:
___fsync_nocancel:
000000000001f15c	movl	$0x2000198, %eax
000000000001f161	movq	%rcx, %r10
000000000001f164	syscall
000000000001f166	jae	0x1f170
000000000001f168	movq	%rax, %rdi
000000000001f16b	jmp	_cerror_nocancel
000000000001f170	retq
000000000001f171	nop
000000000001f172	nop
000000000001f173	nop
_getsgroups_np:
___getsgroups:
000000000001f174	movl	$0x2000120, %eax
000000000001f179	movq	%rcx, %r10
000000000001f17c	syscall
000000000001f17e	jae	0x1f188
000000000001f180	movq	%rax, %rdi
000000000001f183	jmp	_cerror_nocancel
000000000001f188	retq
000000000001f189	nop
000000000001f18a	nop
000000000001f18b	nop
___getwgroups:
_getwgroups_np:
000000000001f18c	movl	$0x2000122, %eax
000000000001f191	movq	%rcx, %r10
000000000001f194	syscall
000000000001f196	jae	0x1f1a0
000000000001f198	movq	%rax, %rdi
000000000001f19b	jmp	_cerror_nocancel
000000000001f1a0	retq
000000000001f1a1	nop
000000000001f1a2	nop
000000000001f1a3	nop
___guarded_open_dprotected_np:
000000000001f1a4	movl	$0x20001e4, %eax
000000000001f1a9	movq	%rcx, %r10
000000000001f1ac	syscall
000000000001f1ae	jae	0x1f1b8
000000000001f1b0	movq	%rax, %rdi
000000000001f1b3	jmp	_cerror_nocancel
000000000001f1b8	retq
000000000001f1b9	nop
000000000001f1ba	nop
000000000001f1bb	nop
___identitysvc:
000000000001f1bc	movl	$0x2000125, %eax
000000000001f1c1	movq	%rcx, %r10
000000000001f1c4	syscall
000000000001f1c6	jae	0x1f1d0
000000000001f1c8	movq	%rax, %rdi
000000000001f1cb	jmp	_cerror_nocancel
000000000001f1d0	retq
000000000001f1d1	nop
000000000001f1d2	nop
000000000001f1d3	nop
___kdebug_trace:
000000000001f1d4	movl	$0x20000b4, %eax
000000000001f1d9	movq	%rcx, %r10
000000000001f1dc	syscall
000000000001f1de	jae	0x1f1e8
000000000001f1e0	movq	%rax, %rdi
000000000001f1e3	jmp	_cerror_nocancel
000000000001f1e8	retq
000000000001f1e9	nop
000000000001f1ea	nop
000000000001f1eb	nop
___kdebug_trace_string:
000000000001f1ec	movl	$0x20000b2, %eax
000000000001f1f1	movq	%rcx, %r10
000000000001f1f4	syscall
000000000001f1f6	jae	0x1f200
000000000001f1f8	movq	%rax, %rdi
000000000001f1fb	jmp	_cerror
000000000001f200	retq
000000000001f201	nop
000000000001f202	nop
000000000001f203	nop
___kqueue_workloop_ctl:
000000000001f204	movl	$0x2000212, %eax
000000000001f209	movq	%rcx, %r10
000000000001f20c	syscall
000000000001f20e	jae	0x1f218
000000000001f210	movq	%rax, %rdi
000000000001f213	jmp	_cerror_nocancel
000000000001f218	retq
000000000001f219	nop
000000000001f21a	nop
000000000001f21b	nop
_lchown:
___lchown:
000000000001f21c	movl	$0x200016c, %eax
000000000001f221	movq	%rcx, %r10
000000000001f224	syscall
000000000001f226	jae	0x1f230
000000000001f228	movq	%rax, %rdi
000000000001f22b	jmp	_cerror_nocancel
000000000001f230	retq
000000000001f231	nop
000000000001f232	nop
000000000001f233	nop
___lstat_extended:
000000000001f234	movl	$0x2000118, %eax
000000000001f239	movq	%rcx, %r10
000000000001f23c	syscall
000000000001f23e	jae	0x1f248
000000000001f240	movq	%rax, %rdi
000000000001f243	jmp	_cerror_nocancel
000000000001f248	retq
000000000001f249	nop
000000000001f24a	nop
000000000001f24b	nop
___sandbox_me:
___mac_execve:
000000000001f24c	movl	$0x200017c, %eax
000000000001f251	movq	%rcx, %r10
000000000001f254	syscall
000000000001f256	jae	0x1f260
000000000001f258	movq	%rax, %rdi
000000000001f25b	jmp	_cerror_nocancel
000000000001f260	retq
000000000001f261	nop
000000000001f262	nop
000000000001f263	nop
___mac_get_fd:
000000000001f264	movl	$0x2000184, %eax
000000000001f269	movq	%rcx, %r10
000000000001f26c	syscall
000000000001f26e	jae	0x1f278
000000000001f270	movq	%rax, %rdi
000000000001f273	jmp	_cerror_nocancel
000000000001f278	retq
000000000001f279	nop
000000000001f27a	nop
000000000001f27b	nop
___mac_get_file:
000000000001f27c	movl	$0x200017e, %eax
000000000001f281	movq	%rcx, %r10
000000000001f284	syscall
000000000001f286	jae	0x1f290
000000000001f288	movq	%rax, %rdi
000000000001f28b	jmp	_cerror_nocancel
000000000001f290	retq
000000000001f291	nop
000000000001f292	nop
000000000001f293	nop
___mac_get_link:
000000000001f294	movl	$0x2000180, %eax
000000000001f299	movq	%rcx, %r10
000000000001f29c	syscall
000000000001f29e	jae	0x1f2a8
000000000001f2a0	movq	%rax, %rdi
000000000001f2a3	jmp	_cerror_nocancel
000000000001f2a8	retq
000000000001f2a9	nop
000000000001f2aa	nop
000000000001f2ab	nop
___mac_get_mount:
000000000001f2ac	movl	$0x20001a9, %eax
000000000001f2b1	movq	%rcx, %r10
000000000001f2b4	syscall
000000000001f2b6	jae	0x1f2c0
000000000001f2b8	movq	%rax, %rdi
000000000001f2bb	jmp	_cerror_nocancel
000000000001f2c0	retq
000000000001f2c1	nop
000000000001f2c2	nop
000000000001f2c3	nop
___mac_get_pid:
000000000001f2c4	movl	$0x2000186, %eax
000000000001f2c9	movq	%rcx, %r10
000000000001f2cc	syscall
000000000001f2ce	jae	0x1f2d8
000000000001f2d0	movq	%rax, %rdi
000000000001f2d3	jmp	_cerror_nocancel
000000000001f2d8	retq
000000000001f2d9	nop
000000000001f2da	nop
000000000001f2db	nop
___mac_get_proc:
000000000001f2dc	movl	$0x2000182, %eax
000000000001f2e1	movq	%rcx, %r10
000000000001f2e4	syscall
000000000001f2e6	jae	0x1f2f0
000000000001f2e8	movq	%rax, %rdi
000000000001f2eb	jmp	_cerror_nocancel
000000000001f2f0	retq
000000000001f2f1	nop
000000000001f2f2	nop
000000000001f2f3	nop
___mac_getfsstat:
000000000001f2f4	movl	$0x20001aa, %eax
000000000001f2f9	movq	%rcx, %r10
000000000001f2fc	syscall
000000000001f2fe	jae	0x1f308
000000000001f300	movq	%rax, %rdi
000000000001f303	jmp	_cerror_nocancel
000000000001f308	retq
000000000001f309	nop
000000000001f30a	nop
000000000001f30b	nop
___mac_mount:
___sandbox_mm:
000000000001f30c	movl	$0x20001a8, %eax
000000000001f311	movq	%rcx, %r10
000000000001f314	syscall
000000000001f316	jae	0x1f320
000000000001f318	movq	%rax, %rdi
000000000001f31b	jmp	_cerror_nocancel
000000000001f320	retq
000000000001f321	nop
000000000001f322	nop
000000000001f323	nop
___mac_set_fd:
000000000001f324	movl	$0x2000185, %eax
000000000001f329	movq	%rcx, %r10
000000000001f32c	syscall
000000000001f32e	jae	0x1f338
000000000001f330	movq	%rax, %rdi
000000000001f333	jmp	_cerror_nocancel
000000000001f338	retq
000000000001f339	nop
000000000001f33a	nop
000000000001f33b	nop
___mac_set_file:
000000000001f33c	movl	$0x200017f, %eax
000000000001f341	movq	%rcx, %r10
000000000001f344	syscall
000000000001f346	jae	0x1f350
000000000001f348	movq	%rax, %rdi
000000000001f34b	jmp	_cerror_nocancel
000000000001f350	retq
000000000001f351	nop
000000000001f352	nop
000000000001f353	nop
___mac_set_link:
000000000001f354	movl	$0x2000181, %eax
000000000001f359	movq	%rcx, %r10
000000000001f35c	syscall
000000000001f35e	jae	0x1f368
000000000001f360	movq	%rax, %rdi
000000000001f363	jmp	_cerror_nocancel
000000000001f368	retq
000000000001f369	nop
000000000001f36a	nop
000000000001f36b	nop
___mach_bridge_remote_time:
000000000001f36c	movl	$0x2000213, %eax
000000000001f371	movq	%rcx, %r10
000000000001f374	syscall
000000000001f376	jae	0x1f380
000000000001f378	movq	%rax, %rdi
000000000001f37b	jmp	_cerror_nocancel
000000000001f380	retq
000000000001f381	nop
000000000001f382	nop
000000000001f383	nop
___microstackshot:
000000000001f384	movl	$0x20001ec, %eax
000000000001f389	movq	%rcx, %r10
000000000001f38c	syscall
000000000001f38e	jae	0x1f398
000000000001f390	movq	%rax, %rdi
000000000001f393	jmp	_cerror_nocancel
000000000001f398	retq
000000000001f399	nop
000000000001f39a	nop
000000000001f39b	nop
___mkdir_extended:
000000000001f39c	movl	$0x2000124, %eax
000000000001f3a1	movq	%rcx, %r10
000000000001f3a4	syscall
000000000001f3a6	jae	0x1f3b0
000000000001f3a8	movq	%rax, %rdi
000000000001f3ab	jmp	_cerror_nocancel
000000000001f3b0	retq
000000000001f3b1	nop
000000000001f3b2	nop
000000000001f3b3	nop
___mkfifo_extended:
000000000001f3b4	movl	$0x2000123, %eax
000000000001f3b9	movq	%rcx, %r10
000000000001f3bc	syscall
000000000001f3be	jae	0x1f3c8
000000000001f3c0	movq	%rax, %rdi
000000000001f3c3	jmp	_cerror_nocancel
000000000001f3c8	retq
000000000001f3c9	nop
000000000001f3ca	nop
000000000001f3cb	nop
___msgctl:
_msgctl:
000000000001f3cc	movl	$0x2000102, %eax
000000000001f3d1	movq	%rcx, %r10
000000000001f3d4	syscall
000000000001f3d6	jae	0x1f3e0
000000000001f3d8	movq	%rax, %rdi
000000000001f3db	jmp	_cerror_nocancel
000000000001f3e0	retq
000000000001f3e1	nop
000000000001f3e2	nop
000000000001f3e3	nop
_msgrcv$NOCANCEL:
___msgrcv_nocancel:
000000000001f3e4	movl	$0x20001a3, %eax
000000000001f3e9	movq	%rcx, %r10
000000000001f3ec	syscall
000000000001f3ee	jae	0x1f3f8
000000000001f3f0	movq	%rax, %rdi
000000000001f3f3	jmp	_cerror_nocancel
000000000001f3f8	retq
000000000001f3f9	nop
000000000001f3fa	nop
000000000001f3fb	nop
_msgsnd$NOCANCEL:
___msgsnd_nocancel:
000000000001f3fc	movl	$0x20001a2, %eax
000000000001f401	movq	%rcx, %r10
000000000001f404	syscall
000000000001f406	jae	0x1f410
000000000001f408	movq	%rax, %rdi
000000000001f40b	jmp	_cerror_nocancel
000000000001f410	retq
000000000001f411	nop
000000000001f412	nop
000000000001f413	nop
_msgsys:
___msgsys:
000000000001f414	movl	$0x20000fc, %eax
000000000001f419	movq	%rcx, %r10
000000000001f41c	syscall
000000000001f41e	jae	0x1f428
000000000001f420	movq	%rax, %rdi
000000000001f423	jmp	_cerror_nocancel
000000000001f428	retq
000000000001f429	nop
000000000001f42a	nop
000000000001f42b	nop
___msync_nocancel:
_msync$NOCANCEL:
000000000001f42c	movl	$0x2000195, %eax
000000000001f431	movq	%rcx, %r10
000000000001f434	syscall
000000000001f436	jae	0x1f440
000000000001f438	movq	%rax, %rdi
000000000001f43b	jmp	_cerror_nocancel
000000000001f440	retq
000000000001f441	nop
000000000001f442	nop
000000000001f443	nop
___nexus_create:
000000000001f444	movl	$0x20001fa, %eax
000000000001f449	movq	%rcx, %r10
000000000001f44c	syscall
000000000001f44e	jae	0x1f458
000000000001f450	movq	%rax, %rdi
000000000001f453	jmp	_cerror_nocancel
000000000001f458	retq
000000000001f459	nop
000000000001f45a	nop
000000000001f45b	nop
___nexus_deregister:
000000000001f45c	movl	$0x20001f9, %eax
000000000001f461	movq	%rcx, %r10
000000000001f464	syscall
000000000001f466	jae	0x1f470
000000000001f468	movq	%rax, %rdi
000000000001f46b	jmp	_cerror_nocancel
000000000001f470	retq
000000000001f471	nop
000000000001f472	nop
000000000001f473	nop
___nexus_destroy:
000000000001f474	movl	$0x20001fb, %eax
000000000001f479	movq	%rcx, %r10
000000000001f47c	syscall
000000000001f47e	jae	0x1f488
000000000001f480	movq	%rax, %rdi
000000000001f483	jmp	_cerror_nocancel
000000000001f488	retq
000000000001f489	nop
000000000001f48a	nop
000000000001f48b	nop
___nexus_get_opt:
000000000001f48c	movl	$0x20001fc, %eax
000000000001f491	movq	%rcx, %r10
000000000001f494	syscall
000000000001f496	jae	0x1f4a0
000000000001f498	movq	%rax, %rdi
000000000001f49b	jmp	_cerror_nocancel
000000000001f4a0	retq
000000000001f4a1	nop
000000000001f4a2	nop
000000000001f4a3	nop
___nexus_open:
000000000001f4a4	movl	$0x20001f7, %eax
000000000001f4a9	movq	%rcx, %r10
000000000001f4ac	syscall
000000000001f4ae	jae	0x1f4b8
000000000001f4b0	movq	%rax, %rdi
000000000001f4b3	jmp	_cerror_nocancel
000000000001f4b8	retq
000000000001f4b9	nop
000000000001f4ba	nop
000000000001f4bb	nop
___nexus_register:
000000000001f4bc	movl	$0x20001f8, %eax
000000000001f4c1	movq	%rcx, %r10
000000000001f4c4	syscall
000000000001f4c6	jae	0x1f4d0
000000000001f4c8	movq	%rax, %rdi
000000000001f4cb	jmp	_cerror_nocancel
000000000001f4d0	retq
000000000001f4d1	nop
000000000001f4d2	nop
000000000001f4d3	nop
___nexus_set_opt:
000000000001f4d4	movl	$0x20001fd, %eax
000000000001f4d9	movq	%rcx, %r10
000000000001f4dc	syscall
000000000001f4de	jae	0x1f4e8
000000000001f4e0	movq	%rax, %rdi
000000000001f4e3	jmp	_cerror_nocancel
000000000001f4e8	retq
000000000001f4e9	nop
000000000001f4ea	nop
000000000001f4eb	nop
___old_semwait_signal:
000000000001f4ec	movl	$0x2000172, %eax
000000000001f4f1	movq	%rcx, %r10
000000000001f4f4	syscall
000000000001f4f6	jae	0x1f500
000000000001f4f8	movq	%rax, %rdi
000000000001f4fb	jmp	_cerror_nocancel
000000000001f500	retq
000000000001f501	nop
000000000001f502	nop
000000000001f503	nop
___persona:
000000000001f504	movl	$0x20001ee, %eax
000000000001f509	movq	%rcx, %r10
000000000001f50c	syscall
000000000001f50e	jae	0x1f518
000000000001f510	movq	%rax, %rdi
000000000001f513	jmp	_cerror_nocancel
000000000001f518	retq
000000000001f519	nop
000000000001f51a	nop
000000000001f51b	nop
_poll$NOCANCEL:
___poll_nocancel:
000000000001f51c	movl	$0x20001a1, %eax
000000000001f521	movq	%rcx, %r10
000000000001f524	syscall
000000000001f526	jae	0x1f530
000000000001f528	movq	%rax, %rdi
000000000001f52b	jmp	_cerror_nocancel
000000000001f530	retq
000000000001f531	nop
000000000001f532	nop
000000000001f533	nop
_pread$NOCANCEL:
___pread_nocancel:
000000000001f534	movl	$0x200019e, %eax
000000000001f539	movq	%rcx, %r10
000000000001f53c	syscall
000000000001f53e	jae	0x1f548
000000000001f540	movq	%rax, %rdi
000000000001f543	jmp	_cerror_nocancel
000000000001f548	retq
000000000001f549	nop
000000000001f54a	nop
000000000001f54b	nop
___pselect_nocancel:
000000000001f54c	movl	$0x200018b, %eax
000000000001f551	movq	%rcx, %r10
000000000001f554	syscall
000000000001f556	jae	0x1f560
000000000001f558	movq	%rax, %rdi
000000000001f55b	jmp	_cerror_nocancel
000000000001f560	retq
000000000001f561	nop
000000000001f562	nop
000000000001f563	nop
___psynch_rw_downgrade:
000000000001f564	movl	$0x200012b, %eax
000000000001f569	movq	%rcx, %r10
000000000001f56c	syscall
000000000001f56e	jae	0x1f578
000000000001f570	movq	%rax, %rdi
000000000001f573	jmp	_cerror_nocancel
000000000001f578	retq
000000000001f579	nop
000000000001f57a	nop
000000000001f57b	nop
___psynch_rw_longrdlock:
000000000001f57c	movl	$0x2000129, %eax
000000000001f581	movq	%rcx, %r10
000000000001f584	syscall
000000000001f586	jae	0x1f590
000000000001f588	movq	%rax, %rdi
000000000001f58b	jmp	_cerror_nocancel
000000000001f590	retq
000000000001f591	nop
000000000001f592	nop
000000000001f593	nop
___psynch_rw_unlock2:
000000000001f594	movl	$0x2000135, %eax
000000000001f599	movq	%rcx, %r10
000000000001f59c	syscall
000000000001f59e	jae	0x1f5a8
000000000001f5a0	movq	%rax, %rdi
000000000001f5a3	jmp	_cerror_nocancel
000000000001f5a8	retq
000000000001f5a9	nop
000000000001f5aa	nop
000000000001f5ab	nop
___psynch_rw_upgrade:
000000000001f5ac	movl	$0x200012c, %eax
000000000001f5b1	movq	%rcx, %r10
000000000001f5b4	syscall
000000000001f5b6	jae	0x1f5c0
000000000001f5b8	movq	%rax, %rdi
000000000001f5bb	jmp	_cerror_nocancel
000000000001f5c0	retq
000000000001f5c1	nop
000000000001f5c2	nop
000000000001f5c3	nop
___psynch_rw_yieldwrlock:
000000000001f5c4	movl	$0x200012a, %eax
000000000001f5c9	movq	%rcx, %r10
000000000001f5cc	syscall
000000000001f5ce	jae	0x1f5d8
000000000001f5d0	movq	%rax, %rdi
000000000001f5d3	jmp	_cerror_nocancel
000000000001f5d8	retq
000000000001f5d9	nop
000000000001f5da	nop
000000000001f5db	nop
___pthread_markcancel:
000000000001f5dc	movl	$0x200014c, %eax
000000000001f5e1	movq	%rcx, %r10
000000000001f5e4	syscall
000000000001f5e6	jae	0x1f5f0
000000000001f5e8	movq	%rax, %rdi
000000000001f5eb	jmp	_cerror_nocancel
000000000001f5f0	retq
000000000001f5f1	nop
000000000001f5f2	nop
000000000001f5f3	nop
_pwrite$NOCANCEL:
___pwrite_nocancel:
000000000001f5f4	movl	$0x200019f, %eax
000000000001f5f9	movq	%rcx, %r10
000000000001f5fc	syscall
000000000001f5fe	jae	0x1f608
000000000001f600	movq	%rax, %rdi
000000000001f603	jmp	_cerror_nocancel
000000000001f608	retq
000000000001f609	nop
000000000001f60a	nop
000000000001f60b	nop
_readv$NOCANCEL:
___readv_nocancel:
000000000001f60c	movl	$0x200019b, %eax
000000000001f611	movq	%rcx, %r10
000000000001f614	syscall
000000000001f616	jae	0x1f620
000000000001f618	movq	%rax, %rdi
000000000001f61b	jmp	_cerror_nocancel
000000000001f620	retq
000000000001f621	nop
000000000001f622	nop
000000000001f623	nop
___reboot:
000000000001f624	movl	$0x2000037, %eax
000000000001f629	movq	%rcx, %r10
000000000001f62c	syscall
000000000001f62e	jae	0x1f638
000000000001f630	movq	%rax, %rdi
000000000001f633	jmp	_cerror_nocancel
000000000001f638	retq
000000000001f639	nop
000000000001f63a	nop
000000000001f63b	nop
_recvmsg$NOCANCEL:
___recvmsg_nocancel:
000000000001f63c	movl	$0x2000191, %eax
000000000001f641	movq	%rcx, %r10
000000000001f644	syscall
000000000001f646	jae	0x1f650
000000000001f648	movq	%rax, %rdi
000000000001f64b	jmp	_cerror_nocancel
000000000001f650	retq
000000000001f651	nop
000000000001f652	nop
000000000001f653	nop
___renameat:
000000000001f654	movl	$0x20001d1, %eax
000000000001f659	movq	%rcx, %r10
000000000001f65c	syscall
000000000001f65e	jae	0x1f668
000000000001f660	movq	%rax, %rdi
000000000001f663	jmp	_cerror
000000000001f668	retq
000000000001f669	nop
000000000001f66a	nop
000000000001f66b	nop
___renameatx_np:
000000000001f66c	movl	$0x20001e8, %eax
000000000001f671	movq	%rcx, %r10
000000000001f674	syscall
000000000001f676	jae	0x1f680
000000000001f678	movq	%rax, %rdi
000000000001f67b	jmp	_cerror_nocancel
000000000001f680	retq
000000000001f681	nop
000000000001f682	nop
000000000001f683	nop
_sem_wait$NOCANCEL:
___sem_wait_nocancel:
000000000001f684	movl	$0x20001a4, %eax
000000000001f689	movq	%rcx, %r10
000000000001f68c	syscall
000000000001f68e	jae	0x1f698
000000000001f690	movq	%rax, %rdi
000000000001f693	jmp	_cerror_nocancel
000000000001f698	retq
000000000001f699	nop
000000000001f69a	nop
000000000001f69b	nop
_semctl:
___semctl:
000000000001f69c	movl	$0x20000fe, %eax
000000000001f6a1	movq	%rcx, %r10
000000000001f6a4	syscall
000000000001f6a6	jae	0x1f6b0
000000000001f6a8	movq	%rax, %rdi
000000000001f6ab	jmp	_cerror_nocancel
000000000001f6b0	retq
000000000001f6b1	nop
000000000001f6b2	nop
000000000001f6b3	nop
_semsys:
___semsys:
000000000001f6b4	movl	$0x20000fb, %eax
000000000001f6b9	movq	%rcx, %r10
000000000001f6bc	syscall
000000000001f6be	jae	0x1f6c8
000000000001f6c0	movq	%rax, %rdi
000000000001f6c3	jmp	_cerror_nocancel
000000000001f6c8	retq
000000000001f6c9	nop
000000000001f6ca	nop
000000000001f6cb	nop
_setregid:
___setregid:
000000000001f6cc	movl	$0x200007f, %eax
000000000001f6d1	movq	%rcx, %r10
000000000001f6d4	syscall
000000000001f6d6	jae	0x1f6e0
000000000001f6d8	movq	%rax, %rdi
000000000001f6db	jmp	_cerror_nocancel
000000000001f6e0	retq
000000000001f6e1	nop
000000000001f6e2	nop
000000000001f6e3	nop
___setreuid:
_setreuid:
000000000001f6e4	movl	$0x200007e, %eax
000000000001f6e9	movq	%rcx, %r10
000000000001f6ec	syscall
000000000001f6ee	jae	0x1f6f8
000000000001f6f0	movq	%rax, %rdi
000000000001f6f3	jmp	_cerror_nocancel
000000000001f6f8	retq
000000000001f6f9	nop
000000000001f6fa	nop
000000000001f6fb	nop
___setsgroups:
_setsgroups_np:
000000000001f6fc	movl	$0x200011f, %eax
000000000001f701	movq	%rcx, %r10
000000000001f704	syscall
000000000001f706	jae	0x1f710
000000000001f708	movq	%rax, %rdi
000000000001f70b	jmp	_cerror_nocancel
000000000001f710	retq
000000000001f711	nop
000000000001f712	nop
000000000001f713	nop
___settid_with_pid:
000000000001f714	movl	$0x2000137, %eax
000000000001f719	movq	%rcx, %r10
000000000001f71c	syscall
000000000001f71e	jae	0x1f728
000000000001f720	movq	%rax, %rdi
000000000001f723	jmp	_cerror_nocancel
000000000001f728	retq
000000000001f729	nop
000000000001f72a	nop
000000000001f72b	nop
___settimeofday:
000000000001f72c	movl	$0x200007a, %eax
000000000001f731	movq	%rcx, %r10
000000000001f734	syscall
000000000001f736	jae	0x1f740
000000000001f738	movq	%rax, %rdi
000000000001f73b	jmp	_cerror_nocancel
000000000001f740	retq
000000000001f741	nop
000000000001f742	nop
000000000001f743	nop
_setwgroups_np:
___setwgroups:
000000000001f744	movl	$0x2000121, %eax
000000000001f749	movq	%rcx, %r10
000000000001f74c	syscall
000000000001f74e	jae	0x1f758
000000000001f750	movq	%rax, %rdi
000000000001f753	jmp	_cerror_nocancel
000000000001f758	retq
000000000001f759	nop
000000000001f75a	nop
000000000001f75b	nop
___sfi_pidctl:
000000000001f75c	movl	$0x20001c9, %eax
000000000001f761	movq	%rcx, %r10
000000000001f764	syscall
000000000001f766	jae	0x1f770
000000000001f768	movq	%rax, %rdi
000000000001f76b	jmp	_cerror_nocancel
000000000001f770	retq
000000000001f771	nop
000000000001f772	nop
000000000001f773	nop
___shared_region_check_np:
000000000001f774	movl	$0x2000126, %eax
000000000001f779	movq	%rcx, %r10
000000000001f77c	syscall
000000000001f77e	jae	0x1f788
000000000001f780	movq	%rax, %rdi
000000000001f783	jmp	_cerror_nocancel
000000000001f788	retq
000000000001f789	nop
000000000001f78a	nop
000000000001f78b	nop
___shared_region_map_and_slide_np:
000000000001f78c	movl	$0x20001b6, %eax
000000000001f791	movq	%rcx, %r10
000000000001f794	syscall
000000000001f796	jae	0x1f7a0
000000000001f798	movq	%rax, %rdi
000000000001f79b	jmp	_cerror_nocancel
000000000001f7a0	retq
000000000001f7a1	nop
000000000001f7a2	nop
000000000001f7a3	nop
___shmctl:
_shmctl:
000000000001f7a4	movl	$0x2000107, %eax
000000000001f7a9	movq	%rcx, %r10
000000000001f7ac	syscall
000000000001f7ae	jae	0x1f7b8
000000000001f7b0	movq	%rax, %rdi
000000000001f7b3	jmp	_cerror_nocancel
000000000001f7b8	retq
000000000001f7b9	nop
000000000001f7ba	nop
000000000001f7bb	nop
___shmsys:
_shmsys:
000000000001f7bc	movl	$0x20000fd, %eax
000000000001f7c1	movq	%rcx, %r10
000000000001f7c4	syscall
000000000001f7c6	jae	0x1f7d0
000000000001f7c8	movq	%rax, %rdi
000000000001f7cb	jmp	_cerror_nocancel
000000000001f7d0	retq
000000000001f7d1	nop
000000000001f7d2	nop
000000000001f7d3	nop
___sigsuspend:
000000000001f7d4	movl	$0x200006f, %eax
000000000001f7d9	movq	%rcx, %r10
000000000001f7dc	syscall
000000000001f7de	jae	0x1f7e8
000000000001f7e0	movq	%rax, %rdi
000000000001f7e3	jmp	_cerror
000000000001f7e8	retq
000000000001f7e9	nop
000000000001f7ea	nop
000000000001f7eb	nop
___stack_snapshot_with_config:
000000000001f7ec	movl	$0x20001eb, %eax
000000000001f7f1	movq	%rcx, %r10
000000000001f7f4	syscall
000000000001f7f6	jae	0x1f800
000000000001f7f8	movq	%rax, %rdi
000000000001f7fb	jmp	_cerror_nocancel
000000000001f800	retq
000000000001f801	nop
000000000001f802	nop
000000000001f803	nop
___stat_extended:
000000000001f804	movl	$0x2000117, %eax
000000000001f809	movq	%rcx, %r10
000000000001f80c	syscall
000000000001f80e	jae	0x1f818
000000000001f810	movq	%rax, %rdi
000000000001f813	jmp	_cerror_nocancel
000000000001f818	retq
000000000001f819	nop
000000000001f81a	nop
000000000001f81b	nop
___telemetry:
000000000001f81c	movl	$0x20001c3, %eax
000000000001f821	movq	%rcx, %r10
000000000001f824	syscall
000000000001f826	jae	0x1f830
000000000001f828	movq	%rax, %rdi
000000000001f82b	jmp	_cerror_nocancel
000000000001f830	retq
000000000001f831	nop
000000000001f832	nop
000000000001f833	nop
___thread_selfusage:
000000000001f834	movl	$0x20001e2, %eax
000000000001f839	movq	%rcx, %r10
000000000001f83c	syscall
000000000001f83e	jae	0x1f848
000000000001f840	movq	%rax, %rdi
000000000001f843	jmp	_cerror
000000000001f848	retq
000000000001f849	nop
000000000001f84a	nop
000000000001f84b	nop
___umask_extended:
000000000001f84c	movl	$0x2000116, %eax
000000000001f851	movq	%rcx, %r10
000000000001f854	syscall
000000000001f856	jae	0x1f860
000000000001f858	movq	%rax, %rdi
000000000001f85b	jmp	_cerror_nocancel
000000000001f860	retq
000000000001f861	nop
000000000001f862	nop
000000000001f863	nop
_vfork:
___vfork:
000000000001f864	leaq	__current_pid(%rip), %rax
000000000001f86b	movl	(%rax), %eax
000000000001f86d	xorl	%ecx, %ecx
000000000001f86f	testl	%eax, %eax
000000000001f871	cmovsl	%eax, %ecx
000000000001f874	subl	$0x1, %ecx
000000000001f877	leaq	__current_pid(%rip), %rdx
000000000001f87e	lock
000000000001f87f	cmpxchgl	%ecx, (%rdx)
000000000001f882	jne	0x1f86d
000000000001f884	popq	%rdi
000000000001f885	movq	$0x2000042, %rax
000000000001f88c	syscall
000000000001f88e	jae	0x1f8a4
000000000001f890	pushq	%rdi
000000000001f891	leaq	__current_pid(%rip), %rcx
000000000001f898	lock
000000000001f899	addl	$0x1, (%rcx)
000000000001f89c	movq	%rax, %rdi
000000000001f89f	jmp	_cerror
000000000001f8a4	testl	%edx, %edx
000000000001f8a6	je	0x1f8ad
000000000001f8a8	xorq	%rax, %rax
000000000001f8ab	jmpq	*%rdi
000000000001f8ad	leaq	__current_pid(%rip), %rdx
000000000001f8b4	lock
000000000001f8b5	addl	$0x1, (%rdx)
000000000001f8b8	jmpq	*%rdi
000000000001f8ba	nop
000000000001f8bb	nop
___waitid_nocancel:
_waitid$NOCANCEL:
000000000001f8bc	movl	$0x20001a0, %eax
000000000001f8c1	movq	%rcx, %r10
000000000001f8c4	syscall
000000000001f8c6	jae	0x1f8d0
000000000001f8c8	movq	%rax, %rdi
000000000001f8cb	jmp	_cerror_nocancel
000000000001f8d0	retq
000000000001f8d1	nop
000000000001f8d2	nop
000000000001f8d3	nop
___work_interval_ctl:
000000000001f8d4	movl	$0x20001f3, %eax
000000000001f8d9	movq	%rcx, %r10
000000000001f8dc	syscall
000000000001f8de	jae	0x1f8e8
000000000001f8e0	movq	%rax, %rdi
000000000001f8e3	jmp	_cerror_nocancel
000000000001f8e8	retq
000000000001f8e9	nop
000000000001f8ea	nop
000000000001f8eb	nop
___writev_nocancel:
_writev$NOCANCEL:
000000000001f8ec	movl	$0x200019c, %eax
000000000001f8f1	movq	%rcx, %r10
000000000001f8f4	syscall
000000000001f8f6	jae	0x1f900
000000000001f8f8	movq	%rax, %rdi
000000000001f8fb	jmp	_cerror_nocancel
000000000001f900	retq
000000000001f901	nop
000000000001f902	nop
000000000001f903	nop
_acct:
000000000001f904	movl	$0x2000033, %eax
000000000001f909	movq	%rcx, %r10
000000000001f90c	syscall
000000000001f90e	jae	0x1f918
000000000001f910	movq	%rax, %rdi
000000000001f913	jmp	_cerror_nocancel
000000000001f918	retq
000000000001f919	nop
000000000001f91a	nop
000000000001f91b	nop
_adjtime:
000000000001f91c	movl	$0x200008c, %eax
000000000001f921	movq	%rcx, %r10
000000000001f924	syscall
000000000001f926	jae	0x1f930
000000000001f928	movq	%rax, %rdi
000000000001f92b	jmp	_cerror_nocancel
000000000001f930	retq
000000000001f931	nop
000000000001f932	nop
000000000001f933	nop
_aio_cancel:
000000000001f934	movl	$0x200013c, %eax
000000000001f939	movq	%rcx, %r10
000000000001f93c	syscall
000000000001f93e	jae	0x1f948
000000000001f940	movq	%rax, %rdi
000000000001f943	jmp	_cerror_nocancel
000000000001f948	retq
000000000001f949	nop
000000000001f94a	nop
000000000001f94b	nop
_aio_error:
000000000001f94c	movl	$0x200013d, %eax
000000000001f951	movq	%rcx, %r10
000000000001f954	syscall
000000000001f956	jae	0x1f960
000000000001f958	movq	%rax, %rdi
000000000001f95b	jmp	_cerror_nocancel
000000000001f960	retq
000000000001f961	nop
000000000001f962	nop
000000000001f963	nop
_aio_fsync:
000000000001f964	movl	$0x2000139, %eax
000000000001f969	movq	%rcx, %r10
000000000001f96c	syscall
000000000001f96e	jae	0x1f978
000000000001f970	movq	%rax, %rdi
000000000001f973	jmp	_cerror_nocancel
000000000001f978	retq
000000000001f979	nop
000000000001f97a	nop
000000000001f97b	nop
_aio_read:
000000000001f97c	movl	$0x200013e, %eax
000000000001f981	movq	%rcx, %r10
000000000001f984	syscall
000000000001f986	jae	0x1f990
000000000001f988	movq	%rax, %rdi
000000000001f98b	jmp	_cerror_nocancel
000000000001f990	retq
000000000001f991	nop
000000000001f992	nop
000000000001f993	nop
_aio_return:
000000000001f994	movl	$0x200013a, %eax
000000000001f999	movq	%rcx, %r10
000000000001f99c	syscall
000000000001f99e	jae	0x1f9a8
000000000001f9a0	movq	%rax, %rdi
000000000001f9a3	jmp	_cerror_nocancel
000000000001f9a8	retq
000000000001f9a9	nop
000000000001f9aa	nop
000000000001f9ab	nop
_aio_suspend:
000000000001f9ac	movl	$0x200013b, %eax
000000000001f9b1	movq	%rcx, %r10
000000000001f9b4	syscall
000000000001f9b6	jae	0x1f9c0
000000000001f9b8	movq	%rax, %rdi
000000000001f9bb	jmp	_cerror
000000000001f9c0	retq
000000000001f9c1	nop
000000000001f9c2	nop
000000000001f9c3	nop
_aio_write:
000000000001f9c4	movl	$0x200013f, %eax
000000000001f9c9	movq	%rcx, %r10
000000000001f9cc	syscall
000000000001f9ce	jae	0x1f9d8
000000000001f9d0	movq	%rax, %rdi
000000000001f9d3	jmp	_cerror_nocancel
000000000001f9d8	retq
000000000001f9d9	nop
000000000001f9da	nop
000000000001f9db	nop
_audit:
000000000001f9dc	movl	$0x200015e, %eax
000000000001f9e1	movq	%rcx, %r10
000000000001f9e4	syscall
000000000001f9e6	jae	0x1f9f0
000000000001f9e8	movq	%rax, %rdi
000000000001f9eb	jmp	_cerror_nocancel
000000000001f9f0	retq
000000000001f9f1	nop
000000000001f9f2	nop
000000000001f9f3	nop
_auditctl:
000000000001f9f4	movl	$0x2000167, %eax
000000000001f9f9	movq	%rcx, %r10
000000000001f9fc	syscall
000000000001f9fe	jae	0x1fa08
000000000001fa00	movq	%rax, %rdi
000000000001fa03	jmp	_cerror_nocancel
000000000001fa08	retq
000000000001fa09	nop
000000000001fa0a	nop
000000000001fa0b	nop
_chroot:
000000000001fa0c	movl	$0x200003d, %eax
000000000001fa11	movq	%rcx, %r10
000000000001fa14	syscall
000000000001fa16	jae	0x1fa20
000000000001fa18	movq	%rax, %rdi
000000000001fa1b	jmp	_cerror_nocancel
000000000001fa20	retq
000000000001fa21	nop
000000000001fa22	nop
000000000001fa23	nop
_disconnectx:
000000000001fa24	movl	$0x20001c0, %eax
000000000001fa29	movq	%rcx, %r10
000000000001fa2c	syscall
000000000001fa2e	jae	0x1fa38
000000000001fa30	movq	%rax, %rdi
000000000001fa33	jmp	_cerror
000000000001fa38	retq
000000000001fa39	nop
000000000001fa3a	nop
000000000001fa3b	nop
_execve:
000000000001fa3c	movl	$0x200003b, %eax
000000000001fa41	movq	%rcx, %r10
000000000001fa44	syscall
000000000001fa46	jae	0x1fa50
000000000001fa48	movq	%rax, %rdi
000000000001fa4b	jmp	_cerror_nocancel
000000000001fa50	retq
000000000001fa51	nop
000000000001fa52	nop
000000000001fa53	nop
_faccessat:
000000000001fa54	movl	$0x20001d2, %eax
000000000001fa59	movq	%rcx, %r10
000000000001fa5c	syscall
000000000001fa5e	jae	0x1fa68
000000000001fa60	movq	%rax, %rdi
000000000001fa63	jmp	_cerror
000000000001fa68	retq
000000000001fa69	nop
000000000001fa6a	nop
000000000001fa6b	nop
_fchdir:
000000000001fa6c	movl	$0x200000d, %eax
000000000001fa71	movq	%rcx, %r10
000000000001fa74	syscall
000000000001fa76	jae	0x1fa80
000000000001fa78	movq	%rax, %rdi
000000000001fa7b	jmp	_cerror_nocancel
000000000001fa80	retq
000000000001fa81	nop
000000000001fa82	nop
000000000001fa83	nop
_fchmodat:
000000000001fa84	movl	$0x20001d3, %eax
000000000001fa89	movq	%rcx, %r10
000000000001fa8c	syscall
000000000001fa8e	jae	0x1fa98
000000000001fa90	movq	%rax, %rdi
000000000001fa93	jmp	_cerror_nocancel
000000000001fa98	retq
000000000001fa99	nop
000000000001fa9a	nop
000000000001fa9b	nop
_fchownat:
000000000001fa9c	movl	$0x20001d4, %eax
000000000001faa1	movq	%rcx, %r10
000000000001faa4	syscall
000000000001faa6	jae	0x1fab0
000000000001faa8	movq	%rax, %rdi
000000000001faab	jmp	_cerror_nocancel
000000000001fab0	retq
000000000001fab1	nop
000000000001fab2	nop
000000000001fab3	nop
_fclonefileat:
000000000001fab4	movl	$0x2000205, %eax
000000000001fab9	movq	%rcx, %r10
000000000001fabc	syscall
000000000001fabe	jae	0x1fac8
000000000001fac0	movq	%rax, %rdi
000000000001fac3	jmp	_cerror_nocancel
000000000001fac8	retq
000000000001fac9	nop
000000000001faca	nop
000000000001facb	nop
_fdatasync:
000000000001facc	movl	$0x20000bb, %eax
000000000001fad1	movq	%rcx, %r10
000000000001fad4	syscall
000000000001fad6	jae	0x1fae0
000000000001fad8	movq	%rax, %rdi
000000000001fadb	jmp	_cerror
000000000001fae0	retq
000000000001fae1	nop
000000000001fae2	nop
000000000001fae3	nop
_ffsctl:
000000000001fae4	movl	$0x20000f5, %eax
000000000001fae9	movq	%rcx, %r10
000000000001faec	syscall
000000000001faee	jae	0x1faf8
000000000001faf0	movq	%rax, %rdi
000000000001faf3	jmp	_cerror_nocancel
000000000001faf8	retq
000000000001faf9	nop
000000000001fafa	nop
000000000001fafb	nop
_fhopen:
000000000001fafc	movl	$0x20000f8, %eax
000000000001fb01	movq	%rcx, %r10
000000000001fb04	syscall
000000000001fb06	jae	0x1fb10
000000000001fb08	movq	%rax, %rdi
000000000001fb0b	jmp	_cerror_nocancel
000000000001fb10	retq
000000000001fb11	nop
000000000001fb12	nop
000000000001fb13	nop
_fmount:
000000000001fb14	movl	$0x200020e, %eax
000000000001fb19	movq	%rcx, %r10
000000000001fb1c	syscall
000000000001fb1e	jae	0x1fb28
000000000001fb20	movq	%rax, %rdi
000000000001fb23	jmp	_cerror_nocancel
000000000001fb28	retq
000000000001fb29	nop
000000000001fb2a	nop
000000000001fb2b	nop
_fpathconf:
000000000001fb2c	movl	$0x20000c0, %eax
000000000001fb31	movq	%rcx, %r10
000000000001fb34	syscall
000000000001fb36	jae	0x1fb40
000000000001fb38	movq	%rax, %rdi
000000000001fb3b	jmp	_cerror
000000000001fb40	retq
000000000001fb41	nop
000000000001fb42	nop
000000000001fb43	nop
_fremovexattr:
000000000001fb44	movl	$0x20000ef, %eax
000000000001fb49	movq	%rcx, %r10
000000000001fb4c	syscall
000000000001fb4e	jae	0x1fb58
000000000001fb50	movq	%rax, %rdi
000000000001fb53	jmp	_cerror_nocancel
000000000001fb58	retq
000000000001fb59	nop
000000000001fb5a	nop
000000000001fb5b	nop
_fsetattrlist:
000000000001fb5c	movl	$0x20000e5, %eax
000000000001fb61	movq	%rcx, %r10
000000000001fb64	syscall
000000000001fb66	jae	0x1fb70
000000000001fb68	movq	%rax, %rdi
000000000001fb6b	jmp	_cerror_nocancel
000000000001fb70	retq
000000000001fb71	nop
000000000001fb72	nop
000000000001fb73	nop
_fstat:
000000000001fb74	movl	$0x20000bd, %eax
000000000001fb79	movq	%rcx, %r10
000000000001fb7c	syscall
000000000001fb7e	jae	0x1fb88
000000000001fb80	movq	%rax, %rdi
000000000001fb83	jmp	_cerror
000000000001fb88	retq
000000000001fb89	nop
000000000001fb8a	nop
000000000001fb8b	nop
_fstatat:
000000000001fb8c	movl	$0x20001d5, %eax
000000000001fb91	movq	%rcx, %r10
000000000001fb94	syscall
000000000001fb96	jae	0x1fba0
000000000001fb98	movq	%rax, %rdi
000000000001fb9b	jmp	_cerror
000000000001fba0	retq
000000000001fba1	nop
000000000001fba2	nop
000000000001fba3	nop
_getattrlistat:
000000000001fba4	movl	$0x20001dc, %eax
000000000001fba9	movq	%rcx, %r10
000000000001fbac	syscall
000000000001fbae	jae	0x1fbb8
000000000001fbb0	movq	%rax, %rdi
000000000001fbb3	jmp	_cerror_nocancel
000000000001fbb8	retq
000000000001fbb9	nop
000000000001fbba	nop
000000000001fbbb	nop
_getauid:
000000000001fbbc	movl	$0x2000161, %eax
000000000001fbc1	movq	%rcx, %r10
000000000001fbc4	syscall
000000000001fbc6	jae	0x1fbd0
000000000001fbc8	movq	%rax, %rdi
000000000001fbcb	jmp	_cerror_nocancel
000000000001fbd0	retq
000000000001fbd1	nop
000000000001fbd2	nop
000000000001fbd3	nop
_getdirentries:
000000000001fbd4	movl	$0x20000c4, %eax
000000000001fbd9	movq	%rcx, %r10
000000000001fbdc	syscall
000000000001fbde	jae	0x1fbe8
000000000001fbe0	movq	%rax, %rdi
000000000001fbe3	jmp	_cerror_nocancel
000000000001fbe8	retq
000000000001fbe9	nop
000000000001fbea	nop
000000000001fbeb	nop
_getdirentriesattr:
000000000001fbec	movl	$0x20000de, %eax
000000000001fbf1	movq	%rcx, %r10
000000000001fbf4	syscall
000000000001fbf6	jae	0x1fc00
000000000001fbf8	movq	%rax, %rdi
000000000001fbfb	jmp	_cerror_nocancel
000000000001fc00	retq
000000000001fc01	nop
000000000001fc02	nop
000000000001fc03	nop
_getfh:
000000000001fc04	movl	$0x20000a1, %eax
000000000001fc09	movq	%rcx, %r10
000000000001fc0c	syscall
000000000001fc0e	jae	0x1fc18
000000000001fc10	movq	%rax, %rdi
000000000001fc13	jmp	_cerror_nocancel
000000000001fc18	retq
000000000001fc19	nop
000000000001fc1a	nop
000000000001fc1b	nop
_getfsstat:
000000000001fc1c	movl	$0x2000012, %eax
000000000001fc21	movq	%rcx, %r10
000000000001fc24	syscall
000000000001fc26	jae	0x1fc30
000000000001fc28	movq	%rax, %rdi
000000000001fc2b	jmp	_cerror_nocancel
000000000001fc30	retq
000000000001fc31	nop
000000000001fc32	nop
000000000001fc33	nop
_getitimer:
000000000001fc34	movl	$0x2000056, %eax
000000000001fc39	movq	%rcx, %r10
000000000001fc3c	syscall
000000000001fc3e	jae	0x1fc48
000000000001fc40	movq	%rax, %rdi
000000000001fc43	jmp	_cerror_nocancel
000000000001fc48	retq
000000000001fc49	nop
000000000001fc4a	nop
000000000001fc4b	nop
_getsid:
000000000001fc4c	movl	$0x2000136, %eax
000000000001fc51	movq	%rcx, %r10
000000000001fc54	syscall
000000000001fc56	jae	0x1fc60
000000000001fc58	movq	%rax, %rdi
000000000001fc5b	jmp	_cerror_nocancel
000000000001fc60	retq
000000000001fc61	nop
000000000001fc62	nop
000000000001fc63	nop
_grab_pgo_data:
000000000001fc64	movl	$0x20001ed, %eax
000000000001fc69	movq	%rcx, %r10
000000000001fc6c	syscall
000000000001fc6e	jae	0x1fc78
000000000001fc70	movq	%rax, %rdi
000000000001fc73	jmp	_cerror_nocancel
000000000001fc78	retq
000000000001fc79	nop
000000000001fc7a	nop
000000000001fc7b	nop
_guarded_write_np:
000000000001fc7c	movl	$0x20001e5, %eax
000000000001fc81	movq	%rcx, %r10
000000000001fc84	syscall
000000000001fc86	jae	0x1fc90
000000000001fc88	movq	%rax, %rdi
000000000001fc8b	jmp	_cerror_nocancel
000000000001fc90	retq
000000000001fc91	nop
000000000001fc92	nop
000000000001fc93	nop
_guarded_writev_np:
000000000001fc94	movl	$0x20001e7, %eax
000000000001fc99	movq	%rcx, %r10
000000000001fc9c	syscall
000000000001fc9e	jae	0x1fca8
000000000001fca0	movq	%rax, %rdi
000000000001fca3	jmp	_cerror_nocancel
000000000001fca8	retq
000000000001fca9	nop
000000000001fcaa	nop
000000000001fcab	nop
_kas_info:
000000000001fcac	movl	$0x20001b7, %eax
000000000001fcb1	movq	%rcx, %r10
000000000001fcb4	syscall
000000000001fcb6	jae	0x1fcc0
000000000001fcb8	movq	%rax, %rdi
000000000001fcbb	jmp	_cerror_nocancel
000000000001fcc0	retq
000000000001fcc1	nop
000000000001fcc2	nop
000000000001fcc3	nop
_ledger:
000000000001fcc4	movl	$0x2000175, %eax
000000000001fcc9	movq	%rcx, %r10
000000000001fccc	syscall
000000000001fcce	jae	0x1fcd8
000000000001fcd0	movq	%rax, %rdi
000000000001fcd3	jmp	_cerror_nocancel
000000000001fcd8	retq
000000000001fcd9	nop
000000000001fcda	nop
000000000001fcdb	nop
_link:
000000000001fcdc	movl	$0x2000009, %eax
000000000001fce1	movq	%rcx, %r10
000000000001fce4	syscall
000000000001fce6	jae	0x1fcf0
000000000001fce8	movq	%rax, %rdi
000000000001fceb	jmp	_cerror
000000000001fcf0	retq
000000000001fcf1	nop
000000000001fcf2	nop
000000000001fcf3	nop
_linkat:
000000000001fcf4	movl	$0x20001d7, %eax
000000000001fcf9	movq	%rcx, %r10
000000000001fcfc	syscall
000000000001fcfe	jae	0x1fd08
000000000001fd00	movq	%rax, %rdi
000000000001fd03	jmp	_cerror
000000000001fd08	retq
000000000001fd09	nop
000000000001fd0a	nop
000000000001fd0b	nop
_lio_listio:
000000000001fd0c	movl	$0x2000140, %eax
000000000001fd11	movq	%rcx, %r10
000000000001fd14	syscall
000000000001fd16	jae	0x1fd20
000000000001fd18	movq	%rax, %rdi
000000000001fd1b	jmp	_cerror_nocancel
000000000001fd20	retq
000000000001fd21	nop
000000000001fd22	nop
000000000001fd23	nop
_memorystatus_control:
000000000001fd24	movl	$0x20001b8, %eax
000000000001fd29	movq	%rcx, %r10
000000000001fd2c	syscall
000000000001fd2e	jae	0x1fd38
000000000001fd30	movq	%rax, %rdi
000000000001fd33	jmp	_cerror_nocancel
000000000001fd38	retq
000000000001fd39	nop
000000000001fd3a	nop
000000000001fd3b	nop
_memorystatus_get_level:
000000000001fd3c	movl	$0x20001c5, %eax
000000000001fd41	movq	%rcx, %r10
000000000001fd44	syscall
000000000001fd46	jae	0x1fd50
000000000001fd48	movq	%rax, %rdi
000000000001fd4b	jmp	_cerror_nocancel
000000000001fd50	retq
000000000001fd51	nop
000000000001fd52	nop
000000000001fd53	nop
_mincore:
000000000001fd54	movl	$0x200004e, %eax
000000000001fd59	movq	%rcx, %r10
000000000001fd5c	syscall
000000000001fd5e	jae	0x1fd68
000000000001fd60	movq	%rax, %rdi
000000000001fd63	jmp	_cerror_nocancel
000000000001fd68	retq
000000000001fd69	nop
000000000001fd6a	nop
000000000001fd6b	nop
_minherit:
000000000001fd6c	movl	$0x20000fa, %eax
000000000001fd71	movq	%rcx, %r10
000000000001fd74	syscall
000000000001fd76	jae	0x1fd80
000000000001fd78	movq	%rax, %rdi
000000000001fd7b	jmp	_cerror_nocancel
000000000001fd80	retq
000000000001fd81	nop
000000000001fd82	nop
000000000001fd83	nop
_mkfifo:
000000000001fd84	movl	$0x2000084, %eax
000000000001fd89	movq	%rcx, %r10
000000000001fd8c	syscall
000000000001fd8e	jae	0x1fd98
000000000001fd90	movq	%rax, %rdi
000000000001fd93	jmp	_cerror_nocancel
000000000001fd98	retq
000000000001fd99	nop
000000000001fd9a	nop
000000000001fd9b	nop
_mknod:
000000000001fd9c	movl	$0x200000e, %eax
000000000001fda1	movq	%rcx, %r10
000000000001fda4	syscall
000000000001fda6	jae	0x1fdb0
000000000001fda8	movq	%rax, %rdi
000000000001fdab	jmp	_cerror_nocancel
000000000001fdb0	retq
000000000001fdb1	nop
000000000001fdb2	nop
000000000001fdb3	nop
_mlockall:
000000000001fdb4	movl	$0x2000144, %eax
000000000001fdb9	movq	%rcx, %r10
000000000001fdbc	syscall
000000000001fdbe	jae	0x1fdc8
000000000001fdc0	movq	%rax, %rdi
000000000001fdc3	jmp	_cerror_nocancel
000000000001fdc8	retq
000000000001fdc9	nop
000000000001fdca	nop
000000000001fdcb	nop
_modwatch:
000000000001fdcc	movl	$0x20000e9, %eax
000000000001fdd1	movq	%rcx, %r10
000000000001fdd4	syscall
000000000001fdd6	jae	0x1fde0
000000000001fdd8	movq	%rax, %rdi
000000000001fddb	jmp	_cerror_nocancel
000000000001fde0	retq
000000000001fde1	nop
000000000001fde2	nop
000000000001fde3	nop
_mremap_encrypted:
000000000001fde4	movl	$0x20001e9, %eax
000000000001fde9	movq	%rcx, %r10
000000000001fdec	syscall
000000000001fdee	jae	0x1fdf8
000000000001fdf0	movq	%rax, %rdi
000000000001fdf3	jmp	_cerror_nocancel
000000000001fdf8	retq
000000000001fdf9	nop
000000000001fdfa	nop
000000000001fdfb	nop
_msgget:
000000000001fdfc	movl	$0x2000103, %eax
000000000001fe01	movq	%rcx, %r10
000000000001fe04	syscall
000000000001fe06	jae	0x1fe10
000000000001fe08	movq	%rax, %rdi
000000000001fe0b	jmp	_cerror_nocancel
000000000001fe10	retq
000000000001fe11	nop
000000000001fe12	nop
000000000001fe13	nop
_msgrcv:
000000000001fe14	movl	$0x2000105, %eax
000000000001fe19	movq	%rcx, %r10
000000000001fe1c	syscall
000000000001fe1e	jae	0x1fe28
000000000001fe20	movq	%rax, %rdi
000000000001fe23	jmp	_cerror
000000000001fe28	retq
000000000001fe29	nop
000000000001fe2a	nop
000000000001fe2b	nop
_msgsnd:
000000000001fe2c	movl	$0x2000104, %eax
000000000001fe31	movq	%rcx, %r10
000000000001fe34	syscall
000000000001fe36	jae	0x1fe40
000000000001fe38	movq	%rax, %rdi
000000000001fe3b	jmp	_cerror
000000000001fe40	retq
000000000001fe41	nop
000000000001fe42	nop
000000000001fe43	nop
_munlockall:
000000000001fe44	movl	$0x2000145, %eax
000000000001fe49	movq	%rcx, %r10
000000000001fe4c	syscall
000000000001fe4e	jae	0x1fe58
000000000001fe50	movq	%rax, %rdi
000000000001fe53	jmp	_cerror_nocancel
000000000001fe58	retq
000000000001fe59	nop
000000000001fe5a	nop
000000000001fe5b	nop
_necp_session_action:
000000000001fe5c	movl	$0x200020b, %eax
000000000001fe61	movq	%rcx, %r10
000000000001fe64	syscall
000000000001fe66	jae	0x1fe70
000000000001fe68	movq	%rax, %rdi
000000000001fe6b	jmp	_cerror_nocancel
000000000001fe70	retq
000000000001fe71	nop
000000000001fe72	nop
000000000001fe73	nop
_necp_session_open:
000000000001fe74	movl	$0x200020a, %eax
000000000001fe79	movq	%rcx, %r10
000000000001fe7c	syscall
000000000001fe7e	jae	0x1fe88
000000000001fe80	movq	%rax, %rdi
000000000001fe83	jmp	_cerror_nocancel
000000000001fe88	retq
000000000001fe89	nop
000000000001fe8a	nop
000000000001fe8b	nop
_net_qos_guideline:
000000000001fe8c	movl	$0x200020d, %eax
000000000001fe91	movq	%rcx, %r10
000000000001fe94	syscall
000000000001fe96	jae	0x1fea0
000000000001fe98	movq	%rax, %rdi
000000000001fe9b	jmp	_cerror_nocancel
000000000001fea0	retq
000000000001fea1	nop
000000000001fea2	nop
000000000001fea3	nop
_netagent_trigger:
000000000001fea4	movl	$0x20001ea, %eax
000000000001fea9	movq	%rcx, %r10
000000000001feac	syscall
000000000001feae	jae	0x1feb8
000000000001feb0	movq	%rax, %rdi
000000000001feb3	jmp	_cerror_nocancel
000000000001feb8	retq
000000000001feb9	nop
000000000001feba	nop
000000000001febb	nop
_nfsclnt:
000000000001febc	movl	$0x20000f7, %eax
000000000001fec1	movq	%rcx, %r10
000000000001fec4	syscall
000000000001fec6	jae	0x1fed0
000000000001fec8	movq	%rax, %rdi
000000000001fecb	jmp	_cerror_nocancel
000000000001fed0	retq
000000000001fed1	nop
000000000001fed2	nop
000000000001fed3	nop
_nfssvc:
000000000001fed4	movl	$0x200009b, %eax
000000000001fed9	movq	%rcx, %r10
000000000001fedc	syscall
000000000001fede	jae	0x1fee8
000000000001fee0	movq	%rax, %rdi
000000000001fee3	jmp	_cerror_nocancel
000000000001fee8	retq
000000000001fee9	nop
000000000001feea	nop
000000000001feeb	nop
_ntp_adjtime:
000000000001feec	movl	$0x200020f, %eax
000000000001fef1	movq	%rcx, %r10
000000000001fef4	syscall
000000000001fef6	jae	0x1ff00
000000000001fef8	movq	%rax, %rdi
000000000001fefb	jmp	_cerror_nocancel
000000000001ff00	retq
000000000001ff01	nop
000000000001ff02	nop
000000000001ff03	nop
_ntp_gettime:
000000000001ff04	movl	$0x2000210, %eax
000000000001ff09	movq	%rcx, %r10
000000000001ff0c	syscall
000000000001ff0e	jae	0x1ff18
000000000001ff10	movq	%rax, %rdi
000000000001ff13	jmp	_cerror_nocancel
000000000001ff18	retq
000000000001ff19	nop
000000000001ff1a	nop
000000000001ff1b	nop
_openbyid_np:
000000000001ff1c	movl	$0x20001df, %eax
000000000001ff21	movq	%rcx, %r10
000000000001ff24	syscall
000000000001ff26	jae	0x1ff30
000000000001ff28	movq	%rax, %rdi
000000000001ff2b	jmp	_cerror_nocancel
000000000001ff30	retq
000000000001ff31	nop
000000000001ff32	nop
000000000001ff33	nop
_os_fault_with_payload:
000000000001ff34	movl	$0x2000211, %eax
000000000001ff39	movq	%rcx, %r10
000000000001ff3c	syscall
000000000001ff3e	jae	0x1ff48
000000000001ff40	movq	%rax, %rdi
000000000001ff43	jmp	_cerror_nocancel
000000000001ff48	retq
000000000001ff49	nop
000000000001ff4a	nop
000000000001ff4b	nop
_pathconf:
000000000001ff4c	movl	$0x20000bf, %eax
000000000001ff51	movq	%rcx, %r10
000000000001ff54	syscall
000000000001ff56	jae	0x1ff60
000000000001ff58	movq	%rax, %rdi
000000000001ff5b	jmp	_cerror
000000000001ff60	retq
000000000001ff61	nop
000000000001ff62	nop
000000000001ff63	nop
_peeloff:
000000000001ff64	movl	$0x20001c1, %eax
000000000001ff69	movq	%rcx, %r10
000000000001ff6c	syscall
000000000001ff6e	jae	0x1ff78
000000000001ff70	movq	%rax, %rdi
000000000001ff73	jmp	_cerror
000000000001ff78	retq
000000000001ff79	nop
000000000001ff7a	nop
000000000001ff7b	nop
_pid_hibernate:
000000000001ff7c	movl	$0x20001b3, %eax
000000000001ff81	movq	%rcx, %r10
000000000001ff84	syscall
000000000001ff86	jae	0x1ff90
000000000001ff88	movq	%rax, %rdi
000000000001ff8b	jmp	_cerror_nocancel
000000000001ff90	retq
000000000001ff91	nop
000000000001ff92	nop
000000000001ff93	nop
_pid_resume:
000000000001ff94	movl	$0x20001b2, %eax
000000000001ff99	movq	%rcx, %r10
000000000001ff9c	syscall
000000000001ff9e	jae	0x1ffa8
000000000001ffa0	movq	%rax, %rdi
000000000001ffa3	jmp	_cerror_nocancel
000000000001ffa8	retq
000000000001ffa9	nop
000000000001ffaa	nop
000000000001ffab	nop
_pid_shutdown_sockets:
000000000001ffac	movl	$0x20001b4, %eax
000000000001ffb1	movq	%rcx, %r10
000000000001ffb4	syscall
000000000001ffb6	jae	0x1ffc0
000000000001ffb8	movq	%rax, %rdi
000000000001ffbb	jmp	_cerror_nocancel
000000000001ffc0	retq
000000000001ffc1	nop
000000000001ffc2	nop
000000000001ffc3	nop
_pid_suspend:
000000000001ffc4	movl	$0x20001b1, %eax
000000000001ffc9	movq	%rcx, %r10
000000000001ffcc	syscall
000000000001ffce	jae	0x1ffd8
000000000001ffd0	movq	%rax, %rdi
000000000001ffd3	jmp	_cerror_nocancel
000000000001ffd8	retq
000000000001ffd9	nop
000000000001ffda	nop
000000000001ffdb	nop
_proc_trace_log:
000000000001ffdc	movl	$0x20001dd, %eax
000000000001ffe1	movq	%rcx, %r10
000000000001ffe4	syscall
000000000001ffe6	jae	0x1fff0
000000000001ffe8	movq	%rax, %rdi
000000000001ffeb	jmp	_cerror_nocancel
000000000001fff0	retq
000000000001fff1	nop
000000000001fff2	nop
000000000001fff3	nop
_proc_uuid_policy:
000000000001fff4	movl	$0x20001c4, %eax
000000000001fff9	movq	%rcx, %r10
000000000001fffc	syscall
000000000001fffe	jae	0x20008
0000000000020000	movq	%rax, %rdi
0000000000020003	jmp	_cerror_nocancel
0000000000020008	retq
0000000000020009	nop
000000000002000a	nop
000000000002000b	nop
_readlinkat:
000000000002000c	movl	$0x20001d9, %eax
0000000000020011	movq	%rcx, %r10
0000000000020014	syscall
0000000000020016	jae	0x20020
0000000000020018	movq	%rax, %rdi
000000000002001b	jmp	_cerror_nocancel
0000000000020020	retq
0000000000020021	nop
0000000000020022	nop
0000000000020023	nop
_readv:
0000000000020024	movl	$0x2000078, %eax
0000000000020029	movq	%rcx, %r10
000000000002002c	syscall
000000000002002e	jae	0x20038
0000000000020030	movq	%rax, %rdi
0000000000020033	jmp	_cerror
0000000000020038	retq
0000000000020039	nop
000000000002003a	nop
000000000002003b	nop
_recvmsg_x:
000000000002003c	movl	$0x20001e0, %eax
0000000000020041	movq	%rcx, %r10
0000000000020044	syscall
0000000000020046	jae	0x20050
0000000000020048	movq	%rax, %rdi
000000000002004b	jmp	_cerror_nocancel
0000000000020050	retq
0000000000020051	nop
0000000000020052	nop
0000000000020053	nop
_revoke:
0000000000020054	movl	$0x2000038, %eax
0000000000020059	movq	%rcx, %r10
000000000002005c	syscall
000000000002005e	jae	0x20068
0000000000020060	movq	%rax, %rdi
0000000000020063	jmp	_cerror_nocancel
0000000000020068	retq
0000000000020069	nop
000000000002006a	nop
000000000002006b	nop
_searchfs:
000000000002006c	movl	$0x20000e1, %eax
0000000000020071	movq	%rcx, %r10
0000000000020074	syscall
0000000000020076	jae	0x20080
0000000000020078	movq	%rax, %rdi
000000000002007b	jmp	_cerror_nocancel
0000000000020080	retq
0000000000020081	nop
0000000000020082	nop
0000000000020083	nop
_sem_post:
0000000000020084	movl	$0x2000111, %eax
0000000000020089	movq	%rcx, %r10
000000000002008c	syscall
000000000002008e	jae	0x20098
0000000000020090	movq	%rax, %rdi
0000000000020093	jmp	_cerror_nocancel
0000000000020098	retq
0000000000020099	nop
000000000002009a	nop
000000000002009b	nop
_sem_trywait:
000000000002009c	movl	$0x2000110, %eax
00000000000200a1	movq	%rcx, %r10
00000000000200a4	syscall
00000000000200a6	jae	0x200b0
00000000000200a8	movq	%rax, %rdi
00000000000200ab	jmp	_cerror_nocancel
00000000000200b0	retq
00000000000200b1	nop
00000000000200b2	nop
00000000000200b3	nop
_sem_unlink:
00000000000200b4	movl	$0x200010e, %eax
00000000000200b9	movq	%rcx, %r10
00000000000200bc	syscall
00000000000200be	jae	0x200c8
00000000000200c0	movq	%rax, %rdi
00000000000200c3	jmp	_cerror_nocancel
00000000000200c8	retq
00000000000200c9	nop
00000000000200ca	nop
00000000000200cb	nop
_sem_wait:
00000000000200cc	movl	$0x200010f, %eax
00000000000200d1	movq	%rcx, %r10
00000000000200d4	syscall
00000000000200d6	jae	0x200e0
00000000000200d8	movq	%rax, %rdi
00000000000200db	jmp	_cerror
00000000000200e0	retq
00000000000200e1	nop
00000000000200e2	nop
00000000000200e3	nop
_semget:
00000000000200e4	movl	$0x20000ff, %eax
00000000000200e9	movq	%rcx, %r10
00000000000200ec	syscall
00000000000200ee	jae	0x200f8
00000000000200f0	movq	%rax, %rdi
00000000000200f3	jmp	_cerror_nocancel
00000000000200f8	retq
00000000000200f9	nop
00000000000200fa	nop
00000000000200fb	nop
_semop:
00000000000200fc	movl	$0x2000100, %eax
0000000000020101	movq	%rcx, %r10
0000000000020104	syscall
0000000000020106	jae	0x20110
0000000000020108	movq	%rax, %rdi
000000000002010b	jmp	_cerror
0000000000020110	retq
0000000000020111	nop
0000000000020112	nop
0000000000020113	nop
_sendfile:
0000000000020114	movl	$0x2000151, %eax
0000000000020119	movq	%rcx, %r10
000000000002011c	syscall
000000000002011e	jae	0x20128
0000000000020120	movq	%rax, %rdi
0000000000020123	jmp	_cerror_nocancel
0000000000020128	retq
0000000000020129	nop
000000000002012a	nop
000000000002012b	nop
_sendmsg_x:
000000000002012c	movl	$0x20001e1, %eax
0000000000020131	movq	%rcx, %r10
0000000000020134	syscall
0000000000020136	jae	0x20140
0000000000020138	movq	%rax, %rdi
000000000002013b	jmp	_cerror_nocancel
0000000000020140	retq
0000000000020141	nop
0000000000020142	nop
0000000000020143	nop
_setattrlistat:
0000000000020144	movl	$0x200020c, %eax
0000000000020149	movq	%rcx, %r10
000000000002014c	syscall
000000000002014e	jae	0x20158
0000000000020150	movq	%rax, %rdi
0000000000020153	jmp	_cerror_nocancel
0000000000020158	retq
0000000000020159	nop
000000000002015a	nop
000000000002015b	nop
_setaudit_addr:
000000000002015c	movl	$0x2000166, %eax
0000000000020161	movq	%rcx, %r10
0000000000020164	syscall
0000000000020166	jae	0x20170
0000000000020168	movq	%rax, %rdi
000000000002016b	jmp	_cerror_nocancel
0000000000020170	retq
0000000000020171	nop
0000000000020172	nop
0000000000020173	nop
_setauid:
0000000000020174	movl	$0x2000162, %eax
0000000000020179	movq	%rcx, %r10
000000000002017c	syscall
000000000002017e	jae	0x20188
0000000000020180	movq	%rax, %rdi
0000000000020183	jmp	_cerror_nocancel
0000000000020188	retq
0000000000020189	nop
000000000002018a	nop
000000000002018b	nop
_setgroups:
000000000002018c	movl	$0x2000050, %eax
0000000000020191	movq	%rcx, %r10
0000000000020194	syscall
0000000000020196	jae	0x201a0
0000000000020198	movq	%rax, %rdi
000000000002019b	jmp	_cerror_nocancel
00000000000201a0	retq
00000000000201a1	nop
00000000000201a2	nop
00000000000201a3	nop
_setprivexec:
00000000000201a4	movl	$0x2000098, %eax
00000000000201a9	movq	%rcx, %r10
00000000000201ac	syscall
00000000000201ae	jae	0x201b8
00000000000201b0	movq	%rax, %rdi
00000000000201b3	jmp	_cerror_nocancel
00000000000201b8	retq
00000000000201b9	nop
00000000000201ba	nop
00000000000201bb	nop
_shm_unlink:
00000000000201bc	movl	$0x200010b, %eax
00000000000201c1	movq	%rcx, %r10
00000000000201c4	syscall
00000000000201c6	jae	0x201d0
00000000000201c8	movq	%rax, %rdi
00000000000201cb	jmp	_cerror_nocancel
00000000000201d0	retq
00000000000201d1	nop
00000000000201d2	nop
00000000000201d3	nop
_shmat:
00000000000201d4	movl	$0x2000106, %eax
00000000000201d9	movq	%rcx, %r10
00000000000201dc	syscall
00000000000201de	jae	0x201e8
00000000000201e0	movq	%rax, %rdi
00000000000201e3	jmp	_cerror_nocancel
00000000000201e8	retq
00000000000201e9	nop
00000000000201ea	nop
00000000000201eb	nop
_shmdt:
00000000000201ec	movl	$0x2000108, %eax
00000000000201f1	movq	%rcx, %r10
00000000000201f4	syscall
00000000000201f6	jae	0x20200
00000000000201f8	movq	%rax, %rdi
00000000000201fb	jmp	_cerror_nocancel
0000000000020200	retq
0000000000020201	nop
0000000000020202	nop
0000000000020203	nop
_shmget:
0000000000020204	movl	$0x2000109, %eax
0000000000020209	movq	%rcx, %r10
000000000002020c	syscall
000000000002020e	jae	0x20218
0000000000020210	movq	%rax, %rdi
0000000000020213	jmp	_cerror_nocancel
0000000000020218	retq
0000000000020219	nop
000000000002021a	nop
000000000002021b	nop
_sigpending:
000000000002021c	movl	$0x2000034, %eax
0000000000020221	movq	%rcx, %r10
0000000000020224	syscall
0000000000020226	jae	0x20230
0000000000020228	movq	%rax, %rdi
000000000002022b	jmp	_cerror_nocancel
0000000000020230	retq
0000000000020231	nop
0000000000020232	nop
0000000000020233	nop
_socket_delegate:
0000000000020234	movl	$0x20001c2, %eax
0000000000020239	movq	%rcx, %r10
000000000002023c	syscall
000000000002023e	jae	0x20248
0000000000020240	movq	%rax, %rdi
0000000000020243	jmp	_cerror_nocancel
0000000000020248	retq
0000000000020249	nop
000000000002024a	nop
000000000002024b	nop
_statfs:
000000000002024c	movl	$0x200009d, %eax
0000000000020251	movq	%rcx, %r10
0000000000020254	syscall
0000000000020256	jae	0x20260
0000000000020258	movq	%rax, %rdi
000000000002025b	jmp	_cerror_nocancel
0000000000020260	retq
0000000000020261	nop
0000000000020262	nop
0000000000020263	nop
_swapon:
0000000000020264	movl	$0x2000055, %eax
0000000000020269	movq	%rcx, %r10
000000000002026c	syscall
000000000002026e	jae	0x20278
0000000000020270	movq	%rax, %rdi
0000000000020273	jmp	_cerror_nocancel
0000000000020278	retq
0000000000020279	nop
000000000002027a	nop
000000000002027b	nop
_symlinkat:
000000000002027c	movl	$0x20001da, %eax
0000000000020281	movq	%rcx, %r10
0000000000020284	syscall
0000000000020286	jae	0x20290
0000000000020288	movq	%rax, %rdi
000000000002028b	jmp	_cerror
0000000000020290	retq
0000000000020291	nop
0000000000020292	nop
0000000000020293	nop
_sync:
0000000000020294	movl	$0x2000024, %eax
0000000000020299	movq	%rcx, %r10
000000000002029c	syscall
000000000002029e	jae	0x202a8
00000000000202a0	movq	%rax, %rdi
00000000000202a3	jmp	_cerror
00000000000202a8	retq
00000000000202a9	nop
00000000000202aa	nop
00000000000202ab	nop
_system_override:
00000000000202ac	movl	$0x20001c6, %eax
00000000000202b1	movq	%rcx, %r10
00000000000202b4	syscall
00000000000202b6	jae	0x202c0
00000000000202b8	movq	%rax, %rdi
00000000000202bb	jmp	_cerror_nocancel
00000000000202c0	retq
00000000000202c1	nop
00000000000202c2	nop
00000000000202c3	nop
_thread_selfcounts:
00000000000202c4	movl	$0x20000ba, %eax
00000000000202c9	movq	%rcx, %r10
00000000000202cc	syscall
00000000000202ce	jae	0x202d8
00000000000202d0	movq	%rax, %rdi
00000000000202d3	jmp	_cerror_nocancel
00000000000202d8	retq
00000000000202d9	nop
00000000000202da	nop
00000000000202db	nop
_truncate:
00000000000202dc	movl	$0x20000c8, %eax
00000000000202e1	movq	%rcx, %r10
00000000000202e4	syscall
00000000000202e6	jae	0x202f0
00000000000202e8	movq	%rax, %rdi
00000000000202eb	jmp	_cerror_nocancel
00000000000202f0	retq
00000000000202f1	nop
00000000000202f2	nop
00000000000202f3	nop
_undelete:
00000000000202f4	movl	$0x20000cd, %eax
00000000000202f9	movq	%rcx, %r10
00000000000202fc	syscall
00000000000202fe	jae	0x20308
0000000000020300	movq	%rax, %rdi
0000000000020303	jmp	_cerror_nocancel
0000000000020308	retq
0000000000020309	nop
000000000002030a	nop
000000000002030b	nop
_usrctl:
000000000002030c	movl	$0x20001bd, %eax
0000000000020311	movq	%rcx, %r10
0000000000020314	syscall
0000000000020316	jae	0x20320
0000000000020318	movq	%rax, %rdi
000000000002031b	jmp	_cerror_nocancel
0000000000020320	retq
0000000000020321	nop
0000000000020322	nop
0000000000020323	nop
_vfs_purge:
0000000000020324	movl	$0x20001c7, %eax
0000000000020329	movq	%rcx, %r10
000000000002032c	syscall
000000000002032e	jae	0x20338
0000000000020330	movq	%rax, %rdi
0000000000020333	jmp	_cerror_nocancel
0000000000020338	retq
0000000000020339	nop
000000000002033a	nop
000000000002033b	nop
_vm_pressure_monitor:
000000000002033c	movl	$0x2000128, %eax
0000000000020341	movq	%rcx, %r10
0000000000020344	syscall
0000000000020346	jae	0x20350
0000000000020348	movq	%rax, %rdi
000000000002034b	jmp	_cerror_nocancel
0000000000020350	retq
0000000000020351	nop
0000000000020352	nop
0000000000020353	nop
_waitevent:
0000000000020354	movl	$0x20000e8, %eax
0000000000020359	movq	%rcx, %r10
000000000002035c	syscall
000000000002035e	jae	0x20368
0000000000020360	movq	%rax, %rdi
0000000000020363	jmp	_cerror_nocancel
0000000000020368	retq
0000000000020369	nop
000000000002036a	nop
000000000002036b	nop
_waitid:
000000000002036c	movl	$0x20000ad, %eax
0000000000020371	movq	%rcx, %r10
0000000000020374	syscall
0000000000020376	jae	0x20380
0000000000020378	movq	%rax, %rdi
000000000002037b	jmp	_cerror
0000000000020380	retq
0000000000020381	nop
0000000000020382	nop
0000000000020383	nop
_watchevent:
0000000000020384	movl	$0x20000e7, %eax
0000000000020389	movq	%rcx, %r10
000000000002038c	syscall
000000000002038e	jae	0x20398
0000000000020390	movq	%rax, %rdi
0000000000020393	jmp	_cerror_nocancel
0000000000020398	retq
0000000000020399	nop
000000000002039a	nop
000000000002039b	nop
_i386_get_ldt:
000000000002039c	movl	$0x3000006, %eax
00000000000203a1	syscall
00000000000203a3	jae	0x203ad
00000000000203a5	movq	%rax, %rdi
00000000000203a8	jmp	_cerror
00000000000203ad	retq
00000000000203ae	nop
_i386_set_ldt:
00000000000203b0	movl	$0x3000005, %eax
00000000000203b5	syscall
00000000000203b7	jae	0x203c1
00000000000203b9	movq	%rax, %rdi
00000000000203bc	jmp	_cerror
00000000000203c1	retq
00000000000203c2	nop
__thread_set_tsd_base:
00000000000203c4	movl	$0x0, %esi
00000000000203c9	movl	$0x3000003, %eax
00000000000203ce	syscall
00000000000203d0	retq
